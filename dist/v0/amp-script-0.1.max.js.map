{
  "version": 3,
  "sources": ["../../node_modules/dompurify/src/utils.js", "../../node_modules/dompurify/src/tags.js", "../../node_modules/dompurify/src/attrs.js", "../../node_modules/dompurify/src/regexp.js", "../../node_modules/dompurify/src/purify.js", "../../src/core/data-structures/promise.js", "../../node_modules/@ampproject/worker-dom/output/main-thread/commands/event-subscription.js", "../../node_modules/@ampproject/worker-dom/output/main-thread/serialize.js", "../../node_modules/@ampproject/worker-dom/output/main-thread/iframe-worker.js", "../../node_modules/@ampproject/worker-dom/output/main-thread/install.js", "../../node_modules/@ampproject/worker-dom/output/main-thread/index.amp.js", "../../src/core/mode/prod.js", "../../src/core/mode/test.js", "../../src/core/mode/local-dev.js", "../../src/core/mode/minified.js", "../../src/core/mode/version.js", "../../src/core/mode/esm.js", "../../src/core/types/array.js", "../../src/core/types/object/index.js", "../../src/core/types/index.js", "../../src/core/error/message-helpers.js", "../../src/core/assert/base.js", "../../src/core/assert/dev.js", "../../src/core/assert/user.js", "../../src/core/dom/layout/index.js", "../../third_party/css-escape/css-escape.js", "../../src/core/dom/query.js", "../../src/core/types/object/json.js", "../../src/core/types/string/bytes.js", "../../src/purifier/index.js", "../../src/core/document/format.js", "../../src/core/window/index.js", "../../src/core/dom/index.js", "../../src/core/types/string/url.js", "../../src/config.js", "../../src/mode.js", "../../src/utils/log.js", "../../src/core/dom/srcset.js", "../../src/core/data-structures/lru-cache.js", "../../src/url.js", "../../src/url-rewrite.js", "../../src/purifier/sanitation.js", "../../src/service/extension-script.js", "../../src/service-helpers.js", "../../src/element-service.js", "../../src/service/index.js", "../../extensions/amp-script/0.1/user-activation-tracker.js", "../../build/amp-script-0.1.css.js", "../../src/error-reporting.js", "../../extensions/amp-script/0.1/amp-script.js"],
  "sourcesContent": ["const {\n  hasOwnProperty,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n} = Object;\n\nlet { freeze, seal, create } = Object; // eslint-disable-line import/no-mutable-exports\nlet { apply, construct } = typeof Reflect !== 'undefined' && Reflect;\n\nif (!apply) {\n  apply = function (fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!freeze) {\n  freeze = function (x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function (x) {\n    return x;\n  };\n}\n\nif (!construct) {\n  construct = function (Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayIndexOf = unapply(Array.prototype.indexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySlice = unapply(Array.prototype.slice);\n\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\n\nconst regExpTest = unapply(RegExp.prototype.test);\n\nconst typeErrorCreate = unconstruct(TypeError);\n\nexport function unapply(func) {\n  return (thisArg, ...args) => apply(func, thisArg, args);\n}\n\nexport function unconstruct(func) {\n  return (...args) => construct(func, args);\n}\n\n/* Add properties to a lookup table */\nexport function addToSet(set, array) {\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = stringToLowerCase(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/* Shallow clone an object */\nexport function clone(object) {\n  const newObject = create(null);\n\n  let property;\n  for (property in object) {\n    if (apply(hasOwnProperty, object, [property])) {\n      newObject[property] = object[property];\n    }\n  }\n\n  return newObject;\n}\n\n/* IE10 doesn't support __lookupGetter__ so lets'\n * simulate it. It also automatically checks\n * if the prop is function or getter and behaves\n * accordingly. */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue(element) {\n    console.warn('fallback value for', element);\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nexport {\n  // Array\n  arrayForEach,\n  arrayIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySlice,\n  // Object\n  freeze,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n  hasOwnProperty,\n  isFrozen,\n  setPrototypeOf,\n  seal,\n  // RegExp\n  regExpTest,\n  // String\n  stringIndexOf,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringTrim,\n  // Errors\n  typeErrorCreate,\n  // Other\n  lookupGetter,\n};\n", "import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'a',\n  'abbr',\n  'acronym',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'bdi',\n  'bdo',\n  'big',\n  'blink',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'center',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'content',\n  'data',\n  'datalist',\n  'dd',\n  'decorator',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'element',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'font',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meter',\n  'nav',\n  'nobr',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'section',\n  'select',\n  'shadow',\n  'small',\n  'source',\n  'spacer',\n  'span',\n  'strike',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'track',\n  'tt',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n]);\n\n// SVG\nexport const svg = freeze([\n  'svg',\n  'a',\n  'altglyph',\n  'altglyphdef',\n  'altglyphitem',\n  'animatecolor',\n  'animatemotion',\n  'animatetransform',\n  'circle',\n  'clippath',\n  'defs',\n  'desc',\n  'ellipse',\n  'filter',\n  'font',\n  'g',\n  'glyph',\n  'glyphref',\n  'hkern',\n  'image',\n  'line',\n  'lineargradient',\n  'marker',\n  'mask',\n  'metadata',\n  'mpath',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialgradient',\n  'rect',\n  'stop',\n  'style',\n  'switch',\n  'symbol',\n  'text',\n  'textpath',\n  'title',\n  'tref',\n  'tspan',\n  'view',\n  'vkern',\n]);\n\nexport const svgFilters = freeze([\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n]);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nexport const svgDisallowed = freeze([\n  'animate',\n  'color-profile',\n  'cursor',\n  'discard',\n  'fedropshadow',\n  'feimage',\n  'font-face',\n  'font-face-format',\n  'font-face-name',\n  'font-face-src',\n  'font-face-uri',\n  'foreignobject',\n  'hatch',\n  'hatchpath',\n  'mesh',\n  'meshgradient',\n  'meshpatch',\n  'meshrow',\n  'missing-glyph',\n  'script',\n  'set',\n  'solidcolor',\n  'unknown',\n  'use',\n]);\n\nexport const mathMl = freeze([\n  'math',\n  'menclose',\n  'merror',\n  'mfenced',\n  'mfrac',\n  'mglyph',\n  'mi',\n  'mlabeledtr',\n  'mmultiscripts',\n  'mn',\n  'mo',\n  'mover',\n  'mpadded',\n  'mphantom',\n  'mroot',\n  'mrow',\n  'ms',\n  'mspace',\n  'msqrt',\n  'mstyle',\n  'msub',\n  'msup',\n  'msubsup',\n  'mtable',\n  'mtd',\n  'mtext',\n  'mtr',\n  'munder',\n  'munderover',\n]);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nexport const mathMlDisallowed = freeze([\n  'maction',\n  'maligngroup',\n  'malignmark',\n  'mlongdiv',\n  'mscarries',\n  'mscarry',\n  'msgroup',\n  'mstack',\n  'msline',\n  'msrow',\n  'semantics',\n  'annotation',\n  'annotation-xml',\n  'mprescripts',\n  'none',\n]);\n\nexport const text = freeze(['#text']);\n", "import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'accept',\n  'action',\n  'align',\n  'alt',\n  'autocapitalize',\n  'autocomplete',\n  'autopictureinpicture',\n  'autoplay',\n  'background',\n  'bgcolor',\n  'border',\n  'capture',\n  'cellpadding',\n  'cellspacing',\n  'checked',\n  'cite',\n  'class',\n  'clear',\n  'color',\n  'cols',\n  'colspan',\n  'controls',\n  'controlslist',\n  'coords',\n  'crossorigin',\n  'datetime',\n  'decoding',\n  'default',\n  'dir',\n  'disabled',\n  'disablepictureinpicture',\n  'disableremoteplayback',\n  'download',\n  'draggable',\n  'enctype',\n  'enterkeyhint',\n  'face',\n  'for',\n  'headers',\n  'height',\n  'hidden',\n  'high',\n  'href',\n  'hreflang',\n  'id',\n  'inputmode',\n  'integrity',\n  'ismap',\n  'kind',\n  'label',\n  'lang',\n  'list',\n  'loading',\n  'loop',\n  'low',\n  'max',\n  'maxlength',\n  'media',\n  'method',\n  'min',\n  'minlength',\n  'multiple',\n  'muted',\n  'name',\n  'noshade',\n  'novalidate',\n  'nowrap',\n  'open',\n  'optimum',\n  'pattern',\n  'placeholder',\n  'playsinline',\n  'poster',\n  'preload',\n  'pubdate',\n  'radiogroup',\n  'readonly',\n  'rel',\n  'required',\n  'rev',\n  'reversed',\n  'role',\n  'rows',\n  'rowspan',\n  'spellcheck',\n  'scope',\n  'selected',\n  'shape',\n  'size',\n  'sizes',\n  'span',\n  'srclang',\n  'start',\n  'src',\n  'srcset',\n  'step',\n  'style',\n  'summary',\n  'tabindex',\n  'title',\n  'translate',\n  'type',\n  'usemap',\n  'valign',\n  'value',\n  'width',\n  'xmlns',\n  'slot',\n]);\n\nexport const svg = freeze([\n  'accent-height',\n  'accumulate',\n  'additive',\n  'alignment-baseline',\n  'ascent',\n  'attributename',\n  'attributetype',\n  'azimuth',\n  'basefrequency',\n  'baseline-shift',\n  'begin',\n  'bias',\n  'by',\n  'class',\n  'clip',\n  'clippathunits',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'cx',\n  'cy',\n  'd',\n  'dx',\n  'dy',\n  'diffuseconstant',\n  'direction',\n  'display',\n  'divisor',\n  'dur',\n  'edgemode',\n  'elevation',\n  'end',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'filterunits',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'fx',\n  'fy',\n  'g1',\n  'g2',\n  'glyph-name',\n  'glyphref',\n  'gradientunits',\n  'gradienttransform',\n  'height',\n  'href',\n  'id',\n  'image-rendering',\n  'in',\n  'in2',\n  'k',\n  'k1',\n  'k2',\n  'k3',\n  'k4',\n  'kerning',\n  'keypoints',\n  'keysplines',\n  'keytimes',\n  'lang',\n  'lengthadjust',\n  'letter-spacing',\n  'kernelmatrix',\n  'kernelunitlength',\n  'lighting-color',\n  'local',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'markerheight',\n  'markerunits',\n  'markerwidth',\n  'maskcontentunits',\n  'maskunits',\n  'max',\n  'mask',\n  'media',\n  'method',\n  'mode',\n  'min',\n  'name',\n  'numoctaves',\n  'offset',\n  'operator',\n  'opacity',\n  'order',\n  'orient',\n  'orientation',\n  'origin',\n  'overflow',\n  'paint-order',\n  'path',\n  'pathlength',\n  'patterncontentunits',\n  'patterntransform',\n  'patternunits',\n  'points',\n  'preservealpha',\n  'preserveaspectratio',\n  'primitiveunits',\n  'r',\n  'rx',\n  'ry',\n  'radius',\n  'refx',\n  'refy',\n  'repeatcount',\n  'repeatdur',\n  'restart',\n  'result',\n  'rotate',\n  'scale',\n  'seed',\n  'shape-rendering',\n  'specularconstant',\n  'specularexponent',\n  'spreadmethod',\n  'startoffset',\n  'stddeviation',\n  'stitchtiles',\n  'stop-color',\n  'stop-opacity',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke',\n  'stroke-width',\n  'style',\n  'surfacescale',\n  'systemlanguage',\n  'tabindex',\n  'targetx',\n  'targety',\n  'transform',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'textlength',\n  'type',\n  'u1',\n  'u2',\n  'unicode',\n  'values',\n  'viewbox',\n  'visibility',\n  'version',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'width',\n  'word-spacing',\n  'wrap',\n  'writing-mode',\n  'xchannelselector',\n  'ychannelselector',\n  'x',\n  'x1',\n  'x2',\n  'xmlns',\n  'y',\n  'y1',\n  'y2',\n  'z',\n  'zoomandpan',\n]);\n\nexport const mathMl = freeze([\n  'accent',\n  'accentunder',\n  'align',\n  'bevelled',\n  'close',\n  'columnsalign',\n  'columnlines',\n  'columnspan',\n  'denomalign',\n  'depth',\n  'dir',\n  'display',\n  'displaystyle',\n  'encoding',\n  'fence',\n  'frame',\n  'height',\n  'href',\n  'id',\n  'largeop',\n  'length',\n  'linethickness',\n  'lspace',\n  'lquote',\n  'mathbackground',\n  'mathcolor',\n  'mathsize',\n  'mathvariant',\n  'maxsize',\n  'minsize',\n  'movablelimits',\n  'notation',\n  'numalign',\n  'open',\n  'rowalign',\n  'rowlines',\n  'rowspacing',\n  'rowspan',\n  'rspace',\n  'rquote',\n  'scriptlevel',\n  'scriptminsize',\n  'scriptsizemultiplier',\n  'selection',\n  'separator',\n  'separators',\n  'stretchy',\n  'subscriptshift',\n  'supscriptshift',\n  'symmetric',\n  'voffset',\n  'width',\n  'xmlns',\n]);\n\nexport const xml = freeze([\n  'xlink:href',\n  'xml:id',\n  'xlink:title',\n  'xml:space',\n  'xmlns:xlink',\n]);\n", "import { seal } from './utils.js';\n\n// eslint-disable-next-line unicorn/better-regex\nexport const MUSTACHE_EXPR = seal(/\\{\\{[\\s\\S]*|[\\s\\S]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nexport const ERB_EXPR = seal(/<%[\\s\\S]*|[\\s\\S]*%>/gm);\nexport const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nexport const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nexport const IS_ALLOWED_URI = seal(\n  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nexport const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nexport const ATTR_WHITESPACE = seal(\n  /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\n", "import * as TAGS from './tags.js';\nimport * as ATTRS from './attrs.js';\nimport * as EXPRESSIONS from './regexp.js';\nimport {\n  addToSet,\n  clone,\n  freeze,\n  arrayForEach,\n  arrayPop,\n  arrayPush,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringIndexOf,\n  stringTrim,\n  regExpTest,\n  typeErrorCreate,\n  lookupGetter,\n} from './utils.js';\n\nconst getGlobal = () => (typeof window === 'undefined' ? null : window);\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {Document} document The document object (to determine policy name suffix)\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported).\n */\nconst _createTrustedTypesPolicy = function (trustedTypes, document) {\n  if (\n    typeof trustedTypes !== 'object' ||\n    typeof trustedTypes.createPolicy !== 'function'\n  ) {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (\n    document.currentScript &&\n    document.currentScript.hasAttribute(ATTR_NAME)\n  ) {\n    suffix = document.currentScript.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn(\n      'TrustedTypes policy ' + policyName + ' could not be created.'\n    );\n    return null;\n  }\n};\n\nfunction createDOMPurify(window = getGlobal()) {\n  const DOMPurify = (root) => createDOMPurify(root);\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = VERSION;\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  const originalDocument = window.document;\n\n  let { document } = window;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    Text,\n    Comment,\n    DOMParser,\n    trustedTypes,\n  } = window;\n\n  const ElementPrototype = Element.prototype;\n\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  const trustedTypesPolicy = _createTrustedTypesPolicy(\n    trustedTypes,\n    originalDocument\n  );\n  const emptyHTML =\n    trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML('')\n      : '';\n\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName,\n  } = document;\n  const { importNode } = originalDocument;\n\n  let documentMode = {};\n  try {\n    documentMode = clone(document).documentMode ? document.documentMode : {};\n  } catch (_) {}\n\n  let hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported =\n    typeof getParentNode === 'function' &&\n    implementation &&\n    typeof implementation.createHTMLDocument !== 'undefined' &&\n    documentMode !== 9;\n\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n  } = EXPRESSIONS;\n\n  let { IS_ALLOWED_URI } = EXPRESSIONS;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [\n    ...TAGS.html,\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.mathMl,\n    ...TAGS.text,\n  ]);\n\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [\n    ...ATTRS.html,\n    ...ATTRS.svg,\n    ...ATTRS.mathMl,\n    ...ATTRS.xml,\n  ]);\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n\n  /* If `RETURN_DOM` or `RETURN_DOM_FRAGMENT` is enabled, decide if the returned DOM\n   * `Node` is imported into the current `Document`. If this flag is not enabled the\n   * `Node` will belong (its ownerDocument) to a fresh `HTMLDocument`, created by\n   * DOMPurify.\n   *\n   * This defaults to `true` starting DOMPurify 2.2.0. Note that setting it to `false`\n   * might cause XSS from attacks hidden in closed shadowroots in case the browser\n   * supports Declarative Shadow: DOM https://web.dev/declarative-shadow-dom/\n   */\n  let RETURN_DOM_IMPORT = true;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks? */\n  let SANITIZE_DOM = true;\n\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, [\n    'annotation-xml',\n    'audio',\n    'colgroup',\n    'desc',\n    'foreignobject',\n    'head',\n    'iframe',\n    'math',\n    'mi',\n    'mn',\n    'mo',\n    'ms',\n    'mtext',\n    'noembed',\n    'noframes',\n    'noscript',\n    'plaintext',\n    'script',\n    'style',\n    'svg',\n    'template',\n    'thead',\n    'title',\n    'video',\n    'xmp',\n  ]);\n\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, [\n    'audio',\n    'video',\n    'img',\n    'source',\n    'image',\n    'track',\n  ]);\n\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, [\n    'alt',\n    'class',\n    'for',\n    'id',\n    'label',\n    'name',\n    'pattern',\n    'placeholder',\n    'role',\n    'summary',\n    'title',\n    'value',\n    'style',\n    'xmlns',\n  ]);\n\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc;\n\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function (cfg) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS =\n      'ALLOWED_TAGS' in cfg\n        ? addToSet({}, cfg.ALLOWED_TAGS)\n        : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR =\n      'ALLOWED_ATTR' in cfg\n        ? addToSet({}, cfg.ALLOWED_ATTR)\n        : DEFAULT_ALLOWED_ATTR;\n    URI_SAFE_ATTRIBUTES =\n      'ADD_URI_SAFE_ATTR' in cfg\n        ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR)\n        : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS =\n      'ADD_DATA_URI_TAGS' in cfg\n        ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS)\n        : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS =\n      'FORBID_CONTENTS' in cfg\n        ? addToSet({}, cfg.FORBID_CONTENTS)\n        : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS) : {};\n    FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR) : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_DOM_IMPORT = cfg.RETURN_DOM_IMPORT !== false; // Default true\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n\n    PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1\n        ? (PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE)\n        : (PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE);\n\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc =\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml'\n        ? (x) => x\n        : stringToLowerCase;\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [...TAGS.text]);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, TAGS.html);\n        addToSet(ALLOWED_ATTR, ATTRS.html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svgFilters);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, TAGS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, [\n    'mi',\n    'mo',\n    'mn',\n    'ms',\n    'mtext',\n  ]);\n\n  const HTML_INTEGRATION_POINTS = addToSet({}, [\n    'foreignobject',\n    'desc',\n    'title',\n    'annotation-xml',\n  ]);\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, TAGS.svg);\n  addToSet(ALL_SVG_TAGS, TAGS.svgFilters);\n  addToSet(ALL_SVG_TAGS, TAGS.svgDisallowed);\n\n  const ALL_MATHML_TAGS = addToSet({}, TAGS.mathMl);\n  addToSet(ALL_MATHML_TAGS, TAGS.mathMlDisallowed);\n\n  /**\n   *\n   *\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function (element) {\n    let parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: HTML_NAMESPACE,\n        tagName: 'template',\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return (\n          tagName === 'svg' &&\n          (parentTagName === 'annotation-xml' ||\n            MATHML_TEXT_INTEGRATION_POINTS[parentTagName])\n        );\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (\n        parent.namespaceURI === SVG_NAMESPACE &&\n        !HTML_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      if (\n        parent.namespaceURI === MATHML_NAMESPACE &&\n        !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      // Certain elements are allowed in both SVG and HTML\n      // namespace. We need to specify them explicitly\n      // so that they don't get erronously deleted from\n      // HTML namespace.\n      const commonSvgAndHTMLElements = addToSet({}, [\n        'title',\n        'style',\n        'font',\n        'a',\n        'script',\n      ]);\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return (\n        !ALL_MATHML_TAGS[tagName] &&\n        (commonSvgAndHTMLElements[tagName] || !ALL_SVG_TAGS[tagName])\n      );\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG or MathML). Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  const _forceRemove = function (node) {\n    arrayPush(DOMPurify.removed, { element: node });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      try {\n        node.outerHTML = emptyHTML;\n      } catch (_) {\n        node.remove();\n      }\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  const _removeAttribute = function (name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node,\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node,\n      });\n    }\n\n    node.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\"\" attributes\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  const _initDocument = function (dirty) {\n    /* Create a HTML document */\n    let doc;\n    let leadingWhitespace;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml') {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty =\n        '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' +\n        dirty +\n        '</body></html>';\n    }\n\n    const dirtyPayload = trustedTypesPolicy\n      ? trustedTypesPolicy.createHTML(dirty)\n      : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? '' : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    const body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(\n        document.createTextNode(leadingWhitespace),\n        body.childNodes[0] || null\n      );\n    }\n\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(\n        doc,\n        WHOLE_DOCUMENT ? 'html' : 'body'\n      )[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * _createIterator\n   *\n   * @param  {Document} root document/fragment to create iterator for\n   * @return {Iterator} iterator instance\n   */\n  const _createIterator = function (root) {\n    return createNodeIterator.call(\n      root.ownerDocument || root,\n      root,\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT,\n      null,\n      false\n    );\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  const _isClobbered = function (elm) {\n    if (elm instanceof Text || elm instanceof Comment) {\n      return false;\n    }\n\n    if (\n      typeof elm.nodeName !== 'string' ||\n      typeof elm.textContent !== 'string' ||\n      typeof elm.removeChild !== 'function' ||\n      !(elm.attributes instanceof NamedNodeMap) ||\n      typeof elm.removeAttribute !== 'function' ||\n      typeof elm.setAttribute !== 'function' ||\n      typeof elm.namespaceURI !== 'string' ||\n      typeof elm.insertBefore !== 'function'\n    ) {\n      return true;\n    }\n\n    return false;\n  };\n\n  /**\n   * _isNode\n   *\n   * @param  {Node} obj object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  const _isNode = function (object) {\n    return typeof Node === 'object'\n      ? object instanceof Node\n      : object &&\n          typeof object === 'object' &&\n          typeof object.nodeType === 'number' &&\n          typeof object.nodeName === 'string';\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  const _executeHook = function (entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    arrayForEach(hooks[entryPoint], (hook) => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function (currentNode) {\n    let content;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check if tagname contains Unicode */\n    if (stringMatch(currentNode.nodeName, /[\\u0080-\\uFFFF]/)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS,\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (\n      !_isNode(currentNode.firstElementChild) &&\n      (!_isNode(currentNode.content) ||\n        !_isNode(currentNode.content.firstElementChild)) &&\n      regExpTest(/<[/\\w]/g, currentNode.innerHTML) &&\n      regExpTest(/<[/\\w]/g, currentNode.textContent)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Mitigate a problem with templates inside select */\n    if (\n      tagName === 'select' &&\n      regExpTest(/<template/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n\n          for (let i = childCount - 1; i >= 0; --i) {\n            parentNode.insertBefore(\n              cloneNode(childNodes[i], true),\n              getNextSibling(currentNode)\n            );\n          }\n        }\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    if (\n      (tagName === 'noscript' || tagName === 'noembed') &&\n      regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = stringReplace(content, MUSTACHE_EXPR, ' ');\n      content = stringReplace(content, ERB_EXPR, ' ');\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function (lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (\n      SANITIZE_DOM &&\n      (lcName === 'id' || lcName === 'name') &&\n      (value in document || value in formElement)\n    ) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (\n      ALLOW_DATA_ATTR &&\n      !FORBID_ATTR[lcName] &&\n      regExpTest(DATA_ATTR, lcName)\n    ) {\n      // This attribute is safe\n    } else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) {\n      // This attribute is safe\n      /* Otherwise, check the name is permitted */\n    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      return false;\n\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n      // This attribute is safe\n      /* Check no script, data or unknown possibly unsafe URI\n        unless we know URI values are safe for that attribute */\n    } else if (\n      regExpTest(IS_ALLOWED_URI, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Keep image data URIs alive if src/xlink:href is allowed */\n      /* Further prevent gadget XSS for dynamically built script tags */\n    } else if (\n      (lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') &&\n      lcTag !== 'script' &&\n      stringIndexOf(value, 'data:') === 0 &&\n      DATA_URI_TAGS[lcTag]\n    ) {\n      // This attribute is safe\n      /* Allow unknown protocols: This provides support for links that\n        are handled by protocol handlers which may be unknown ahead of\n        time, e.g. fb:, spotify: */\n    } else if (\n      ALLOW_UNKNOWN_PROTOCOLS &&\n      !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Check for binary attributes */\n      // eslint-disable-next-line no-negated-condition\n    } else if (!value) {\n      // Binary attributes are safe at this point\n      /* Anything else, presume unsafe, do not add it back */\n    } else {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  const _sanitizeAttributes = function (currentNode) {\n    let attr;\n    let value;\n    let lcName;\n    let l;\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    const { attributes } = currentNode;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n    };\n    l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      attr = attributes[l];\n      const { name, namespaceURI } = attr;\n      value = stringTrim(attr.value);\n      lcName = transformCaseFunc(name);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        value = stringReplace(value, MUSTACHE_EXPR, ' ');\n        value = stringReplace(value, ERB_EXPR, ' ');\n      }\n\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        arrayPop(DOMPurify.removed);\n      } catch (_) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function (fragment) {\n    let shadowNode;\n    const shadowIterator = _createIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while ((shadowNode = shadowIterator.nextNode())) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} configuration object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg) {\n    let body;\n    let importedNode;\n    let currentNode;\n    let oldNode;\n    let returnNode;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      // eslint-disable-next-line no-negated-condition\n      if (typeof dirty.toString !== 'function') {\n        throw typeErrorCreate('toString is not a function');\n      } else {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      }\n    }\n\n    /* Check we can run. Otherwise fall back or ignore */\n    if (!DOMPurify.isSupported) {\n      if (\n        typeof window.toStaticHTML === 'object' ||\n        typeof window.toStaticHTML === 'function'\n      ) {\n        if (typeof dirty === 'string') {\n          return window.toStaticHTML(dirty);\n        }\n\n        if (_isNode(dirty)) {\n          return window.toStaticHTML(dirty.outerHTML);\n        }\n      }\n\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* No special handling necessary for in-place sanitization */\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (\n        !RETURN_DOM &&\n        !SAFE_FOR_TEMPLATES &&\n        !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1\n      ) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n          ? trustedTypesPolicy.createHTML(dirty)\n          : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : emptyHTML;\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    const nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while ((currentNode = nodeIterator.nextNode())) {\n      /* Fix IE's strange behavior with manipulated textNodes #89 */\n      if (currentNode.nodeType === 3 && currentNode === oldNode) {\n        continue;\n      }\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n\n      oldNode = currentNode;\n    }\n\n    oldNode = null;\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (RETURN_DOM_IMPORT) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, ERB_EXPR, ' ');\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML(serializedHTML)\n      : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function (cfg) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {string} tag Tag name of containing element.\n   * @param  {string} attr Attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      arrayPop(hooks[entryPoint]);\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   *\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nexport default createDOMPurify();\n", "let resolved;\n\n/**\n * Returns a cached resolved promise.\n * Babel converts direct calls to Promise.resolve() (with no arguments) into\n * calls to this.\n *\n * @return {!Promise<undefined>}\n */\nexport function resolvedPromise() {\n  if (resolved) {\n    return resolved;\n  }\n\n  // It's important that we call with `undefined` here, to prevent a transform\n  // recursion. If we didn't pass an arg, then the transformer would replace\n  // this callsite with a call to `resolvedPromise()`.\n  resolved = Promise.resolve(undefined);\n  return resolved;\n}\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nexport class Deferred {\n  /** Constructor. */\n  constructor() {\n    /** @const {!Promise<T>} */\n    this.promise = new /*OK*/ Promise((res, rej) => {\n      /** @const {function(T=)} */\n      this.resolve = res;\n      /** @const {function(*=)} */\n      this.reject = rej;\n    });\n  }\n}\n\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\nexport function tryResolve(fn) {\n  return new Promise((resolve) => {\n    resolve(fn());\n  });\n}\n\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\nexport class LastAddedResolver {\n  /**\n   * @param {!Array<!IThenable>=} opt_promises\n   */\n  constructor(opt_promises) {\n    /** @private @const {!Deferred} */\n    this.deferred_ = new Deferred();\n\n    /** @private */\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (const promise of opt_promises) {\n        this.add(promise);\n      }\n    }\n  }\n\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!IThenable} promise\n   * @return {!Promise}\n   */\n  add(promise) {\n    const countAtAdd = ++this.count_;\n    promise.then(\n      (result) => {\n        if (this.count_ === countAtAdd) {\n          this.deferred_.resolve(result);\n        }\n      },\n      (error) => {\n        // Don't follow behavior of Promise.all and Promise.race error so that\n        // this will only reject when most recently added promise fails.\n        if (this.count_ === countAtAdd) {\n          this.deferred_.reject(error);\n        }\n      }\n    );\n    return this.deferred_.promise;\n  }\n\n  /** @override */\n  then(opt_resolve, opt_reject) {\n    return this.deferred_.promise.then(opt_resolve, opt_reject);\n  }\n}\n", "import { ADD_EVENT_SUBSCRIPTION_LENGTH, REMOVE_EVENT_SUBSCRIPTION_LENGTH, } from '../../transfer/TransferrableEvent';\nimport { BASE_ELEMENT_INDEX } from '../nodes';\n/**\n * Monitoring Nodes attribute changes requires a Mutation Observer.\n * We store the nodes being monitored to avoid creating more than one Observer\n * per Element.\n */\nconst monitoredNodes = new Map();\n/**\n * Instead of a whitelist of elements that need their value tracked, use the existence\n * of a property called value to drive the decision.\n * @param node node to check if values should be tracked.\n * @return boolean if the node should have its value property tracked.\n */\nconst shouldTrackChanges = (node) => node && 'value' in node;\n/**\n * When a node that has a value needing synced doesn't already have an event listener\n * listening for input values, ensure the value is synced with a default listener.\n * @param worker whom to dispatch value toward.\n * @param node node to listen to value changes on.\n */\nexport const applyDefaultInputListener = (workerContext, node) => {\n    if (shouldTrackChanges(node) && node.oninput === null) {\n        node.oninput = () => fireValueChange(workerContext, node);\n    }\n};\n/**\n * Use a MutationObserver to capture value changes based on Attribute modification (frequently used by frameworks).\n * @param worker whom to dispatch value toward.\n * @param node node to listen to value changes on.\n */\nexport const sendValueChangeOnAttributeMutation = (workerContext, node) => {\n    if (shouldTrackChanges(node) && !monitoredNodes.get(node)) {\n        new MutationObserver((mutations) => mutations.map((mutation) => fireValueChange(workerContext, mutation.target))).observe(node, { attributes: true });\n        monitoredNodes.set(node, true);\n    }\n};\n/**\n * Tell WorkerDOM what the value is for a Node.\n * @param worker whom to dispatch value toward.\n * @param node where to get the value from.\n */\nconst fireValueChange = (workerContext, node) => workerContext.messageToWorker({\n    [12 /* type */]: 4 /* SYNC */,\n    [40 /* sync */]: {\n        [7 /* index */]: node._index_,\n        [21 /* value */]: node.value,\n    },\n});\n/**\n * Tell WorkerDOM what the window dimensions are.\n * @param workerContext\n * @param cachedWindowSize\n */\nconst fireResizeChange = (workerContext, cachedWindowSize) => workerContext.messageToWorker({\n    [12 /* type */]: 5 /* RESIZE */,\n    [40 /* sync */]: cachedWindowSize,\n});\n/**\n * Convert a TouchList into a TransferrableTouchList\n * @param touchList\n */\nconst createTransferrableTouchList = (touchList) => Object.values(touchList).map((touch) => [\n    touch.identifier,\n    touch.screenX,\n    touch.screenY,\n    touch.clientX,\n    touch.clientY,\n    touch.pageX,\n    touch.pageY,\n    touch.target._index_,\n]);\nexport const EventSubscriptionProcessor = (strings, nodeContext, workerContext, objectContext, config) => {\n    const knownListeners = [];\n    const allowedExecution = config.executorsAllowed.includes(4 /* EVENT_SUBSCRIPTION */);\n    let cachedWindowSize = [window.innerWidth, window.innerHeight];\n    /**\n     * Register an event handler for dispatching events to worker thread\n     * @param worker whom to dispatch events toward\n     * @param index node index the event comes from (used to dispatchEvent in worker thread).\n     * @return eventHandler function consuming event and dispatching to worker thread\n     */\n    const eventHandler = (index, preventDefault) => (event) => {\n        if (preventDefault) {\n            event.preventDefault();\n        }\n        if (shouldTrackChanges(event.currentTarget)) {\n            fireValueChange(workerContext, event.currentTarget);\n        }\n        else if (event.type === 'resize') {\n            const { innerWidth, innerHeight } = window;\n            if (cachedWindowSize[0] === innerWidth && cachedWindowSize[1] === innerHeight) {\n                return;\n            }\n            cachedWindowSize = [window.innerWidth, window.innerHeight];\n            fireResizeChange(workerContext, cachedWindowSize);\n        }\n        workerContext.messageToWorker({\n            [12 /* type */]: 1 /* EVENT */,\n            [39 /* event */]: {\n                [7 /* index */]: index,\n                [25 /* bubbles */]: event.bubbles,\n                [26 /* cancelable */]: event.cancelable,\n                [27 /* cancelBubble */]: event.cancelBubble,\n                [28 /* currentTarget */]: [event.currentTarget._index_ || 0],\n                [29 /* defaultPrevented */]: event.defaultPrevented,\n                [30 /* eventPhase */]: event.eventPhase,\n                [31 /* isTrusted */]: event.isTrusted,\n                [32 /* returnValue */]: event.returnValue,\n                [13 /* target */]: [event.target._index_ || 0],\n                [33 /* timeStamp */]: event.timeStamp,\n                [12 /* type */]: event.type,\n                [35 /* keyCode */]: 'keyCode' in event ? event.keyCode : undefined,\n                [60 /* pageX */]: 'pageX' in event ? event.pageX : undefined,\n                [61 /* pageY */]: 'pageY' in event ? event.pageY : undefined,\n                [65 /* offsetX */]: 'offsetX' in event ? event.offsetX : undefined,\n                [66 /* offsetY */]: 'offsetY' in event ? event.offsetY : undefined,\n                [62 /* touches */]: 'touches' in event ? createTransferrableTouchList(event.touches) : undefined,\n                [63 /* changedTouches */]: 'changedTouches' in event ? createTransferrableTouchList(event.changedTouches) : undefined,\n            },\n        });\n    };\n    /**\n     * If the worker requests to add an event listener to 'change' for something the foreground thread is already listening to,\n     * ensure that only a single 'change' event is attached to prevent sending values multiple times.\n     * @param target node to change listeners on\n     * @param addEvent is this an 'addEvent' or 'removeEvent' change\n     * @param mutations Uint16Array for this set of changes\n     * @param iterator current location in array to perform this change on\n     */\n    const processListenerChange = (target, addEvent, mutations, iterator) => {\n        const type = strings.get(mutations[iterator]);\n        const eventIndex = mutations[iterator + 1 /* Index */];\n        if (target === nodeContext.baseElement) {\n            if (addEvent) {\n                const preventDefault = Boolean(mutations[iterator + 5 /* WorkerDOMPreventDefault */]);\n                addEventListener(type, (knownListeners[eventIndex] = eventHandler(BASE_ELEMENT_INDEX, preventDefault)));\n            }\n            else {\n                removeEventListener(type, knownListeners[eventIndex]);\n            }\n            return;\n        }\n        let inputEventSubscribed = target.oninput !== null;\n        const isChangeEvent = type === 'change';\n        if (addEvent) {\n            if (isChangeEvent) {\n                inputEventSubscribed = true;\n                target.onchange = null;\n            }\n            const preventDefault = Boolean(mutations[iterator + 5 /* WorkerDOMPreventDefault */]);\n            target.addEventListener(type, (knownListeners[eventIndex] = eventHandler(target._index_, preventDefault)));\n        }\n        else {\n            if (isChangeEvent) {\n                inputEventSubscribed = false;\n            }\n            target.removeEventListener(type, knownListeners[eventIndex]);\n        }\n        if (shouldTrackChanges(target)) {\n            if (!inputEventSubscribed)\n                applyDefaultInputListener(workerContext, target);\n            sendValueChangeOnAttributeMutation(workerContext, target);\n        }\n    };\n    return {\n        execute(mutations, startPosition, allowedMutation) {\n            const addEventListenerCount = mutations[startPosition + 3 /* AddEventListenerCount */];\n            const removeEventListenerCount = mutations[startPosition + 2 /* RemoveEventListenerCount */];\n            const addEventListenersPosition = startPosition + 4 /* Events */ + removeEventListenerCount * REMOVE_EVENT_SUBSCRIPTION_LENGTH;\n            const endPosition = startPosition +\n                4 /* Events */ +\n                addEventListenerCount * ADD_EVENT_SUBSCRIPTION_LENGTH +\n                removeEventListenerCount * REMOVE_EVENT_SUBSCRIPTION_LENGTH;\n            if (allowedExecution && allowedMutation) {\n                const targetIndex = mutations[startPosition + 1 /* Target */];\n                const target = nodeContext.getNode(targetIndex);\n                if (target) {\n                    let iterator = startPosition + 4 /* Events */;\n                    while (iterator < endPosition) {\n                        const isRemoveEvent = iterator <= addEventListenersPosition;\n                        processListenerChange(target, isRemoveEvent, mutations, iterator);\n                        iterator += isRemoveEvent ? REMOVE_EVENT_SUBSCRIPTION_LENGTH : ADD_EVENT_SUBSCRIPTION_LENGTH;\n                    }\n                }\n                else {\n                    console.error(`getNode(${targetIndex}) is null.`);\n                }\n            }\n            return endPosition;\n        },\n        print(mutations, startPosition) {\n            const addEventListenerCount = mutations[startPosition + 3 /* AddEventListenerCount */];\n            const removeEventListenerCount = mutations[startPosition + 2 /* RemoveEventListenerCount */];\n            const addEventListenersPosition = startPosition + 4 /* Events */ + removeEventListenerCount * REMOVE_EVENT_SUBSCRIPTION_LENGTH;\n            const endPosition = startPosition +\n                4 /* Events */ +\n                addEventListenerCount * ADD_EVENT_SUBSCRIPTION_LENGTH +\n                removeEventListenerCount * REMOVE_EVENT_SUBSCRIPTION_LENGTH;\n            const targetIndex = mutations[startPosition + 1 /* Target */];\n            const target = nodeContext.getNode(targetIndex);\n            const removedEventListeners = [];\n            const addedEventListeners = [];\n            let iterator = startPosition + 4 /* Events */;\n            while (iterator < endPosition) {\n                const isRemoveEvent = iterator <= addEventListenersPosition;\n                const eventList = isRemoveEvent ? addedEventListeners : removedEventListeners;\n                eventList.push({\n                    type: strings.get(mutations[iterator]),\n                    index: mutations[iterator + 1],\n                });\n                iterator += isRemoveEvent ? REMOVE_EVENT_SUBSCRIPTION_LENGTH : ADD_EVENT_SUBSCRIPTION_LENGTH;\n            }\n            return {\n                target,\n                allowedExecution,\n                removedEventListeners,\n                addedEventListeners,\n            };\n        },\n    };\n};\n//# sourceMappingURL=event-subscription.js.map", "import { applyDefaultInputListener, sendValueChangeOnAttributeMutation } from './commands/event-subscription';\nconst NODES_ALLOWED_TO_TRANSMIT_TEXT_CONTENT = [8 /* COMMENT_NODE */, 3 /* TEXT_NODE */];\n/**\n * Serializes a DOM element for transport to the worker.\n * @param element\n * @param minimizeString Function for minimizing strings for optimized ferrying across postMessage.\n */\nfunction createHydrateableNode(element, minimizeString, hydrateFilter, workerContext) {\n    const filteredChildNodes = [].slice.call(element.childNodes).filter(hydrateFilter);\n    const hydrated = {\n        [7 /* index */]: element._index_,\n        [11 /* transferred */]: 0 /* FALSE */,\n        [0 /* nodeType */]: element.nodeType,\n        [1 /* localOrNodeName */]: minimizeString(element.localName || element.nodeName),\n        [4 /* childNodes */]: filteredChildNodes.map((child) => createHydrateableNode(child, minimizeString, hydrateFilter, workerContext)),\n        [2 /* attributes */]: [].map.call(element.attributes || [], (attribute) => [\n            minimizeString(attribute.namespaceURI || 'null'),\n            minimizeString(attribute.name),\n            minimizeString(attribute.value),\n        ]),\n    };\n    if (element.namespaceURI != null) {\n        hydrated[6 /* namespaceURI */] = minimizeString(element.namespaceURI);\n    }\n    if (NODES_ALLOWED_TO_TRANSMIT_TEXT_CONTENT.includes(element.nodeType) && element.textContent !== null) {\n        hydrated[5 /* textContent */] = minimizeString(element.textContent);\n    }\n    applyDefaultInputListener(workerContext, element);\n    sendValueChangeOnAttributeMutation(workerContext, element);\n    return hydrated;\n}\n/**\n * @param element\n */\nexport function createHydrateableRootNode(element, config, workerContext) {\n    const hydrateFilter = config.hydrateFilter || (() => true);\n    const strings = [];\n    const stringMap = new Map();\n    const storeString = (value) => {\n        if (stringMap.has(value)) {\n            // Safe to cast since we verified the mapping contains the value.\n            return stringMap.get(value);\n        }\n        const count = strings.length;\n        stringMap.set(value, count);\n        strings.push(value);\n        return count;\n    };\n    const skeleton = createHydrateableNode(element, storeString, hydrateFilter, workerContext);\n    return { skeleton, strings };\n}\n/**\n * @param element\n */\nexport function createReadableHydrateableRootNode(element, config, workerContext) {\n    // \"Readable\" variant doesn't do any string minimization so we can output it for debugging purposes.\n    // Note that this intentionally breaks the type contract of createHydrateableNode() and HydrateableNode.\n    return createHydrateableNode(element, ((value) => value), config.hydrateFilter || (() => true), workerContext);\n}\n//# sourceMappingURL=serialize.js.map", "/**\n * An almost drop-in replacement for a standard Web Worker, although this one\n * within a sandboxed cross-origin iframe for a heightened security boundary.\n * For more details on Worker, see: https://developer.mozilla.org/en-US/docs/Web/API/Worker\n *\n * The iframe used for sandboxing must follow a specific contract. It:\n *   1. Must send a ready message to the main-thread.\n *   2. Must listen for a message from main-thread with the code to initialize a Worker with.\n *   3. Must send \"worker-ready\" once worker is initialized.\n *   4. Must proxy all messages between the Worker and Parent, including errors.\n */\nclass IframeWorker {\n    url;\n    // Public Worker API\n    onerror;\n    onmessage;\n    onmessageerror;\n    readyPromise;\n    // Internal variables.\n    iframe;\n    readyPromiseResolve;\n    /**\n     * @param url The URL to initiate the worker from.\n     * @param iframeUrl The URL of the iframe to use as the worker proxy.\n     */\n    constructor(url, iframeUrl) {\n        this.url = url;\n        this.iframe = window.document.createElement('iframe');\n        this.iframe.setAttribute('sandbox', 'allow-scripts');\n        this.iframe.setAttribute('style', 'display:none');\n        this.iframe.setAttribute('src', iframeUrl);\n        this.url = url;\n        this.readyPromise = new Promise((resolve) => {\n            this.readyPromiseResolve = resolve;\n        });\n        this.setupInit();\n        this.proxyFromWorker();\n        window.document.body.appendChild(this.iframe);\n    }\n    setupInit() {\n        const listener = (event) => {\n            if (event.source != this.iframe.contentWindow) {\n                return;\n            }\n            fetch(this.url.toString())\n                .then((res) => res.text())\n                .then((code) => {\n                const data = event.data;\n                if (data.type == 'iframe-ready') {\n                    const msg = { type: 'init-worker', code };\n                    this.iframe.contentWindow.postMessage(msg, '*');\n                }\n                else if (data.type === 'worker-ready') {\n                    this.readyPromiseResolve();\n                    window.removeEventListener('message', listener);\n                }\n            });\n        };\n        window.addEventListener('message', listener);\n    }\n    proxyFromWorker() {\n        window.addEventListener('message', (event) => {\n            if (event.source != this.iframe.contentWindow) {\n                return;\n            }\n            const { type, message } = event.data;\n            if (type == 'onmessage' && this.onmessage) {\n                this.onmessage({ ...event, data: message });\n            }\n            else if (type === 'onerror' && this.onerror) {\n                this.onerror(message);\n            }\n            else if (type === 'onmessageerror' && this.onmessageerror) {\n                this.onmessageerror({ ...event, data: message });\n            }\n        });\n    }\n    /**\n     * See https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage\n     * @param message\n     * @param transferables\n     */\n    postMessage(message, transferables) {\n        const msg = { type: 'postMessage', message };\n        this.readyPromise.then(() => {\n            this.iframe.contentWindow.postMessage(msg, '*', transferables);\n        });\n    }\n    /**\n     * See https://developer.mozilla.org/en-US/docs/Web/API/Worker/terminate\n     */\n    terminate() {\n        const msg = { type: 'terminate' };\n        this.iframe.contentWindow.postMessage(msg, '*');\n        this.iframe.remove();\n    }\n}\nexport { IframeWorker };\n//# sourceMappingURL=iframe-worker.js.map", "import { MutatorProcessor } from './mutator';\nimport { NodeContext } from './nodes';\nimport { StringContext } from './strings';\nimport { normalizeConfiguration } from './configuration';\nimport { WorkerContext } from './worker';\nimport { ObjectContext } from './object-context';\nimport { ExportedWorker } from './exported-worker';\nconst ALLOWABLE_MESSAGE_TYPES = [3 /* MUTATE */, 2 /* HYDRATE */];\n/**\n * @param baseElement\n * @param authorScriptURL\n * @param workerDOMURL\n * @param callbacks\n * @param sanitizer\n * @param debug\n */\nexport function fetchAndInstall(baseElement, config) {\n    const fetchPromise = Promise.all([\n        // TODO(KB): Fetch Polyfill for IE11.\n        fetch(config.domURL).then((response) => response.text()),\n        fetch(config.authorURL).then((response) => response.text()),\n    ]);\n    return install(fetchPromise, baseElement, config);\n}\n/**\n * @param fetchPromise\n * @param baseElement\n * @param config\n */\nexport function install(fetchPromise, baseElement, config) {\n    const stringContext = new StringContext();\n    const objectContext = new ObjectContext();\n    const nodeContext = new NodeContext(stringContext, baseElement);\n    const normalizedConfig = normalizeConfiguration(config);\n    return fetchPromise.then(([domScriptContent, authorScriptContent]) => {\n        if (domScriptContent && authorScriptContent && config.authorURL) {\n            const workerContext = new WorkerContext(baseElement, nodeContext, domScriptContent, authorScriptContent, normalizedConfig);\n            const mutatorContext = new MutatorProcessor(stringContext, nodeContext, workerContext, normalizedConfig, objectContext);\n            workerContext.worker.onmessage = (message) => {\n                const { data } = message;\n                if (!ALLOWABLE_MESSAGE_TYPES.includes(data[12 /* type */])) {\n                    return;\n                }\n                mutatorContext.mutate(data[54 /* phase */], data[37 /* nodes */], data[41 /* strings */], new Uint16Array(data[36 /* mutations */]));\n                if (config.onReceiveMessage) {\n                    config.onReceiveMessage(message);\n                }\n            };\n            return workerContext.ready().then(() => new ExportedWorker(workerContext, normalizedConfig));\n        }\n        return null;\n    });\n}\n//# sourceMappingURL=install.js.map", "/**\n * @fileoverview This entry point API in active development and unstable.\n */\nimport { fetchAndInstall, install } from './install';\nimport { toLower } from '../utils';\n/**\n * AMP Element Children need to be filtered from Hydration, to avoid Author Code from manipulating it.\n * TODO: In the future, this contract needs to be more defined.\n * @param element\n */\nconst hydrateFilter = (element) => {\n    if (element.parentNode !== null) {\n        const lowerName = toLower(element.parentNode.localName || element.parentNode.nodeName);\n        return !/amp-/.test(lowerName) || lowerName === 'amp-script';\n    }\n    return true;\n};\n/**\n * @param baseElement\n * @param domURL\n */\nexport function upgradeElement(baseElement, domURL, longTask, sanitizer, sandbox) {\n    const authorURL = baseElement.getAttribute('src');\n    if (authorURL) {\n        return fetchAndInstall(baseElement, {\n            domURL,\n            authorURL,\n            longTask,\n            hydrateFilter,\n            sanitizer,\n            sandbox,\n        });\n    }\n    return Promise.resolve(null);\n}\n/**\n * @param baseElement\n * @param fetchPromise Promise that resolves containing worker script, and author script.\n */\nexport function upgrade(baseElement, fetchPromise, config) {\n    config.hydrateFilter = hydrateFilter;\n    return install(fetchPromise, baseElement, config);\n}\n//# sourceMappingURL=index.amp.js.map", "/**\n * Returns true when the build is meant for distribution.\n * This means `amp dist` was called _without_ the --fortesting flag.\n *\n * This is a magic constant replaced by babel.\n *\n * Calls are DCE'd when compiled.\n * @return {boolean}\n */\nexport function isProd() {\n  return IS_PROD;\n}\n", "import {isProd} from './prod';\n\n/**\n * Returns true if executing in a testing environment. Calls may be DCE'd when\n * compiled based on isForDistribution.\n * @param {!Window=} opt_win\n * @return {boolean}\n */\nexport function isTest(opt_win) {\n  if (isProd()) {\n    return false;\n  }\n  const win = opt_win || self;\n  return !!(win.AMP_CONFIG?.test || win.__AMP_TEST || win['__karma__']);\n}\n", "import {isProd} from './prod';\nimport {isTest} from './test';\n\n/**\n * Returns true if executing in a local development or testing environment.\n * Calls may be DCE'd when compiled based on isForDistribution and isTest.\n *\n * @param {!Window=} opt_win\n * @return {boolean}\n */\nexport function isLocalDev(opt_win) {\n  if (isProd()) {\n    return false;\n  }\n\n  return !!self.AMP_CONFIG?.localDev || isTest(opt_win);\n}\n", "/**\n * Returns true whenever closure compiler is used.\n * This is a magic constant that is replaced by babel.\n *\n * @return {boolean}\n */\nexport function isMinified() {\n  return IS_MINIFIED;\n}\n", "/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nexport function version() {\n  return INTERNAL_RUNTIME_VERSION;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isProd} from './prod';\n\n/**\n * Returns true when compiling an esm binary.\n * This is a magic constant that is replaced by babel.\n *\n * @return {boolean}\n */\nexport function isEsm() {\n  if (isProd()) {\n    return IS_ESM;\n  }\n\n  return self?.__AMP_MODE?.esm ?? IS_ESM;\n}\n", "/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\nexport function toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\nexport const {isArray} = Array;\n\n/**\n * If the specified argument is an array, it's returned as is. If it's a\n * single item, the array containing this item is created and returned.\n *\n * The double-template pattern here solves a bug where CC can be passed a value\n * with declared type {string|!Array<string>} and return a value with a type of\n * {!Array<string|Array<string>>}.\n *\n * @param {!Array<T>|S} arrayOrSingleItem\n * @return {!Array<T>|!Array<S>}\n * @template S\n * @template T\n */\nexport function arrayOrSingleItemToArray(arrayOrSingleItem) {\n  return isArray(arrayOrSingleItem)\n    ? /** @type {!Array<T>} */ (arrayOrSingleItem)\n    : [/** @type {!S} */ (arrayOrSingleItem)];\n}\n\n/**\n * Compares if two arrays contains exactly same elements of same number\n * of same order. Note that it does NOT handle NaN case as expected.\n *\n * @param {!Array<T>} arr1\n * @param {!Array<T>} arr2\n * @return {boolean}\n * @template T\n */\nexport function areEqualOrdered(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Removes elements that shouldRemove returns true for from the array.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} shouldRemove\n * @return {!Array<T>}\n * @template T\n */\nexport function remove(array, shouldRemove) {\n  const removed = [];\n  let index = 0;\n  for (let i = 0; i < array.length; i++) {\n    const item = array[i];\n    if (shouldRemove(item, i, array)) {\n      removed.push(item);\n    } else {\n      if (index < i) {\n        array[index] = item;\n      }\n      index++;\n    }\n  }\n  if (index < array.length) {\n    array.length = index;\n  }\n  return removed;\n}\n\n/**\n * Returns the index of the first element matching the predicate.\n * Like Array#findIndex.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} predicate\n * @return {number}\n * @template T\n */\nexport function findIndex(array, predicate) {\n  for (let i = 0; i < array.length; i++) {\n    if (predicate(array[i], i, array)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Converts the given iterator to an array.\n *\n * @param {!Iterator<T>} iterator\n * @return {Array<T>}\n * @template T\n */\nexport function fromIterator(iterator) {\n  const array = [];\n  for (let e = iterator.next(); !e.done; e = iterator.next()) {\n    array.push(e.value);\n  }\n  return array;\n}\n\n/**\n * Adds item to array if it is not already present.\n *\n * @param {Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function pushIfNotExist(array, item) {\n  if (array.indexOf(item) < 0) {\n    array.push(item);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Removes the first matching item in the array. Returns `true` if the array\n * has changed.\n *\n * @param {!Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function removeItem(array, item) {\n  const index = array.indexOf(item);\n  if (index == -1) {\n    return false;\n  }\n  array.splice(index, 1);\n  return true;\n}\n\n/**\n * Returns the last item in an array.\n *\n * @param {Array<T>} array\n * @template T\n * @return {?T}\n */\nexport function lastItem(array) {\n  return array[array.length - 1];\n}\n", "/* @const */\nconst {hasOwnProperty: hasOwn_, toString: toString_} = Object.prototype;\n\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\nexport function isObject(value) {\n  return toString_.call(value) === '[object Object]';\n}\n\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\nexport function map(opt_initial) {\n  const obj = Object.create(null);\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n  return obj;\n}\n\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\nexport function dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return /** @type {!JsonObject} */ (opt_initial || {});\n}\n\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\nexport function hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\nexport function ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\nexport function deepMerge(target, source, depth = 10) {\n  // Keep track of seen objects to detect recursive references.\n  const seen = [];\n\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n  const queue = [];\n  queue.push({t: target, s: source, d: 0});\n\n  // BFS to ensure objects don't have recursive references at shallower depths.\n  while (queue.length > 0) {\n    const {d, s, t} = queue.shift();\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n    seen.push(s);\n    if (t === s) {\n      continue;\n    }\n    if (d > depth) {\n      Object.assign(t, s);\n      continue;\n    }\n    for (const key of Object.keys(s)) {\n      const newValue = s[key];\n      // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n      if (hasOwn(t, key)) {\n        const oldValue = t[key];\n        if (isObject(newValue) && isObject(oldValue)) {\n          queue.push({t: oldValue, s: newValue, d: d + 1});\n          continue;\n        }\n      }\n      t[key] = newValue;\n    }\n  }\n  return target;\n}\n\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\nexport function omit(o, props) {\n  return Object.keys(o).reduce((acc, key) => {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n    return acc;\n  }, {});\n}\n\n/**\n * @param {!Object|null|undefined} o1\n * @param {!Object|null|undefined} o2\n * @return {boolean}\n */\nexport function objectsEqualShallow(o1, o2) {\n  if (o1 == null || o2 == null) {\n    // Null is only equal to null, and undefined to undefined.\n    return o1 === o2;\n  }\n\n  for (const k in o1) {\n    if (o1[k] !== o2[k]) {\n      return false;\n    }\n  }\n  for (const k in o2) {\n    if (o2[k] !== o1[k]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @param {T} obj\n * @param {string} prop\n * @param {function(T, string):R} factory\n * @return {R}\n * @template T,R\n */\nexport function memo(obj, prop, factory) {\n  let result = /** @type {?R} */ (obj[prop]);\n  if (result === undefined) {\n    result = factory(obj, prop);\n    obj[prop] = result;\n  }\n  return result;\n}\n\n/**\n * Recreates objects with prototype-less copies.\n * @param {!JsonObject} obj\n * @return {!JsonObject}\n */\nexport function recreateNonProtoObject(obj) {\n  const copy = map();\n  for (const k in obj) {\n    if (!hasOwn(obj, k)) {\n      continue;\n    }\n    const v = obj[k];\n    copy[k] = isObject(v) ? recreateNonProtoObject(v) : v;\n  }\n  return /** @type {!JsonObject} */ (copy);\n}\n\n/**\n * Returns a value from an object for a field-based expression. The expression\n * is a simple nested dot-notation of fields, such as `field1.field2`. If any\n * field in a chain does not exist or is not an object or array, the returned\n * value will be `undefined`.\n *\n * @param {!JsonObject} obj\n * @param {string} expr\n * @return {*}\n */\nexport function getValueForExpr(obj, expr) {\n  // The `.` indicates \"the object itself\".\n  if (expr == '.') {\n    return obj;\n  }\n  // Otherwise, navigate via properties.\n  const parts = expr.split('.');\n  let value = obj;\n  for (const part of parts) {\n    if (\n      part &&\n      value &&\n      value[part] !== undefined &&\n      typeof value == 'object' &&\n      hasOwn(value, part)\n    ) {\n      value = value[part];\n      continue;\n    }\n    value = undefined;\n    break;\n  }\n  return value;\n}\n", "// Export all type-checking helpers for convenience\nexport {isArray} from './array';\nexport {isEnumValue} from './enum';\nexport {isString} from './string';\nexport {isObject} from './object';\n\n/**\n * Determines if value is an ELement\n * @param {*} value\n * @return {boolean}\n */\nexport function isElement(value) {\n  return value?.nodeType == /* Node.ELEMENT_NODE */ 1;\n}\n\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\nexport function isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n", "import {isElement} from '#core/types';\n\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\nexport const USER_ERROR_SENTINEL = '\\u200B\\u200B\\u200B';\n/**\n * Four zero width space.\n *\n * @const {string}\n */\nexport const USER_ERROR_EMBED_SENTINEL = '\\u200B\\u200B\\u200B\\u200B';\n\n/**\n * Converts an element to a readable string; all other types are unchanged.\n * TODO(rcebulko): Unify with log.js\n * @param {*} val\n * @return {*}\n */\nexport function elementStringOrPassThru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (isElement(val)) {\n    val = /** @type {Element} */ (val);\n    return val.tagName.toLowerCase() + (val.id ? `#${val.id}` : '');\n  }\n  return val;\n}\n\n/**\n * Tests if an error message contains the user sentinel.\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\nexport function isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\nexport function isUserErrorEmbedMessage(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n\n/**\n * Strips the user error sentinel from an error message.\n * @param {string} message\n * @return {string} The new message without USER_ERROR_SENTINEL\n */\nexport function stripUserError(message) {\n  return message.replace(USER_ERROR_SENTINEL, '');\n}\n", "import {elementStringOrPassThru} from '#core/error/message-helpers';\nimport {isArray, isElement, isString} from '#core/types';\nimport {remove} from '#core/types/array';\n\n/**\n * @fileoverview This file provides the base implementation for assertion\n * functions. Most files should never import from this; instead, import from\n * `dev` or `user`. It is also used by the Log class for its assertions.\n */\n\n/**\n * A base assertion function, provided to various assertion helpers.\n * @typedef {function(?, string=, ...*):?|function(?, !Array<*>)}\n */\nexport let AssertionFunctionDef;\n\n/**\n * Throws an error if the second argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n * @param {?string} sentinel\n * @param {T} shouldBeTruthy\n * @param {string} opt_message\n * @param {...*} var_args Arguments substituted into %s in the message\n * @return {T}\n * @template T\n * @throws {Error} when shouldBeTruthy is not truthy.\n */\nexport function assert(\n  sentinel,\n  shouldBeTruthy,\n  opt_message = 'Assertion failed',\n  var_args\n) {\n  if (shouldBeTruthy) {\n    return shouldBeTruthy;\n  }\n\n  // Include the sentinel string if provided and not already present\n  if (sentinel && opt_message.indexOf(sentinel) == -1) {\n    opt_message += sentinel;\n  }\n\n  // Skip the first 3 arguments to isolate format params\n  // const messageArgs = Array.prototype.slice.call(arguments, 3);\n  // Index at which message args start\n  let i = 3;\n\n  // Substitute provided values into format string in message\n  const splitMessage = opt_message.split('%s');\n  let message = splitMessage.shift();\n  const messageArray = [message];\n\n  while (splitMessage.length) {\n    const subValue = arguments[i++];\n    const nextConstant = splitMessage.shift();\n\n    message += elementStringOrPassThru(subValue) + nextConstant;\n    messageArray.push(subValue, nextConstant.trim());\n  }\n\n  const error = new Error(message);\n  error.messageArray = remove(messageArray, (x) => x !== '');\n  // __AMP_REPORT_ERROR is installed globally per window in the entry point in\n  // AMP documents. It may not be present for Bento/Preact elements on non-AMP\n  // pages.\n  self.__AMP_REPORT_ERROR?.(error);\n  throw error;\n}\n\n/**\n * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n *\n * It understands array-based \"id\"-contracted messages.\n *\n * Otherwise creates a sprintf syntax string containing the optional message or the\n * default. The `subject` of the assertion is added at the end.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {T} subject\n * @param {*} shouldBeTruthy\n * @param {string} defaultMessage\n * @param {!Array<*>|string=} opt_message\n * @return {T}\n * @template T\n * @private\n */\nfunction assertType_(\n  assertFn,\n  subject,\n  shouldBeTruthy,\n  defaultMessage,\n  opt_message\n) {\n  if (isArray(opt_message)) {\n    assertFn(\n      shouldBeTruthy,\n      /** @type {!Array} */ (opt_message).concat([subject])\n    );\n  } else {\n    assertFn(shouldBeTruthy, `${opt_message || defaultMessage}: %s`, subject);\n  }\n\n  return subject;\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertElement(assertFn, shouldBeElement, opt_message) {\n  return /** @type {!Element} */ (\n    assertType_(\n      assertFn,\n      shouldBeElement,\n      isElement(shouldBeElement),\n      'Element expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertString(assertFn, shouldBeString, opt_message) {\n  return /** @type {string} */ (\n    assertType_(\n      assertFn,\n      shouldBeString,\n      isString(shouldBeString),\n      'String expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertNumber(assertFn, shouldBeNumber, opt_message) {\n  return /** @type {number} */ (\n    assertType_(\n      assertFn,\n      shouldBeNumber,\n      typeof shouldBeNumber == 'number',\n      'Number expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertArray(assertFn, shouldBeArray, opt_message) {\n  return /** @type {!Array} */ (\n    assertType_(\n      assertFn,\n      shouldBeArray,\n      isArray(shouldBeArray),\n      'Array expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertBoolean(assertFn, shouldBeBoolean, opt_message) {\n  return /** @type {boolean} */ (\n    assertType_(\n      assertFn,\n      shouldBeBoolean,\n      !!shouldBeBoolean === shouldBeBoolean,\n      'Boolean expected',\n      opt_message\n    )\n  );\n}\n", "import * as mode from '#core/mode';\n\nimport * as assertions from './base';\n\n/**\n * @fileoverview This file provides the entrypoint for dev assertions. It's\n * designed so all functions are pure function calls to improve inlining. All\n * functions in this file get DCE'd away during compilation.\n */\n\n/**\n * This will never execute regardless, but will be included on unminified builds\n * builds. It will be DCE'd away from minified builds, and so can be used to\n * validate that Babel is properly removing dev assertions in minified builds.\n */\nfunction devAssertDceCheck() {\n  if (self.__AMP_ASSERTION_CHECK) {\n    console /*OK*/\n      .log('__devAssert_sentinel__');\n  }\n}\n\n/**\n * Throws an error if the first argument isn't trueish. Mirrors devAssert in\n * src/log.js.\n * @param {T} shouldBeTruthy\n * @param {string=} opt_message\n * @param {*=} opt_1 Optional argument (var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T}\n * @template T\n * @throws {Error} when shouldBeTruthy is not truthy.\n * @closurePrimitive {asserts.truthy}\n */\nexport function devAssert(\n  shouldBeTruthy,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (mode.isMinified()) {\n    return shouldBeTruthy;\n  }\n  devAssertDceCheck();\n\n  return assertions.assert(\n    '',\n    shouldBeTruthy,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertElement(shouldBeElement, opt_message) {\n  if (mode.isMinified()) {\n    return /** @type {!Element} */ (shouldBeElement);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertElement(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeElement,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertString(shouldBeString, opt_message) {\n  if (mode.isMinified()) {\n    return /** @type {string} */ (shouldBeString);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertString(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeString,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertNumber(shouldBeNumber, opt_message) {\n  if (mode.isMinified()) {\n    return /** @type {number} */ (shouldBeNumber);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertNumber(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeNumber,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertArray(shouldBeArray, opt_message) {\n  if (mode.isMinified()) {\n    return /** @type {!Array} */ (shouldBeArray);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertArray(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeArray,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertBoolean(shouldBeBoolean, opt_message) {\n  if (mode.isMinified()) {\n    return /** @type {boolean} */ (shouldBeBoolean);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertBoolean(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeBoolean,\n    opt_message\n  );\n}\n", "import {USER_ERROR_SENTINEL} from '#core/error/message-helpers';\n\nimport * as assertions from './base';\n\n/**\n * @fileoverview This file provides the entrypoint for user assertions. It's\n * designed so all functions are pure function calls to improve inlining.\n */\n\n/**\n * Throws a user error if the first argument isn't trueish. Mirrors userAssert\n * in src/log.js.\n * @param {T} shouldBeTruthy\n * @param {string} opt_message\n * @param {*=} opt_1 Optional argument (var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T}\n * @template T\n * @throws {UserError} when shouldBeTruthy is not truthy.\n * @closurePrimitive {asserts.truthy}\n */\nexport function userAssert(\n  shouldBeTruthy,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return assertions.assert(\n    USER_ERROR_SENTINEL,\n    shouldBeTruthy,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertElement(shouldBeElement, opt_message) {\n  return assertions.assertElement(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeElement,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertString(shouldBeString, opt_message) {\n  return assertions.assertString(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeString,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertNumber(shouldBeNumber, opt_message) {\n  return assertions.assertNumber(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeNumber,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertArray(shouldBeArray, opt_message) {\n  return assertions.assertArray(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeArray,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertBoolean(shouldBeBoolean, opt_message) {\n  return assertions.assertBoolean(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeBoolean,\n    opt_message\n  );\n}\n", "/**\n * @fileoverview Implements element layout. See https://goo.gl/9avXuT for\n * details.\n */\n\nimport {userAssert} from '#core/assert';\nimport {isFiniteNumber} from '#core/types';\n\n/**\n * @enum {string}\n */\nexport const Layout = {\n  NODISPLAY: 'nodisplay',\n  FIXED: 'fixed',\n  FIXED_HEIGHT: 'fixed-height',\n  RESPONSIVE: 'responsive',\n  CONTAINER: 'container',\n  FILL: 'fill',\n  FLEX_ITEM: 'flex-item',\n  FLUID: 'fluid',\n  INTRINSIC: 'intrinsic',\n};\n\n/**\n * Layout priorities to use with BaseElement#getLayoutPriority() and\n * BaseElement#updateLayoutPriority().\n * @enum {number}\n */\nexport const LayoutPriority = {\n  CONTENT: 0,\n  METADATA: 1,\n  ADS: 2,\n  BACKGROUND: 3,\n};\n\n/**\n * CSS Length type. E.g. \"1px\" or \"20vh\".\n * @typedef {string}\n */\nexport let LengthDef;\n\n/**\n * @typedef {{\n *   width: string,\n *   height: string\n * }}\n */\nexport let DimensionsDef;\n\n/**\n * Elements that the progress can be shown for. This set has to be externalized\n * since the element's implementation may not be downloaded yet.\n * This list does not include video players which are found via regex later.\n * @enum {boolean}\n * @private  Visible for testing only!\n */\nexport const LOADING_ELEMENTS_ = {\n  'AMP-AD': true,\n  'AMP-ANIM': true,\n  'AMP-EMBED': true,\n  'AMP-FACEBOOK': true,\n  'AMP-FACEBOOK-COMMENTS': true,\n  'AMP-FACEBOOK-PAGE': true,\n  'AMP-GOOGLE-DOCUMENT-EMBED': true,\n  'AMP-IFRAME': true,\n  'AMP-IMG': true,\n  'AMP-INSTAGRAM': true,\n  'AMP-LIST': true,\n  'AMP-PINTEREST': true,\n  'AMP-PLAYBUZZ': true,\n  'AMP-RENDER': true,\n  'AMP-TIKTOK': true,\n  'AMP-TWITTER': true,\n};\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they are listed individually.\n * @private @const {!RegExp}\n */\nconst videoPlayerTagNameRe =\n  /^amp\\-(video|.+player)|AMP-BRIGHTCOVE|AMP-DAILYMOTION|AMP-YOUTUBE|AMP-VIMEO|AMP-IMA-VIDEO/i;\n\n/**\n * @param {string} s\n * @return {!Layout|undefined} Returns undefined in case of failure to parse\n *   the layout string.\n */\nexport function parseLayout(s) {\n  for (const k in Layout) {\n    if (Layout[k] == s) {\n      return Layout[k];\n    }\n  }\n  return undefined;\n}\n\n/**\n * @param {!Layout} layout\n * @return {string}\n */\nexport function getLayoutClass(layout) {\n  return 'i-amphtml-layout-' + layout;\n}\n\n/**\n * Whether an element with this layout inherently defines the size.\n * @param {!Layout} layout\n * @return {boolean}\n */\nexport function isLayoutSizeDefined(layout) {\n  return (\n    layout == Layout.FIXED ||\n    layout == Layout.FIXED_HEIGHT ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.FILL ||\n    layout == Layout.FLEX_ITEM ||\n    layout == Layout.FLUID ||\n    layout == Layout.INTRINSIC\n  );\n}\n\n/**\n * Whether an element with this layout has a fixed dimension.\n * @param {!Layout} layout\n * @return {boolean}\n */\nexport function isLayoutSizeFixed(layout) {\n  return layout == Layout.FIXED || layout == Layout.FIXED_HEIGHT;\n}\n\n/**\n * Parses the CSS length value. If no units specified, the assumed value is\n * \"px\". Returns undefined in case of parsing error.\n * @param {string|undefined|null} s\n * @return {!LengthDef|undefined}\n */\nexport function parseLength(s) {\n  if (typeof s == 'number') {\n    return s + 'px';\n  }\n  if (!s) {\n    return undefined;\n  }\n  if (!/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)?$/.test(s)) {\n    return undefined;\n  }\n  if (/^\\d+(\\.\\d+)?$/.test(s)) {\n    return s + 'px';\n  }\n  return s;\n}\n\n/**\n * Asserts that the supplied value is a non-percent CSS Length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertLength(length) {\n  userAssert(\n    /^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)$/.test(length),\n    'Invalid length value: %s',\n    length\n  );\n  return /** @type {!LengthDef} */ (length);\n}\n\n/**\n * Asserts that the supplied value is a CSS Length value\n * (including percent unit).\n * @param {!LengthDef|string} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertLengthOrPercent(length) {\n  userAssert(\n    /^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|%)$/.test(length),\n    'Invalid length or percent value: %s',\n    length\n  );\n  return length;\n}\n\n/**\n * Returns units from the CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {string}\n */\nexport function getLengthUnits(length) {\n  assertLength(length);\n  const m = userAssert(\n    /[a-z]+/i.exec(length),\n    'Failed to read units from %s',\n    length\n  );\n  return m[0];\n}\n\n/**\n * Returns the numeric value of a CSS length value.\n * @param {!LengthDef|string|null|undefined|number} length\n * @return {number|undefined}\n */\nexport function getLengthNumeral(length) {\n  const res = parseFloat(length);\n  return isFiniteNumber(res) ? res : undefined;\n}\n\n/**\n * Whether the loading can be shown for the specified element. This set has\n * to be externalized since the element's implementation may not be\n * downloaded yet.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isLoadingAllowed(element) {\n  const tagName = element.tagName.toUpperCase();\n  return LOADING_ELEMENTS_[tagName] || isIframeVideoPlayerComponent(tagName);\n}\n\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they're present in the LOADING_ELEMENTS_ allowlist.\n * @param {string} tagName\n * @return {boolean}\n */\nexport function isIframeVideoPlayerComponent(tagName) {\n  if (tagName == 'AMP-VIDEO') {\n    return false;\n  }\n  return videoPlayerTagNameRe.test(tagName);\n}\n\n/**\n * Configures the supplied element to have a \"fill content\" layout. The\n * exact interpretation of \"fill content\" depends on the element's layout.\n *\n * If `opt_replacedContent` is specified, it indicates whether the \"replaced\n * content\" styling should be applied. Replaced content is not allowed to\n * have its own paddings or border.\n *\n * @param {!Element} element\n * @param {boolean=} opt_replacedContent\n */\nexport function applyFillContent(element, opt_replacedContent) {\n  element.classList.add('i-amphtml-fill-content');\n  if (opt_replacedContent) {\n    element.classList.add('i-amphtml-replaced-content');\n  }\n}\n", "/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  }\n  // Nil is the null terminator (group 1) capture\n  if (nil) {\n    return '\\uFFFD';\n  }\n  // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' '\n  }\n  // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n  return '\\\\' + match;\n}\n\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\nexport function cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n", "import {devAssert, devAssertElement} from '#core/assert';\nimport * as mode from '#core/mode';\n\nimport {isScopeSelectorSupported, prependSelectorsWith} from './css-selectors';\n\n/** @fileoverview Helper functions for DOM queries. */\n\n/**\n * Asserts that name is just an alphanumeric word, and does not contain\n * advanced CSS selector features like attributes, psuedo-classes, class names,\n * nor ids.\n * @param {string} name\n */\nfunction assertIsName(name) {\n  devAssert(\n    /^[\\w-]+$/.test(name),\n    `Expected \"${name}\" to be a CSS name composed of alphanumerics and hyphens.`\n  );\n}\n\n/**\n * Finds all elements that matche `selector`, scoped inside `root`\n * for user-agents that do not support native scoping.\n *\n * This method isn't required for modern builds, can be removed.\n *\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nfunction scopedQuerySelectionFallback(root, selector) {\n  const unique = 'i-amphtml-scoped';\n  root.classList.add(unique);\n  const scopedSelector = prependSelectorsWith(selector, `.${unique}`);\n  const elements = root./*OK*/ querySelectorAll(scopedSelector);\n  root.classList.remove(unique);\n  return elements;\n}\n\n/**\n * Finds the first element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {?Element}\n *\n * @suppress {suspiciousCode}\n */\nexport function scopedQuerySelector(root, selector) {\n  if (mode.isEsm() || isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelector(prependSelectorsWith(selector, ':scope'));\n  }\n\n  // Only IE.\n  const fallbackResult = scopedQuerySelectionFallback(root, selector);\n  return fallbackResult[0] === undefined ? null : fallbackResult[0];\n}\n\n/**\n * Finds every element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n *\n * @suppress {suspiciousCode}\n */\nexport function scopedQuerySelectorAll(root, selector) {\n  if (mode.isEsm() || isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelectorAll(\n      prependSelectorsWith(selector, ':scope')\n    );\n  }\n\n  // Only IE.\n  return scopedQuerySelectionFallback(root, selector);\n}\n\n/**\n * Checks if the given element matches the selector\n * @param  {!Element} el The element to verify\n * @param  {string} selector The selector to check against\n * @return {boolean} True if the element matched the selector. False otherwise.\n */\nexport function matches(el, selector) {\n  const matcher =\n    el.matches ||\n    el.webkitMatchesSelector ||\n    el.mozMatchesSelector ||\n    el.msMatchesSelector ||\n    el.oMatchesSelector;\n  if (matcher) {\n    return matcher.call(el, selector);\n  }\n  return false; // IE8 always returns false.\n}\n\n/**\n * Finds the closest element that satisfies the callback from this element\n * up the DOM subtree.\n * @param {!Element} element\n * @param {function(!Element):boolean} callback\n * @param {Element=} opt_stopAt optional elemnt to stop the search at.\n * @return {?Element}\n */\nexport function closest(element, callback, opt_stopAt) {\n  for (let el = element; el && el !== opt_stopAt; el = el.parentElement) {\n    if (callback(el)) {\n      return el;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest node that satisfies the callback from this node\n * up the DOM subtree.\n * @param {!Node} node\n * @param {function(!Node):boolean} callback\n * @return {?Node}\n */\nexport function closestNode(node, callback) {\n  for (let n = node; n; n = n.parentNode) {\n    if (callback(n)) {\n      return n;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest ancestor element with the specified selector from this\n * element.\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element} closest ancestor if found.\n */\nexport function closestAncestorElementBySelector(element, selector) {\n  return element.closest\n    ? element.closest(selector)\n    : closest(element, (el) => matches(el, selector));\n}\n\n/**\n * Finds all ancestor elements that satisfy predicate.\n * @param {!Element} child\n * @param {function(!Element):boolean} predicate\n * @return {!Array<!Element>}\n */\nexport function ancestorElements(child, predicate) {\n  const ancestors = [];\n  for (\n    let ancestor = child.parentElement;\n    ancestor;\n    ancestor = ancestor.parentElement\n  ) {\n    if (predicate(ancestor)) {\n      ancestors.push(ancestor);\n    }\n  }\n  return ancestors;\n}\n\n/**\n * Finds all ancestor elements that has the specified tag name.\n * @param {!Element} child\n * @param {string} tagName\n * @return {!Array<!Element>}\n */\nexport function ancestorElementsByTag(child, tagName) {\n  assertIsName(tagName);\n  tagName = tagName.toUpperCase();\n  return ancestorElements(child, (el) => el.tagName == tagName);\n}\n\n/**\n * Finds the first child element that satisfies the callback.\n * TODO(rcebulko): Can we start using generators in childElements and defer to\n * that here?\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function childElement(parent, callback) {\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the last child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function lastChildElement(parent, callback) {\n  for (\n    let child = parent.lastElementChild;\n    child;\n    child = child.previousElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child elements that satisfy the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {!Array<!Element>}\n */\nexport function childElements(parent, callback) {\n  const children = [];\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      children.push(child);\n    }\n  }\n  return children;\n}\n\n/**\n * Finds all child nodes that satisfy the callback.\n * These nodes can include Text, Comment and other child nodes.\n * @param {!Node} parent\n * @param {function(!Node):boolean} callback\n * @return {!Array<!Node>}\n */\nexport function childNodes(parent, callback) {\n  const nodes = [];\n  for (let child = parent.firstChild; child; child = child.nextSibling) {\n    if (callback(child)) {\n      nodes.push(child);\n    }\n  }\n  return nodes;\n}\n\n/**\n * Finds the first child element that has the specified attribute.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function childElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelector(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the last child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function lastChildElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return lastChildElement(parent, (el) => {\n    return el.hasAttribute(attr);\n  });\n}\n\n/**\n * Finds all child elements that has the specified attribute.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} attr\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the first child element that has the specified tag name.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} tagName\n * @return {?Element}\n */\nexport function childElementByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelector(parent, `> ${tagName}`);\n}\n\n/**\n * Finds all child elements with the specified tag name.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} tagName\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> ${tagName}`);\n}\n\n/**\n * Finds the first descendant element with the specified name.\n * @param {!Element|!Document|!ShadowRoot} element\n * @param {string} tagName\n * @return {?Element}\n */\nexport function elementByTag(element, tagName) {\n  assertIsName(tagName);\n  return element./*OK*/ querySelector(tagName);\n}\n\n/**\n * Returns the original nodes of the custom element without any service\n * nodes that could have been added for markup. These nodes can include\n * Text, Comment and other child nodes.\n *\n * @param {!Node} element\n * @return {!Array<!Node>}\n */\nexport function realChildNodes(element) {\n  return childNodes(element, (node) => !isInternalOrServiceNode(node));\n}\n\n/**\n * Returns the original children of the custom element without any service\n * nodes that could have been added for markup.\n *\n * @param {!Element} element\n * @return {!Array<!Element>}\n */\nexport function realChildElements(element) {\n  return childElements(element, (element) => !isInternalOrServiceNode(element));\n}\n\n/**\n * Returns \"true\" for internal AMP nodes or for placeholder elements.\n * @param {!Node} node\n * @return {boolean}\n */\nexport function isInternalOrServiceNode(node) {\n  if (isInternalElement(node)) {\n    return true;\n  }\n  if (node.nodeType !== Node.ELEMENT_NODE) {\n    return false;\n  }\n  devAssertElement(node);\n\n  return (\n    node.hasAttribute('placeholder') ||\n    node.hasAttribute('fallback') ||\n    node.hasAttribute('overflow')\n  );\n}\n\n/**\n * Whether the tag is an internal (service) AMP tag.\n * @param {!Node|string} nodeOrTagName\n * @return {boolean}\n */\nfunction isInternalElement(nodeOrTagName) {\n  /** @type string */\n  let tagName;\n  if (typeof nodeOrTagName == 'string') {\n    tagName = nodeOrTagName;\n  } else if (nodeOrTagName.nodeType === Node.ELEMENT_NODE) {\n    tagName = devAssertElement(nodeOrTagName).tagName;\n  }\n\n  return !!tagName && tagName.toLowerCase().startsWith('i-');\n}\n", "import {isArray} from '#core/types/array';\n\n/**\n * @fileoverview This module declares JSON types as defined in the\n * {@link http://json.org/}.\n */\n\n// NOTE Type are changed to {*} because of\n// https://github.com/google/closure-compiler/issues/1999\n\n/**\n * JSON scalar. It's either string, number or boolean.\n * @typedef {string|number|boolean|null}\n */\nlet JSONScalarDef;\n\n/**\n * JSON object. It's a map with string keys and JSON values.\n * @typedef {!Object<string, ?*>} (* should be JSONValueDef)\n */\nlet JSONObjectDef;\n\n/**\n * JSON array. It's an array with JSON values.\n * @typedef {!Array<?*>} (* should be JSONValueDef)\n */\nlet JSONArrayDef;\n\n/**\n * JSON value. It's either a scalar, an object or an array.\n * @typedef {!JSONScalarDef|!JSONObjectDef|!JSONArrayDef}\n */\nlet JSONValueDef;\n\n/**\n * @typedef {{\n *   YOU_MUST_USE: string,\n *   jsonLiteral: function(),\n *   TO_MAKE_THIS_TYPE: string,\n * }}\n */\nlet InternalJsonLiteralTypeDef;\n\n/**\n * Simple wrapper around JSON.parse that casts the return value\n * to JsonObject.\n * Create a new wrapper if an array return value is desired.\n * @param {string} json JSON string to parse\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function parseJson(json) {\n  return /** @type {?JsonObject} */ (JSON.parse(json));\n}\n\n/**\n * Parses the given `json` string without throwing an exception if not valid.\n * Returns `undefined` if parsing fails.\n * Returns the `Object` corresponding to the JSON string when parsing succeeds.\n * @param {string} json JSON string to parse\n * @param {function(!Error)=} opt_onFailed Optional function that will be called\n *     with the error if parsing fails.\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function tryParseJson(json, opt_onFailed) {\n  try {\n    return parseJson(json);\n  } catch (e) {\n    opt_onFailed?.(e);\n    return null;\n  }\n}\n\n/**\n * Deeply checks strict equality of items in nested arrays and objects.\n *\n * @param {JSONValueDef} a\n * @param {JSONValueDef} b\n * @param {number} depth The maximum depth. Must be finite.\n * @return {boolean}\n * @throws {Error} If depth argument is not finite.\n */\nexport function deepEquals(a, b, depth = 5) {\n  if (!isFinite(depth) || depth < 0) {\n    throw new Error('Invalid depth: ' + depth);\n  }\n  if (a === b) {\n    return true;\n  }\n  /** @type {!Array<{a: JSONValueDef, b: JSONValueDef, depth: number}>} */\n  const queue = [{a, b, depth}];\n  while (queue.length > 0) {\n    const {a, b, depth} = queue.shift();\n    // Only check deep equality if depth > 0.\n    if (depth > 0) {\n      if (typeof a !== typeof b) {\n        return false;\n      } else if (isArray(a) && isArray(b)) {\n        if (a.length !== b.length) {\n          return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n          queue.push({a: a[i], b: b[i], depth: depth - 1});\n        }\n        continue;\n      } else if (a && b && typeof a === 'object' && typeof b === 'object') {\n        const keysA = Object.keys(a);\n        const keysB = Object.keys(b);\n        if (keysA.length !== keysB.length) {\n          return false;\n        }\n        for (const k of keysA) {\n          queue.push({a: a[k], b: b[k], depth: depth - 1});\n        }\n        continue;\n      }\n    }\n    // If we get here, then depth == 0 or (a, b) are primitives.\n    if (a !== b) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * This helper function handles configurations specified in a JSON format.\n *\n * It allows the configuration is to be written in plain JS (which has better\n * dev ergonomics like comments and trailing commas), and allows the\n * configuration to be transformed into an efficient JSON-parsed representation\n * in the dist build. See https://v8.dev/blog/cost-of-javascript-2019#json\n *\n * @param {!Object} obj\n * @return {!JsonObject}\n */\nexport function jsonConfiguration(obj) {\n  return /** @type {!JsonObject} */ (obj);\n}\n\n/**\n * This converts an Object into a suitable type to be used in `includeJsonLiteral`.\n * This doesn't actually do any conversion, it only changes the closure type.\n *\n * @param {?JSONValueDef} value\n * @return {!InternalJsonLiteralTypeDef}\n */\nexport function jsonLiteral(value) {\n  return /** @type {!InternalJsonLiteralTypeDef} */ (value);\n}\n\n/**\n * Allows inclusion of a variable (that's wrapped in a jsonLiteral\n * call) to be included inside a jsonConfiguration.\n *\n * @param {!InternalJsonLiteralTypeDef} value\n * @return {*}\n */\nexport function includeJsonLiteral(value) {\n  return value;\n}\n", "import {devAssert} from '#core/assert';\nimport * as mode from '#core/mode';\n\n/**\n * Interpret a byte array as a UTF-8 string.\n * @param {!BufferSource} bytes\n * @return {string}\n */\nexport function utf8Decode(bytes) {\n  if (typeof TextDecoder !== 'undefined') {\n    return new TextDecoder('utf-8').decode(bytes);\n  }\n  const asciiString = bytesToString(new Uint8Array(bytes.buffer || bytes));\n  return decodeURIComponent(escape(asciiString));\n}\n\n/**\n * Turn a string into UTF-8 bytes.\n * @param {string} string\n * @return {!Uint8Array}\n */\nexport function utf8Encode(string) {\n  if (typeof TextEncoder !== 'undefined') {\n    return new TextEncoder('utf-8').encode(string);\n  }\n  return stringToBytes(unescape(encodeURIComponent(string)));\n}\n\n/**\n * Converts a string which holds 8-bit code points, such as the result of atob,\n * into a Uint8Array with the corresponding bytes.\n * If you have a string of characters, you probably want to be using utf8Encode.\n * @param {string} str\n * @return {!Uint8Array}\n */\nexport function stringToBytes(str) {\n  const bytes = new Uint8Array(str.length);\n  for (let i = 0; i < str.length; i++) {\n    const charCode = str.charCodeAt(i);\n    devAssert(charCode <= 255, 'Characters must be in range [0,255]');\n    bytes[i] = charCode;\n  }\n  return bytes;\n}\n\n/**\n * Converts a 8-bit bytes array into a string\n * @param {!Uint8Array} bytes\n * @return {string}\n */\nexport function bytesToString(bytes) {\n  // Intentionally avoids String.fromCharCode.apply so we don't suffer a\n  // stack overflow. #10495, https://jsperf.com/bytesToString-2\n  const array = new Array(bytes.length);\n  for (let i = 0; i < bytes.length; i++) {\n    array[i] = String.fromCharCode(bytes[i]);\n  }\n  return array.join('');\n}\n\n/**\n * Converts a 4-item byte array to an unsigned integer.\n * Assumes bytes are big endian.\n * @param {!Uint8Array} bytes\n * @return {number}\n */\nexport function bytesToUInt32(bytes) {\n  if (bytes.length != 4) {\n    throw new Error('Received byte array with length != 4');\n  }\n  const val =\n    ((bytes[0] & 0xff) << 24) |\n    ((bytes[1] & 0xff) << 16) |\n    ((bytes[2] & 0xff) << 8) |\n    (bytes[3] & 0xff);\n  // Convert to unsigned.\n  return val >>> 0;\n}\n\n/**\n * Generate a random bytes array with specific length using\n * win.crypto.getRandomValues. Return null if it is not available.\n * @param {!Window} win\n * @param {number} length\n * @return {?Uint8Array}\n */\nexport function getCryptoRandomBytesArray(win, length) {\n  let {crypto} = win;\n\n  // Support IE 11\n  if (!mode.isEsm()) {\n    crypto = /** @type {!webCrypto.Crypto|undefined} */ (\n      crypto || win.msCrypto\n    );\n    if (!crypto || !crypto.getRandomValues) {\n      return null;\n    }\n  }\n\n  // Widely available in browsers we support:\n  // http://caniuse.com/#search=getRandomValues\n  const uint8array = new Uint8Array(length);\n  crypto.getRandomValues(uint8array);\n  return uint8array;\n}\n", "import purify from 'dompurify';\n\nimport {devAssertElement} from '#core/assert';\nimport {isAmp4Email} from '#core/document/format';\nimport {removeElement} from '#core/dom';\n\nimport {user} from '#utils/log';\n\nimport {\n  ALLOWLISTED_ATTRS,\n  ALLOWLISTED_ATTRS_BY_TAGS,\n  ALLOWLISTED_TARGETS,\n  BIND_PREFIX,\n  DENYLISTED_TAGS,\n  EMAIL_ALLOWLISTED_AMP_TAGS,\n  TRIPLE_MUSTACHE_ALLOWLISTED_TAGS,\n  isValidAttr,\n  markElementForDiffing,\n} from './sanitation';\n\n/** @private @const {string} */\nconst TAG = 'purifier';\n\n/**\n * Tags that are only allowlisted for specific values of given attributes.\n * @private @const {!Object<string, {attribute: string, values: !Array<string>}>}\n */\nconst ALLOWLISTED_TAGS_BY_ATTRS = {\n  'script': {\n    'attribute': 'type',\n    'values': ['application/json', 'application/ld+json'],\n  },\n};\n\nconst PURIFY_PROFILES = /** @type {!DomPurifyConfig} */ ({\n  USE_PROFILES: {\n    html: true,\n    svg: true,\n    svgFilters: true,\n  },\n});\n\n/**\n * @typedef {{addHook: !Function, removeAllHooks: !Function, sanitize: !Function}}\n */\nlet DomPurifyDef;\n\n/**\n * @typedef {function(string, string, string): string}\n */\nexport let AttributeRewriterDef;\n\nexport class Purifier {\n  /**\n   * @param {!Document} doc\n   * @param {!JsonObject=} opt_config\n   * @param {!AttributeRewriterDef=} opt_attrRewrite\n   */\n  constructor(doc, opt_config, opt_attrRewrite) {\n    /** @private {!Document} */\n    this.doc_ = doc;\n\n    /**\n     * Monotonically increasing counter used for keying nodes.\n     * @private {number}\n     */\n    this.keyCounter_ = 1;\n\n    /** @private {!DomPurifyDef} */\n    this.domPurify_ = purify(self);\n\n    /** @private {!DomPurifyDef} */\n    this.domPurifyTriple_ = purify(self);\n\n    const config = Object.assign(opt_config || {}, standardPurifyConfig());\n    this.domPurify_.setConfig(config);\n    this.addPurifyHooks_(this.domPurify_, opt_attrRewrite);\n\n    this.addPurifyHooksTripleMustache_(this.domPurifyTriple_);\n  }\n\n  /**\n   * Returns a <body> element containing the sanitized `dirty` markup.\n   * Uses the standard DOMPurify config.\n   * @param {string} dirty\n   * @return {!Node}\n   */\n  purifyHtml(dirty) {\n    const body = this.domPurify_.sanitize(dirty);\n    return body;\n  }\n\n  /**\n   * Uses DOMPurify to sanitize HTML with stricter policy for unescaped templates\n   * e.g. triple mustache.\n   *\n   * @param {string} dirty\n   * @return {string}\n   */\n  purifyTagsForTripleMustache(dirty) {\n    // <template> elements are parsed by the browser as document fragments and\n    // reparented to the head. So to support nested templates, we need\n    // RETURN_DOM_FRAGMENT to keep the <template> and FORCE_BODY to prevent\n    // reparenting. See https://github.com/cure53/DOMPurify/issues/285#issuecomment-397810671\n    const fragment = this.domPurifyTriple_.sanitize(dirty, {\n      'ALLOWED_TAGS': TRIPLE_MUSTACHE_ALLOWLISTED_TAGS,\n      'FORCE_BODY': true,\n      'RETURN_DOM_FRAGMENT': true,\n    });\n    // Serialize DocumentFragment to HTML. XMLSerializer would also work, but adds\n    // namespaces for all elements and attributes.\n    const div = this.doc_.createElement('div');\n    div.appendChild(fragment);\n    return div./*OK*/ innerHTML;\n  }\n\n  /**\n   * Gets a copy of the map of allowed tag names (standard DOMPurify config).\n   * @return {!Object<string, boolean>}\n   */\n  getAllowedTags() {\n    const allowedTags = {};\n    // Use this hook to extract purifier's allowed tags.\n    this.domPurify_.addHook('uponSanitizeElement', (node, data) => {\n      Object.assign(allowedTags, data.allowedTags);\n    });\n    // Sanitize dummy markup so that the hook is invoked.\n    const p = this.doc_.createElement('p');\n    this.domPurify_.sanitize(p);\n    Object.keys(DENYLISTED_TAGS).forEach((tag) => {\n      allowedTags[tag] = false;\n    });\n    // Pops the last hook added.\n    this.domPurify_.removeHook('uponSanitizeElement');\n    return allowedTags;\n  }\n\n  /**\n   * Returns whether an attribute addition/modification/removal is valid.\n   *\n   * This function's behavior should match that of addPurifyHooks(), except\n   * that it operates on attribute changes instead of rendering new HTML.\n   *\n   * @param {!Node} node\n   * @param {string} attr Lower-case attribute name.\n   * @param {?string} value\n   * @return {boolean}\n   */\n  validateAttributeChange(node, attr, value) {\n    const tag = node.nodeName.toLowerCase();\n    // Disallow change of attributes that are required for certain tags,\n    // e.g. script[type].\n    const allowlist = ALLOWLISTED_TAGS_BY_ATTRS[tag];\n    if (allowlist) {\n      const {attribute, values} = allowlist;\n      if (attribute === attr) {\n        if (value == null || !values.includes(value)) {\n          return false;\n        }\n      }\n    }\n    // a[target] is required and only certain values are allowed.\n    if (tag === 'a' && attr === 'target') {\n      if (value == null || !ALLOWLISTED_TARGETS.includes(value)) {\n        return false;\n      }\n    }\n    // By now, the attribute is safe to remove.  DOMPurify.isValidAttribute()\n    // expects non-null values.\n    if (value == null) {\n      return true;\n    }\n    // Don't allow binding attributes for now.\n    if (bindingTypeForAttr(attr) !== BindingType.NONE) {\n      return false;\n    }\n    const pure = this.domPurify_.isValidAttribute(tag, attr, value);\n    if (!pure) {\n      // DOMPurify.isValidAttribute() by default rejects certain attributes that\n      // we should allow: (1) AMP element attributes, (2) tag-specific attributes.\n      // Reject if _not_ one of the above.\n      //\n      // TODO(choumx): This opts out of DOMPurify's attribute _value_ sanitization\n      // for the above, which assumes that the attributes don't have security\n      // implications beyond URLs etc. that are covered by isValidAttr().\n      // This is OK but we ought to contribute new hooks and remove this.\n      const attrsByTags = ALLOWLISTED_ATTRS_BY_TAGS[tag];\n      const allowlistedForTag = attrsByTags && attrsByTags.includes(attr);\n      if (!allowlistedForTag && !tag.startsWith('amp-')) {\n        return false;\n      }\n    }\n    const doc = node.ownerDocument\n      ? node.ownerDocument\n      : /** @type {!Document} */ (node);\n    // Perform AMP-specific attribute validation e.g. __amp_source_origin.\n    if (value && !isValidAttr(tag, attr, value, doc, /* opt_purify */ true)) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Adds AMP hooks to given DOMPurify object.\n   * @param {!DomPurifyDef} purifier\n   * @param {!AttributeRewriterDef|undefined} attrRewrite\n   * @private\n   */\n  addPurifyHooks_(purifier, attrRewrite) {\n    const isEmail = isAmp4Email(this.doc_);\n\n    // Reference to DOMPurify's `allowedTags` allowlist.\n    let allowedTags;\n    const allowedTagsChanges = [];\n\n    // Reference to DOMPurify's `allowedAttributes` allowlist.\n    let allowedAttributes;\n    const allowedAttributesChanges = [];\n\n    /**\n     * @param {!Node} node\n     * @param {{tagName: string, allowedTags: !Object<string, boolean>}} data\n     */\n    const uponSanitizeElement = (node, data) => {\n      const {tagName} = data;\n      allowedTags = data.allowedTags;\n\n      // Allow all AMP elements.\n      if (tagName.startsWith('amp-')) {\n        // Enforce AMP4EMAIL tag allowlist at runtime.\n        allowedTags[tagName] = !isEmail || EMAIL_ALLOWLISTED_AMP_TAGS[tagName];\n      }\n      // Set `target` attribute for <a> tags if necessary.\n      if (tagName === 'a') {\n        const element = devAssertElement(node);\n        if (element.hasAttribute('href') && !element.hasAttribute('target')) {\n          element.setAttribute('target', '_top');\n        }\n      }\n      // Allow certain tags if they have an attribute with a allowlisted value.\n      const allowlist = ALLOWLISTED_TAGS_BY_ATTRS[tagName];\n      if (allowlist) {\n        const {attribute, values} = allowlist;\n        const element = devAssertElement(node);\n        if (\n          element.hasAttribute(attribute) &&\n          values.includes(element.getAttribute(attribute))\n        ) {\n          allowedTags[tagName] = true;\n          allowedTagsChanges.push(tagName);\n        }\n      }\n    };\n\n    /**\n     * @param {!Node} unusedNode\n     */\n    const afterSanitizeElements = (unusedNode) => {\n      // DOMPurify doesn't have a attribute-specific tag allowlist API and\n      // `allowedTags` has a per-invocation scope, so we need to undo\n      // changes after sanitizing elements.\n      allowedTagsChanges.forEach((tag) => {\n        delete allowedTags[tag];\n      });\n      allowedTagsChanges.length = 0;\n    };\n\n    /**\n     * @param {!Element} element\n     * @param {{attrName: string, attrValue: string, allowedAttributes: !Object<string, boolean>}} data\n     */\n    const uponSanitizeAttribute = (element, data) => {\n      // Beware of DOM Clobbering when using properties or functions on `element`.\n      // DOMPurify checks a few of these for its internal usage (e.g. `nodeName`),\n      // but not others that may be used in custom hooks.\n      // See https://github.com/cure53/DOMPurify/wiki/Security-Goals-&-Threat-Model#security-goals\n      // and https://github.com/cure53/DOMPurify/blob/master/src/purify.js#L527.\n\n      const tagName = element.nodeName.toLowerCase();\n      const {attrName} = data;\n      let {attrValue} = data;\n      allowedAttributes = data.allowedAttributes;\n\n      const allowAttribute = () => {\n        // Only add new attributes to `allowedAttributesChanges` to avoid removing\n        // default-supported attributes later erroneously.\n        if (!allowedAttributes[attrName]) {\n          allowedAttributes[attrName] = true;\n          allowedAttributesChanges.push(attrName);\n        }\n      };\n\n      // Allow all attributes for AMP elements. This avoids the need to allowlist\n      // nonstandard attributes for every component e.g. amp-lightbox[scrollable].\n      const isAmpElement = tagName.startsWith('amp-');\n      if (isAmpElement) {\n        allowAttribute();\n      } else {\n        // `<A>` has special target rules:\n        // - Default target is \"_top\";\n        // - Allowed targets are \"_blank\", \"_top\";\n        // - All other targets are rewritted to \"_top\".\n        if (tagName == 'a' && attrName == 'target') {\n          const lowercaseValue = attrValue.toLowerCase();\n          if (!ALLOWLISTED_TARGETS.includes(lowercaseValue)) {\n            attrValue = '_top';\n          } else {\n            // Always use lowercase values for `target` attr.\n            attrValue = lowercaseValue;\n          }\n        }\n\n        // For non-AMP elements, allow attributes in tag-specific allowlist.\n        const attrsByTags = ALLOWLISTED_ATTRS_BY_TAGS[tagName];\n        if (attrsByTags && attrsByTags.includes(attrName)) {\n          allowAttribute();\n        }\n      }\n\n      const bindingType = bindingTypeForAttr(attrName);\n      // Rewrite classic bindings e.g. [foo]=\"bar\" -> data-amp-bind-foo=\"bar\".\n      // This is because DOMPurify eagerly removes attributes and re-adds them\n      // after sanitization, which fails because `[]` are not valid attr chars.\n      if (bindingType === BindingType.CLASSIC) {\n        const property = attrName.substring(1, attrName.length - 1);\n        element.setAttribute(`${BIND_PREFIX}${property}`, attrValue);\n      }\n      if (bindingType !== BindingType.NONE) {\n        // Set a custom attribute to mark this element as containing a binding.\n        // This is an optimization that obviates the need for DOM scan later.\n        element.setAttribute('i-amphtml-binding', '');\n      }\n\n      if (\n        isValidAttr(\n          tagName,\n          attrName,\n          attrValue,\n          /* doc */ this.doc_,\n          /* opt_purify */ true\n        )\n      ) {\n        if (attrRewrite && attrValue && !attrName.startsWith(BIND_PREFIX)) {\n          attrValue = attrRewrite(tagName, attrName, attrValue);\n        }\n      } else {\n        data.keepAttr = false;\n        user().error(\n          TAG,\n          'Removed invalid attribute %s[%s=\"%s\"].',\n          tagName,\n          attrName,\n          attrValue\n        );\n      }\n\n      // Update attribute value.\n      data.attrValue = attrValue;\n    };\n\n    /**\n     * @param {!Element} element\n     * @this {{removed: !Array}} Contains list of removed elements/attrs so far.\n     */\n    const afterSanitizeAttributes = (element) => {\n      markElementForDiffing(element, () => String(this.keyCounter_++));\n\n      // DOMPurify doesn't have a tag-specific attribute allowlist API and\n      // `allowedAttributes` has a per-invocation scope, so we need to undo\n      // changes after sanitizing attributes.\n      allowedAttributesChanges.forEach((attr) => {\n        delete allowedAttributes[attr];\n      });\n      allowedAttributesChanges.length = 0;\n\n      // Only allow relative references in <use>.\n      const tagName = element.nodeName.toLowerCase();\n      if (tagName === 'use') {\n        ['href', 'xlink:href'].forEach((attr) => {\n          if (\n            element.hasAttribute(attr) &&\n            !element.getAttribute(attr).startsWith('#')\n          ) {\n            removeElement(element);\n            user().error(\n              TAG,\n              'Removed invalid <use>. use[href] must start with \"#\".'\n            );\n          }\n        });\n      }\n    };\n\n    purifier.addHook('uponSanitizeElement', uponSanitizeElement);\n    purifier.addHook('afterSanitizeElements', afterSanitizeElements);\n    purifier.addHook('uponSanitizeAttribute', uponSanitizeAttribute);\n    purifier.addHook('afterSanitizeAttributes', afterSanitizeAttributes);\n  }\n\n  /**\n   * Adds triple-mustache specific AMP hooks to given DOMPurify object.\n   * @param {!DomPurifyDef} purifier\n   * @private\n   */\n  addPurifyHooksTripleMustache_(purifier) {\n    // Reference to DOMPurify's `allowedTags` allowlist.\n    let allowedTags;\n\n    const uponSanitizeElement = (node, data) => {\n      const {tagName} = data;\n      allowedTags = data.allowedTags;\n      if (tagName === 'template') {\n        const type = node.getAttribute('type');\n        if (type && type.toLowerCase() === 'amp-mustache') {\n          allowedTags['template'] = true;\n        }\n      }\n    };\n\n    const afterSanitizeElements = (unusedNode) => {\n      // DOMPurify doesn't have an required-attribute tag allowlist API and\n      // `allowedTags` has a per-invocation scope, so we need to remove\n      // required-attribute tags after sanitizing each element.\n      allowedTags['template'] = false;\n    };\n\n    purifier.addHook('uponSanitizeElement', uponSanitizeElement);\n    purifier.addHook('afterSanitizeElements', afterSanitizeElements);\n  }\n}\n\n/**\n * Returns standard DOMPurify config for escaped templates.\n * Do not use for unescaped templates.\n *\n * NOTE: See that we use DomPurifyConfig found in\n * build-system/dompurify.extern.js as the exact type. This is to prevent\n * closure compiler from optimizing these fields here in this file and in the\n * 3rd party library file. See #19624 for further information.\n *\n * @return {!DomPurifyConfig}\n */\nfunction standardPurifyConfig() {\n  const config = {\n    ...PURIFY_PROFILES,\n    ADD_ATTR: ALLOWLISTED_ATTRS,\n    ADD_TAGS: ['use'],\n    FORBID_TAGS: Object.keys(DENYLISTED_TAGS),\n    FORCE_BODY: true,\n    RETURN_DOM: true,\n    ALLOW_UNKNOWN_PROTOCOLS: true,\n  };\n  return /** @type {!DomPurifyConfig} */ (config);\n}\n\n/**\n * @enum {number}\n */\nconst BindingType = {\n  NONE: 0,\n  CLASSIC: 1,\n  ALTERNATIVE: 2,\n};\n\n/**\n * @param {string} attrName\n * @return {BindingType}\n */\nfunction bindingTypeForAttr(attrName) {\n  if (attrName[0] == '[' && attrName[attrName.length - 1] == ']') {\n    return BindingType.CLASSIC;\n  }\n  if (attrName.startsWith(BIND_PREFIX)) {\n    return BindingType.ALTERNATIVE;\n  }\n  return BindingType.NONE;\n}\n", "/**\n * Checks that the document is of an AMP format type.\n * @param {!Array<string>} formats\n * @param {!Document} doc\n * @return {boolean}\n */\nfunction isAmpFormatType(formats, doc) {\n  const html = doc.documentElement;\n  const isFormatType = formats.some((format) => html.hasAttribute(format));\n  return isFormatType;\n}\n\n/**\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isAmp4Email(doc) {\n  return isAmpFormatType(['\u26A14email', 'amp4email'], doc);\n}\n\n/**\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isAmphtml(doc) {\n  return isAmpFormatType(['\u26A1', 'amp'], doc);\n}\n", "/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {?Window} winOrNull\n * @return {!Window}\n */\nexport function toWin(winOrNull) {\n  return /** @type {!Window} */ (winOrNull);\n}\n\n/**\n * Returns the associated Window for a node.\n *\n * @param {!Node} node\n * @return {!Window}\n */\nexport function getWin(node) {\n  return toWin(\n    (node.ownerDocument || /** @type {!Document} */ (node)).defaultView\n  );\n}\n", "import * as mode from '#core/mode';\nimport {dict} from '#core/types/object';\nimport {parseJson} from '#core/types/object/json';\nimport {getWin} from '#core/window';\n\nimport {childElementsByTag, matches} from './query';\n\nconst HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n};\nconst HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n\n/**\n * @typedef {{\n *   bubbles: (boolean|undefined),\n *   cancelable: (boolean|undefined),\n * }}\n */\nexport let CustomEventOptionsDef;\n\n/** @const {!CustomEventOptionsDef} */\nconst DEFAULT_CUSTOM_EVENT_OPTIONS = {bubbles: true, cancelable: true};\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n */\nexport function waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  const win = getWin(parent);\n  if (mode.isEsm() || win.MutationObserver) {\n    const observer = new win.MutationObserver(() => {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {childList: true});\n  } else {\n    const interval = win.setInterval(() => {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    }, /* milliseconds */ 5);\n  }\n}\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\nexport function waitForChildPromise(parent, checkFunc) {\n  return new Promise((resolve) => {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\nexport function waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, () => !!doc.body, callback);\n}\n\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\nexport function waitForBodyOpenPromise(doc) {\n  return new Promise((resolve) => waitForBodyOpen(doc, resolve));\n}\n\n/**\n * Removes the element.\n * @param {!Element} element\n */\nexport function removeElement(element) {\n  element.parentElement?.removeChild(element);\n}\n\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element|!DocumentFragment} parent\n */\nexport function removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\nexport function copyChildren(from, to) {\n  const frag = to.ownerDocument.createDocumentFragment();\n  for (let n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n  to.appendChild(frag);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node=} after\n */\nexport function insertAfterOrAtStart(root, element, after = null) {\n  if (!after) {\n    insertAtStart(root, element);\n    return;\n  }\n  const before = after.nextSibling;\n  root.insertBefore(element, before);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n */\nexport function insertAtStart(root, element) {\n  root.insertBefore(element, root.firstChild);\n}\n\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function addAttributesToElement(element, attributes) {\n  for (const attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n  return element;\n}\n\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function createElementWithAttributes(doc, tagName, attributes) {\n  const element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\nexport function isConnectedNode(node) {\n  const connected = node.isConnected;\n  if (connected !== undefined) {\n    return connected;\n  }\n\n  // \"An element is connected if its shadow-including root is a document.\"\n  let n = node;\n  do {\n    n = rootNodeFor(n);\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\nexport function rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n  let n;\n  // Check isShadowRoot() is only needed for the polyfill case.\n  for (\n    n = node;\n    !!n.parentNode && !isShadowRoot(/** @type {HTMLElement} */ (n));\n    n = n.parentNode\n  ) {}\n  return n;\n}\n\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {?HTMLElement} value\n * @return {boolean}\n */\nexport function isShadowRoot(value) {\n  if (!value) {\n    return false;\n  }\n  // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n  return (\n    value.nodeType == /* DOCUMENT_FRAGMENT */ 11 &&\n    Object.prototype.toString.call(value) === '[object ShadowRoot]'\n  );\n}\n\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!HTMLElement} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\nexport function getDataParamsFromAttributes(\n  element,\n  opt_computeParamNameFunc,\n  opt_paramPattern\n) {\n  const computeParamNameFunc = opt_computeParamNameFunc || ((key) => key);\n  const {dataset} = element;\n  const params = dict();\n  const paramPattern = opt_paramPattern || /^param(.+)/;\n  for (const key in dataset) {\n    const matches = key.match(paramPattern);\n    if (matches) {\n      const param = matches[1][0].toLowerCase() + matches[1].substr(1);\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n  return params;\n}\n\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\nexport function hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  let currentElement = element;\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while (\n    (currentElement = currentElement.parentNode) &&\n    currentElement != opt_stopNode\n  );\n  return false;\n}\n\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\nexport function templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    const content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\nexport function iterateCursor(iterable, cb) {\n  const {length} = iterable;\n  for (let i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.getAttribute('type')?.toUpperCase() == 'APPLICATION/JSON'\n  );\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonLdScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.getAttribute('type')?.toUpperCase() == 'APPLICATION/LD+JSON'\n  );\n}\n\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isRTL(doc) {\n  const dir =\n    doc.body.getAttribute('dir') ||\n    doc.documentElement.getAttribute('dir') ||\n    'ltr';\n  return dir == 'rtl';\n}\n\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\nexport function escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n\n/**\n * @param {string} c\n * @return {string}\n */\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\nexport function tryFocus(element) {\n  try {\n    element./*OK*/ focus();\n  } catch (e) {\n    // IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isIframed(win) {\n  return win.parent && win.parent != win;\n}\n\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!HTMLInputElement} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\nexport function isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\nexport function domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  const pos = element1.compareDocumentPosition(element2);\n  const precedingOrContains =\n    Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS;\n\n  // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n  if (pos & precedingOrContains) {\n    return 1;\n  }\n\n  // if fe2 is following or contained by fe1, then fe1 is before fe2\n  return -1;\n}\n\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\nexport function toggleAttribute(element, name, forced) {\n  const hasAttribute = element.hasAttribute(name);\n  const enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n\n/**\n * Parses a string as a boolean value using the expanded rules for DOM boolean\n * attributes:\n * - a `null` or `undefined` returns `null`;\n * - an empty string returns `true`;\n * - a \"false\" string returns `false`;\n * - otherwise, `true` is returned.\n *\n * @param {?string|undefined} s\n * @return {boolean|undefined}\n */\nexport function parseBooleanAttribute(s) {\n  return s == null ? undefined : s !== 'false';\n}\n\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\nexport function getVerticalScrollbarWidth(win) {\n  const {documentElement} = win.document;\n  const windowWidth = win./*OK*/ innerWidth;\n  const documentWidth = documentElement./*OK*/ clientWidth;\n  return windowWidth - documentWidth;\n}\n\n/**\n * Dispatches a custom event.\n *\n * @param {!Node} node\n * @param {string} name\n * @param {!Object=} opt_data Event data.\n * @param {!CustomEventOptionsDef=} opt_options\n */\nexport function dispatchCustomEvent(node, name, opt_data, opt_options) {\n  const data = opt_data || {};\n  // Constructors of events need to come from the correct window. Sigh.\n  const event = node.ownerDocument.createEvent('Event');\n\n  // Technically .data is not a property of Event.\n  event.data = data;\n\n  const {bubbles, cancelable} = opt_options || DEFAULT_CUSTOM_EVENT_OPTIONS;\n  event.initEvent(name, bubbles, cancelable);\n  node.dispatchEvent(event);\n}\n\n/**\n * Ensures the child is contained by the parent, but not the parent itself.\n *\n * @param {!Node} parent\n * @param {!Node} child\n * @return {boolean}\n */\nexport function containsNotSelf(parent, child) {\n  return child !== parent && parent.contains(child);\n}\n\n/**\n * Helper method to get the json config from an element <script> tag\n * @param {!Element} element\n * @return {?JsonObject}\n * @throws {!Error} If element does not have exactly one <script> child\n * with type=\"application/json\", or if the <script> contents are not valid JSON.\n */\nexport function getChildJsonConfig(element) {\n  const scripts = childElementsByTag(element, 'script');\n  const {length} = scripts;\n  if (length !== 1) {\n    throw new Error(`Found ${length} <script> children. Expected 1.`);\n  }\n\n  const script = scripts[0];\n  if (!isJsonScriptTag(script)) {\n    throw new Error('<script> child must have type=\"application/json\"');\n  }\n\n  try {\n    return parseJson(script.textContent);\n  } catch {\n    throw new Error('Failed to parse <script> contents. Is it valid JSON?');\n  }\n}\n", "import {map} from '#core/types/object';\n\nconst QUERY_STRING_REGEX = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent(component, fallback = '') {\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString(queryString) {\n  const params = map();\n  if (!queryString) {\n    return params;\n  }\n\n  let match;\n  while ((match = QUERY_STRING_REGEX.exec(queryString))) {\n    const name = tryDecodeUriComponent(match[1], match[1]);\n    const value = match[2]\n      ? tryDecodeUriComponent(match[2].replace(/\\+/g, ' '), match[2])\n      : '';\n    params[name] = value;\n  }\n  return params;\n}\n\n/**\n * Parses the query # params.\n * @param {!Window=} opt_win\n * @return {!JsonObject}\n */\nexport function getHashParams(opt_win) {\n  const {location} = opt_win || self;\n  // location.originalHash is set by the viewer when it removes the fragment\n  // from the URL.\n  return parseQueryString(location['originalHash'] || location.hash);\n}\n", "/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nconst env = self.AMP_CONFIG || {};\n\nconst thirdPartyFrameRegex =\n  (typeof env['thirdPartyFrameRegex'] == 'string'\n    ? new RegExp(env['thirdPartyFrameRegex'])\n    : env['thirdPartyFrameRegex']) || /^d-\\d+\\.ampproject\\.net$/;\n\nconst cdnProxyRegex =\n  (typeof env['cdnProxyRegex'] == 'string'\n    ? new RegExp(env['cdnProxyRegex'])\n    : env['cdnProxyRegex']) ||\n  /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/;\n\n/**\n * Check for a custom URL definition in special <meta> tags. Note that this does\n * not allow for distinct custom URLs in AmpDocShadow instances. The shell is\n * allowed to define one set of custom URLs via AMP_CONFIG (recommended) or by\n * including <meta> tags in the shell <head>. Those custom URLs then apply to\n * all AMP documents loaded in the shell.\n * @param {string} name\n * @return {?string}\n * @private\n */\nfunction getMetaUrl(name) {\n  // Avoid exceptions in unit tests\n  if (!self.document || !self.document.head) {\n    return null;\n  }\n\n  // Disallow on proxy origins\n  if (self.location && cdnProxyRegex.test(self.location.origin)) {\n    return null;\n  }\n\n  const metaEl = self.document.head./*OK*/ querySelector(\n    `meta[name=\"${name}\"]`\n  );\n  return (metaEl && metaEl.getAttribute('content')) || null;\n}\n\n/**\n * @typedef {{\n *   thirdParty: string,\n *   thirdPartyFrameHost: string,\n *   thirdPartyFrameRegex: !RegExp,\n *   cdn: string,\n *   cdnProxyRegex: !RegExp,\n *   localhostRegex: !RegExp,\n *   errorReporting: string,\n *   betaErrorReporting: string,\n *   localDev: boolean,\n *   trustedViewerHosts: !Array<!RegExp>,\n *   geoApi: ?string,\n * }}\n */\nexport const urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex,\n  cdn:\n    env['cdnUrl'] || getMetaUrl('runtime-host') || 'https://cdn.ampproject.org',\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting:\n    env['errorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r',\n  betaErrorReporting:\n    env['betaErrorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r-beta',\n  localDev: env['localDev'] || false,\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/main/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [\n    /(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/,\n    /(^|\\.)gmail\\.(com|dev)$/,\n  ],\n  // Optional fallback API if amp-geo is left unpatched\n  geoApi: env['geoApiUrl'] || getMetaUrl('amp-geo-api'),\n};\n\nexport const config = {\n  urls,\n};\n", "import * as coreMode from '#core/mode';\nimport {getHashParams} from '#core/types/string/url';\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   esm: boolean,\n *   test: boolean,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined)\n * }}\n */\nexport let ModeDef;\n\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\nlet rtvVersion = '';\n\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\nexport function getMode(opt_win) {\n  const win = opt_win || self;\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n  return (win.__AMP_MODE = getMode_(win));\n}\n\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\nfunction getMode_(win) {\n  const hashParams = getHashParams(win);\n\n  // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `amp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n  return {\n    localDev: coreMode.isLocalDev(win),\n    development: isModeDevelopment(win, hashParams),\n    esm: coreMode.isEsm(),\n    test: coreMode.isTest(win),\n    rtvVersion: getRtvVersion(win),\n  };\n}\n\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @return {string}\n */\nfunction getRtvVersion(win) {\n  // Ignore memoized copy during testing to allow override.\n  if (!rtvVersion || coreMode.isTest(win)) {\n    // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n    // major version. The full version however must also carry the minor version.\n    // We will default to production default `01` minor version for now.\n    // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n    // minor version.\n    rtvVersion = win.AMP_CONFIG?.v || `01${coreMode.version()}`;\n  }\n  return rtvVersion;\n}\n\n/**\n * Triggers validation or enable pub level logging. Validation can be\n * bypassed via #validate=0.\n * Note that AMP_DEV_MODE flag is used for testing purposes.\n * @param {!Window} win\n * @param {!JsonObject=} opt_hashParams\n * @return {boolean}\n */\nexport function isModeDevelopment(win, opt_hashParams) {\n  const devModes = ['1', 'actions', 'amp', 'amp4ads', 'amp4email'];\n  const devParam = opt_hashParams || getHashParams(win);\n  return devModes.includes(devParam['development']) || !!win.AMP_DEV_MODE;\n}\n\n/**\n * @param {!Window} win\n * @return {string}\n * @visibleForTesting\n */\nexport function getRtvVersionForTesting(win) {\n  return getRtvVersion(win);\n}\n\n/** @visibleForTesting */\nexport function resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n", "import * as assertions from '#core/assert/base';\nimport {\n  createError,\n  createExpectedError,\n  duplicateErrorIfNecessary,\n} from '#core/error';\nimport {\n  USER_ERROR_EMBED_SENTINEL,\n  USER_ERROR_SENTINEL,\n  elementStringOrPassThru,\n  isUserErrorMessage,\n  stripUserError,\n} from '#core/error/message-helpers';\nimport * as mode from '#core/mode';\nimport {isArray, isString} from '#core/types';\nimport {once} from '#core/types/function';\nimport {getHashParams} from '#core/types/string/url';\n\nimport {urls} from '../config';\nimport {getMode} from '../mode';\n\nconst noop = () => {};\n\n// These are exported here despite being defined elswhere to avoid updating\n// imports across many files for now.\nexport {USER_ERROR_SENTINEL, isUserErrorMessage};\n\n/**\n * Sets reportError function. Called from error-reporting.js to break cyclic\n * dependency.\n * @param {function(this:Window, Error, (?Element)=): ?|undefined} fn\n */\nexport function setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n\n/**\n * @enum {number}\n */\nexport const LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4,\n};\n\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\nlet levelOverride_ = undefined;\n\n/**\n * @param {!LogLevel} level\n */\nexport function overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\nconst messageUrlRtv = () => `01${mode.version()}`;\n\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\nconst externalMessageUrl = (id, interpolatedParts) =>\n  interpolatedParts.reduce(\n    (prefix, arg) => `${prefix}&s[]=${messageArgToEncodedComponent(arg)}`,\n    `https://log.amp.dev/?v=${messageUrlRtv()}&id=${encodeURIComponent(id)}`\n  );\n\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\nconst externalMessagesSimpleTableUrl = () =>\n  `${urls.cdn}/rtv/${messageUrlRtv()}/log-messages.simple.json`;\n\n/**\n * @param {*} arg\n * @return {string}\n */\nconst messageArgToEncodedComponent = (arg) =>\n  encodeURIComponent(String(elementStringOrPassThru(arg)));\n\n/**\n * @param {!Window=} opt_win\n * @return {number}\n */\nexport const logHashParam = (opt_win) =>\n  parseInt(getHashParams(opt_win)['log'], 10);\n\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don\u2019t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\nexport class Log {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(number, boolean):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  constructor(win, levelFunc, opt_suffix = '') {\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = getMode().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n\n    /** @private @const {function(number, boolean):!LogLevel} */\n    this.levelFunc_ = levelFunc;\n\n    /** @private @const {!LogLevel} */\n    this.level_ = this.defaultLevel_();\n\n    /** @private @const {string} */\n    this.suffix_ = opt_suffix;\n\n    /** @private {?JsonObject} */\n    this.messages_ = null;\n\n    this.fetchExternalMessagesOnce_ = once(() => {\n      win\n        .fetch(externalMessagesSimpleTableUrl())\n        .then((response) => response.json(), noop)\n        .then((opt_messages) => {\n          if (opt_messages) {\n            this.messages_ = /** @type {!JsonObject} */ (opt_messages);\n          }\n        });\n    });\n\n    // This bound assertion function is capable of handling the format used when\n    // error/assertion messages are extracted. This logic hasn't yet been\n    // migrated to an AMP-independent form for use in core. This binding allows\n    // Log assertion helpers to maintain message-extraction capabilities until\n    // that logic can be moved to core.\n    this.boundAssertFn_ = /** @type {!assertions.AssertionFunctionDef} */ (\n      this.assert.bind(this)\n    );\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevel_() {\n    const {win} = this;\n    // No console - can't enable logging.\n    if (\n      !win.console?.log ||\n      // Logging has been explicitly disabled.\n      logHashParam(win) == 0\n    ) {\n      return LogLevel.OFF;\n    }\n\n    // Logging is enabled for tests directly.\n    if (getMode().test && win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    }\n\n    // LocalDev by default allows INFO level, unless overriden by `#log`.\n    if (getMode().localDev) {\n      return LogLevel.INFO;\n    }\n\n    return this.defaultLevelWithFunc_();\n  }\n\n  /**\n   * @param {!Window=} opt_win provided for testing\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevelWithFunc_(opt_win) {\n    // Delegate to the specific resolver.\n    return this.levelFunc_(logHashParam(opt_win), getMode().development);\n  }\n\n  /**\n   * @param {string} tag\n   * @param {!LogLevel} level\n   * @param {!Array} messages\n   * @return {boolean} true if a the message was logged\n   */\n  msg_(tag, level, messages) {\n    if (level > (levelOverride_ ?? this.level_)) {\n      return false;\n    }\n\n    const cs = this.win.console;\n    const fn =\n      {\n        [LogLevel.ERROR]: cs.error,\n        [LogLevel.INFO]: cs.info,\n        [LogLevel.WARN]: cs.warn,\n      }[level] ?? cs.log;\n\n    const args = this.maybeExpandMessageArgs_(messages);\n    // Prefix console message with \"[tag]\".\n    const prefix = `[${tag}]`;\n    if (isString(args[0])) {\n      // Prepend string to avoid breaking string substitutions e.g. %s.\n      args[0] = prefix + ' ' + args[0];\n    } else {\n      args.unshift(prefix);\n    }\n    fn.apply(cs, args);\n\n    return true;\n  }\n\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  fine(tag, ...args) {\n    this.msg_(tag, LogLevel.FINE, args);\n  }\n\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  info(tag, ...args) {\n    this.msg_(tag, LogLevel.INFO, args);\n  }\n\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  warn(tag, ...args) {\n    this.msg_(tag, LogLevel.WARN, args);\n  }\n\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  error(tag, ...args) {\n    if (!this.msg_(tag, LogLevel.ERROR, args)) {\n      const error = this.createError.apply(this, args);\n      error.name = tag || error.name;\n      self.__AMP_REPORT_ERROR?.(error);\n    }\n  }\n\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  expectedError(tag, ...args) {\n    if (!this.msg_(tag, LogLevel.ERROR, args)) {\n      self.__AMP_REPORT_ERROR?.(this.createExpectedError.apply(this, args));\n    }\n  }\n\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createError(var_args) {\n    return this.setErrorSuffix_(createError.apply(null, arguments));\n  }\n\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createExpectedError(var_args) {\n    return this.setErrorSuffix_(createExpectedError.apply(null, arguments));\n  }\n\n  /**\n   * @param {!Error} error\n   * @return {!Error}\n   * @private\n   */\n  setErrorSuffix_(error) {\n    error = duplicateErrorIfNecessary(error);\n\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = stripUserError(error.message);\n    }\n\n    return error;\n  }\n\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  maybeExpandMessageArgs_(args) {\n    return isArray(args[0])\n      ? this.expandMessageArgs_(/** @type {!Array} */ (args[0]))\n      : args;\n  }\n\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  expandMessageArgs_(parts) {\n    // First value should exist.\n    const id = parts.shift();\n    // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n    if (getMode(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n\n    return this.messages_?.[id]\n      ? [this.messages_[id]].concat(parts)\n      : [`More info at ${externalMessageUrl(id, parts)}`];\n  }\n\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {T} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is falsey.\n   * @template T\n   * @closurePrimitive {asserts.truthy}\n   */\n  assert(shouldBeTrueish, opt_message, var_args) {\n    if (isArray(opt_message)) {\n      return this.assert.apply(\n        this,\n        [shouldBeTrueish].concat(\n          this.expandMessageArgs_(/** @type {!Array} */ (opt_message))\n        )\n      );\n    }\n\n    return assertions.assert.apply(\n      null,\n      [this.suffix_].concat(Array.prototype.slice.call(arguments))\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertElement(shouldBeElement, opt_message) {\n    return assertions.assertElement(\n      this.boundAssertFn_,\n      shouldBeElement,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertString(shouldBeString, opt_message) {\n    return assertions.assertString(\n      this.boundAssertFn_,\n      shouldBeString,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertNumber(shouldBeNumber, opt_message) {\n    return assertions.assertNumber(\n      this.boundAssertFn_,\n      shouldBeNumber,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertArray(shouldBeArray, opt_message) {\n    return assertions.assertArray(\n      this.boundAssertFn_,\n      shouldBeArray,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertBoolean(shouldBeBoolean, opt_message) {\n    return assertions.assertBoolean(\n      this.boundAssertFn_,\n      shouldBeBoolean,\n      opt_message\n    );\n  }\n}\n\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null,\n};\n\nconst logs = self.__AMP_LOG;\n\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?typeof Log}\n */\nlet logConstructor = null;\n\n/**\n * Initializes log constructor.\n */\nexport function initLogConstructor() {\n  logConstructor = Log;\n  // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n  dev();\n  user();\n}\n\n/**\n * Resets log constructor for testing.\n */\nexport function resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n\n/**\n * Calls the log constructor with a given level function and suffix.\n * @param {function(number, boolean):!LogLevel} levelFunc\n * @param {string=} opt_suffix\n * @return {!Log}\n */\nfunction callLogConstructor(levelFunc, opt_suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return new logConstructor(self, levelFunc, opt_suffix);\n}\n\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\nexport function user(opt_element) {\n  // logs.user must exist first to perform the logs.user.win check below\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n\n  if (isFromEmbed(logs.user.win, opt_element)) {\n    return (\n      logs.userForEmbed ||\n      (logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL))\n    );\n  }\n  return logs.user;\n}\n\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\nfunction getUserLogger(suffix) {\n  return callLogConstructor(\n    (logNum, development) =>\n      development || logNum >= 1 ? LogLevel.FINE : LogLevel.WARN,\n    suffix\n  );\n}\n\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\nexport function dev() {\n  return (\n    logs.dev ||\n    (logs.dev = callLogConstructor((logNum) =>\n      logNum >= 3 ? LogLevel.FINE : logNum >= 2 ? LogLevel.INFO : LogLevel.OFF\n    ))\n  );\n}\n\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\nfunction isFromEmbed(win, opt_element) {\n  return opt_element && opt_element.ownerDocument.defaultView != win;\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function devAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (mode.isMinified()) {\n    return shouldBeTrueish;\n  }\n  if (self.__AMP_ASSERTION_CHECK) {\n    // This will never execute regardless, but will be included on unminified\n    // builds. It will be DCE'd away from minified builds, and so can be used to\n    // validate that Babel is properly removing dev assertions in minified\n    // builds.\n    console /*OK*/\n      .log('__devAssert_sentinel__');\n  }\n\n  return dev()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function userAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return user()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n", "import {devAssert, userAssert} from '#core/assert';\n\n/**\n * A single source within a srcset. Only one: width or DPR can be specified at\n * a time.\n * @typedef {{\n *   url: string,\n *   width: (number|undefined),\n *   dpr: (number|undefined)\n * }}\n */\nlet SrcsetSourceDef;\n\n/**\n * General grammar: (URL [NUM[w|x]],)*\n * Example 1: \"image1.png 100w, image2.png 50w\"\n * Example 2: \"image1.png 2x, image2.png\"\n * Example 3: \"image1,100w.png 100w, image2.png 50w\"\n */\nconst srcsetRegex = /(\\S+)(?:\\s+(?:(-?\\d+(?:\\.\\d+)?)([a-zA-Z]*)))?\\s*(?:,|$)/g;\n\n/**\n * Extracts `srcset` and fallbacks to `src` if not available.\n * @param {!Element} element\n * @return {!Srcset}\n */\nexport function srcsetFromElement(element) {\n  const srcsetAttr = element.getAttribute('srcset');\n  if (srcsetAttr) {\n    return parseSrcset(srcsetAttr);\n  }\n  // We can't push `src` via `parseSrcset` because URLs in `src` are not always\n  // RFC compliant and can't be easily parsed as an `srcset`. For instance,\n  // they sometimes contain space characters.\n  const srcAttr = userAssert(\n    element.getAttribute('src'),\n    'Either non-empty \"srcset\" or \"src\" attribute must be specified: %s',\n    element\n  );\n  return srcsetFromSrc(srcAttr);\n}\n\n/**\n * Creates a Srcset from a `src` attribute value.\n * @param {string} src\n * @return {!Srcset}\n */\nexport function srcsetFromSrc(src) {\n  return new Srcset([{url: src, width: undefined, dpr: 1}]);\n}\n\n/**\n * Parses the text representation of srcset into Srcset object.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#Attributes.\n * See http://www.w3.org/html/wg/drafts/html/master/semantics.html#attr-img-srcset.\n * @param {string} s\n * @return {!Srcset}\n */\nexport function parseSrcset(s) {\n  const sources = [];\n  let match;\n  while ((match = srcsetRegex.exec(s))) {\n    const url = match[1];\n    let width, dpr;\n    if (match[2]) {\n      const type = match[3].toLowerCase();\n      if (type == 'w') {\n        width = parseInt(match[2], 10);\n      } else if (type == 'x') {\n        dpr = parseFloat(match[2]);\n      } else {\n        continue;\n      }\n    } else {\n      // If no \"w\" or \"x\" specified, we assume it's \"1x\".\n      dpr = 1;\n    }\n    sources.push({url, width, dpr});\n  }\n  return new Srcset(sources);\n}\n\n/**\n * A srcset object contains one or more sources.\n *\n * There are two types of sources: width-based and DPR-based. Only one type\n * of sources allowed to be specified within a single srcset. Depending on a\n * usecase, the components are free to choose any source that best corresponds\n * to the required rendering quality and network and CPU conditions. See\n * \"select\" method for details on how this selection is performed.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#Attributes\n */\nexport class Srcset {\n  /**\n   * @param {!Array<!SrcsetSourceDef>} sources\n   */\n  constructor(sources) {\n    userAssert(sources.length > 0, 'Srcset must have at least one source');\n    /** @private @const {!Array<!SrcsetSourceDef>} */\n    this.sources_ = sources;\n\n    // Only one type of source specified can be used - width or DPR.\n    let hasWidth = false;\n    let hasDpr = false;\n    for (let i = 0; i < sources.length; i++) {\n      const source = sources[i];\n      hasWidth = hasWidth || !!source.width;\n      hasDpr = hasDpr || !!source.dpr;\n    }\n    userAssert(\n      !!(hasWidth ^ hasDpr),\n      'Srcset must have width or dpr sources, but not both'\n    );\n\n    // Source and assert duplicates.\n    sources.sort(hasWidth ? sortByWidth : sortByDpr);\n\n    /** @private @const {boolean} */\n    this.widthBased_ = hasWidth;\n  }\n\n  /**\n   * Performs selection for specified width and DPR. Here, width is the width\n   * in screen pixels and DPR is the device-pixel-ratio or pixel density of\n   * the device. Depending on the circumstances, such as low network conditions,\n   * it's possible to manipulate the result of this method by passing a lower\n   * DPR value.\n   *\n   * The source selection depends on whether this is width-based or DPR-based\n   * srcset.\n   *\n   * In a width-based source, the source's width is the physical width of a\n   * resource (e.g. an image). Depending on the provided DPR, this width is\n   * converted to the screen pixels as following:\n   *   pixelWidth = sourceWidth / DPR\n   *\n   * Then, the source closest to the requested \"width\" is selected using\n   * the \"pixelWidth\". The slight preference is given to the bigger sources to\n   * ensure the most optimal quality.\n   *\n   * In a DPR-based source, the source's DPR is used to return the source that\n   * is closest to the requested DPR.\n   *\n   * Based on\n   * http://www.w3.org/html/wg/drafts/html/master/semantics.html#attr-img-srcset.\n   * @param {number} width\n   * @param {number} dpr\n   * @return {string}\n   */\n  select(width, dpr) {\n    devAssert(width, 'width=%s', width);\n    devAssert(dpr, 'dpr=%s', dpr);\n    let index = 0;\n    if (this.widthBased_) {\n      index = this.selectByWidth_(width * dpr);\n    } else {\n      index = this.selectByDpr_(dpr);\n    }\n    return this.sources_[index].url;\n  }\n\n  /**\n   * @param {number} width\n   * @return {number}\n   * @private\n   */\n  selectByWidth_(width) {\n    const sources = this.sources_;\n    let minIndex = 0;\n    let minScore = Infinity;\n    let minWidth = Infinity;\n\n    for (let i = 0; i < sources.length; i++) {\n      const sWidth = sources[i].width;\n      const score = Math.abs(sWidth - width);\n\n      // Select the one that is closer with a slight preference toward larger\n      // widths. If smaller size is closer, enforce minimum ratio to ensure\n      // image isn't too distorted.\n      if (score <= minScore * 1.1 || width / minWidth > 1.2) {\n        minIndex = i;\n        minScore = score;\n        minWidth = sWidth;\n      } else {\n        break;\n      }\n    }\n    return minIndex;\n  }\n\n  /**\n   * @param {number} dpr\n   * @return {number}\n   * @private\n   */\n  selectByDpr_(dpr) {\n    const sources = this.sources_;\n    let minIndex = 0;\n    let minScore = Infinity;\n\n    for (let i = 0; i < sources.length; i++) {\n      const score = Math.abs(sources[i].dpr - dpr);\n      if (score <= minScore) {\n        minIndex = i;\n        minScore = score;\n      } else {\n        break;\n      }\n    }\n    return minIndex;\n  }\n\n  /**\n   * Returns all URLs in the srcset.\n   * @return {!Array<string>}\n   */\n  getUrls() {\n    return this.sources_.map((s) => s.url);\n  }\n\n  /**\n   * Reconstructs the string expression for this srcset.\n   * @param {function(string):string=} opt_mapper\n   * @return {string}\n   */\n  stringify(opt_mapper) {\n    const res = [];\n    const sources = this.sources_;\n    for (let i = 0; i < sources.length; i++) {\n      const source = sources[i];\n      let src = source.url;\n      if (opt_mapper) {\n        src = opt_mapper(src);\n      }\n      if (this.widthBased_) {\n        src += ` ${source.width}w`;\n      } else {\n        src += ` ${source.dpr}x`;\n      }\n      res.push(src);\n    }\n    return res.join(', ');\n  }\n}\n\n/**\n * Sorts by width\n *\n * @param {!SrcsetSourceDef} s1\n * @param {!SrcsetSourceDef} s2\n * @return {number}\n */\nfunction sortByWidth(s1, s2) {\n  userAssert(s1.width != s2.width, 'Duplicate width: %s', s1.width);\n  return s1.width - s2.width;\n}\n\n/**\n * Sorts by dpr\n *\n * @param {!SrcsetSourceDef} s1\n * @param {!SrcsetSourceDef} s2\n * @return {number}\n */\nfunction sortByDpr(s1, s2) {\n  userAssert(s1.dpr != s2.dpr, 'Duplicate dpr: %s', s1.dpr);\n  return s1.dpr - s2.dpr;\n}\n", "import {map} from '#core/types/object';\n\n/**\n * @template T\n */\nexport class LruCache {\n  /**\n   * @param {number} capacity\n   */\n  constructor(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n\n    /** @private {number} */\n    this.size_ = 0;\n\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n    this.access_ = 0;\n\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n    this.cache_ = map();\n  }\n\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n  has(key) {\n    return !!this.cache_[key];\n  }\n\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  get(key) {\n    const cacheable = this.cache_[key];\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n    this.cache_[key] = {payload, access: this.access_};\n    this.evict_();\n  }\n\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    const cache = this.cache_;\n    let oldest = this.access_ + 1;\n    let oldestKey;\n    for (const key in cache) {\n      const {access} = cache[key];\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  }\n}\n", "import {LruCache} from '#core/data-structures/lru-cache';\nimport * as mode from '#core/mode';\nimport {arrayOrSingleItemToArray} from '#core/types/array';\nimport {dict, hasOwn} from '#core/types/object';\nimport {endsWith} from '#core/types/string';\nimport {parseQueryString} from '#core/types/string/url';\n\nimport {userAssert} from '#utils/log';\n\nimport {urls} from './config';\n\nconst SERVING_TYPE_PREFIX = new Set([\n  // No viewer\n  'c',\n  // In viewer\n  'v',\n  // Ad landing page\n  'a',\n  // Ad\n  'ad',\n]);\n\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\nlet cachedAnchorEl;\n\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\nlet urlCache;\n\n// eslint-disable-next-line no-script-url\nconst INVALID_PROTOCOLS = ['javascript:', 'data:', 'vbscript:'];\n\n/** @const {string} */\nexport const SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n\n/**\n * Coerces a url into a location;\n * @function\n * @param {string|!Location} url\n * @return {!Location}\n */\nconst urlAsLocation = (url) =>\n  typeof url == 'string' ? parseUrlDeprecated(url) : url;\n\n/**\n * Returns the correct origin for a given window.\n * TODO(rcebulko): This really belongs under #core/window somewhere, not in url\n * @param {!Window} win\n * @return {string} origin\n */\nexport function getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * TODO(#34453): The URL constructor isn't supported in IE11, but is supported\n * everywhere else. There's a lot of code paths (and all uses of the LruCache)\n * that are built around this polyfill. Once we can drop IE11 support and just\n * use the URL constructor, we can clear out all of parseWithA, all the URL\n * cache logic (incl. additional caches in other call-sites). Most is guarded by\n * isEsm() and is only included in nomodule builds, but still.\n * @param {string} url\n * @param {boolean=} opt_nocache\n *   Cache is always ignored on ESM builds, see https://go.amp.dev/pr/31594\n * @return {!Location}\n */\nexport function parseUrlDeprecated(url, opt_nocache) {\n  if (!cachedAnchorEl) {\n    cachedAnchorEl = /** @type {!HTMLAnchorElement} */ (\n      self.document.createElement('a')\n    );\n    urlCache = mode.isEsm()\n      ? null\n      : self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new LruCache(100));\n  }\n\n  return parseUrlWithA(\n    cachedAnchorEl,\n    url,\n    mode.isEsm() || opt_nocache ? null : urlCache\n  );\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} anchorEl\n * @param {string} url\n * @param {LruCache=} opt_cache\n *   Cache is always ignored on ESM builds, see https://go.amp.dev/pr/31594\n * @return {!Location}\n * @restricted\n */\nexport function parseUrlWithA(anchorEl, url, opt_cache) {\n  if (mode.isEsm()) {\n    // Doing this causes the <a> to auto-set its own href to the resolved path,\n    // which would be the baseUrl for the URL constructor.\n    anchorEl.href = '';\n    return /** @type {?} */ (new URL(url, anchorEl.href));\n  }\n\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  anchorEl.href = url;\n\n  // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n  if (!anchorEl.protocol) {\n    anchorEl.href = anchorEl.href;\n  }\n\n  const info = /** @type {!Location} */ ({\n    href: anchorEl.href,\n    protocol: anchorEl.protocol,\n    host: anchorEl.host,\n    hostname: anchorEl.hostname,\n    port: anchorEl.port == '0' ? '' : anchorEl.port,\n    pathname: anchorEl.pathname,\n    search: anchorEl.search,\n    hash: anchorEl.hash,\n    origin: null, // Set below.\n  });\n\n  // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  }\n\n  // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n  if (\n    (info.protocol == 'http:' && info.port == 80) ||\n    (info.protocol == 'https:' && info.port == 443)\n  ) {\n    info.port = '';\n    info.host = info.hostname;\n  }\n\n  // For data URI anchorEl.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n  let origin;\n  if (anchorEl.origin && anchorEl.origin != 'null') {\n    origin = anchorEl.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n  info.origin = origin;\n\n  // Freeze during testing to avoid accidental mutation.\n  const frozen = mode.isTest() && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function appendEncodedParamStringToUrl(\n  url,\n  paramString,\n  opt_addToFront\n) {\n  if (!paramString) {\n    return url;\n  }\n  const mainAndFragment = url.split('#', 2);\n  const mainAndQuery = mainAndFragment[0].split('?', 2);\n\n  let newUrl =\n    mainAndQuery[0] +\n    (mainAndQuery[1]\n      ? opt_addToFront\n        ? `?${paramString}&${mainAndQuery[1]}`\n        : `?${mainAndQuery[1]}&${paramString}`\n      : `?${paramString}`);\n  newUrl += mainAndFragment[1] ? `#${mainAndFragment[1]}` : '';\n  return newUrl;\n}\n\n/**\n * @param {string} key\n * @param {string} value\n * @return {string}\n */\nfunction urlEncodeKeyValue(key, value) {\n  return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n}\n\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function addParamToUrl(url, key, value, opt_addToFront) {\n  return appendEncodedParamStringToUrl(\n    url,\n    urlEncodeKeyValue(key, value),\n    opt_addToFront\n  );\n}\n\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addMissingParamsToUrl(url, params) {\n  const location = parseUrlDeprecated(url);\n  const existingParams = parseQueryString(location.search);\n  const paramsToAdd = dict({});\n  const keys = Object.keys(params);\n  for (let i = 0; i < keys.length; i++) {\n    if (!hasOwn(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n  return addParamsToUrl(url, paramsToAdd);\n}\n\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function serializeQueryString(params) {\n  const s = [];\n  for (const k in params) {\n    let v = params[k];\n    if (v == null) {\n      continue;\n    }\n\n    v = arrayOrSingleItemToArray(v);\n    for (let i = 0; i < v.length; i++) {\n      s.push(urlEncodeKeyValue(k, v[i]));\n    }\n  }\n  return s.join('&');\n}\n\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isSecureUrlDeprecated(url) {\n  url = urlAsLocation(url);\n  return (\n    url.protocol == 'https:' ||\n    url.hostname == 'localhost' ||\n    url.hostname == '127.0.0.1' ||\n    endsWith(url.hostname, '.localhost')\n  );\n}\n\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\nexport function assertHttpsUrl(\n  urlString,\n  elementContext,\n  sourceName = 'source'\n) {\n  userAssert(\n    urlString != null,\n    '%s %s must be available',\n    elementContext,\n    sourceName\n  );\n  userAssert(\n    isSecureUrlDeprecated(urlString) || /^\\/\\//.test(urlString),\n    '%s %s must start with ' +\n      '\"https://\" or \"//\" or be relative and served from ' +\n      'either https or from localhost. Invalid value: %s',\n    elementContext,\n    sourceName,\n    urlString\n  );\n  return urlString;\n}\n\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\nexport function assertAbsoluteHttpOrHttpsUrl(urlString) {\n  userAssert(\n    /^https?\\:/i.test(urlString),\n    'URL must start with \"http://\" or \"https://\". Invalid value: %s',\n    urlString\n  );\n  return parseUrlDeprecated(urlString).href;\n}\n\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function removeFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return url;\n  }\n  return url.substring(0, index);\n}\n\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function getFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return '';\n  }\n  return url.substring(index);\n}\n\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isProxyOrigin(url) {\n  return urls.cdnProxyRegex.test(urlAsLocation(url).origin);\n}\n\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isLocalhostOrigin(url) {\n  return urls.localhostRegex.test(urlAsLocation(url).origin);\n}\n\n/**\n * @param {string} uri\n * @return {boolean}\n */\nexport function isAmpScriptUri(uri) {\n  return uri.startsWith('amp-script:');\n}\n\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\nexport function getProxyServingType(url) {\n  url = urlAsLocation(url);\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n  const path = url.pathname.split('/', 2);\n  return path[1];\n}\n\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isProtocolValid(url) {\n  return !(url && INVALID_PROTOCOLS.includes(urlAsLocation(url).protocol));\n}\n\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\nexport function removeAmpJsParamsFromUrl(url) {\n  const {hash, origin, pathname, search} = parseUrlDeprecated(url);\n  const searchRemoved = removeAmpJsParamsFromSearch(search);\n  return origin + pathname + searchRemoved + hash;\n}\n\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\nexport function removeSearch(url) {\n  const index = url.indexOf('?');\n  if (index == -1) {\n    return url;\n  }\n  const fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  // The below regex is a combo of these original patterns. Combining these,\n  // removing the corresponding `.replace` calls, and reusing\n  // removeParamsFromSearch saves ~175B. Matches params in query string:\n  // - /[?&]amp_js[^&]*/   amp_js_*\n  // - /[?&]amp_gsa[^&]*/  amp_gsa\n  // - /[?&]amp_r[^&]*/    amp_r\n  // - /[?&]amp_kit[^&]*/  amp_kit\n  // - /[?&]usqp[^&]*/     usqp (from goog experiment)\n  return removeParamsFromSearch(urlSearch, '(amp_(js[^&=]*|gsa|r|kit)|usqp)');\n}\n\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\nexport function removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: Accept paramNames as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const paramRegex = new RegExp(`[?&]${paramName}\\\\b[^&]*`, 'g');\n  const search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\nexport function getSourceUrl(url) {\n  url = urlAsLocation(url);\n\n  // Not a proxy URL - return the URL itself.\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  }\n\n  // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n  const path = url.pathname.split('/');\n  const prefix = path[1];\n  userAssert(\n    SERVING_TYPE_PREFIX.has(prefix),\n    'Unknown path prefix in url %s',\n    url.href\n  );\n  const domainOrHttpsSignal = path[2];\n  const origin =\n    domainOrHttpsSignal == 's'\n      ? 'https://' + decodeURIComponent(path[3])\n      : 'http://' + decodeURIComponent(domainOrHttpsSignal);\n  // Sanity test that what we found looks like a domain.\n  userAssert(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return (\n    origin +\n    path.join('/') +\n    removeAmpJsParamsFromSearch(url.search) +\n    (url.hash || '')\n  );\n}\n\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\nexport function getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\nexport function resolveRelativeUrl(relativeUrlString, baseUrl) {\n  baseUrl = urlAsLocation(baseUrl);\n  if (mode.isEsm() || typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private @visibleForTesting\n */\nexport function resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  baseUrl = urlAsLocation(baseUrl);\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  const relativeUrl = parseUrlDeprecated(relativeUrlString);\n\n  // Absolute URL.\n  if (relativeUrlString.toLowerCase().startsWith(relativeUrl.protocol)) {\n    return relativeUrl.href;\n  }\n\n  // Protocol-relative URL.\n  if (relativeUrlString.startsWith('//')) {\n    return baseUrl.protocol + relativeUrlString;\n  }\n\n  // Absolute path.\n  if (relativeUrlString.startsWith('/')) {\n    return baseUrl.origin + relativeUrlString;\n  }\n\n  // Relative path.\n  return (\n    baseUrl.origin +\n    baseUrl.pathname.replace(/\\/[^/]*$/, '/') +\n    relativeUrlString\n  );\n}\n\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\nexport function getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  const sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\nexport function checkCorsUrl(url) {\n  const parsedUrl = parseUrlDeprecated(url);\n  const query = parseQueryString(parsedUrl.search);\n  userAssert(\n    !(SOURCE_ORIGIN_PARAM in query),\n    'Source origin is not allowed in %s',\n    url\n  );\n}\n\n/**\n * Adds the path to the given url.\n *\n * @param {!Location} url\n * @param {string} path\n * @return {string}\n */\nexport function appendPathToUrl(url, path) {\n  const pathname = url.pathname.replace(/\\/?$/, '/') + path.replace(/^\\//, '');\n  return url.origin + pathname + url.search + url.hash;\n}\n", "import {parseSrcset} from '#core/dom/srcset';\n\nimport {user} from '#utils/log';\n\nimport {urls} from './config';\nimport {\n  checkCorsUrl,\n  getSourceUrl,\n  isProxyOrigin,\n  parseUrlDeprecated,\n  resolveRelativeUrl,\n} from './url';\n\nconst TAG = 'URL-REWRITE';\n\n/** @private @const {string} */\nconst ORIGINAL_TARGET_VALUE = '__AMP_ORIGINAL_TARGET_VALUE_';\n\n/**\n * The same as rewriteAttributeValue() but actually updates the element and\n * modifies other related attribute(s) for special cases, i.e. `target` for <a>.\n * @param {!Element} element\n * @param {string} attrName\n * @param {string} attrValue\n * @param {!Location=} opt_location\n * @param {boolean=} opt_updateProperty\n * @return {string}\n */\nexport function rewriteAttributesForElement(\n  element,\n  attrName,\n  attrValue,\n  opt_location,\n  opt_updateProperty\n) {\n  const tag = element.tagName.toLowerCase();\n  const attr = attrName.toLowerCase();\n  const rewrittenValue = rewriteAttributeValue(tag, attr, attrValue);\n  // When served from proxy (CDN), changing an <a> tag from a hash link to a\n  // non-hash link requires updating `target` attribute per cache modification\n  // rules. @see amp-cache-modifications.md#url-rewrites\n  const isProxy = isProxyOrigin(opt_location || self.location);\n  if (isProxy && tag === 'a' && attr === 'href') {\n    const oldValue = element.getAttribute(attr);\n    const newValueIsHash = rewrittenValue[0] === '#';\n    const oldValueIsHash = oldValue && oldValue[0] === '#';\n\n    if (newValueIsHash && !oldValueIsHash) {\n      // Save the original value of `target` so it can be restored (if needed).\n      if (!element[ORIGINAL_TARGET_VALUE]) {\n        element[ORIGINAL_TARGET_VALUE] = element.getAttribute('target');\n      }\n      element.removeAttribute('target');\n    } else if (oldValueIsHash && !newValueIsHash) {\n      // Restore the original value of `target` or default to `_top`.\n      element.setAttribute('target', element[ORIGINAL_TARGET_VALUE] || '_top');\n    }\n  }\n  if (opt_updateProperty) {\n    // Must be done first for <input> elements to correctly update the UI for\n    // the first change on Safari and Chrome.\n    element[attr] = rewrittenValue;\n  }\n  element.setAttribute(attr, rewrittenValue);\n  return rewrittenValue;\n}\n\n/**\n * If (tagName, attrName) is a CDN-rewritable URL attribute, returns the\n * rewritten URL value. Otherwise, returns the unchanged `attrValue`.\n * See resolveUrlAttr() for rewriting rules.\n * @param {string} tagName Lowercase tag name.\n * @param {string} attrName Lowercase attribute name.\n * @param {string} attrValue\n * @return {string}\n * @visibleForTesting\n */\nexport function rewriteAttributeValue(tagName, attrName, attrValue) {\n  if (isUrlAttribute(attrName)) {\n    return resolveUrlAttr(tagName, attrName, attrValue, self.location);\n  }\n  return attrValue;\n}\n\n/**\n * @param {string} attrName Lowercase attribute name.\n * @return {boolean}\n */\nexport function isUrlAttribute(attrName) {\n  return (\n    attrName == 'src' ||\n    attrName == 'href' ||\n    attrName == 'xlink:href' ||\n    attrName == 'srcset'\n  );\n}\n\n/**\n * Rewrites the URL attribute values. URLs are rewritten as following:\n * - If URL is absolute, it is not rewritten\n * - If URL is relative, it's rewritten as absolute against the source origin\n * - If resulting URL is a `http:` URL and it's for image, the URL is rewritten\n *   again to be served with AMP Cache (cdn.ampproject.org).\n *\n * @param {string} tagName Lowercase tag name.\n * @param {string} attrName Lowercase attribute name.\n * @param {string} attrValue\n * @param {!Location} windowLocation\n * @return {string}\n * @private\n * @visibleForTesting\n */\nexport function resolveUrlAttr(tagName, attrName, attrValue, windowLocation) {\n  checkCorsUrl(attrValue);\n  const isProxyHost = isProxyOrigin(windowLocation);\n  const baseUrl = parseUrlDeprecated(getSourceUrl(windowLocation));\n\n  if (attrName == 'href' && !attrValue.startsWith('#')) {\n    return resolveRelativeUrl(attrValue, baseUrl);\n  }\n\n  if (attrName == 'src') {\n    if (tagName == 'amp-img') {\n      return resolveImageUrlAttr(attrValue, baseUrl, isProxyHost);\n    }\n    return resolveRelativeUrl(attrValue, baseUrl);\n  }\n\n  if (attrName == 'srcset') {\n    let srcset;\n    try {\n      srcset = parseSrcset(attrValue);\n    } catch (e) {\n      // Do not fail the whole template just because one srcset is broken.\n      // An AMP element will pick it up and report properly.\n      user().error(TAG, 'Failed to parse srcset: ', e);\n      return attrValue;\n    }\n    return srcset.stringify((url) =>\n      resolveImageUrlAttr(url, baseUrl, isProxyHost)\n    );\n  }\n\n  return attrValue;\n}\n\n/**\n * Non-HTTPs image URLs are rewritten via proxy.\n * @param {string} attrValue\n * @param {!Location} baseUrl\n * @param {boolean} isProxyHost\n * @return {string}\n */\nfunction resolveImageUrlAttr(attrValue, baseUrl, isProxyHost) {\n  const src = parseUrlDeprecated(resolveRelativeUrl(attrValue, baseUrl));\n\n  // URLs such as `data:` or proxy URLs are returned as is. Unsafe protocols\n  // do not arrive here - already stripped by the sanitizer.\n  if (src.protocol == 'data:' || isProxyOrigin(src) || !isProxyHost) {\n    return src.href;\n  }\n\n  // Rewrite as a proxy URL.\n  return (\n    `${urls.cdn}/i/` +\n    (src.protocol == 'https:' ? 's/' : '') +\n    encodeURIComponent(src.host) +\n    src.pathname +\n    (src.search || '') +\n    (src.hash || '')\n  );\n}\n", "import {isAmp4Email} from '#core/document/format';\nimport {dict, map} from '#core/types/object';\n\nimport {isUrlAttribute} from '../url-rewrite';\n\n/** @const {string} */\nexport const BIND_PREFIX = 'data-amp-bind-';\n\n/** @const {string} */\nexport const DIFF_KEY = 'i-amphtml-key';\n\n/** @const {string} */\nexport const DIFF_IGNORE = 'i-amphtml-ignore';\n\n/**\n * Map of AMP element tag name to attributes that, if changed, require\n * replacement of the original element.\n * @const {!Object<string, !Array<string>>}\n */\nexport const DIFFABLE_AMP_ELEMENTS = {\n  'AMP-IMG': ['src', 'srcset', 'layout', 'width', 'height'],\n};\n\n/**\n * Most AMP elements don't support ad hoc mutation and should be replaced\n * instead of DOM diff'ed. Some AMP elements can be manually diff'ed.\n *\n * Both of these cases require a special attribute to enable special handling in\n * the diffing algorithm. This function sets the appropriate attribute.\n *\n * @param {!Element} element\n * @param {function(): string} generateKey\n */\nexport function markElementForDiffing(element, generateKey) {\n  const isAmpElement = element.tagName.startsWith('AMP-');\n  // Don't DOM diff nodes with bindings because amp-bind scans newly rendered\n  // elements and discards _all_ old elements _before_ diffing, so preserving\n  // old elements would cause loss of functionality.\n  //\n  // Alternatively, we could do diffing _before_ bindings are updated and\n  // more precisely add/remove bindings from nodes that set-dom diffs, but...\n  // 1. Would result in content flashing unless we clone the old DOM tree.\n  // 2. Need to change set-dom e.g. handle changed bind attribute values.\n  const hasBinding = element.hasAttribute('i-amphtml-binding');\n\n  if (!hasBinding && DIFFABLE_AMP_ELEMENTS[element.tagName]) {\n    // Nodes marked with \"ignore\" will not be touched (old element stays).\n    // We want this to allow manual diffing afterwards.\n    element.setAttribute(DIFF_IGNORE, '');\n  } else if (hasBinding || isAmpElement) {\n    // Diff'ed node pairs with unique \"key\" will always be replaced.\n    if (!element.hasAttribute(DIFF_KEY)) {\n      element.setAttribute(DIFF_KEY, generateKey());\n    }\n  }\n}\n\n/**\n * @const {!Object<string, boolean>}\n * @see https://github.com/ampproject/amphtml/blob/main/docs/spec/amp-html-format.md\n */\nexport const DENYLISTED_TAGS = {\n  'applet': true,\n  'audio': true,\n  'base': true,\n  'embed': true,\n  'frame': true,\n  'frameset': true,\n  'iframe': true,\n  'img': true,\n  'link': true,\n  'meta': true,\n  'object': true,\n  'style': true,\n  'video': true,\n};\n\n/**\n * AMP elements allowed in AMP4EMAIL, modulo:\n * - amp-list and amp-state, which cannot be nested.\n * - amp-lightbox and amp-image-lightbox, which are deprecated.\n * @const {!Object<string, boolean>}\n * @see https://github.com/ampproject/amphtml/blob/main/docs/spec/email/amp-email-components.md\n */\nexport const EMAIL_ALLOWLISTED_AMP_TAGS = {\n  'amp-accordion': true,\n  'amp-anim': true,\n  'amp-bind-macro': true,\n  'amp-carousel': true,\n  'amp-fit-text': true,\n  'amp-img': true,\n  'amp-layout': true,\n  'amp-selector': true,\n  'amp-sidebar': true,\n  'amp-timeago': true,\n};\n\n/**\n * Allowlist of tags allowed in triple mustache e.g. {{{name}}}.\n * Very restrictive by design since the triple mustache renders unescaped HTML\n * which, unlike double mustache, won't be processed by the AMP Validator.\n * @const {!Array<string>}\n */\nexport const TRIPLE_MUSTACHE_ALLOWLISTED_TAGS = [\n  'a',\n  'amp-img',\n  'article',\n  'aside',\n  'b',\n  'blockquote',\n  'br',\n  'caption',\n  'code',\n  'col',\n  'colgroup',\n  'dd',\n  'del',\n  'details',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'figcaption',\n  'figure',\n  'footer',\n  'h1',\n  'h2',\n  'h3',\n  'header',\n  'hr',\n  'i',\n  'ins',\n  'li',\n  'main',\n  'mark',\n  'nav',\n  'ol',\n  'p',\n  'pre',\n  'q',\n  's',\n  'section',\n  'small',\n  'span',\n  'strong',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'u',\n  'ul',\n];\n\n/**\n * Tag-agnostic attribute allowlisted used by both Caja and DOMPurify.\n * @const {!Array<string>}\n */\nexport const ALLOWLISTED_ATTRS = [\n  // AMP-only attributes that don't exist in HTML.\n  'amp-fx',\n  'fallback',\n  'heights',\n  'layout',\n  'min-font-size',\n  'max-font-size',\n  'on',\n  'option',\n  'placeholder',\n  // Attributes related to amp-form.\n  'submitting',\n  'submit-success',\n  'submit-error',\n  'validation-for',\n  'verify-error',\n  'visible-when-invalid',\n  // HTML attributes that are scrubbed by Caja but we handle specially.\n  'href',\n  'style',\n  // Attributes for amp-bind that exist in \"[foo]\" form.\n  'text',\n  // Attributes for amp-subscriptions.\n  'subscriptions-action',\n  'subscriptions-actions',\n  'subscriptions-decorate',\n  'subscriptions-dialog',\n  'subscriptions-display',\n  'subscriptions-section',\n  'subscriptions-service',\n  // Attributes for amp-subscriptions-google.\n  'subscriptions-google-rtc',\n  // Attributes for amp-nested-menu.\n  'amp-nested-submenu',\n  'amp-nested-submenu-open',\n  'amp-nested-submenu-close',\n  // A global attribute used for structured data.\n  // https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/itemprop\n  'itemprop',\n];\n\n/**\n * Attributes that are only allowlisted for specific, non-AMP elements.\n * @const {!Object<string, !Array<string>>}\n */\nexport const ALLOWLISTED_ATTRS_BY_TAGS = {\n  'a': ['rel', 'target'],\n  'div': ['template'],\n  'form': ['action-xhr', 'verify-xhr', 'custom-validation-reporting', 'target'],\n  'input': ['mask-output'],\n  'template': ['type'],\n  'textarea': ['autoexpand'],\n};\n\n/** @const {!Array<string>} */\nexport const ALLOWLISTED_TARGETS = ['_top', '_blank'];\n\n// Extended from IS_SCRIPT_OR_DATA in https://github.com/cure53/DOMPurify/blob/master/src/regexp.js.\nconst DENYLISTED_PROTOCOLS = /^(?:\\w+script|data|blob):/i;\n\n// Same as DENYLISTED_PROTOCOLS modulo those handled by DOMPurify.\nconst EXTENDED_DENYLISTED_PROTOCOLS = /^(?:blob):/i;\n\n// From https://github.com/cure53/DOMPurify/blob/master/src/regexp.js.\nconst ATTR_WHITESPACE =\n  /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205f\\u3000]/g;\n\n/** @const {!Object<string, !Object<string, !RegExp>>} */\nconst DENYLISTED_TAG_SPECIFIC_ATTR_VALUES = Object.freeze(\n  dict({\n    'input': {\n      'type': /(?:image|button)/i,\n    },\n  })\n);\n\n/**\n * Rules in addition to DENYLISTED_TAG_SPECIFIC_ATTR_VALUES for AMP4EMAIL.\n * @const {!Object<string, !Object<string, !RegExp>>}\n */\nconst EMAIL_DENYLISTED_TAG_SPECIFIC_ATTR_VALUES = Object.freeze(\n  dict({\n    'input': {\n      'type': /(?:button|file|image|password)/i,\n    },\n  })\n);\n\n/** @const {!Array<string>} */\nconst DENYLISTED_FIELDS_ATTR = Object.freeze([\n  'form',\n  'formaction',\n  'formmethod',\n  'formtarget',\n  'formnovalidate',\n  'formenctype',\n]);\n\n/** @const {!Object<string, !Array<string>>} */\nconst DENYLISTED_TAG_SPECIFIC_ATTRS = Object.freeze(\n  dict({\n    'input': DENYLISTED_FIELDS_ATTR,\n    'textarea': DENYLISTED_FIELDS_ATTR,\n    'select': DENYLISTED_FIELDS_ATTR,\n  })\n);\n\n/**\n * Rules in addition to denylistED_TAG_SPECIFIC_ATTRS for AMP4EMAIL.\n * @const {!Object<string, !Array<string>>}\n */\nconst EMAIL_DENYLISTED_TAG_SPECIFIC_ATTRS = Object.freeze(\n  dict({\n    'amp-anim': ['controls'],\n    'form': ['name'],\n  })\n);\n\n/**\n * Test for invalid `style` attribute values.\n *\n * !important avoids overriding AMP styles, while `position:fixed|sticky` is a\n * FixedLayer limitation (it only scans the style[amp-custom] stylesheet\n * for potential fixed/sticky elements). Note that the latter can be\n * circumvented with CSS comments -- not a big deal.\n *\n * @const {!RegExp}\n */\nconst INVALID_INLINE_STYLE_REGEX =\n  /!important|position\\s*:\\s*fixed|position\\s*:\\s*sticky/i;\n\n/**\n * Whether the attribute/value is valid.\n * @param {string} tagName Lowercase tag name.\n * @param {string} attrName Lowercase attribute name.\n * @param {?string} attrValue Sometimes null when called by Caja.\n * @param {!Document} doc\n * @param {boolean} opt_purify If true, skips some attribute sanitizations\n *     that are already covered by DOMPurify.\n * @return {boolean}\n */\nexport function isValidAttr(\n  tagName,\n  attrName,\n  attrValue,\n  doc,\n  opt_purify = false\n) {\n  const attrValueWithoutWhitespace = attrValue\n    ? attrValue.replace(ATTR_WHITESPACE, '')\n    : '';\n\n  if (!opt_purify) {\n    // \"on*\" attributes are not allowed.\n    if (attrName.startsWith('on') && attrName != 'on') {\n      return false;\n    }\n\n    // No attributes with \"<script\" or \"</script\" in them.\n    const normalized = attrValueWithoutWhitespace.toLowerCase();\n    if (\n      normalized.indexOf('<script') >= 0 ||\n      normalized.indexOf('</script') >= 0\n    ) {\n      return false;\n    }\n\n    // Don't allow protocols like \"javascript:\".\n    if (DENYLISTED_PROTOCOLS.test(attrValueWithoutWhitespace)) {\n      return false;\n    }\n  }\n\n  // Don't allow certain protocols that are otherwise \"safe\".\n  // DOMPurify (opt_purify) already sanitizes javascript: etc., but\n  // allows them in special cases (data URIs in images, data-* attrs).\n  // So, just handle the other \"extended\" protocols here to avoid\n  // banning \"javascript:\" in known-safe ARIA attributes, for example.\n  if (EXTENDED_DENYLISTED_PROTOCOLS.test(attrValueWithoutWhitespace)) {\n    return false;\n  }\n\n  // Don't allow certain inline style values.\n  if (attrName == 'style') {\n    return !INVALID_INLINE_STYLE_REGEX.test(attrValue);\n  }\n\n  // Don't allow CSS class names with internal AMP prefix.\n  if (attrName == 'class' && attrValue && /(^|\\W)i-amphtml-/i.test(attrValue)) {\n    return false;\n  }\n\n  // Don't allow '__amp_source_origin' in URLs.\n  if (isUrlAttribute(attrName) && /__amp_source_origin/.test(attrValue)) {\n    return false;\n  }\n\n  const isEmail = isAmp4Email(doc);\n\n  // Remove denylisted attributes from specific tags e.g. input[formaction].\n  const attrDenylist = Object.assign(\n    map(),\n    DENYLISTED_TAG_SPECIFIC_ATTRS,\n    isEmail ? EMAIL_DENYLISTED_TAG_SPECIFIC_ATTRS : {}\n  )[tagName];\n  if (attrDenylist && attrDenylist.indexOf(attrName) != -1) {\n    return false;\n  }\n\n  // Remove denylisted values for specific attributes for specific tags\n  // e.g. input[type=image].\n  const attrValueDenylist = Object.assign(\n    map(),\n    DENYLISTED_TAG_SPECIFIC_ATTR_VALUES,\n    isEmail ? EMAIL_DENYLISTED_TAG_SPECIFIC_ATTR_VALUES : {}\n  )[tagName];\n  if (attrValueDenylist) {\n    const denylistedValuesRegex = attrValueDenylist[attrName];\n    if (\n      denylistedValuesRegex &&\n      attrValue.search(denylistedValuesRegex) != -1\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n", "import * as mode from '#core/mode';\n\nimport {urls} from '../config';\nimport {getMode} from '../mode';\n\nconst CUSTOM_TEMPLATES = ['amp-mustache'];\nconst LATEST_VERSION = 'latest';\n\n/**\n * Calculate the base url for any scripts.\n * @param {!Location} location The window's location\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateScriptBaseUrl(location, opt_isLocalDev) {\n  if (opt_isLocalDev) {\n    let prefix = `${location.protocol}//${location.host}`;\n    if (\n      location.protocol == 'about:' ||\n      location.protocol == 'blob:' ||\n      location.protocol == 'data:'\n    ) {\n      prefix = '';\n    }\n    return `${prefix}/dist`;\n  }\n  return urls.cdn;\n}\n\n/**\n * Calculate script url for an extension.\n * @param {!Location} location The window's location\n * @param {string} extensionId\n * @param {string} version\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateExtensionScriptUrl(\n  location,\n  extensionId,\n  version,\n  opt_isLocalDev\n) {\n  const fileExtension = mode.isEsm() ? '.mjs' : '.js';\n  const base = calculateScriptBaseUrl(location, opt_isLocalDev);\n  const rtv = getMode().rtvVersion;\n  const extensionVersion = version ? '-' + version : '';\n  return `${base}/rtv/${rtv}/v0/${extensionId}${extensionVersion}${fileExtension}`;\n}\n\n/**\n * Calculate script url for an entry point.\n * If `opt_rtv` is true, returns the URL matching the current RTV.\n * @param {!Location} location The window's location\n * @param {string} entryPoint\n * @param {boolean=} isLocalDev\n * @param {boolean=} opt_rtv\n * @return {string}\n */\nexport function calculateEntryPointScriptUrl(\n  location,\n  entryPoint,\n  isLocalDev,\n  opt_rtv\n) {\n  const fileExtension = mode.isEsm() ? '.mjs' : '.js';\n  const base = calculateScriptBaseUrl(location, isLocalDev);\n  if (isLocalDev) {\n    return `${base}/${entryPoint}${fileExtension}`;\n  }\n  if (opt_rtv) {\n    return `${base}/rtv/${getMode().rtvVersion}/${entryPoint}${fileExtension}`;\n  }\n  return `${base}/${entryPoint}${fileExtension}`;\n}\n\n/**\n * Parse the extension version from a given script URL.\n * @param {string} scriptUrl\n * @return {?{extensionId: string, extensionVersion: string}}\n */\nexport function parseExtensionUrl(scriptUrl) {\n  if (!scriptUrl) {\n    return null;\n  }\n  // Note that the \"(\\.max)?\" group only applies to local dev.\n  const matches = scriptUrl.match(\n    /^(.*)\\/(.*)-([0-9.]+|latest)(\\.max)?\\.(?:js|mjs)$/i\n  );\n  const extensionId = matches ? matches[2] : undefined;\n  const extensionVersion = matches ? matches[3] : undefined;\n  if (!extensionId || !extensionVersion) {\n    return null;\n  }\n  return {extensionId, extensionVersion};\n}\n\n/**\n * Create the missing amp extension HTML script element.\n * @param {!Window} win\n * @param {string} extensionId\n * @param {string} version\n * @return {!Element} Script object\n */\nexport function createExtensionScript(win, extensionId, version) {\n  const scriptElement = win.document.createElement('script');\n  scriptElement.async = true;\n  if (isIntermediateExtension(extensionId)) {\n    version = '';\n  } else {\n    scriptElement.setAttribute(\n      CUSTOM_TEMPLATES.indexOf(extensionId) >= 0\n        ? 'custom-template'\n        : 'custom-element',\n      extensionId\n    );\n  }\n  scriptElement.setAttribute('data-script', extensionId);\n  scriptElement.setAttribute('i-amphtml-inserted', '');\n  if (mode.isEsm()) {\n    scriptElement.setAttribute('type', 'module');\n  }\n\n  // Propagate nonce to all generated script tags.\n  const currentScript = win.document.head.querySelector('script[nonce]');\n  if (currentScript) {\n    scriptElement.setAttribute('nonce', currentScript.getAttribute('nonce'));\n  }\n\n  // Allow error information to be collected\n  // https://github.com/ampproject/amphtml/issues/7353\n  scriptElement.setAttribute('crossorigin', 'anonymous');\n  let loc = win.location;\n  if (getMode(win).test && win.testLocation) {\n    loc = win.testLocation;\n  }\n  const scriptSrc = calculateExtensionScriptUrl(\n    loc,\n    extensionId,\n    version,\n    getMode(win).localDev\n  );\n  scriptElement.src = scriptSrc;\n  return scriptElement;\n}\n\n/**\n * Returns the extension <script> element and attribute for the given\n * extension ID, if it exists. Otherwise, returns null.\n * @param {!Window} win\n * @param {string} extensionId\n * @param {string} version\n * @param {boolean} latest\n * @param {boolean=} includeInserted If true, includes script elements that\n *   are inserted by the runtime dynamically. Default is true.\n * @return {!Array<!Element>}\n */\nexport function getExtensionScripts(\n  win,\n  extensionId,\n  version,\n  latest,\n  includeInserted = true\n) {\n  // Always ignore <script> elements that have a mismatched RTV.\n  const modifier =\n    ':not([i-amphtml-loaded-new-version])' +\n    (includeInserted ? '' : ':not([i-amphtml-inserted])');\n  // We have to match against \"src\" because a few extensions, such as\n  // \"amp-viewer-integration\", do not have \"custom-element\" attribute.\n  const matches = win.document.head./*OK*/ querySelectorAll(\n    `script[src*=\"/${extensionId}-\"]${modifier}`\n  );\n  const filtered = [];\n  for (let i = 0; i < matches.length; i++) {\n    const match = matches[i];\n    const urlParts = parseExtensionUrl(match.src);\n    if (!urlParts) {\n      continue;\n    }\n    const {\n      extensionId: scriptExtensionId,\n      extensionVersion: scriptExtensionVersion,\n    } = urlParts;\n    if (\n      scriptExtensionId == extensionId &&\n      (isIntermediateExtension(extensionId) ||\n        scriptExtensionVersion == version ||\n        (scriptExtensionVersion == LATEST_VERSION && latest))\n    ) {\n      filtered.push(match);\n    }\n  }\n  return filtered;\n}\n\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot|Document} head\n * @return {!Array<{script: HTMLScriptElement, extensionId: string, extensionVersion: string}>}\n */\nexport function extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n  // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n  const list = head.querySelectorAll(\n    'script[custom-element],script[custom-template]'\n  );\n  const scripts = [];\n  for (let i = 0; i < list.length; i++) {\n    const script = list[i];\n    const extensionId =\n      script.getAttribute('custom-element') ||\n      script.getAttribute('custom-template');\n    const urlParts = parseExtensionUrl(script.src);\n    if (extensionId && urlParts) {\n      scripts.push({\n        script,\n        extensionId,\n        extensionVersion: urlParts.extensionVersion,\n      });\n    }\n  }\n  return scripts;\n}\n\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {!Window} win\n * @param {string} id\n * @param {string} version\n * @return {boolean}\n */\nexport function extensionScriptInNode(win, id, version) {\n  return extensionScriptsInNode(win.document.head).some(\n    ({extensionId, extensionVersion}) =>\n      id == extensionId && version == extensionVersion\n  );\n}\n\n/**\n * @param {string} extensionId\n * @return {boolean}\n */\nfunction isIntermediateExtension(extensionId) {\n  return extensionId.startsWith('_');\n}\n", "/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\nimport {Deferred} from '#core/data-structures/promise';\nimport {getWin} from '#core/window';\n\nimport {dev, devAssert} from '#utils/log';\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (function(new:Object, !Window)|\n *          function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nlet ServiceHolderDef;\n\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\nexport class Disposable {\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  dispose() {}\n}\n\n/**\n * Installs a service override on amp-doc level.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n * @param {!Object} service The service.\n */\nexport function installServiceInEmbedDoc(ampdoc, id, service) {\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ true\n  );\n}\n\n/**\n * Installs a service override in the scope of an embedded window.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {function(new:Object, !Window)} constructor\n */\nexport function registerServiceBuilderInEmbedWin(embedWin, id, constructor) {\n  registerServiceInternal(\n    embedWin,\n    embedWin,\n    id,\n    constructor,\n    /* override */ true\n  );\n}\n\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilderForDoc(\n  nodeOrDoc,\n  id,\n  constructor,\n  opt_instantiate\n) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\nexport function rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). But\n * it looks in the immediate window scope, not the top-level window.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getServiceInEmbedWin(win, id) {\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nexport function getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\nexport function getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\nexport function getServiceForDoc(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Object}\n */\nexport function getServiceForDocOrNull(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\nexport function getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(\n    getAmpdocServiceHolder(elementOrAmpDoc),\n    id\n  );\n}\n\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\nexport function setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\nexport function getParentWindowFrameElement(node, opt_topWin) {\n  const childWin = (node.ownerDocument || node).defaultView;\n  const topWin = opt_topWin || getTopWindow(childWin);\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return /** @type {?HTMLIFrameElement} */ (childWin.frameElement);\n    } catch (e) {\n      // Ignore the error.\n    }\n  }\n  return null;\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\nexport function getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    const win = getWin(nodeOrDoc);\n    return getAmpdocService(win).getAmpDoc(/** @type {!Node} */ (nodeOrDoc));\n  }\n  return /** @type {!./service/ampdoc-impl.AmpDoc} */ (nodeOrDoc);\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\nfunction getAmpdocService(win) {\n  return /** @type {!./service/ampdoc-impl.AmpDocService} */ (\n    getService(win, 'ampdoc')\n  );\n}\n\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n */\nfunction getServiceInternal(holder, id) {\n  devAssert(\n    isServiceRegistered(holder, id),\n    `Expected service ${id} to be registered`\n  );\n  const services = getServices(holder);\n  const s = services[id];\n  if (!s.obj) {\n    devAssert(s.ctor, `Service ${id} registered without ctor nor impl.`);\n    devAssert(s.context, `Service ${id} registered without context.`);\n    s.obj = new s.ctor(s.context);\n    devAssert(s.obj, `Service ${id} constructed to null.`);\n    s.context = null;\n    // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n  return s.obj;\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n * @param {boolean=} opt_sharedInstance\n */\nfunction registerServiceInternal(\n  holder,\n  context,\n  id,\n  ctor,\n  opt_override,\n  opt_sharedInstance\n) {\n  const services = getServices(holder);\n  let s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null,\n      sharedInstance: opt_sharedInstance || false,\n    };\n  }\n\n  if (!opt_override && s.ctor) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context;\n  s.sharedInstance = opt_sharedInstance || false;\n\n  // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nfunction getServicePromiseInternal(holder, id) {\n  const cached = getServicePromiseOrNullInternal(holder, id);\n  if (cached) {\n    return cached;\n  }\n  // Service is not registered.\n\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n  const services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return /** @type {!Promise<!Object>} */ (services[id].promise);\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\nfunction rejectServicePromiseInternal(holder, id, error) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\nfunction getServicePromiseOrNullInternal(holder, id) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return (s.promise = Promise.resolve(/** @type {!Object} */ (s.obj)));\n    }\n  }\n  return null;\n}\n\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\nfunction getServices(holder) {\n  let services = holder.__AMP_SERVICES;\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n  return services;\n}\n\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\nexport function isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\nexport function assertDisposable(service) {\n  devAssert(isDisposable(service), 'required to implement Disposable');\n  return /** @type {!Disposable} */ (service);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\nexport function disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\nexport function disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n\n/**\n * @param {!Object} holder Object holding the service instances.\n */\nfunction disposeServicesInternal(holder) {\n  const services = getServices(holder);\n  for (const id in services) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      continue;\n    }\n    const serviceHolder = services[id];\n    if (serviceHolder.sharedInstance) {\n      continue;\n    }\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then((instance) =>\n        disposeServiceInternal(id, instance)\n      );\n    }\n  }\n}\n\n/**\n * @param {string} id\n * @param {!Object} service\n */\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    dev().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n\n/**\n * This adopts the service **instance** from the parent.\n *\n * This function is dangerous! Sharing an instance means data can leak to and\n * from a child ampdoc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceForEmbedDoc(ampdoc, id) {\n  const service = getServiceInternal(\n    getAmpdocServiceHolder(devAssert(ampdoc.getParent())),\n    id\n  );\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ false,\n    /* sharedInstance */ true\n  );\n}\n\n/**\n * This adopts the service **factory** from the parent.\n *\n * This function is safer than sharing the service instance, since each ampdoc\n * will create its own instance of the factory (and each instance will have its\n * own instance data). Note that static data is still shared, so it's not 100%\n * foolproof.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceFactoryForEmbedDoc(ampdoc, id) {\n  const parentHolder = getAmpdocServiceHolder(devAssert(ampdoc.getParent()));\n  devAssert(\n    isServiceRegistered(parentHolder, id),\n    `Expected service ${id} to be registered`\n  );\n  const service = getServices(parentHolder)[id];\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    devAssert(service.ctor)\n  );\n}\n\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\nexport function resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\nfunction isServiceRegistered(holder, id) {\n  const service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id];\n  // All registered services must have a constructor.\n  return !!(service && service.ctor);\n}\n\n/** @return {!ServiceHolderDef} */\nfunction emptyServiceHolderWithPromise() {\n  const deferred = new Deferred();\n  const {promise, reject, resolve} = deferred;\n  promise.catch(() => {}); // avoid uncaught exception when service gets rejected\n  return {\n    obj: null,\n    promise,\n    resolve,\n    reject,\n    context: null,\n    ctor: null,\n  };\n}\n", "import * as dom from '#core/dom';\n\nimport {extensionScriptInNode} from '#service/extension-script';\n\nimport {userAssert} from '#utils/log';\n\nimport {\n  getAmpdoc,\n  getService,\n  getServiceForDocOrNull,\n  getServicePromise,\n  getServicePromiseForDoc,\n  getServicePromiseOrNull,\n  getServicePromiseOrNullForDoc,\n} from './service-helpers';\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {string} version The extension version.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailable(\n  win,\n  id,\n  extension,\n  version,\n  opt_element\n) {\n  const s = getServicePromiseOrNull(win, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  return getElementServicePromiseOrNull(\n    win,\n    id,\n    extension,\n    version,\n    opt_element\n  );\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(\n    element,\n    id,\n    extension,\n    opt_element\n  ).then((service) => assertService(service, id, extension));\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDoc(\n  element,\n  id,\n  extension,\n  opt_element\n) {\n  const s = getServicePromiseOrNullForDoc(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  const ampdoc = getAmpdoc(element);\n  return ampdoc\n    .whenExtensionsKnown()\n    .then(() => {\n      const version = ampdoc.getExtensionVersion(extension);\n      if (!version) {\n        return null;\n      }\n      const extensions = getService(ampdoc.win, 'extensions');\n      return extensions.waitForExtension(extension, version);\n    })\n    .then((ext) => {\n      if (!ext) {\n        return null;\n      }\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNullForDoc(element, id);\n      }\n      return getServicePromiseForDoc(element, id);\n    });\n}\n\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDocInEmbedScope(\n  element,\n  id,\n  extension\n) {\n  const s = getServiceForDocOrNull(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (Promise.resolve(s));\n  }\n  return getElementServiceIfAvailableForDoc(element, id, extension);\n}\n\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\nfunction assertService(service, id, extension) {\n  return /** @type {!Object} */ (\n    userAssert(\n      service,\n      'Service %s was requested to be provided through %s, ' +\n        'but %s is not loaded in the current page. To fix this ' +\n        'problem load the JavaScript file for %s in this page.',\n      id,\n      extension,\n      extension,\n      extension\n    )\n  );\n}\n\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {string} version\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\nfunction getElementServicePromiseOrNull(\n  win,\n  id,\n  extension,\n  version,\n  opt_element\n) {\n  return dom\n    .waitForBodyOpenPromise(win.document)\n    .then(() => {\n      // If there is an extension script wait for it to load before trying\n      // to get the service. Prevents a race condition when everything but\n      // the extensions is in cache. If there is no script then it's either\n      // not present, or the service was defined by a test. In those cases\n      // we don't wait around for an extension that does not exist.\n      const extensions = getService(win, 'extensions');\n\n      // TODO(jpettitt) investigate registerExtension to short circuit\n      // the dom call in extensionScriptsInNode()\n      if (!extensionScriptInNode(extensions.win, extension, version)) {\n        return null;\n      }\n      return extensions.waitForExtension(extension, version);\n    })\n    .then((ext) => {\n      if (!ext) {\n        return null;\n      }\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNull(win, id);\n      }\n      return getServicePromise(win, id);\n    });\n}\n", "import {\n  getElementServiceForDoc,\n  getElementServiceIfAvailable,\n  getElementServiceIfAvailableForDoc,\n  getElementServiceIfAvailableForDocInEmbedScope,\n} from '../element-service';\nimport {\n  getAmpdoc,\n  getExistingServiceOrNull,\n  getService,\n  getServiceForDoc,\n  getServiceForDocOrNull,\n  getServiceInEmbedWin,\n  getServicePromiseForDoc,\n} from '../service-helpers';\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nexport let SubscriptionService;\n\nexport class Services {\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */ (\n      getElementServiceForDoc(element, 'access', 'amp-access')\n    );\n  }\n\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */ (\n      getElementServiceIfAvailableForDoc(element, 'access', 'amp-access')\n    );\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  static subscriptionsServiceForDoc(element) {\n    return /** @type {!Promise<!SubscriptionService>} */ (\n      getElementServiceForDoc(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  static subscriptionsServiceForDocOrNull(element) {\n    return /** @type {!Promise<?SubscriptionService>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'subscriptions',\n        'amp-subscriptions'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  static actionServiceForDoc(element) {\n    return /** @type {!./service/action-impl.ActionService} */ (\n      getServiceForDocOrNull(element, 'action')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  static standardActionsForDoc(element) {\n    return /** @type {!./service/standard-actions-impl.StandardActions} */ (\n      getServiceForDocOrNull(element, 'standard-actions')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  static activityForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */ (\n      getElementServiceForDoc(element, 'activity', 'amp-analytics')\n    );\n  }\n\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  static ampdocServiceFor(window) {\n    return /** @type {!./service/ampdoc-impl.AmpDocService} */ (\n      getService(window, 'ampdoc')\n    );\n  }\n\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  static ampdoc(nodeOrAmpDoc) {\n    return getAmpdoc(nodeOrAmpDoc);\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDoc(element, loadAnalytics = false) {\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      const ampdoc = getAmpdoc(element);\n      Services.extensionsFor(ampdoc.win)./*OK*/ installExtensionForDoc(\n        ampdoc,\n        'amp-analytics'\n      );\n    }\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (\n      getElementServiceForDoc(\n        element,\n        'amp-analytics-instrumentation',\n        'amp-analytics'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'amp-analytics-instrumentation',\n        'amp-analytics'\n      )\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  static batchedXhrFor(window) {\n    return /** @type {!./service/batched-xhr-impl.BatchedXhr} */ (\n      getService(window, 'batched-xhr')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  static bindForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */ (\n      getElementServiceIfAvailableForDocInEmbedScope(\n        element,\n        'bind',\n        'amp-bind'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>}\n   */\n  static scriptForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>} */ (\n      getElementServiceIfAvailableForDocInEmbedScope(\n        element,\n        'amp-script',\n        'amp-script'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  static cidForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/cid-impl.CidDef>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'cid')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  static navigationForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/navigation.Navigation} */ (\n      getServiceForDoc(elementOrAmpDoc, 'navigation')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  static loaderServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */ (\n      getElementServiceForDoc(element, 'loader', 'amp-loader')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  static standaloneServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */ (\n      getElementServiceForDoc(element, 'standalone', 'amp-standalone')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  static cryptoFor(window) {\n    return /** @type {!./service/crypto-impl.Crypto} */ (\n      getService(window, 'crypto')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  static documentInfoForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/document-info-impl.DocInfo} */ (\n      getServiceForDoc(elementOrAmpDoc, 'documentInfo')\n    ).get();\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  static extensionsFor(window) {\n    return /** @type {!./service/extensions-impl.Extensions} */ (\n      getService(window, 'extensions')\n    );\n  }\n\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  static formSubmitForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'form-submit-service')\n    );\n  }\n\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  static hiddenObserverForDoc(element) {\n    return /** @type {!./service/hidden-observer-impl.HiddenObserver} */ (\n      getServiceForDocOrNull(element, 'hidden-observer')\n    );\n  }\n\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  static historyForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/history-impl.History} */ (\n      getServiceForDoc(elementOrAmpDoc, 'history')\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  static inputFor(win) {\n    return getService(win, 'input');\n  }\n\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  static inputmaskServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */ (\n      getElementServiceIfAvailableForDoc(element, 'inputmask', 'amp-inputmask')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {?./service/loading-indicator.LoadingIndicatorImpl}\n   */\n  static loadingIndicatorOrNull(elementOrAmpDoc) {\n    return /** @type {?./service/loading-indicator.LoadingIndicatorImpl} */ (\n      getServiceForDocOrNull(elementOrAmpDoc, 'loadingIndicator')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-next-page/1.0/service.NextPageService}\n   */\n  static nextPageServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-next-page/1.0/service.NextPageService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'next-page')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/mutator-interface.MutatorInterface}\n   */\n  static mutatorForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/mutator-interface.MutatorInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'mutator')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  static ownersForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/owners-interface.OwnersInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'owners')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceFor(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (\n      getService(window, 'performance')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceForOrNull(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (\n      getExistingServiceOrNull(window, 'performance')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  static platformFor(window) {\n    return /** @type {!./service/platform-impl.Platform} */ (\n      getService(window, 'platform')\n    );\n  }\n\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  static positionObserverForDoc(element) {\n    return /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */ (\n      getServiceForDoc(element, 'position-observer')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./preconnect.PreconnectService}\n   */\n  static preconnectFor(window) {\n    return getService(window, 'preconnect');\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  static resourcesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/resources-interface.ResourcesInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'resources')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  static resourcesPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'resources')\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>}\n   */\n  static storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>} */\n      (getElementServiceIfAvailable(win, 'story-variable', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  static storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (getExistingServiceOrNull(win, 'story-variable'))\n    );\n  }\n\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>}\n   */\n  static storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>} */\n      (getElementServiceIfAvailable(win, 'story-store', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (getExistingServiceOrNull(win, 'story-store'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  static storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (getExistingServiceOrNull(win, 'story-media-query'))\n    );\n  }\n\n  /**\n   * Get promise with story request service\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>}\n   */\n  static storyRequestServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>} */\n      (getElementServiceIfAvailable(win, 'story-request', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (getExistingServiceOrNull(win, 'story-request'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  static mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (getExistingServiceOrNull(win, 'media-performance-metrics'))\n    );\n  }\n\n  /**\n   * @param {!Element} el\n   * @return {!Promise<./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNull(el) {\n    return /** @type {!Promise<?./service/localization.LocalizationService>} */ (\n      getServicePromiseForDoc(el, 'localization')\n    );\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {?./service/localization.LocalizationService}\n   */\n  static localizationForDoc(element) {\n    return /** @type {?./service/localization.LocalizationService} */ (\n      getServiceForDocOrNull(element, 'localization')\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  static storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (\n        getElementServiceIfAvailable(\n          win,\n          'story-analytics',\n          'amp-story',\n          '1.0',\n          true\n        )\n      )\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  static storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (getExistingServiceOrNull(win, 'story-analytics'))\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  static webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (getElementServiceForDoc(element, 'web-animation', 'amp-animation'))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/real-time-config/real-time-config-impl.RealTimeConfigManager>}\n   */\n  static realTimeConfigForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/real-time-config/real-time-config-impl.RealTimeConfigManager>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'real-time-config')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  static storageForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'storage')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   * TODO(dmanek): Add tests for this method.\n   */\n  static storageForTopLevelDoc(elementOrAmpDoc) {\n    const thisAmpdoc = Services.ampdoc(elementOrAmpDoc);\n    const ampdocService = Services.ampdocServiceFor(thisAmpdoc.win);\n    const topAmpdoc = ampdocService.isSingleDoc()\n      ? ampdocService.getSingleDoc()\n      : null;\n    // We need to verify that ampdocs are on the same origin, therefore\n    // we compare the windows of both.\n    const ampdoc =\n      topAmpdoc && topAmpdoc.win == thisAmpdoc.win ? topAmpdoc : thisAmpdoc;\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (\n      getServicePromiseForDoc(ampdoc, 'storage')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/template-impl.Templates}\n   */\n  static templatesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/template-impl.Templates} */ (\n      getServiceForDoc(elementOrAmpDoc, 'templates')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  static timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return /** @type {!./service/timer-impl.Timer} */ (\n      getServiceInEmbedWin(window, 'timer')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  static urlReplacementsForDoc(element) {\n    return /** @type {!./service/url-replacements-impl.UrlReplacements} */ (\n      getServiceForDocOrNull(element, 'url-replace')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  static userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (\n        getElementServiceForDoc(\n          element,\n          'userNotificationManager',\n          'amp-user-notification'\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  static consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (\n        getElementServiceIfAvailableForDoc(\n          element,\n          'consentPolicyManager',\n          'amp-consent'\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  static geoForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */ (\n      getElementServiceIfAvailableForDoc(element, 'geo', 'amp-geo', true)\n    );\n  }\n\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  static urlForDoc(element) {\n    return /** @type {!./service/url-impl.Url} */ (\n      getServiceForDocOrNull(element, 'url')\n    );\n  }\n\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  static variantsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'variant',\n        'amp-experiment',\n        true\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  static videoManagerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/video-manager-impl.VideoManager} */ (\n      getServiceForDoc(elementOrAmpDoc, 'video-manager')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  static viewerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewer-interface.ViewerInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'viewer')\n    );\n  }\n\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  static viewerPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'viewer')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  static vsyncFor(window) {\n    return /** @type {!./service/vsync-impl.Vsync} */ (\n      getService(window, 'vsync')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  static viewportForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewport/viewport-interface.ViewportInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'viewport')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  static xhrFor(window) {\n    return /** @type {!./service/xhr-impl.Xhr} */ (getService(window, 'xhr'));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../amp-cache-url/amp-cache-url.AmpCacheUrlService>}\n   */\n  static cacheUrlServicePromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<?../amp-cache-url/amp-cache-url.AmpCacheUrlService>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'cache-url')\n    );\n  }\n}\n", "import {devAssert} from '#utils/log';\n\nexport const ACTIVATION_TIMEOUT = 5000; // 5 seconds.\n\nconst ACTIVATION_EVENTS = [\n  'change',\n  'click',\n  'dblclick',\n  'input',\n  'keypress',\n  'submit',\n  'keydown',\n];\n\n/**\n * See https://github.com/dtapuska/useractivation for inspiration.\n * @implements {../../../src/service.Disposable}\n */\nexport class UserActivationTracker {\n  /**\n   * @param {!Element} root\n   */\n  constructor(root) {\n    /** @private @const */\n    this.root_ = root;\n    /** @private @const */\n    this.boundActivated_ = this.activated_.bind(this);\n    /** @private {number} */\n    this.lastActivationTime_ = 0;\n    /** @private {boolean} */\n    this.inLongTask_ = false;\n\n    ACTIVATION_EVENTS.forEach((type) => {\n      this.root_.addEventListener(\n        type,\n        this.boundActivated_,\n        /* capture */ true\n      );\n    });\n  }\n\n  /** @override */\n  dispose() {\n    ACTIVATION_EVENTS.forEach((type) => {\n      this.root_.removeEventListener(\n        type,\n        this.boundActivated_,\n        /* capture */ true\n      );\n    });\n  }\n\n  /**\n   * Whether the element has ever been active since this tracker was alive.\n   * @return {boolean}\n   */\n  hasBeenActive() {\n    return this.lastActivationTime_ > 0;\n  }\n\n  /**\n   * Whether the element is currently considered to be active.\n   * @return {boolean}\n   */\n  isActive() {\n    return (\n      (this.lastActivationTime_ > 0 &&\n        Date.now() - this.lastActivationTime_ <= ACTIVATION_TIMEOUT) ||\n      this.inLongTask_\n    );\n  }\n\n  /**\n   * The time of the last activation.\n   * @return {time}\n   */\n  getLastActivationTime() {\n    return this.lastActivationTime_;\n  }\n\n  /**\n   * @param {!Promise} promise\n   */\n  expandLongTask(promise) {\n    if (!this.isActive()) {\n      return;\n    }\n    devAssert(\n      !this.inLongTask_,\n      'Should not expand while a longTask is already ongoing.'\n    );\n    this.inLongTask_ = true;\n\n    const longTaskComplete = () => {\n      this.inLongTask_ = false;\n      // Add additional \"activity window\" after a long task is done.\n      this.lastActivationTime_ = Date.now();\n    };\n    promise.then(longTaskComplete, longTaskComplete);\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isInLongTask() {\n    return this.inLongTask_;\n  }\n\n  /**\n   * @param {!Event} event\n   * @private\n   */\n  activated_(event) {\n    if (event.isTrusted) {\n      this.lastActivationTime_ = Date.now();\n    }\n  }\n}\n", "export const CSS = \"amp-script{opacity:0.7}amp-script.i-amphtml-hydrated{opacity:1}\\n/*# sourceURL=/extensions/amp-script/0.1/amp-script.css*/\";\n", "import {AmpEvents} from '#core/constants/amp-events';\nimport {duplicateErrorIfNecessary} from '#core/error';\nimport {\n  USER_ERROR_SENTINEL,\n  isUserErrorEmbedMessage,\n  isUserErrorMessage,\n} from '#core/error/message-helpers';\nimport * as mode from '#core/mode';\nimport {findIndex} from '#core/types/array';\nimport {exponentialBackoff} from '#core/types/function/exponential-backoff';\nimport {dict} from '#core/types/object';\n\nimport {experimentTogglesOrNull, getBinaryType, isCanary} from '#experiments';\n\nimport {Services} from '#service';\n\nimport {triggerAnalyticsEvent} from '#utils/analytics';\nimport {isLoadErrorMessage} from '#utils/event-helper';\nimport {dev, setReportError} from '#utils/log';\n\nimport {urls} from './config';\nimport {getMode} from './mode';\nimport {makeBodyVisibleRecovery} from './style-installer';\nimport {isProxyOrigin} from './url';\n\nexport {setReportError};\n\n/**\n * @const {string}\n */\nconst CANCELLED = 'CANCELLED';\n\n/**\n * @const {string}\n */\nconst BLOCK_BY_CONSENT = 'BLOCK_BY_CONSENT';\n\n/**\n * @const {string}\n */\nconst ABORTED = 'AbortError';\n\n/**\n * The threshold for errors throttled because nothing can be done about\n * them, but we'd still like to report the rough number.\n * @const {number}\n */\nconst NON_ACTIONABLE_ERROR_THROTTLE_THRESHOLD = 0.001;\n\n/**\n * The threshold for errors throttled because nothing can be done about\n * them, but we'd still like to report the rough number.\n * @const {number}\n */\nconst USER_ERROR_THROTTLE_THRESHOLD = 0.1;\n\n/**\n * Chance to post to the new error reporting endpoint.\n * @const {number}\n */\nconst BETA_ERROR_REPORT_URL_FREQ = 0.1;\n\n/**\n * Collects error messages, so they can be included in subsequent reports.\n * That allows identifying errors that might be caused by previous errors.\n */\nlet accumulatedErrorMessages = self.__AMP_ERRORS || [];\n// Use a true global, to avoid multi-module inclusion issues.\nself.__AMP_ERRORS = accumulatedErrorMessages;\n\n/**\n * Pushes element into array, keeping at most the most recent limit elements\n *\n * @param {!Array<T>} array\n * @param {T} element\n * @param {number} limit\n * @template T\n */\nfunction pushLimit(array, element, limit) {\n  if (array.length >= limit) {\n    array.splice(0, array.length - limit + 1);\n  }\n  array.push(element);\n}\n\n/**\n * A wrapper around our exponentialBackoff, to lazy initialize it to avoid an\n * un-DCE'able side-effect.\n * @param {function()} work the function to execute after backoff\n * @return {number} the setTimeout id\n */\nlet reportingBackoff = function (work) {\n  // Set reportingBackoff as the lazy-created function. JS Vooodoooo.\n  reportingBackoff = exponentialBackoff(1.5);\n  return reportingBackoff(work);\n};\n\n/**\n * Attempts to stringify a value, falling back to String.\n * @param {*} value\n * @return {string}\n */\nfunction tryJsonStringify(value) {\n  try {\n    // Cast is fine, because we really don't care here. Just trying.\n    return JSON.stringify(/** @type {!JsonObject} */ (value));\n  } catch (e) {\n    return String(value);\n  }\n}\n\n/**\n * @param {!Window} win\n * @param {*} error\n * @param {!Element=} opt_associatedElement\n */\nexport function reportErrorForWin(win, error, opt_associatedElement) {\n  reportError(error, opt_associatedElement);\n  if (\n    error &&\n    !!win &&\n    isUserErrorMessage(error.message) &&\n    !isUserErrorEmbedMessage(error.message)\n  ) {\n    reportErrorToAnalytics(/** @type {!Error} */ (error), win);\n  }\n}\n\n/**\n * Reports an error. If the error has an \"associatedElement\" property\n * the element is marked with the `i-amphtml-element-error` and displays\n * the message itself. The message is always send to the console.\n * If the error has a \"messageArray\" property, that array is logged.\n * This way one gets the native fidelity of the console for things like\n * elements instead of stringification.\n * @param {*} error\n * @param {!Element=} opt_associatedElement\n * @return {!Error}\n */\nexport function reportError(error, opt_associatedElement) {\n  try {\n    // Convert error to the expected type.\n    let isValidError;\n    if (error) {\n      if (error.message !== undefined) {\n        error = duplicateErrorIfNecessary(/** @type {!Error} */ (error));\n        isValidError = true;\n      } else {\n        const origError = error;\n        error = new Error(tryJsonStringify(origError));\n        error.origError = origError;\n      }\n    } else {\n      error = new Error('Unknown error');\n    }\n    // Report if error is not an expected type.\n    if (!isValidError && getMode().localDev && !getMode().test) {\n      setTimeout(function () {\n        const rethrow = new Error(\n          '_reported_ Error reported incorrectly: ' + error\n        );\n        throw rethrow;\n      });\n    }\n\n    if (error.reported) {\n      return /** @type {!Error} */ (error);\n    }\n    error.reported = true;\n\n    // `associatedElement` is used to add the i-amphtml-error class; in\n    // `#development=1` mode, it also adds `i-amphtml-element-error` to the\n    // element and sets the `error-message` attribute.\n    if (error.messageArray) {\n      const elIndex = findIndex(error.messageArray, (item) => item?.tagName);\n      if (elIndex > -1) {\n        error.associatedElement = error.messageArray[elIndex];\n      }\n    }\n    // Update element.\n    const element = opt_associatedElement || error.associatedElement;\n    if (element && element.classList) {\n      element.classList.add('i-amphtml-error');\n      if (getMode().development) {\n        element.classList.add('i-amphtml-element-error');\n        element.setAttribute('error-message', error.message);\n      }\n    }\n\n    // Report to console.\n    if (\n      self.console &&\n      (isUserErrorMessage(error.message) ||\n        !error.expected ||\n        getMode().localDev)\n    ) {\n      const output = console.error || console.log;\n      if (error.messageArray) {\n        output.apply(console, error.messageArray);\n      } else {\n        if (element) {\n          output.call(console, error.message, element);\n        } else if (!mode.isMinified()) {\n          output.call(console, error.stack);\n        } else {\n          output.call(console, error.message);\n        }\n      }\n    }\n    if (element && element.dispatchCustomEventForTesting) {\n      element.dispatchCustomEventForTesting(AmpEvents.ERROR, error.message);\n    }\n\n    // 'call' to make linter happy. And .call to make compiler happy\n    // that expects some @this.\n    onError['call'](self, undefined, undefined, undefined, undefined, error);\n  } catch (errorReportingError) {\n    setTimeout(function () {\n      throw errorReportingError;\n    });\n  }\n  return /** @type {!Error} */ (error);\n}\n\n/**\n * Returns an error for a cancellation of a promise.\n * @return {!Error}\n */\nexport function cancellation() {\n  return new Error(CANCELLED);\n}\n\n/**\n * @param {*} errorOrMessage\n * @return {boolean}\n */\nexport function isCancellation(errorOrMessage) {\n  if (!errorOrMessage) {\n    return false;\n  }\n  if (typeof errorOrMessage == 'string') {\n    return errorOrMessage.startsWith(CANCELLED);\n  }\n  if (typeof errorOrMessage.message == 'string') {\n    return errorOrMessage.message.startsWith(CANCELLED);\n  }\n  return false;\n}\n\n/**\n * Returns an error for component blocked by consent\n * @return {!Error}\n */\nexport function blockedByConsentError() {\n  return new Error(BLOCK_BY_CONSENT);\n}\n\n/**\n * @param {*} errorOrMessage\n * @return {boolean}\n */\nexport function isBlockedByConsent(errorOrMessage) {\n  if (!errorOrMessage) {\n    return false;\n  }\n  if (typeof errorOrMessage == 'string') {\n    return errorOrMessage.startsWith(BLOCK_BY_CONSENT);\n  }\n  if (typeof errorOrMessage.message == 'string') {\n    return errorOrMessage.message.startsWith(BLOCK_BY_CONSENT);\n  }\n  return false;\n}\n\n/**\n * Install handling of global unhandled exceptions.\n * @param {!Window} win\n */\nexport function installErrorReporting(win) {\n  win.onerror = /** @type {!Function} */ (onError);\n  win.addEventListener('unhandledrejection', (event) => {\n    if (\n      event.reason &&\n      (event.reason.message === CANCELLED ||\n        event.reason.message === BLOCK_BY_CONSENT ||\n        event.reason.message === ABORTED)\n    ) {\n      event.preventDefault();\n      return;\n    }\n    reportError(event.reason || new Error('rejected promise ' + event));\n  });\n}\n\n/**\n * Signature designed, so it can work with window.onerror\n * @param {string|undefined} message\n * @param {string|undefined} filename\n * @param {string|undefined} line\n * @param {string|undefined} col\n * @param {*|undefined} error\n * @this {!Window|undefined}\n */\nfunction onError(message, filename, line, col, error) {\n  // Make an attempt to unhide the body but don't if the error is actually expected.\n  // eslint-disable-next-line local/no-invalid-this\n  if (this && this.document && (!error || !error.expected)) {\n    // eslint-disable-next-line local/no-invalid-this\n    makeBodyVisibleRecovery(this.document);\n  }\n  if (getMode().localDev || getMode().development || getMode().test) {\n    return;\n  }\n  let hasNonAmpJs = false;\n  try {\n    hasNonAmpJs = detectNonAmpJs(self);\n  } catch (ignore) {\n    // Ignore errors during error report generation.\n  }\n  if (hasNonAmpJs && Math.random() > 0.01) {\n    // Only report 1% of errors on pages with non-AMP JS.\n    // These errors can almost never be acted upon, but spikes such as\n    // due to buggy browser extensions may be helpful to notify authors.\n    return;\n  }\n  const data = getErrorReportData(\n    message,\n    filename,\n    line,\n    col,\n    error,\n    hasNonAmpJs\n  );\n  if (data) {\n    reportingBackoff(() => {\n      try {\n        return reportErrorToServerOrViewer(\n          // eslint-disable-next-line local/no-invalid-this\n          this,\n          /** @type {!JsonObject} */\n          (data)\n        ).catch(() => {\n          // catch async errors to avoid recursive errors.\n        });\n      } catch (e) {\n        // catch async errors to avoid recursive errors.\n      }\n    });\n  }\n}\n\n/**\n * Determines the error reporting endpoint which should be used.\n * If changing this URL, keep `docs/spec/amp-errors.md` in sync.\n * @return {string} error reporting endpoint URL.\n */\nfunction chooseReportingUrl_() {\n  return Math.random() < BETA_ERROR_REPORT_URL_FREQ\n    ? urls.betaErrorReporting\n    : urls.errorReporting;\n}\n\n/**\n * Passes the given error data to either server or viewer.\n * @param {!Window} win\n * @param {!JsonObject} data Data from `getErrorReportData`.\n * @return {Promise<undefined>}\n */\nexport function reportErrorToServerOrViewer(win, data) {\n  // Report the error to viewer if it has the capability. The data passed\n  // to the viewer is exactly the same as the data passed to the server\n  // below.\n\n  // Throttle reports from Stable by 90%.\n  if (data['pt'] && Math.random() < 0.9) {\n    return Promise.resolve();\n  }\n\n  return maybeReportErrorToViewer(win, data).then((reportedErrorToViewer) => {\n    if (!reportedErrorToViewer) {\n      const xhr = new XMLHttpRequest();\n      xhr.open('POST', chooseReportingUrl_(), true);\n      xhr.send(JSON.stringify(data));\n    }\n  });\n}\n\n/**\n * Passes the given error data to the viewer if the following criteria is met:\n * - The viewer is a trusted viewer\n * - The viewer has the `errorReporter` capability\n * - The AMP doc is in single doc mode\n * - The AMP doc is opted-in for error interception (`<html>` tag has the\n *   `report-errors-to-viewer` attribute)\n *\n * @param {!Window} win\n * @param {!JsonObject} data Data from `getErrorReportData`.\n * @return {!Promise<boolean>} `Promise<True>` if the error was sent to the\n *     viewer, `Promise<False>` otherwise.\n * @visibleForTesting\n */\nexport function maybeReportErrorToViewer(win, data) {\n  const ampdocService = Services.ampdocServiceFor(win);\n  if (!ampdocService.isSingleDoc()) {\n    return Promise.resolve(false);\n  }\n  const ampdocSingle = ampdocService.getSingleDoc();\n  const htmlElement = ampdocSingle.getRootNode().documentElement;\n  const docOptedIn = htmlElement.hasAttribute('report-errors-to-viewer');\n  if (!docOptedIn) {\n    return Promise.resolve(false);\n  }\n  const viewer = Services.viewerForDoc(ampdocSingle);\n  if (!viewer.hasCapability('errorReporter')) {\n    return Promise.resolve(false);\n  }\n  return viewer.isTrustedViewer().then((viewerTrusted) => {\n    if (!viewerTrusted) {\n      return false;\n    }\n    viewer.sendMessage('error', errorReportingDataForViewer(data));\n    return true;\n  });\n}\n\n/**\n * Strips down the error reporting data to a minimal set\n * to be sent to the viewer.\n * @param {!JsonObject} errorReportData\n * @return {!JsonObject}\n * @visibleForTesting\n */\nexport function errorReportingDataForViewer(errorReportData) {\n  return dict({\n    'm': errorReportData['m'], // message\n    'a': errorReportData['a'], // isUserError\n    's': errorReportData['s'], // error stack\n    'el': errorReportData['el'], // tagName\n    'ex': errorReportData['ex'], // expected error?\n    'v': errorReportData['v'], // runtime\n    'pt': errorReportData['pt'], // is pre-throttled\n  });\n}\n\n/**\n * @param {string|undefined}  message\n * @param {*|undefined} error\n * @return {string}\n */\nfunction buildErrorMessage_(message, error) {\n  if (error) {\n    if (error.message) {\n      message = error.message;\n    } else {\n      // This should never be a string, but sometimes it is.\n      message = String(error);\n    }\n  }\n  if (!message) {\n    message = 'Unknown error';\n  }\n\n  return message;\n}\n\n/**\n * Signature designed, so it can work with window.onerror\n * @param {string|undefined} message\n * @param {string|undefined} filename\n * @param {string|undefined} line\n * @param {string|undefined} col\n * @param {*|undefined} error\n * @param {boolean} hasNonAmpJs\n * @return {!JsonObject|undefined} The data to post\n * visibleForTesting\n */\nexport function getErrorReportData(\n  message,\n  filename,\n  line,\n  col,\n  error,\n  hasNonAmpJs\n) {\n  message = buildErrorMessage_(message, error);\n  // An \"expected\" error is still an error, i.e. some features are disabled\n  // or not functioning fully because of it. However, it's an expected\n  // error. E.g. as is the case with some browser API missing (storage).\n  // Thus, the error can be classified differently by log aggregators.\n  // The main goal is to monitor that an \"expected\" error doesn't deteriorate\n  // over time. It's impossible to completely eliminate it.\n  let expected = !!(error && error.expected);\n  if (/_reported_/.test(message)) {\n    return;\n  }\n  if (message == CANCELLED) {\n    return;\n  }\n\n  const detachedWindow = !(self && self.window);\n  const throttleBase = Math.random();\n\n  // We throttle load errors and generic \"Script error.\" errors\n  // that have no information and thus cannot be acted upon.\n  if (\n    isLoadErrorMessage(message) ||\n    // See https://github.com/ampproject/amphtml/issues/7353\n    // for context.\n    message == 'Script error.' ||\n    // Window has become detached, really anything can happen\n    // at this point.\n    detachedWindow\n  ) {\n    expected = true;\n\n    if (throttleBase > NON_ACTIONABLE_ERROR_THROTTLE_THRESHOLD) {\n      return;\n    }\n  }\n\n  const isUserError = isUserErrorMessage(message);\n\n  // Only report a subset of user errors.\n  if (isUserError && throttleBase > USER_ERROR_THROTTLE_THRESHOLD) {\n    return;\n  }\n\n  // This is the App Engine app in\n  // https://github.com/ampproject/error-tracker\n  // It stores error reports via https://cloud.google.com/error-reporting/\n  // for analyzing production issues.\n  const data = /** @type {!JsonObject} */ (Object.create(null));\n  data['v'] = getMode().rtvVersion;\n  data['noAmp'] = hasNonAmpJs ? '1' : '0';\n  data['m'] = message.replace(USER_ERROR_SENTINEL, '');\n  data['a'] = isUserError ? '1' : '0';\n\n  // Errors are tagged with \"ex\" (\"expected\") label to allow loggers to\n  // classify these errors as benchmarks and not exceptions.\n  data['ex'] = expected ? '1' : '0';\n  data['dw'] = detachedWindow ? '1' : '0';\n\n  let runtime = '1p';\n  if (IS_SXG) {\n    runtime = 'sxg';\n    data['sxg'] = '1';\n  } else if (mode.isEsm()) {\n    runtime = 'esm';\n    data['esm'] = '1';\n  } else if (self.context && self.context.location) {\n    data['3p'] = '1';\n    runtime = '3p';\n  } else if (getMode().runtime) {\n    runtime = getMode().runtime;\n  }\n\n  data['rt'] = runtime;\n\n  // Add our a4a id if we are inabox\n  if (runtime === 'inabox') {\n    data['adid'] = getMode().a4aId;\n  }\n\n  // TODO(erwinm): Remove ca when all systems read `bt` instead of `ca` to\n  // identify js binary type.\n  data['ca'] = isCanary(self) ? '1' : '0';\n\n  // Pass binary type.\n  data['bt'] = getBinaryType(self);\n\n  if (self.location.ancestorOrigins && self.location.ancestorOrigins[0]) {\n    data['or'] = self.location.ancestorOrigins[0];\n  }\n  if (self.viewerState) {\n    data['vs'] = self.viewerState;\n  }\n  // Is embedded?\n  if (self.parent && self.parent != self) {\n    data['iem'] = '1';\n  }\n\n  if (self.AMP && self.AMP.viewer) {\n    const resolvedViewerUrl = self.AMP.viewer.getResolvedViewerUrl();\n    const messagingOrigin = self.AMP.viewer.maybeGetMessagingOrigin();\n    if (resolvedViewerUrl) {\n      data['rvu'] = resolvedViewerUrl;\n    }\n    if (messagingOrigin) {\n      data['mso'] = messagingOrigin;\n    }\n  }\n\n  const exps = [];\n  const experiments = experimentTogglesOrNull(self);\n  for (const exp in experiments) {\n    const on = experiments[exp];\n    exps.push(`${exp}=${on ? '1' : '0'}`);\n  }\n  data['exps'] = exps.join(',');\n\n  if (error) {\n    data['el'] = error.associatedElement?.tagName || 'u'; // Unknown\n\n    if (error.args) {\n      data['args'] = JSON.stringify(error.args);\n    }\n\n    if (!isUserError && !error.ignoreStack && error.stack) {\n      data['s'] = error.stack;\n    }\n\n    // TODO(jridgewell, #18574); Make sure error is always an object.\n    if (error.message) {\n      error.message += ' _reported_';\n    }\n  } else {\n    data['f'] = filename || '';\n    data['l'] = line || '';\n    data['c'] = col || '';\n  }\n  data['r'] = self.document ? self.document.referrer : '';\n  data['ae'] = accumulatedErrorMessages.join(',');\n  data['fr'] = self.location['originalHash'] || self.location.hash;\n\n  // TODO(https://github.com/ampproject/error-tracker/issues/129): Remove once\n  // all clients are serving a version with pre-throttling.\n  if (data['bt'] === 'production') {\n    // Setting this field allows the error reporting service to know that this\n    // error has already been pre-throttled for Stable, so it doesn't need to\n    // throttle again.\n    data['pt'] = '1';\n  }\n\n  pushLimit(accumulatedErrorMessages, message, 25);\n\n  return data;\n}\n\n/**\n * Returns true if it appears like there is non-AMP JS on the\n * current page.\n * @param {!Window} win\n * @return {boolean}\n * @visibleForTesting\n */\nexport function detectNonAmpJs(win) {\n  if (!win.document) {\n    return false;\n  }\n  const scripts = win.document.querySelectorAll('script[src]');\n  for (let i = 0; i < scripts.length; i++) {\n    if (!isProxyOrigin(scripts[i].src.toLowerCase())) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Resets accumulated error messages for testing\n */\nexport function resetAccumulatedErrorMessagesForTesting() {\n  accumulatedErrorMessages = [];\n}\n\n/**\n * @param {!Error} error\n * @param {!Window} win\n */\nexport function reportErrorToAnalytics(error, win) {\n  // Currently this can only be executed in a single-doc mode. Otherwise,\n  // it's not clear which ampdoc the event would belong too.\n  if (Services.ampdocServiceFor(win).isSingleDoc()) {\n    const vars = dict({\n      'errorName': error.name,\n      'errorMessage': error.message,\n    });\n    triggerAnalyticsEvent(\n      getRootElement_(win),\n      'user-error',\n      vars,\n      /** enableDataVars */ false\n    );\n  }\n}\n\n/**\n * @param {!Window} win\n * @return {!Element}\n * @private\n */\nfunction getRootElement_(win) {\n  const root = Services.ampdocServiceFor(win).getSingleDoc().getRootNode();\n  return dev().assertElement(root.documentElement || root.body || root);\n}\n", "import * as WorkerDOM from '@ampproject/worker-dom/dist/amp-production/main.mjs';\n\nimport {Deferred} from '#core/data-structures/promise';\nimport {Layout, applyFillContent, isLayoutSizeDefined} from '#core/dom/layout';\nimport {realChildElements} from '#core/dom/query';\nimport * as mode from '#core/mode';\nimport {dict, map} from '#core/types/object';\nimport {tryParseJson} from '#core/types/object/json';\nimport {utf8Encode} from '#core/types/string/bytes';\n\nimport {Purifier} from '#purifier';\n\nimport {Services} from '#service';\nimport {calculateExtensionScriptUrl} from '#service/extension-script';\n\nimport {dev, user, userAssert} from '#utils/log';\n\nimport {UserActivationTracker} from './user-activation-tracker';\n\nimport {CSS} from '../../../build/amp-script-0.1.css';\nimport {urls} from '../../../src/config';\nimport {getElementServiceForDoc} from '../../../src/element-service';\nimport {cancellation} from '../../../src/error-reporting';\nimport {getMode} from '../../../src/mode';\nimport {getService, registerServiceBuilder} from '../../../src/service-helpers';\nimport {rewriteAttributeValue} from '../../../src/url-rewrite';\n\n/** @const {string} */\nconst TAG = 'amp-script';\n\n/**\n * @typedef {{\n *   terminate: function():void,\n *   callFunction: function(string, ...*):Promise<*>,\n *   onerror: ?function(!ErrorEvent):void\n * }}\n */\nlet WorkerDOMWorkerDef;\n\n/**\n * Max cumulative size of author scripts from all amp-script elements on page.\n * @const {number}\n */\nconst MAX_TOTAL_SCRIPT_SIZE = 150000;\n\n/**\n * See src/transfer/Phase.ts in worker-dom.\n * @enum {number}\n */\nconst Phase = {\n  INITIALIZING: 0,\n  HYDRATING: 1,\n  MUTATING: 2,\n};\n\n/**\n * See src/transfer/TransferrableStorage.ts in worker-dom.\n * @enum {number}\n * @visibleForTesting\n */\nexport const StorageLocation = {\n  LOCAL: 0,\n  SESSION: 1,\n  AMP_STATE: 2,\n};\n\nexport class AmpScript extends AMP.BaseElement {\n  /**\n   * @param {!Element} element\n   */\n  constructor(element) {\n    super(element);\n\n    /** @private @const {!../../../src/service/vsync-impl.Vsync} */\n    this.vsync_ = Services.vsyncFor(this.win);\n\n    /** @private {?WorkerDOMWorkerDef} */\n    this.workerDom_ = null;\n\n    /** @private {?UserActivationTracker} */\n    this.userActivation_ = null;\n\n    /** @private {?AmpScriptService} */\n    this.service_ = null;\n\n    /** @private {string} */\n    this.debugId_ = 'amp-script[unknown].js';\n\n    /** @private {boolean} */\n    this.layoutCompleted_ = false;\n\n    /** @private {boolean} */\n    this.reportedZeroSize_ = false;\n\n    /** @private {Deferred} */\n    this.initialize_ = new Deferred();\n\n    /**\n     * If true, most production constraints are disabled including script size,\n     * script hash sum for local scripts, etc. Default is false.\n     *\n     * Enabled by the \"data-ampdevmode\" attribute which is intentionally invalid.\n     *\n     * @private {boolean}\n     */\n    this.development_ = false;\n\n    /**\n     * If true, signals that the `nodom` variant of worker-dom should be used.\n     * The worker js will have a much smaller bundle size, but no access to dom\n     * functions.\n     *\n     * @private {boolean}\n     */\n    this.nodom_ = false;\n\n    /**\n     * If true, signals that worker-dom should activate sandboxed mode.\n     * In this mode the Worker lives in its own crossorigin iframe, creating\n     * a strong security boundary. It also forces nodom mode.\n     *\n     * @private {boolean}\n     */\n    this.sandboxed_ = false;\n  }\n\n  /** @override */\n  isLayoutSupported(layout) {\n    return layout == Layout.CONTAINER || isLayoutSizeDefined(layout);\n  }\n\n  /** @override */\n  buildCallback() {\n    this.sandboxed_ = this.element.hasAttribute('sandboxed');\n    this.nodom_ = this.sandboxed_ || this.element.hasAttribute('nodom');\n    this.development_ =\n      this.element.hasAttribute('data-ampdevmode') ||\n      this.element.ownerDocument.documentElement.hasAttribute(\n        'data-ampdevmode'\n      );\n\n    if (this.development_) {\n      user().warn(\n        TAG,\n        'JavaScript size and script hash requirements are disabled in development mode.',\n        this.element\n      );\n    }\n\n    if (\n      this.nodom_ &&\n      (this.element.hasAttribute('width') ||\n        this.element.hasAttribute('height') ||\n        this.element.hasAttribute('layout'))\n    ) {\n      user().warn(\n        TAG,\n        'Cannot set width, height, or layout of a nodom <amp-script>',\n        this.element\n      );\n    }\n\n    return getElementServiceForDoc(this.element, TAG, TAG).then((service) => {\n      this.setService(/** @type {!AmpScriptService} */ (service));\n    });\n  }\n\n  /**\n   * @override\n   */\n  onLayoutMeasure() {\n    if (this.layoutCompleted_ || this.reportedZeroSize_) {\n      return;\n    }\n\n    const {height, width} = this.getLayoutSize();\n    if (width === 0 && height === 0) {\n      this.reportedZeroSize_ = true;\n      user().warn(\n        TAG,\n        'Skipped initializing amp-script due to zero width and height.',\n        this.element\n      );\n    }\n  }\n\n  /**\n   * @param {!AmpScriptService} service\n   * @visibleForTesting\n   */\n  setService(service) {\n    this.service_ = service;\n  }\n\n  /**\n   * @return {?UserActivationTracker}\n   * @visibleForTesting\n   */\n  getUserActivation() {\n    return this.userActivation_;\n  }\n\n  /**\n   * Calls the specified function on this amp-script's worker-dom instance.\n   * Accepts variable number of args to pass along to the underlying worker.\n   *\n   * @param {string} unusedFnId - function identifier\n   * @param {...*} unusedFnArgs\n   * @return {!Promise<*>}\n   */\n  callFunction(unusedFnId, unusedFnArgs) {\n    return this.initialize_.promise.then(() => {\n      return this.workerDom_.callFunction.apply(this.workerDom_, arguments);\n    });\n  }\n\n  /** @override */\n  layoutCallback() {\n    this.layoutCompleted_ = true;\n\n    // Layouts that use sizers (responsive, fluid) require the worker-dom\n    // subtree to be wrapped in a \"fill content\" container. This is because\n    // these layouts do _not_ constrain the size of the amp-script element\n    // via inline styles (they use sizerElement). However, this breaks\n    // \"container\" layout so only do it selectively.\n    let container;\n    if (this.element.sizerElement) {\n      container = this.win.document.createElement('div');\n      applyFillContent(container, /* replacedContent */ true);\n      // Reparent all real children to the container.\n      const realChildren = realChildElements(this.element);\n      for (let i = 0; i < realChildren.length; i++) {\n        container.appendChild(realChildren[i]);\n      }\n      this.element.appendChild(container);\n    }\n\n    this.userActivation_ = new UserActivationTracker(this.element);\n\n    // The displayed name of the combined script in dev tools.\n    this.debugId_ = this.element.hasAttribute('src')\n      ? `amp-script[src=\"${this.element.getAttribute('src')}\"].js`\n      : `amp-script[script=\"${this.element.getAttribute('script')}\"].js`;\n\n    const authorScriptPromise = this.getAuthorScript_(this.debugId_);\n    if (!authorScriptPromise) {\n      user().error(TAG, '\"src\" or \"script\" attribute is required.');\n      return Promise.reject(cancellation());\n    }\n\n    const workerAndAuthorScripts = Promise.all([\n      this.getWorkerScript_(),\n      authorScriptPromise,\n    ]).then((results) => {\n      const workerScript = results[0];\n      const authorScript = results[1];\n\n      if (\n        !this.development_ &&\n        this.service_.sizeLimitExceeded(authorScript.length)\n      ) {\n        user().error(\n          TAG,\n          'Maximum total script size exceeded (%s). %s is disabled. ' +\n            'See https://amp.dev/documentation/components/amp-script/#size-of-javascript-code.',\n          MAX_TOTAL_SCRIPT_SIZE,\n          this.debugId_\n        );\n        this.element.classList.add('i-amphtml-broken');\n        return [];\n      }\n      return [workerScript, authorScript];\n    });\n\n    const sandbox = this.element.getAttribute('sandbox') || '';\n    const sandboxTokens = sandbox.split(' ').map((s) => s.trim());\n    let iframeUrl;\n    if (getMode().localDev) {\n      const folder = mode.isMinified() ? 'current-min' : 'current';\n      iframeUrl = `/dist.3p/${folder}/amp-script-proxy-iframe.html`;\n    } else {\n      iframeUrl = `${\n        urls.thirdParty\n      }/${mode.version()}/amp-script-proxy-iframe.html`;\n    }\n\n    // @see src/main-thread/configuration.WorkerDOMConfiguration in worker-dom.\n    const config = {\n      authorURL: this.debugId_,\n      mutationPump: this.mutationPump_.bind(this),\n      longTask: (promise) => {\n        this.userActivation_.expandLongTask(promise);\n        // TODO(dvoytenko): consider additional \"progress\" UI.\n      },\n      sanitizer: new SanitizerImpl(this, sandboxTokens),\n      // Callbacks.\n      onCreateWorker: (data) => {\n        dev().info(TAG, 'Create worker:', data);\n      },\n      onSendMessage: (data) => {\n        dev().info(TAG, 'To worker:', data);\n      },\n      onReceiveMessage: (data) => {\n        dev().info(TAG, 'From worker:', data);\n      },\n      sandbox: this.sandboxed_ && {iframeUrl},\n    };\n\n    // Create worker and hydrate.\n    return WorkerDOM.upgrade(\n      container || this.element,\n      workerAndAuthorScripts,\n      config\n    ).then((workerDom) => {\n      this.workerDom_ = workerDom;\n      this.initialize_.resolve();\n      // workerDom will be null if it failed to init.\n      if (this.workerDom_) {\n        this.workerDom_.onerror = (errorEvent) => {\n          errorEvent.preventDefault();\n          user().error(\n            TAG,\n            `${errorEvent.message}\\n    at (${errorEvent.filename}:${errorEvent.lineno})`\n          );\n        };\n      }\n    });\n  }\n\n  /**\n   * @return {!Promise<string>}\n   * @private\n   */\n  getWorkerScript_() {\n    // Use `testLocation` for testing with iframes. @see testing/iframe.js.\n    const location =\n      getMode().test && this.win.testLocation\n        ? this.win.testLocation\n        : this.win.location;\n    const useLocal = getMode().localDev || getMode().test;\n    const workerUrl = calculateExtensionScriptUrl(\n      location,\n      this.nodom_ ? 'amp-script-worker-nodom' : 'amp-script-worker',\n      '0.1',\n      useLocal\n    );\n    const xhr = Services.xhrFor(this.win);\n    return xhr.fetchText(workerUrl, {ampCors: false}).then((r) => r.text());\n  }\n\n  /**\n   * Query local or fetch remote author script.\n   *\n   * Returns promise that resolves with the script contents or rejected if the\n   * fetch fails or if the script fails CORS checks.\n   *\n   * Returns null if script reference is missing.\n   *\n   * @param {string} debugId An element identifier for error messages.\n   * @return {?Promise<string>}\n   * @private\n   */\n  getAuthorScript_(debugId) {\n    const authorUrl = this.element.getAttribute('src');\n    if (authorUrl) {\n      return this.fetchAuthorScript_(authorUrl, debugId);\n    } else {\n      const id = this.element.getAttribute('script');\n      if (id) {\n        const local = this.getAmpDoc().getElementById(id);\n        userAssert(\n          local,\n          '[%s] %s could not find element with #%s.',\n          TAG,\n          debugId,\n          id\n        );\n        const target = local.getAttribute('target');\n        userAssert(\n          target === 'amp-script',\n          '[%s] script#%s must have target=\"amp-script\".',\n          TAG,\n          id\n        );\n        const text = local.textContent;\n        if (this.development_ || this.sandboxed_) {\n          return Promise.resolve(text);\n        } else {\n          return this.service_.checkSha384(text, debugId).then(() => text);\n        }\n      }\n    }\n    // No [src] or [script].\n    return null;\n  }\n\n  /**\n   * @param {string} authorUrl\n   * @param {string} debugId An element identifier for error messages.\n   * @return {!Promise<string>}\n   */\n  fetchAuthorScript_(authorUrl, debugId) {\n    return Services.xhrFor(this.win)\n      .fetchText(authorUrl, {ampCors: false})\n      .then((response) => {\n        if (response.url && this.sameOrigin_(response.url)) {\n          // Disallow non-JS content type for same-origin scripts.\n          const contentType = response.headers.get('Content-Type');\n          if (\n            !contentType ||\n            !(\n              contentType.startsWith('application/javascript') ||\n              contentType.startsWith('text/javascript')\n            )\n          ) {\n            // TODO(#24266): Refactor to %s interpolation when error string\n            // extraction is ready.\n            throw user().createError(\n              TAG,\n              'Same-origin \"src\" requires \"Content-Type: text/javascript\" or \"Content-Type: application/javascript\". ' +\n                `Fetched source for ${debugId} has \"Content-Type: ${contentType}\". ` +\n                'See https://amp.dev/documentation/components/amp-script/#security-features.'\n            );\n          }\n          return response.text();\n        } else {\n          // For cross-origin, verify hash of script itself (skip in\n          // development mode).\n          if (this.development_) {\n            return response.text();\n          } else {\n            return response.text().then((text) => {\n              return this.service_.checkSha384(text, debugId).then(() => text);\n            });\n          }\n        }\n      });\n  }\n\n  /**\n   * Returns true iff `url` has the same origin as the AMP document.\n   * @param {string} url\n   * @return {boolean}\n   */\n  sameOrigin_(url) {\n    const urlService = Services.urlForDoc(this.element);\n    const docOrigin = urlService.getSourceOrigin(this.getAmpDoc().getUrl());\n    const scriptOrigin = urlService.parse(url).origin;\n    return docOrigin === scriptOrigin;\n  }\n\n  /**\n   * Returns true if mutations should be allowed based on container attributes.\n   * @return {boolean}\n   */\n  isMutationAllowedByFixedSize() {\n    return isLayoutSizeDefined(this.getLayout());\n  }\n\n  /**\n   * Returns true if mutations should be allowed based on recent user gesture.\n   * @return {boolean}\n   */\n  isMutationAllowedByUserGesture() {\n    return this.userActivation_.isActive();\n  }\n\n  /**\n   * @param {function(boolean)} flush If `flush(false)` is invoked, mutations\n   *   that cause user-visible changes (e.g. DOM changes) will be dropped\n   *   (changes like event listener registration will be kept).\n   * @param {number} phase\n   * @private\n   */\n  mutationPump_(flush, phase) {\n    if (phase == Phase.HYDRATING) {\n      this.vsync_.mutate(() =>\n        this.element.classList.add('i-amphtml-hydrated')\n      );\n    }\n    const allowMutation =\n      this.isMutationAllowedByFixedSize() ||\n      this.isMutationAllowedByUserGesture();\n\n    this.vsync_.mutate(() => {\n      const disallowedTypes = flush(allowMutation);\n      // Count the number of mutations dropped by type.\n      const errors = map();\n      /** @type {!Array} */ (disallowedTypes).forEach((type) => {\n        errors[type] = errors[type] + 1 || 1;\n      });\n      // Emit an error message for each mutation type, including count.\n      Object.keys(errors).forEach((type) => {\n        const count = errors[type];\n        user().error(TAG, this.mutationTypeToErrorMessage_(type, count));\n      });\n\n      if (disallowedTypes.length > 0 && phase === Phase.MUTATING) {\n        this.workerDom_.terminate();\n\n        this.element.classList.remove('i-amphtml-hydrated');\n        this.element.classList.add('i-amphtml-broken');\n\n        user().error(\n          TAG,\n          '%s was terminated due to illegal mutation.',\n          this.debugId_\n        );\n      }\n    });\n  }\n\n  /**\n   * @param {string} type\n   * @param {number} count\n   * @return {string}\n   */\n  mutationTypeToErrorMessage_(type, count) {\n    let target;\n\n    // Matches TransferrableMutationType in worker-dom#src/transfer/TransferrableMutation.ts.\n    switch (type) {\n      // Attributes and Properties\n      case '0':\n      case '3':\n        target = 'DOM element attributes or styles';\n        break;\n      // Character data\n      case '1':\n        target = 'textContent or the like';\n        break;\n      // Child list\n      case '2':\n        target = 'DOM element children, innerHTML, or the like';\n        break;\n      // Other\n      default:\n        target = 'the DOM';\n        break;\n    }\n\n    return (\n      `Blocked ${count} attempts to modify ${target}.` +\n      ' For variable-sized <amp-script> containers, a user action has to happen first.'\n    );\n  }\n}\n\n/**\n * Service for sharing data across <amp-script> elements.\n *\n * @visibleForTesting\n */\nexport class AmpScriptService {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @private {!../../../src/service/ampdoc-impl.AmpDoc}  */\n    this.ampdoc_ = ampdoc;\n\n    /** @private {number} */\n    this.cumulativeSize_ = 0;\n\n    /** @private {!Array<string>} */\n    this.sources_ = [];\n\n    // Query the meta tag once per document.\n    const allowedHashes = ampdoc.getMetaByName('amp-script-src');\n    if (allowedHashes) {\n      // Allow newlines between hashes for readability/diffs\n      this.sources_ = allowedHashes.split(/\\s+/).filter(Boolean);\n    }\n\n    /** @private @const {!../../../src/service/crypto-impl.Crypto} */\n    this.crypto_ = Services.cryptoFor(ampdoc.win);\n  }\n\n  /**\n   * Checks if `sha384(script)` exists in `meta[name=\"amp-script-src\"]` element\n   * in document head.\n   *\n   * @param {string} script The script contents.\n   * @param {string} debugId An element identifier for error messages.\n   * @return {!Promise}\n   */\n  checkSha384(script, debugId) {\n    const bytes = utf8Encode(script);\n    return this.crypto_.sha384Base64(bytes).then((hash) => {\n      if (!hash || !this.sources_.includes('sha384-' + hash)) {\n        // TODO(#24266): Refactor to %s interpolation when error string\n        // extraction is ready.\n        throw user().createError(\n          TAG,\n          `Script hash not found or incorrect for ${debugId}. You must include <meta name=\"amp-script-src\" content=\"sha384-${hash}\">. ` +\n            `During development, you can disable this check by adding the \"data-ampdevmode\" attribute to ${debugId}, or the root html node` +\n            'See https://amp.dev/documentation/components/amp-script/#script-hash.'\n        );\n      }\n    });\n  }\n\n  /**\n   * Adds `size` to current total. Returns true iff new total is <= size cap.\n   *\n   * @param {number} size\n   * @return {boolean}\n   */\n  sizeLimitExceeded(size) {\n    this.cumulativeSize_ += size;\n    return this.cumulativeSize_ > MAX_TOTAL_SCRIPT_SIZE;\n  }\n\n  /**\n   * Fetches an amp-script URI by finding the associated amp-script and\n   * calling the specified function.\n   *\n   * Note: the amp-script URI does not yet support function args,\n   *       even though worker-dom's callFunction does. Therefore we allow it\n   *       via extra args.\n   *\n   * @param {string} uri\n   * @param {...*} unusedArgs\n   * @return {Promise<*>}\n   */\n  fetch(uri, unusedArgs) {\n    const uriParts = uri.slice('amp-script:'.length).split('.');\n    userAssert(\n      uriParts.length === 2 && uriParts[0].length > 0 && uriParts[1].length > 0,\n      `[${TAG}]: \"amp-script\" URIs must be of the format \"scriptId.functionIdentifier\".`\n    );\n\n    const ampScriptId = uriParts[0];\n    const fnIdentifier = uriParts[1];\n    const ampScriptEl = this.ampdoc_.getElementById(ampScriptId);\n    userAssert(\n      ampScriptEl && ampScriptEl.tagName === 'AMP-SCRIPT',\n      `[${TAG}]: could not find <amp-script> with script set to ${ampScriptId}`\n    );\n    const args = Array.prototype.slice.call(arguments, 1);\n    return ampScriptEl\n      .getImpl()\n      .then((impl) =>\n        impl.callFunction.apply(impl, [fnIdentifier].concat(args))\n      );\n  }\n}\n\n/**\n * sandbox=\"allow-forms\" enables tags in HTMLFormElement.elements.\n * @const {!Array<string>}\n */\nconst FORM_ELEMENTS = [\n  'form',\n  'button',\n  'fieldset',\n  'input',\n  'object',\n  'output',\n  'select',\n  'textarea',\n];\n\n/**\n * A DOMPurify wrapper that implements the worker-dom.Sanitizer interface.\n * @visibleForTesting\n */\nexport class SanitizerImpl {\n  /**\n   * @param {!AmpScript} ampScript\n   * @param {!Array<string>} sandboxTokens\n   */\n  constructor(ampScript, sandboxTokens) {\n    /** @private @const {!Window} */\n    this.win_ = ampScript.win;\n\n    /** @private @const {!Element} */\n    this.element_ = ampScript.element;\n\n    registerServiceBuilder(this.win_, 'purifier-inplace', function () {\n      return new Purifier(\n        ampScript.win.document,\n        dict({'IN_PLACE': true}),\n        rewriteAttributeValue\n      );\n    });\n\n    /** @private @const {!Purifier} */\n    this.purifier_ = getService(this.win_, 'purifier-inplace');\n\n    /** @private @const {!Object<string, boolean>} */\n    this.allowedTags_ = this.purifier_.getAllowedTags();\n\n    /**\n     * @private\n     * @return {boolean}\n     */\n    this.allowFullEval_ = () => ampScript.isMutationAllowedByUserGesture();\n\n    /**\n     * @private\n     * @return {boolean}\n     */\n    this.shouldConstrainEval_ = () =>\n      !this.allowFullEval_() && ampScript.isMutationAllowedByFixedSize();\n\n    // TODO(choumx): Support opt-in for variable substitutions.\n    // For now, only allow built-in AMP components except amp-pixel.\n    this.allowedTags_['amp-img'] = true;\n    this.allowedTags_['amp-layout'] = true;\n    this.allowedTags_['amp-pixel'] = false;\n\n    /** @private @const {boolean} */\n    this.allowForms_ = sandboxTokens.includes('allow-forms');\n    FORM_ELEMENTS.forEach((fe) => {\n      this.allowedTags_[fe] = this.allowForms_;\n    });\n  }\n\n  /**\n   * This is called by worker-dom on node creation, so all invocations are on\n   * super-simple nodes like <p></p>.\n   *\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  sanitize(node) {\n    // TODO(choumx): allowedTags_[] is more strict than purifier.sanitize()\n    // because the latter has attribute-specific allowances.\n    const tag = node.nodeName.toLowerCase();\n    const clean = this.allowedTags_[tag];\n    if (!clean) {\n      if (!this.warnIfFormsAreDisallowed_(tag)) {\n        user().warn(TAG, 'Sanitized node:', node);\n      }\n    }\n    return clean;\n  }\n\n  /**\n   * @param {!Node} node\n   * @param {string} attribute\n   * @param {?string} value\n   * @return {boolean}\n   */\n  setAttribute(node, attribute, value) {\n    // TODO(choumx): Call mutatedAttributesCallback() on AMP elements e.g.\n    // so an amp-img can update its child img when [src] is changed.\n\n    const tag = node.nodeName.toLowerCase();\n    // DOMPurify's attribute validation is tag-agnostic, so we need to check\n    // that the tag itself is valid. E.g. a[href] is ok, but base[href] is not.\n    if (this.allowedTags_[tag]) {\n      const attr = attribute.toLowerCase();\n      if (this.purifier_.validateAttributeChange(node, attr, value)) {\n        if (value == null) {\n          node.removeAttribute(attr);\n        } else {\n          const newValue = rewriteAttributeValue(tag, attr, value);\n          node.setAttribute(attr, newValue);\n        }\n\n        // a[href] requires [target], which defaults to _top.\n        if (tag === 'a') {\n          if (node.hasAttribute('href') && !node.hasAttribute('target')) {\n            node.setAttribute('target', '_top');\n          }\n        }\n        return true;\n      }\n    }\n    if (!this.warnIfFormsAreDisallowed_(tag)) {\n      user().warn(TAG, 'Sanitized [%s]=\"%s\":', attribute, value, node);\n    }\n    return false;\n  }\n\n  /**\n   * @param {string} tag\n   * @return {boolean}\n   */\n  warnIfFormsAreDisallowed_(tag) {\n    if (!this.allowForms_ && FORM_ELEMENTS.includes(tag)) {\n      user().warn(\n        TAG,\n        'Form elements (%s) cannot be mutated unless your <amp-script> includes the attribute sandbox=\"allow-forms\".',\n        tag\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @param {!Node} node\n   * @param {string} property\n   * @param {string} value\n   * @return {boolean}\n   */\n  setProperty(node, property, value) {\n    const prop = property.toLowerCase();\n\n    // worker-dom's supported properties and corresponding attribute name\n    // differences are minor, e.g. acceptCharset vs. accept-charset.\n    if (this.purifier_.validateAttributeChange(node, prop, value)) {\n      node[property] = value;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * TODO(choumx): Make this method always return a Promise.\n   * @param {!StorageLocation} location\n   * @param {string} opt_key\n   * @return {!Promise<Object>|?Object}\n   */\n  getStorage(location, opt_key) {\n    if (location === StorageLocation.AMP_STATE) {\n      return Services.bindForDocOrNull(this.element_).then((bind) => {\n        if (bind) {\n          return bind.getStateValue(opt_key || '.');\n        }\n      });\n    }\n    // Note that filtering out amp-* keys will affect the predictability of\n    // Storage.key(). We could preserve indices by adding empty entries but\n    // that might be even more confusing.\n    const storage = this.storageFor_(location);\n    const output = {};\n    for (let i = 0; i < storage.length; i++) {\n      const key = storage.key(i);\n      if (key && !key.startsWith('amp-')) {\n        output[key] = storage.getItem(key);\n      }\n    }\n    return output;\n  }\n\n  /**\n   * @param {!StorageLocation} location\n   * @param {?string} key\n   * @param {?string} value\n   * @return {!Promise}\n   */\n  setStorage(location, key, value) {\n    if (location === StorageLocation.AMP_STATE) {\n      return Services.bindForDocOrNull(this.element_).then((bind) => {\n        if (bind) {\n          const state = tryParseJson(value, () => {\n            dev().error(TAG, 'Invalid AMP.setState() argument: %s', value);\n          });\n          if (state) {\n            // Only evaluate updates in case of recent user interaction or a small fixed layout.\n            const fullEval = this.allowFullEval_();\n            const constrain = this.shouldConstrainEval_()\n              ? [this.element_]\n              : undefined;\n\n            if (!fullEval && !constrain) {\n              user().warn(\n                TAG,\n                'AMP.setState only updated page state and did not reevaluate bindings due to lack of recent user interaction.'\n              );\n            }\n            bind.setState(state, {\n              skipEval: !fullEval && !constrain,\n              skipAmpState: false,\n              constrain,\n            });\n          }\n        }\n      });\n    }\n    const storage = this.storageFor_(location);\n    if (key === null) {\n      if (value === null) {\n        user().error(TAG, 'Storage.clear() is not supported in amp-script.');\n      }\n    } else {\n      if (key.startsWith('amp-')) {\n        user().error(TAG, 'Invalid \"amp-\" prefix for storage key: %s', key);\n      } else {\n        if (value === null) {\n          storage.removeItem(key);\n        } else {\n          storage.setItem(key, value);\n        }\n      }\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * @param {!StorageLocation} location\n   * @return {?Storage}\n   * @private\n   */\n  storageFor_(location) {\n    if (location === StorageLocation.LOCAL) {\n      return this.win_.localStorage;\n    } else if (location === StorageLocation.SESSION) {\n      return this.win_.sessionStorage;\n    }\n    return null;\n  }\n}\n\nAMP.extension(TAG, '0.1', function (AMP) {\n  AMP.registerServiceForDoc(TAG, AmpScriptService);\n  AMP.registerElement(TAG, AmpScript, CSS);\n});\n"],
  "mappings": "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",
  "names": []
}
