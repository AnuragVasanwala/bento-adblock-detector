{"version":3,"file":"worker.mjs","sources":["../../../output/worker-thread/strings.js","../../../output/worker-thread/nodes.js","../../../output/worker-thread/MutationTransfer.js","../../../output/worker-thread/MutationObserver.js","../../../output/worker-thread/dom/ParentNode.js","../../../output/worker-thread/dom/DOMTokenList.js","../../../output/third_party/html-parser/html-parser.js","../../../output/worker-thread/dom/Element.js","../../../output/worker-thread/serializeTransferrableObject.js","../../../output/worker-thread/canvas/canvas-utils.js","../../../output/worker-thread/Storage.js","../../../output/worker-thread/long-task.js","../../../output/worker-thread/phase.js","../../../output/worker-thread/function.js","../../../output/worker-thread/dom/Node.js","../../../output/worker-thread/dom/CharacterData.js","../../../output/worker-thread/dom/Comment.js","../../../output/worker-thread/amp/delete-globals.js","../../../output/worker-thread/dom/matchElements.js","../../../output/worker-thread/dom/Attr.js","../../../output/worker-thread/css/CSSStyleDeclaration.js","../../../output/worker-thread/dom/enhanceElement.js","../../../output/worker-thread/Event.js","../../../output/worker-thread/dom/HTMLElement.js","../../../output/worker-thread/dom/HTMLAnchorElement.js","../../../output/worker-thread/dom/HTMLButtonElement.js","../../../output/worker-thread/canvas/CanvasGradient.js","../../../output/worker-thread/canvas/CanvasPattern.js","../../../output/worker-thread/canvas/OffscreenCanvasPolyfill.js","../../../output/worker-thread/canvas/FakeNativeCanvasPattern.js","../../../output/worker-thread/canvas/CanvasRenderingContext2D.js","../../../output/worker-thread/dom/HTMLCanvasElement.js","../../../output/worker-thread/dom/HTMLDataElement.js","../../../output/worker-thread/dom/HTMLDataListElement.js","../../../output/worker-thread/dom/HTMLEmbedElement.js","../../../output/worker-thread/dom/HTMLFormControlsMixin.js","../../../output/worker-thread/dom/HTMLFieldSetElement.js","../../../output/worker-thread/dom/HTMLFormElement.js","../../../output/worker-thread/dom/HTMLIFrameElement.js","../../../output/worker-thread/dom/HTMLImageElement.js","../../../output/worker-thread/dom/HTMLInputLabelsMixin.js","../../../output/worker-thread/dom/HTMLInputElement.js","../../../output/worker-thread/dom/HTMLLabelElement.js","../../../output/worker-thread/dom/HTMLLinkElement.js","../../../output/worker-thread/dom/HTMLMapElement.js","../../../output/worker-thread/dom/HTMLMeterElement.js","../../../output/worker-thread/dom/HTMLModElement.js","../../../output/worker-thread/dom/HTMLOListElement.js","../../../output/worker-thread/dom/HTMLOptionElement.js","../../../output/worker-thread/dom/HTMLProgressElement.js","../../../output/worker-thread/dom/HTMLQuoteElement.js","../../../output/worker-thread/dom/HTMLScriptElement.js","../../../output/worker-thread/dom/HTMLSelectElement.js","../../../output/worker-thread/dom/HTMLSourceElement.js","../../../output/worker-thread/dom/HTMLStyleElement.js","../../../output/worker-thread/dom/HTMLTableCellElement.js","../../../output/worker-thread/dom/HTMLTableColElement.js","../../../output/worker-thread/dom/HTMLTableElement.js","../../../output/worker-thread/dom/HTMLTableRowElement.js","../../../output/worker-thread/dom/HTMLTableSectionElement.js","../../../output/worker-thread/dom/HTMLTimeElement.js","../../../output/worker-thread/dom/Text.js","../../../output/worker-thread/dom/DocumentFragment.js","../../../output/worker-thread/dom/Document.js","../../../output/worker-thread/SyncValuePropagation.js","../../../output/worker-thread/ResizePropagation.js","../../../output/worker-thread/AnimationFrame.js","../../../output/worker-thread/dom/SVGElement.js","../../../output/worker-thread/index.amp.js","../../../output/worker-thread/amp/amp.js","../../../output/worker-thread/initialize.js","../../../output/worker-thread/initialize-storage.js"],"sourcesContent":["let count = 0;\nlet transfer = [];\nconst mapping = new Map();\n/**\n * Stores a string in mapping and returns the index of the location.\n * @param value string to store\n * @return location in map\n */\nexport function store(value) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (mapping.has(value)) {\n        // Safe to cast since we verified the mapping contains the value\n        return mapping.get(value);\n    }\n    mapping.set(value, count);\n    transfer.push(value);\n    return count++;\n}\n/**\n * Retrieve the index for a string (mostly used for tests).\n * @param value string value we need to know the index of\n * @returns index in the map for the string\n */\nexport function getForTesting(value) {\n    return mapping.get(value);\n}\nexport function getForTestingPartial(value) {\n    const found = Array.from(mapping.keys()).find((str) => str.includes(value));\n    if (found) {\n        return mapping.get(found);\n    }\n}\n/**\n * Returns strings registered but not yet transferred.\n * Side effect: Resets the transfer array to default value, to prevent passing the same values multiple times.\n */\nexport function consume() {\n    const strings = transfer;\n    transfer = [];\n    return strings;\n}\n//# sourceMappingURL=strings.js.map","import { phase } from './phase';\nlet count = 0;\nlet transfer = [];\nconst mapping = new Map();\n/**\n * Override the store for a node during the initialization phase.\n * @param node Node to store and modify with index\n * @param override Override number to use as the identifier.\n *\n * NOTE: THIS IS ONLY TO BE USED DURING INITIALIZATION.\n */\nexport function storeOverride(node, override) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (phase === 0 /* Initializing */) {\n        mapping.set((node[7 /* index */] = override), node);\n        count = Math.max(count, override);\n    }\n    return override;\n}\n/**\n * Stores a node in mapping, and makes the index available on the Node directly.\n * @param node Node to store and modify with index\n * @return index Node was stored with in mapping\n */\nexport function store(node) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (node[7 /* index */] !== undefined) {\n        return node[7 /* index */];\n    }\n    mapping.set((node[7 /* index */] = ++count), node);\n    if (phase > 0 /* Initializing */) {\n        // After Initialization, include all future dom node creation into the list for next transfer.\n        transfer.push(node);\n    }\n    return count;\n}\n/**\n * Retrieves a node based on an index.\n * @param index location in map to retrieve a Node for\n * @return either the Node represented in index position, or null if not available.\n */\nexport function get(index) {\n    // mapping has a 1 based index, since on first store we ++count before storing.\n    return (!!index && mapping.get(index)) || null;\n}\n/**\n * Returns nodes registered but not yet transferred.\n * Side effect: Resets the transfer array to default value, to prevent passing the same values multiple times.\n */\nexport function consume() {\n    const copy = transfer;\n    transfer = [];\n    return copy;\n}\n//# sourceMappingURL=nodes.js.map","import { consume as consumeNodes } from './nodes';\nimport { consume as consumeStrings } from './strings';\nimport { phase, set as setPhase } from './phase';\nlet pending = false;\nlet pendingMutations = [];\n// TODO(choumx): Change `mutation` to Array<Uint16> to prevent casting errors e.g. integer underflow, precision loss.\nexport function transfer(document, mutation) {\n    if (process.env.SERVER) {\n        return;\n    }\n    if (phase > 0 /* Initializing */ && document[58 /* allowTransfer */]) {\n        pending = true;\n        pendingMutations = pendingMutations.concat(mutation);\n        Promise.resolve().then((_) => {\n            if (pending) {\n                const nodes = new Uint16Array(consumeNodes().reduce((acc, node) => acc.concat(node[8 /* creationFormat */]), [])).buffer;\n                const mutations = new Uint16Array(pendingMutations).buffer;\n                document.postMessage({\n                    [54 /* phase */]: phase,\n                    [12 /* type */]: phase === 2 /* Mutating */ ? 3 /* MUTATE */ : 2 /* HYDRATE */,\n                    [37 /* nodes */]: nodes,\n                    [41 /* strings */]: consumeStrings(),\n                    [36 /* mutations */]: mutations,\n                }, [nodes, mutations]);\n                pendingMutations = [];\n                pending = false;\n                setPhase(2 /* Mutating */);\n            }\n        });\n    }\n}\n//# sourceMappingURL=MutationTransfer.js.map","import { transfer } from './MutationTransfer';\nconst observers = [];\nlet pendingMutations = false;\n/**\n * @param observerTarget\n * @param target\n */\nconst matchesIndex = (observerTarget, target) => {\n    return !!observerTarget && observerTarget[7 /* index */] === target[7 /* index */];\n};\n/**\n * @param observer\n * @param record\n */\nconst pushMutation = (observer, record) => {\n    observer.pushRecord(record);\n    if (!pendingMutations) {\n        pendingMutations = true;\n        Promise.resolve().then(() => {\n            pendingMutations = false;\n            observers.forEach((observer) => observer.callback(observer.takeRecords()));\n        });\n    }\n};\n/**\n * @param document\n * @param record\n * @param transferable\n */\nexport function mutate(document, record, transferable) {\n    // Post-message `transferable` to the main thread to apply mutations.\n    transfer(document, transferable);\n    // The MutationRecord is only used for external callers of MutationObserver.\n    observers.forEach((observer) => {\n        for (let t = record.target; t; t = t.parentNode) {\n            if (matchesIndex(observer.target, t)) {\n                pushMutation(observer, record);\n                break;\n            }\n        }\n    });\n}\nexport class MutationObserver {\n    callback;\n    [42 /* records */] = [];\n    target;\n    options;\n    constructor(callback) {\n        this.callback = callback;\n    }\n    /**\n     * Register the MutationObserver instance to observe a Nodes mutations.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n     * @param target Node to observe DOM mutations\n     */\n    observe(target, options) {\n        this.disconnect();\n        this.target = target;\n        this.options = options || {};\n        observers.push(this);\n    }\n    /**\n     * Stop the MutationObserver instance from observing a Nodes mutations.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n     */\n    disconnect() {\n        this.target = null;\n        const index = observers.indexOf(this);\n        if (index >= 0) {\n            observers.splice(index, 1);\n        }\n    }\n    /**\n     * Empties the MutationObserver instance's record queue and returns what was in there.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n     * @return Mutation Records stored on this MutationObserver instance.\n     */\n    takeRecords() {\n        const records = this[42 /* records */];\n        return records.splice(0, records.length);\n    }\n    /**\n     * NOTE: This method doesn't exist on native MutationObserver.\n     * @param record MutationRecord to store for this instance.\n     */\n    pushRecord(record) {\n        this[42 /* records */].push(record);\n    }\n}\n//# sourceMappingURL=MutationObserver.js.map","import { elementPredicate, matchAttrReference, matchChildrenElements } from './matchElements';\nimport { Node } from './Node';\nimport { containsIndexOf, toLower } from '../../utils';\n/*\nNormally ParentNode is implemented as a mixin, but since the Node class is an abstract\nthis makes it hard to build a mixin that recieves a base of the representations of Node needing\nthe mixed in functionality.\n\n// Partially implemented Mixin Methods\n// Both Element.querySelector() and Element.querySelector() are only implemented for the following simple selectors:\n// - Element selectors\n// - ID selectors\n// - Class selectors\n// - Attribute selectors\n// Element.querySelector() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n// Element.querySelectorAll() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n*/\nexport class ParentNode extends Node {\n    /**\n     * Getter returning children of an Element that are Elements themselves.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/children\n     * @return Element objects that are children of this ParentNode, omitting all of its non-element nodes.\n     */\n    get children() {\n        return this.childNodes.filter(elementPredicate);\n    }\n    /**\n     * Getter returning the number of child elements of a Element.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/childElementCount\n     * @return number of child elements of the given Element.\n     */\n    get childElementCount() {\n        return this.children.length;\n    }\n    /**\n     * Getter returning the first Element in Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/firstElementChild\n     * @return first childNode that is also an element.\n     */\n    get firstElementChild() {\n        return this.childNodes.find(elementPredicate) || null;\n    }\n    /**\n     * Getter returning the last Element in Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/lastElementChild\n     * @return first childNode that is also an element.\n     */\n    get lastElementChild() {\n        const children = this.children;\n        return children[children.length - 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n     * @param selector the selector we are trying to match for.\n     * @return Element with matching selector.\n     */\n    querySelector(selector) {\n        const matches = querySelectorAll(this, selector);\n        return matches ? matches[0] : null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n     * @param selector the selector we are trying to match for.\n     * @return Elements with matching selector.\n     */\n    querySelectorAll(selector) {\n        return querySelectorAll(this, selector);\n    }\n}\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n * @param node the node to filter results under.\n * @param selector the selector we are trying to match for.\n * @return Element with matching selector.\n */\nfunction querySelectorAll(node, selector) {\n    // As per spec: https://dom.spec.whatwg.org/#scope-match-a-selectors-string\n    // First, parse the selector\n    const selectorBracketIndexes = [selector.indexOf('['), selector.indexOf(']')];\n    const selectorHasAttr = containsIndexOf(selectorBracketIndexes[0]) && containsIndexOf(selectorBracketIndexes[1]);\n    const elementSelector = selectorHasAttr ? selector.substring(0, selectorBracketIndexes[0]) : selector;\n    const attrSelector = selectorHasAttr ? selector.substring(selectorBracketIndexes[0], selectorBracketIndexes[1] + 1) : null;\n    // TODO(nainar): Parsing selectors is needed when we add in more complex selectors.\n    // Second, find all the matching elements on the Document\n    let matcher;\n    if (selector[0] === '[') {\n        matcher = (element) => matchAttrReference(selector, element);\n    }\n    else if (elementSelector[0] === '#') {\n        matcher = selectorHasAttr\n            ? (element) => element.id === elementSelector.substr(1) && matchAttrReference(attrSelector, element)\n            : (element) => element.id === elementSelector.substr(1);\n    }\n    else if (elementSelector[0] === '.') {\n        matcher = selectorHasAttr\n            ? (element) => element.classList.contains(elementSelector.substr(1)) && matchAttrReference(attrSelector, element)\n            : (element) => element.classList.contains(elementSelector.substr(1));\n    }\n    else {\n        matcher = selectorHasAttr\n            ? (element) => element.localName === toLower(elementSelector) && matchAttrReference(attrSelector, element)\n            : (element) => element.localName === toLower(elementSelector);\n    }\n    // Third, filter to return elements that exist within the querying element's descendants.\n    return matcher\n        ? matchChildrenElements(node[45 /* scopingRoot */], matcher).filter((element) => node !== element && node.contains(element))\n        : [];\n}\n//# sourceMappingURL=ParentNode.js.map","import { mutate } from '../MutationObserver';\nimport { store as storeString } from '../strings';\nconst WHITESPACE_REGEX = /\\s/;\n/**\n * Synchronizes the string getter/setter with the actual DOMTokenList instance.\n * @param defineOn Element or class extension to define getter/setter pair for token list access.\n * @param accessorKey Key used to access DOMTokenList directly from specific element.\n * @param propertyName Key used to access DOMTokenList as string getter/setter.\n */\nexport function synchronizedAccessor(defineOn, accessorKey, propertyName) {\n    Object.defineProperty(defineOn.prototype, propertyName, {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return this[accessorKey].value;\n        },\n        set(value) {\n            this[accessorKey].value = value;\n        },\n    });\n}\nexport class DOMTokenList {\n    [43 /* tokens */] = [];\n    [13 /* target */];\n    [18 /* attributeName */];\n    [44 /* storeAttribute */];\n    /**\n     * The DOMTokenList interface represents a set of space-separated tokens.\n     * It is indexed beginning with 0 as with JavaScript Array objects and is case-sensitive.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList\n     * @param target Specific Element instance to modify when value is changed.\n     * @param attributeName Name of the attribute used by Element to access DOMTokenList.\n     */\n    constructor(target, attributeName) {\n        this[13 /* target */] = target;\n        this[18 /* attributeName */] = attributeName;\n        this[44 /* storeAttribute */] = target[44 /* storeAttribute */].bind(target);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/value\n     * @return string representation of tokens (space delimitted).\n     */\n    get value() {\n        return this[43 /* tokens */].join(' ');\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/length\n     * @return integer representing the number of objects stored in the object.\n     */\n    get length() {\n        return this[43 /* tokens */].length;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/value\n     * @param collection String of values space delimited to replace the current DOMTokenList with.\n     */\n    set value(collection) {\n        const oldValue = this.value;\n        const newValue = collection.trim();\n        // Replace current tokens with new tokens.\n        this[43 /* tokens */].splice(0, this[43 /* tokens */].length, ...(newValue !== '' ? newValue.split(/\\s+/) : ''));\n        this[67 /* mutated */](oldValue, newValue);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/item\n     * @param index number from DOMTokenList entities to retrieve value of\n     * @return value stored at the index requested, or undefined if beyond known range.\n     */\n    item(index) {\n        return this[43 /* tokens */][index];\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/contains\n     * @param token value the DOMTokenList is tested for.\n     * @return boolean indicating if the token is contained by the DOMTokenList.\n     */\n    contains(token) {\n        return this[43 /* tokens */].includes(token);\n    }\n    /**\n     * Add a token or tokens to the list.\n     * Note: All duplicates are removed, and the first token's position with the value is preserved.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/add\n     * @param tokens each token is a string to add to a TokenList.\n     */\n    add(...tokens) {\n        const oldValue = this.value;\n        this[43 /* tokens */].splice(0, this[43 /* tokens */].length, ...new Set(this[43 /* tokens */].concat(tokens)));\n        this[67 /* mutated */](oldValue, this.value);\n    }\n    /**\n     * Remove a token or tokens from the list.\n     * Note: All duplicates are removed, and the first token's position with the value is preserved.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/remove\n     * @param tokens each token is a string to remove from a TokenList.\n     */\n    remove(...tokens) {\n        const oldValue = this.value;\n        this[43 /* tokens */].splice(0, this[43 /* tokens */].length, ...new Set(this[43 /* tokens */].filter((token) => !tokens.includes(token))));\n        this[67 /* mutated */](oldValue, this.value);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/replace\n     * @param token\n     * @param newToken\n     */\n    replace(token, newToken) {\n        if (!this[43 /* tokens */].includes(token)) {\n            return;\n        }\n        const oldValue = this.value;\n        const set = new Set(this[43 /* tokens */]);\n        if (token !== newToken) {\n            set.delete(token);\n            if (newToken !== '') {\n                set.add(newToken);\n            }\n        }\n        this[43 /* tokens */].splice(0, this[43 /* tokens */].length, ...set);\n        this[67 /* mutated */](oldValue, this.value);\n    }\n    /**\n     * Adds or removes a token based on its presence in the token list.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/toggle\n     * @param token string to add or remove from the token list\n     * @param force changes toggle into a one way-only operation. true => token added. false => token removed.\n     * @return true if the token is in the list following mutation, false if not.\n     */\n    toggle(token, force) {\n        if (WHITESPACE_REGEX.test(token)) {\n            throw new TypeError('Uncaught DOMException');\n        }\n        if (!this[43 /* tokens */].includes(token)) {\n            if (force === undefined || !!force) {\n                // Note, this will add the token if force is undefined (not passed into the method), or truthy.\n                this.add(token);\n            }\n            return true;\n        }\n        else if (!force) {\n            // Note, this will remove the token if force is undefined (not passed into the method), or falsey.\n            this.remove(token);\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Report tokenList mutations to MutationObserver.\n     * @param oldValue value before mutation\n     * @param value value after mutation\n     * @private\n     */\n    [67 /* mutated */](oldValue, value) {\n        this[44 /* storeAttribute */](this[13 /* target */].namespaceURI, this[18 /* attributeName */], value);\n        mutate(this[13 /* target */].ownerDocument, {\n            type: 0 /* ATTRIBUTES */,\n            target: this[13 /* target */],\n            attributeName: this[18 /* attributeName */],\n            value,\n            oldValue,\n        }, [\n            0 /* ATTRIBUTES */,\n            this[13 /* target */][7 /* index */],\n            storeString(this[18 /* attributeName */]),\n            0,\n            value !== null ? storeString(value) + 1 : 0,\n        ]);\n    }\n}\n//# sourceMappingURL=DOMTokenList.js.map","import { SVG_NAMESPACE, HTML_NAMESPACE } from '../../transfer/TransferrableNodes';\nimport { toLower, toUpper } from '../../utils';\nfunction arr_back(arr) {\n    return arr[arr.length - 1];\n}\n// https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\nconst kMarkupPattern = /<!--([^]*)-->|<(\\/?)([a-z][-.0-9_a-z]*)([^>]*?)(\\/?)>/gi;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\nconst kAttributePattern = /(^|\\s)([^\\s\"'>\\/=]+)\\s*=\\s*(\"([^\"]+)\"|'([^']+)'|(\\S+))/gi;\nconst kSelfClosingElements = {\n    AREA: true,\n    BASE: true,\n    BR: true,\n    COL: true,\n    HR: true,\n    IMG: true,\n    INPUT: true,\n    LINK: true,\n    META: true,\n    PARAM: true,\n    SOURCE: true,\n    TRACK: true,\n    WBR: true,\n};\nconst kElementsClosedByOpening = {\n    LI: { LI: true },\n    DT: { DT: true, DD: true },\n    DD: { DD: true, DT: true },\n    P: {\n        ADDRESS: true,\n        ARTICLE: true,\n        ASIDE: true,\n        BLOCKQUOTE: true,\n        DETAILS: true,\n        DIV: true,\n        DL: true,\n        FIELDSET: true,\n        FIGCAPTION: true,\n        FIGURE: true,\n        FOOTER: true,\n        FORM: true,\n        H1: true,\n        H2: true,\n        H3: true,\n        H4: true,\n        H5: true,\n        H6: true,\n        HEADER: true,\n        HR: true,\n        MAIN: true,\n        NAV: true,\n        OL: true,\n        P: true,\n        PRE: true,\n        SECTION: true,\n        TABLE: true,\n        UL: true,\n    },\n    RT: { RT: true, RP: true },\n    RP: { RT: true, RP: true },\n    OPTGROUP: { OPTGROUP: true },\n    OPTION: { OPTION: true, OPTGROUP: true },\n    THEAD: { TBODY: true, TFOOT: true },\n    TBODY: { TBODY: true, TFOOT: true },\n    TR: { TR: true },\n    TD: { TD: true, TH: true },\n    TH: { TD: true, TH: true },\n};\nconst kElementsClosedByClosing = {\n    LI: { UL: true, OL: true },\n    A: { DIV: true },\n    B: { DIV: true },\n    I: { DIV: true },\n    P: { DIV: true },\n    TD: { TR: true, TABLE: true },\n    TH: { TR: true, TABLE: true },\n};\nconst kBlockTextElements = {\n    SCRIPT: true,\n    NOSCRIPT: true,\n    STYLE: true,\n    PRE: true,\n};\n/**\n * Parses HTML and returns a root element\n * Parse a chuck of HTML source.\n * @param  {string} data HTML in string format.\n * @param {!Element} root The element to use as root.\n * @return {Element}      root element\n */\nexport function parse(data, rootElement) {\n    const ownerDocument = rootElement.ownerDocument;\n    const root = ownerDocument.createElementNS(rootElement.namespaceURI, rootElement.localName);\n    let currentParent = root;\n    let currentNamespace = root.namespaceURI;\n    const stack = [root];\n    let lastTextPos = 0;\n    let match;\n    data = '<q>' + data + '</q>';\n    const tagsClosed = [];\n    if (currentNamespace !== SVG_NAMESPACE && currentNamespace !== HTML_NAMESPACE) {\n        throw new Error('Namespace not supported: ' + currentNamespace);\n    }\n    while ((match = kMarkupPattern.exec(data))) {\n        const commentContents = match[1]; // <!--contents-->\n        const beginningSlash = match[2]; // ... </ ...\n        const tagName = match[3];\n        const matchAttributes = match[4];\n        const endSlash = match[5]; // ... /> ...\n        if (lastTextPos < match.index) {\n            // if has content\n            const text = data.slice(lastTextPos, match.index);\n            currentParent.appendChild(ownerDocument.createTextNode(decodeEntities(text)));\n        }\n        lastTextPos = kMarkupPattern.lastIndex;\n        if (commentContents !== undefined) {\n            // this is a comment\n            currentParent.appendChild(ownerDocument.createComment(commentContents));\n            continue;\n        }\n        const normalizedTagName = toUpper(tagName);\n        if (normalizedTagName === 'SVG') {\n            currentNamespace = beginningSlash ? HTML_NAMESPACE : SVG_NAMESPACE;\n        }\n        if (!beginningSlash) {\n            // not </ tags\n            if (!endSlash && kElementsClosedByOpening[currentParent.tagName]) {\n                if (kElementsClosedByOpening[currentParent.tagName][normalizedTagName]) {\n                    stack.pop();\n                    currentParent = arr_back(stack);\n                }\n            }\n            const childToAppend = ownerDocument.createElementNS(currentNamespace, currentNamespace === HTML_NAMESPACE ? toLower(tagName) : tagName);\n            for (let attMatch; (attMatch = kAttributePattern.exec(matchAttributes));) {\n                const attrName = attMatch[2];\n                const attrValue = attMatch[4] || attMatch[5] || attMatch[6];\n                childToAppend.setAttribute(attrName, attrValue);\n            }\n            currentParent = currentParent.appendChild(childToAppend);\n            stack.push(currentParent);\n            if (kBlockTextElements[normalizedTagName]) {\n                // a little test to find next </script> or </style> ...\n                const closeMarkup = '</' + toLower(normalizedTagName) + '>';\n                const index = data.indexOf(closeMarkup, kMarkupPattern.lastIndex);\n                if (index == -1) {\n                    throw new Error('Close markup not found.');\n                }\n                else {\n                    kMarkupPattern.lastIndex = index;\n                }\n            }\n        }\n        if (tagName === 'foreignObject') {\n            currentNamespace = beginningSlash ? SVG_NAMESPACE : HTML_NAMESPACE;\n        }\n        if (beginningSlash || endSlash || kSelfClosingElements[normalizedTagName]) {\n            // </ or /> or <br> etc.\n            while (true) {\n                if (stack.length <= 1) {\n                    break;\n                }\n                if (toUpper(currentParent.nodeName) == normalizedTagName) {\n                    stack.pop();\n                    currentParent = arr_back(stack);\n                    break;\n                }\n                else {\n                    // Trying to close current tag, and move on\n                    if (kElementsClosedByClosing[currentParent.tagName]) {\n                        if (kElementsClosedByClosing[currentParent.tagName][normalizedTagName]) {\n                            stack.pop();\n                            currentParent = arr_back(stack);\n                            continue;\n                        }\n                    }\n                    // Use aggressive strategy to handle unmatching markups.\n                    break;\n                }\n            }\n        }\n    }\n    for (const node of stack) {\n        if (tagsClosed[tagsClosed.length - 1] == node.nodeName) {\n            stack.pop();\n            tagsClosed.pop();\n            currentParent = arr_back(stack);\n        }\n        else\n            break;\n    }\n    const valid = stack.length === 1;\n    if (!valid) {\n        throw new Error('Attempting to parse invalid HTML content.');\n    }\n    const wrapper = root.firstChild;\n    if (wrapper) {\n        wrapper.parentNode = null;\n        wrapper.childNodes.forEach((node) => {\n            node.parentNode = null;\n        });\n        return wrapper;\n    }\n    throw new Error('Attempting to parse invalid HTML.');\n}\n/**\n * Decodes HTML Entities.\n * Currently only works for numeric entities, as well as the 4 named entities\n * required for encoding HTML: &, \", <, >.\n * See https://developer.mozilla.org/en-US/docs/Glossary/Entity.\n *\n * TODO: create solution for other named entities.\n */\nconst RESERVED_CHARACTERS = {\n    __proto__: null,\n    amp: '&',\n    lt: '<',\n    gt: '>',\n    quot: '\"',\n};\nfunction decodeEntities(html) {\n    return html.replace(/&(?:(#x?[\\da-f]+)|([\\w]+));?/gi, function (s, numericEntity, namedEntity) {\n        // Numeric entity\n        if (numericEntity) {\n            let code = numericEntity.charAt(1).toLowerCase() === 'x' ? parseInt(numericEntity.substr(2), 16) : parseInt(numericEntity.substr(1), 10);\n            // 1114111 is the largest valid unicode codepoint.\n            if (isNaN(code) || code > 1114111) {\n                return s;\n            }\n            return String.fromCodePoint(code) || s;\n        }\n        // Named entity. Only HTML reserved entities are currently supported.\n        if (namedEntity) {\n            return RESERVED_CHARACTERS[namedEntity.toLowerCase()] || s;\n        }\n        return s;\n    });\n}\n//# sourceMappingURL=html-parser.js.map","import { ParentNode } from './ParentNode';\nimport { DOMTokenList, synchronizedAccessor } from './DOMTokenList';\nimport { toString as attrsToString, matchPredicate as matchAttrPredicate } from './Attr';\nimport { mutate } from '../MutationObserver';\nimport { toLower, toUpper } from '../../utils';\nimport { CSSStyleDeclaration } from '../css/CSSStyleDeclaration';\nimport { matchChildrenElements } from './matchElements';\nimport { reflectProperties } from './enhanceElement';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\nimport { HTML_NAMESPACE } from '../../transfer/TransferrableNodes';\nimport { parse } from '../../third_party/html-parser/html-parser';\nimport { propagate } from './Node';\nimport { Event } from '../Event';\nexport const NS_NAME_TO_CLASS = {};\nexport const registerSubclass = (localName, subclass, namespace = HTML_NAMESPACE) => (NS_NAME_TO_CLASS[`${namespace}:${localName}`] = subclass);\nexport function definePropertyBackedAttributes(defineOn, attributes) {\n    const sub = Object.create(defineOn[46 /* propertyBackedAttributes */]);\n    defineOn[46 /* propertyBackedAttributes */] = Object.assign(sub, attributes);\n}\n/**\n * There are six kinds of elements, each having different start/close tag semantics.\n * @see https://html.spec.whatwg.org/multipage/syntax.html#elements-2\n */\nvar ElementKind;\n(function (ElementKind) {\n    ElementKind[ElementKind[\"NORMAL\"] = 0] = \"NORMAL\";\n    ElementKind[ElementKind[\"VOID\"] = 1] = \"VOID\";\n    // The following element kinds have no special handling in worker-dom yet\n    // and are lumped into the NORMAL kind.\n    /*\n    FOREIGN,\n    TEMPLATE,\n    RAW_TEXT,\n    ESCAPABLE_RAW,\n    */\n})(ElementKind || (ElementKind = {}));\n/**\n * @see https://html.spec.whatwg.org/multipage/syntax.html#void-elements\n */\nconst VOID_ELEMENTS = ['AREA', 'BASE', 'BR', 'COL', 'EMBED', 'HR', 'IMG', 'INPUT', 'LINK', 'META', 'PARAM', 'SOURCE', 'TRACK', 'WBR'];\nexport class Element extends ParentNode {\n    _classList;\n    static [46 /* propertyBackedAttributes */] = {\n        class: [(el) => el.classList.value, (el, value) => (el.classList.value = value)],\n        style: [(el) => el.cssText, (el, value) => (el.cssText = value)],\n    };\n    localName;\n    attributes = [];\n    namespaceURI;\n    style_;\n    /**\n     * Element \"kind\" dictates certain behaviors e.g. start/end tag semantics.\n     * @see https://html.spec.whatwg.org/multipage/syntax.html#elements-2\n     */\n    kind;\n    constructor(nodeType, localName, namespaceURI, ownerDocument, overrideIndex) {\n        super(nodeType, toUpper(localName), ownerDocument, overrideIndex);\n        this.namespaceURI = namespaceURI || HTML_NAMESPACE;\n        this.localName = localName;\n        this.kind = VOID_ELEMENTS.includes(this.tagName) ? ElementKind.VOID : ElementKind.NORMAL;\n        this[8 /* creationFormat */] = [\n            this[7 /* index */],\n            this.nodeType,\n            storeString(this.localName),\n            0,\n            this.namespaceURI === null ? 0 : storeString(this.namespaceURI),\n        ];\n    }\n    // We lazily instantiate the CSSStyleDeclaration to keep element creation cheap\n    // See https://github.com/ampproject/worker-dom/pull/1096 for context.\n    get style() {\n        if (!this.style_) {\n            this.style_ = new CSSStyleDeclaration(this);\n        }\n        return this.style_;\n    }\n    // Unimplemented properties\n    // Element.clientHeight – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientHeight\n    // Element.clientLeft – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientLeft\n    // Element.clientTop – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientTop\n    // Element.clientWidth – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientWidth\n    // set Element.innerHTML – https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n    // NonDocumentTypeChildNode.nextElementSibling – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/nextElementSibling\n    // Element.prefix – https://developer.mozilla.org/en-US/docs/Web/API/Element/prefix\n    // NonDocummentTypeChildNode.previousElementSibling – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/previousElementSibling\n    // Element.scrollHeight – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight\n    // Element.scrollLeft – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeft\n    // Element.scrollLeftMax – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeftMax\n    // Element.scrollTop – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTop\n    // Element.scrollTopMax – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTopMax\n    // Element.scrollWidth – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollWidth\n    // Element.shadowRoot – !! CustomElements – https://developer.mozilla.org/en-US/docs/Web/API/Element/shadowRoot\n    // Element.slot – !! CustomElements – https://developer.mozilla.org/en-US/docs/Web/API/Element/slot\n    // Element.tabStop – https://developer.mozilla.org/en-US/docs/Web/API/Element/tabStop\n    // Element.undoManager – https://developer.mozilla.org/en-US/docs/Web/API/Element/undoManager\n    // Element.undoScope – https://developer.mozilla.org/en-US/docs/Web/API/Element/undoScope\n    // Unimplemented Methods\n    // Element.attachShadow() – !! CustomElements – https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow\n    // Element.animate() – https://developer.mozilla.org/en-US/docs/Web/API/Element/animate\n    // Element.closest() – https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\n    // Element.getAttributeNames() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNames\n    // Element.getBoundingClientRect() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n    // Element.getClientRects() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getClientRects\n    // Element.getElementsByTagNameNS() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagNameNS\n    // Element.insertAdjacentElement() – https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentElement\n    // Element.insertAdjacentHTML() – https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentHTML\n    // Element.insertAdjacentText() – https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentText\n    // Element.matches() – https://developer.mozilla.org/en-US/docs/Web/API/Element/matches\n    // Element.releasePointerCapture() – https://developer.mozilla.org/en-US/docs/Web/API/Element/releasePointerCapture\n    // Element.requestFullscreen() – https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n    // Element.requestPointerLock() – https://developer.mozilla.org/en-US/docs/Web/API/Element/requestPointerLock\n    // Element.scrollIntoView() – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\n    // Element.setCapture() – https://developer.mozilla.org/en-US/docs/Web/API/Element/setCapture\n    // Element.setPointerCapture() – https://developer.mozilla.org/en-US/docs/Web/API/Element/setPointerCapture\n    // Partially implemented Mixin Methods\n    // Both Element.querySelector() and Element.querySelector() are only implemented for the following simple selectors:\n    // - Element selectors\n    // - ID selectors\n    // - Class selectors\n    // - Attribute selectors\n    // Element.querySelector() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n    // Element.querySelectorAll() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n    // Mixins not implemented\n    // Slotable.assignedSlot – https://developer.mozilla.org/en-US/docs/Web/API/Slotable/assignedSlot\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/outerHTML\n     * @return string representation of serialized HTML describing the Element and its descendants.\n     */\n    get outerHTML() {\n        const tag = this.localName || this.tagName;\n        const start = `<${[tag, attrsToString(this.attributes)].join(' ').trim()}>`;\n        const contents = this.innerHTML;\n        if (!contents) {\n            if (this.kind === ElementKind.VOID) {\n                // Void elements e.g. <input> only have a start tag (unless children are added programmatically).\n                // https://html.spec.whatwg.org/multipage/syntax.html#void-elements\n                return start;\n            }\n        }\n        return start + contents + `</${tag}>`;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n     * @return string representation of serialized HTML describing the Element's descendants.\n     */\n    get innerHTML() {\n        const childNodes = this.childNodes;\n        if (childNodes.length) {\n            return childNodes\n                .map((child) => {\n                switch (child.nodeType) {\n                    case 3 /* TEXT_NODE */:\n                        return child.textContent;\n                    case 8 /* COMMENT_NODE */:\n                        return `<!--${child.textContent}-->`;\n                    default:\n                        return child.outerHTML;\n                }\n            })\n                .join('');\n        }\n        return '';\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n     * @param html The raw html string to parse.\n     */\n    set innerHTML(html) {\n        const root = parse(html, this);\n        // remove previous children\n        this.childNodes.forEach((n) => {\n            propagate(n, 'isConnected', false);\n            propagate(n, 45 /* scopingRoot */, n);\n        });\n        mutate(this.ownerDocument, {\n            removedNodes: this.childNodes,\n            type: 2 /* CHILD_LIST */,\n            target: this,\n        }, [\n            2 /* CHILD_LIST */,\n            this[7 /* index */],\n            0,\n            0,\n            0,\n            this.childNodes.length,\n            ...this.childNodes.map((node) => node[7 /* index */]),\n        ]);\n        this.childNodes = [];\n        // add new children\n        root.childNodes.forEach((child) => this.appendChild(child));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n     * @param text new text replacing all childNodes content.\n     */\n    set textContent(text) {\n        // TODO(KB): Investigate removing all children in a single .splice to childNodes.\n        this.childNodes.slice().forEach((child) => child.remove());\n        this.appendChild(this.ownerDocument.createTextNode(text));\n    }\n    /**\n     * Getter returning the text representation of Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n     * @return text from all childNodes.\n     */\n    get textContent() {\n        return this.getTextContent();\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/tagName\n     * @return string tag name (i.e 'div')\n     */\n    get tagName() {\n        return this.nodeName;\n    }\n    /**\n     * Sets the value of an attribute on this element using a null namespace.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute\n     * @param name attribute name\n     * @param value attribute value\n     */\n    setAttribute(name, value) {\n        this.setAttributeNS(HTML_NAMESPACE, name, value);\n    }\n    /**\n     * Get the value of an attribute on this Element with the null namespace.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute\n     * @param name attribute name\n     * @return value of a specified attribute on the element, or null if the attribute doesn't exist.\n     */\n    getAttribute(name) {\n        return this.getAttributeNS(HTML_NAMESPACE, name);\n    }\n    /**\n     * Remove an attribute from this element in the null namespace.\n     *\n     * Method returns void, so it is not chainable.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute\n     * @param name attribute name\n     */\n    removeAttribute(name) {\n        this.removeAttributeNS(HTML_NAMESPACE, name);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/hasAttribute\n     * @param name attribute name\n     * @return Boolean indicating if the element has the specified attribute.\n     */\n    hasAttribute(name) {\n        return this.hasAttributeNS(HTML_NAMESPACE, name);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/hasAttributes\n     * @return Boolean indicating if the element has any attributes.\n     */\n    hasAttributes() {\n        return this.attributes.length > 0;\n    }\n    /**\n     * Sets the value of an attribute on this Element with the provided namespace.\n     *\n     * If the attribute already exists, the value is updated; otherwise a new attribute is added with the specified name and value.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttributeNS\n     * @param namespaceURI\n     * @param name attribute name\n     * @param value attribute value\n     */\n    setAttributeNS(namespaceURI, name, value) {\n        const valueAsString = String(value);\n        const propertyBacked = this.constructor[46 /* propertyBackedAttributes */][name];\n        if (propertyBacked !== undefined) {\n            if (!this.attributes.find(matchAttrPredicate(namespaceURI, name))) {\n                this.attributes.push({\n                    namespaceURI,\n                    name,\n                    value: valueAsString,\n                });\n            }\n            propertyBacked[1](this, valueAsString);\n            return;\n        }\n        const oldValue = this[44 /* storeAttribute */](namespaceURI, name, valueAsString);\n        mutate(this.ownerDocument, {\n            type: 0 /* ATTRIBUTES */,\n            target: this,\n            attributeName: name,\n            attributeNamespace: namespaceURI,\n            value: valueAsString,\n            oldValue,\n        }, [\n            0 /* ATTRIBUTES */,\n            this[7 /* index */],\n            storeString(name),\n            storeString(namespaceURI),\n            value !== null ? storeString(valueAsString) + 1 : 0,\n        ]);\n    }\n    [44 /* storeAttribute */](namespaceURI, name, value) {\n        const attr = this.attributes.find(matchAttrPredicate(namespaceURI, name));\n        const oldValue = (attr && attr.value) || '';\n        if (attr) {\n            attr.value = value;\n        }\n        else {\n            this.attributes.push({\n                namespaceURI,\n                name,\n                value,\n            });\n        }\n        return oldValue;\n    }\n    /**\n     * Get the value of an attribute on this Element with the specified namespace.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS\n     * @param namespaceURI attribute namespace\n     * @param name attribute name\n     * @return value of a specified attribute on the element, or null if the attribute doesn't exist.\n     */\n    getAttributeNS(namespaceURI, name) {\n        const attr = this.attributes.find(matchAttrPredicate(namespaceURI, name));\n        if (attr) {\n            const propertyBacked = this.constructor[46 /* propertyBackedAttributes */][name];\n            return propertyBacked !== undefined ? propertyBacked[0](this) : attr.value;\n        }\n        return null;\n    }\n    /**\n     * Remove an attribute from this element in the specified namespace.\n     *\n     * Method returns void, so it is not chainable.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute\n     * @param namespaceURI attribute namespace\n     * @param name attribute name\n     */\n    removeAttributeNS(namespaceURI, name) {\n        const index = this.attributes.findIndex(matchAttrPredicate(namespaceURI, name));\n        if (index >= 0) {\n            const oldValue = this.attributes[index].value;\n            this.attributes.splice(index, 1);\n            mutate(this.ownerDocument, {\n                type: 0 /* ATTRIBUTES */,\n                target: this,\n                attributeName: name,\n                attributeNamespace: namespaceURI,\n                oldValue,\n            }, [\n                0 /* ATTRIBUTES */,\n                this[7 /* index */],\n                storeString(name),\n                storeString(namespaceURI),\n                0, // 0 means no value\n            ]);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/hasAttributeNS\n     * @param namespaceURI attribute namespace\n     * @param name attribute name\n     * @return Boolean indicating if the element has the specified attribute.\n     */\n    hasAttributeNS(namespaceURI, name) {\n        return this.attributes.some(matchAttrPredicate(namespaceURI, name));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByClassName\n     * @param names contains one more more classnames to match on. Multiples are space seperated, indicating an AND operation.\n     * @return Element array with matching classnames\n     */\n    getElementsByClassName(names) {\n        const inputClassList = names.split(' ');\n        // TODO(KB) – Compare performance of [].some(value => DOMTokenList.contains(value)) and regex.\n        // const classRegex = new RegExp(classNames.split(' ').map(name => `(?=.*${name})`).join(''));\n        return matchChildrenElements(this, (element) => inputClassList.some((inputClassName) => element.classList.contains(inputClassName)));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagName\n     * @param tagName the qualified name to look for. The special string \"*\" represents all elements.\n     * @return Element array with matching tagnames\n     */\n    getElementsByTagName(tagName) {\n        const lowerTagName = toLower(tagName);\n        return matchChildrenElements(this, tagName === '*'\n            ? (_) => true\n            : (element) => (element.namespaceURI === HTML_NAMESPACE ? element.localName === lowerTagName : element.tagName === tagName));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByName\n     * @param name value of name attribute elements must have to be returned\n     * @return Element array with matching name attributes\n     */\n    getElementsByName(name) {\n        const stringName = '' + name;\n        return matchChildrenElements(this, (element) => element.getAttribute('name') === stringName);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n     * @param deep boolean determines if the clone should include a recursive copy of all childNodes.\n     * @return Element containing all current attributes and potentially childNode clones of the Element requested to be cloned.\n     */\n    cloneNode(deep = false) {\n        const clone = this.ownerDocument.createElementNS(this.namespaceURI, this.namespaceURI === HTML_NAMESPACE ? toLower(this.tagName) : this.tagName);\n        this.attributes.forEach((attr) => clone.setAttribute(attr.name, attr.value));\n        if (deep) {\n            this.childNodes.forEach((child) => clone.appendChild(child.cloneNode(deep)));\n        }\n        return clone;\n    }\n    /**\n     * Return the ClientRect for an Element once determined by the main thread.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n     * @return Promise<ClientRect>\n     *\n     * Note: Edge and IE11 do not return the x/y value, but top/left are equivalent. Normalize the values here.\n     */\n    getBoundingClientRectAsync() {\n        const defaultValue = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0,\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n        return new Promise((resolve) => {\n            const messageHandler = ({ data }) => {\n                if (data[12 /* type */] === 6 /* GET_BOUNDING_CLIENT_RECT */ &&\n                    data[13 /* target */][0] === this[7 /* index */]) {\n                    this.ownerDocument.removeGlobalEventListener('message', messageHandler);\n                    const transferredBoundingClientRect = data[38 /* data */];\n                    resolve({\n                        top: transferredBoundingClientRect[0],\n                        right: transferredBoundingClientRect[1],\n                        bottom: transferredBoundingClientRect[2],\n                        left: transferredBoundingClientRect[3],\n                        width: transferredBoundingClientRect[4],\n                        height: transferredBoundingClientRect[5],\n                        x: transferredBoundingClientRect[0],\n                        y: transferredBoundingClientRect[3],\n                    });\n                }\n            };\n            if (!this.ownerDocument.addGlobalEventListener || !this.isConnected) {\n                // Elements run within Node runtimes are missing addEventListener as a global.\n                // In this case, treat the return value the same as a disconnected node.\n                resolve(defaultValue);\n            }\n            else {\n                this.ownerDocument.addGlobalEventListener('message', messageHandler);\n                transfer(this.ownerDocument, [5 /* GET_BOUNDING_CLIENT_RECT */, this[7 /* index */]]);\n                setTimeout(resolve, 500, defaultValue); // TODO: Why a magical constant, define and explain.\n            }\n        });\n    }\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/click\n    click() {\n        const event = new Event('click', {});\n        event.target = this;\n        this.dispatchEvent(event);\n    }\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\n    scrollIntoView() {\n        if (this.isConnected) {\n            transfer(this.ownerDocument, [14 /* SCROLL_INTO_VIEW */, this[7 /* index */]]);\n        }\n    }\n    get classList() {\n        return this._classList || (this._classList = new DOMTokenList(this, 'class'));\n    }\n}\nsynchronizedAccessor(Element, 'classList', 'className');\nreflectProperties([{ id: [''] }], Element);\n//# sourceMappingURL=Element.js.map","import { store } from './strings';\nconst f32 = new Float32Array(1);\nconst u16 = new Uint16Array(f32.buffer);\nfunction isSmallInt(num) {\n    u16[0] = num;\n    // If the Uint16Array doesn't coerce it to another value, that means it fits\n    // into a Uint16Array.\n    return u16[0] === num;\n}\n/**\n * Serializes arguments into a Uint16 compatible format.\n *\n * The serialization format uses a variable length tuple, with the first item\n * being the encoded representation's type and any number of values afterwards.\n *\n * @param args The arguments to serialize\n */\nexport function serializeTransferrableObject(args) {\n    const serialized = [];\n    for (let i = 0; i < args.length; i++) {\n        const arg = args[i];\n        if (typeof arg === 'number') {\n            if (isSmallInt(arg)) {\n                serialized.push(1 /* SmallInt */, arg);\n            }\n            else {\n                f32[0] = arg;\n                serialized.push(2 /* Float */, u16[0], u16[1]);\n            }\n            continue;\n        }\n        if (typeof arg === 'string') {\n            serialized.push(3 /* String */, store(arg));\n            continue;\n        }\n        if (Array.isArray(arg)) {\n            serialized.push(4 /* Array */, arg.length);\n            const serializedArray = serializeTransferrableObject(arg);\n            for (let i = 0; i < serializedArray.length; i++) {\n                serialized.push(serializedArray[i]);\n            }\n            continue;\n        }\n        if (typeof arg === 'object') {\n            const serializedObject = arg[68 /* serializeAsTransferrableObject */]();\n            for (let i = 0; i < serializedObject.length; i++) {\n                serialized.push(serializedObject[i]);\n            }\n            continue;\n        }\n        throw new Error('Cannot serialize argument.');\n    }\n    return serialized;\n}\n//# sourceMappingURL=serializeTransferrableObject.js.map","import { transfer } from '../MutationTransfer';\nlet indexTracker = 0;\nexport function retrieveImageBitmap(image, canvas) {\n    const callIndex = indexTracker++;\n    const document = canvas.ownerDocument;\n    return new Promise((resolve) => {\n        const messageHandler = ({ data }) => {\n            if (data[12 /* type */] === 10 /* IMAGE_BITMAP_INSTANCE */ && data[73 /* callIndex */] === callIndex) {\n                document.removeGlobalEventListener('message', messageHandler);\n                const transferredImageBitmap = data[38 /* data */];\n                resolve(transferredImageBitmap);\n            }\n        };\n        if (!document.addGlobalEventListener) {\n            throw new Error('addGlobalEventListener is not defined.');\n        }\n        else {\n            document.addGlobalEventListener('message', messageHandler);\n            transfer(canvas.ownerDocument, [11 /* IMAGE_BITMAP_INSTANCE */, image[7 /* index */], callIndex]);\n        }\n    });\n}\n//# sourceMappingURL=canvas-utils.js.map","import { store } from './strings';\nimport { transfer } from './MutationTransfer';\n/**\n * @param document\n * @param location\n * @param data\n */\nexport function createStorage(document, location, data) {\n    const storage = Object.assign(Object.create(null), data);\n    // Define properties on a prototype-less object instead of a class so that\n    // it behaves more like normal objects, e.g. bracket notation and JSON.stringify.\n    const define = Object.defineProperty;\n    define(storage, 'length', {\n        get() {\n            return Object.keys(this).length;\n        },\n    });\n    define(storage, 'key', {\n        value(n) {\n            const keys = Object.keys(this);\n            return n >= 0 && n < keys.length ? keys[n] : null;\n        },\n    });\n    define(storage, 'getItem', {\n        value(key) {\n            const value = this[key];\n            return value ? value : null;\n        },\n    });\n    define(storage, 'setItem', {\n        value(key, value) {\n            const stringValue = String(value);\n            this[key] = stringValue;\n            transfer(document, [12 /* STORAGE */, 2 /* SET */, location, store(key), store(stringValue)]);\n        },\n    });\n    define(storage, 'removeItem', {\n        value(key) {\n            delete this[key];\n            transfer(document, [\n                12 /* STORAGE */,\n                2 /* SET */,\n                location,\n                store(key),\n                0, // value == 0 represents deletion.\n            ]);\n        },\n    });\n    define(storage, 'clear', {\n        value() {\n            Object.keys(this).forEach((key) => {\n                delete this[key];\n            });\n            transfer(document, [\n                12 /* STORAGE */,\n                2 /* SET */,\n                location,\n                0,\n                0, // value == 0 represents deletion.\n            ]);\n        },\n    });\n    return storage;\n}\n//# sourceMappingURL=Storage.js.map","import { transfer } from './MutationTransfer';\nexport function wrap(target, func) {\n    return function () {\n        return execute(target, Promise.resolve(func.apply(null, arguments)));\n    };\n}\nfunction execute(target, promise) {\n    // Start the task.\n    transfer(target.ownerDocument, [6 /* LONG_TASK_START */, target[7 /* index */]]);\n    return promise.then((result) => {\n        // Complete the task.\n        transfer(target.ownerDocument, [7 /* LONG_TASK_END */, target[7 /* index */]]);\n        return result;\n    }, (reason) => {\n        // Complete the task.\n        transfer(target.ownerDocument, [7 /* LONG_TASK_END */, target[7 /* index */]]);\n        throw reason;\n    });\n}\n//# sourceMappingURL=long-task.js.map","export let phase = 0 /* Initializing */;\nexport const set = (newPhase) => (phase = newPhase);\n//# sourceMappingURL=phase.js.map","import { transfer } from './MutationTransfer';\nimport { store } from './strings';\nconst exportedFunctions = {};\nexport function callFunctionMessageHandler(event, document) {\n    const msg = event.data;\n    if (msg[12 /* type */] !== 12 /* FUNCTION */) {\n        return;\n    }\n    const functionMessage = msg;\n    const fnIdentifier = functionMessage[77 /* functionIdentifier */];\n    const fnArguments = JSON.parse(functionMessage[78 /* functionArguments */]);\n    const index = functionMessage[7 /* index */];\n    const fn = exportedFunctions[fnIdentifier];\n    if (!fn) {\n        transfer(document, [\n            13 /* FUNCTION_CALL */,\n            2 /* REJECT */,\n            index,\n            store(JSON.stringify(`[worker-dom]: Exported function \"${fnIdentifier}\" could not be found.`)),\n        ]);\n        return;\n    }\n    Promise.resolve(fn) // Forcing promise flows allows us to skip a try/catch block.\n        .then((f) => f.apply(null, fnArguments))\n        .then((value) => {\n        transfer(document, [13 /* FUNCTION_CALL */, 1 /* RESOLVE */, index, store(JSON.stringify(value))]);\n    }, (err) => {\n        const errorMessage = JSON.stringify(err.message || err);\n        transfer(document, [\n            13 /* FUNCTION_CALL */,\n            2 /* REJECT */,\n            index,\n            store(JSON.stringify(`[worker-dom]: Function \"${fnIdentifier}\" threw: \"${errorMessage}\"`)),\n        ]);\n    });\n}\nexport function exportFunction(name, fn) {\n    if (!name || name === '') {\n        throw new Error(`[worker-dom]: Attempt to export function was missing an identifier.`);\n    }\n    if (typeof fn !== 'function') {\n        throw new Error(`[worker-dom]: Attempt to export non-function failed: (\"${name}\", ${typeof fn}).`);\n    }\n    if (name in exportedFunctions) {\n        throw new Error(`[worker-dom]: Attempt to re-export function failed: \"${name}\".`);\n    }\n    exportedFunctions[name] = fn;\n}\nexport function resetForTesting() {\n    for (const key of Object.keys(exportedFunctions)) {\n        delete exportedFunctions[key];\n    }\n}\n//# sourceMappingURL=function.js.map","import { store as storeNodeMapping, storeOverride as storeOverrideNodeMapping } from '../nodes';\nimport { toLower } from '../../utils';\nimport { mutate } from '../MutationObserver';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\n/**\n * Propagates a property change for a Node to itself and all childNodes.\n * @param node Node to start applying change to\n * @param property Property to modify\n * @param value New value to apply\n */\nexport const propagate = (node, property, value) => {\n    node[property] = value;\n    node.childNodes.forEach((child) => propagate(child, property, value));\n};\n// https://developer.mozilla.org/en-US/docs/Web/API/Node\n// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget\n//\n// Please note, in this implmentation Node doesn't extend EventTarget.\n// This is intentional to reduce the number of classes.\nexport class Node {\n    ownerDocument; // TODO(choumx): Should be a Document.\n    // https://drafts.csswg.org/selectors-4/#scoping-root\n    [45 /* scopingRoot */];\n    nodeType;\n    nodeName;\n    childNodes = [];\n    parentNode = null;\n    isConnected = false;\n    [7 /* index */];\n    [9 /* transferredFormat */];\n    [8 /* creationFormat */];\n    [10 /* handlers */] = {};\n    constructor(nodeType, nodeName, ownerDocument, overrideIndex) {\n        this.nodeType = nodeType;\n        this.nodeName = nodeName;\n        this.ownerDocument = ownerDocument || this;\n        this[45 /* scopingRoot */] = this;\n        if (process.env.SERVER) {\n            return;\n        }\n        this[7 /* index */] = overrideIndex ? storeOverrideNodeMapping(this, overrideIndex) : storeNodeMapping(this);\n        this[9 /* transferredFormat */] = [this[7 /* index */]];\n    }\n    // Unimplemented Properties\n    // Node.baseURI – https://developer.mozilla.org/en-US/docs/Web/API/Node/baseURI\n    // Unimplemented Methods\n    // Node.compareDocumentPosition() – https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n    // Node.getRootNode() – https://developer.mozilla.org/en-US/docs/Web/API/Node/getRootNode\n    // Node.isDefaultNamespace() – https://developer.mozilla.org/en-US/docs/Web/API/Node/isDefaultNamespace\n    // Node.isEqualNode() – https://developer.mozilla.org/en-US/docs/Web/API/Node/isEqualNode\n    // Node.isSameNode() – https://developer.mozilla.org/en-US/docs/Web/API/Node/isSameNode\n    // Node.lookupPrefix() – https://developer.mozilla.org/en-US/docs/Web/API/Node/lookupPrefix\n    // Node.lookupNamespaceURI() – https://developer.mozilla.org/en-US/docs/Web/API/Node/lookupNamespaceURI\n    // Node.normalize() – https://developer.mozilla.org/en-US/docs/Web/API/Node/normalize\n    // Implemented at Element/Text layer\n    // Node.nodeValue – https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeValue\n    // Node.cloneNode – https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n    /**\n     * Getter returning the text representation of Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n     * @return text from all childNodes.\n     */\n    get textContent() {\n        return this.getTextContent();\n    }\n    /**\n     * Use `this.getTextContent()` instead of `super.textContent` to avoid incorrect or expensive ES5 transpilation.\n     */\n    getTextContent() {\n        let textContent = '';\n        const childNodes = this.childNodes;\n        if (childNodes.length) {\n            childNodes.forEach((childNode) => (textContent += childNode.textContent));\n            return textContent;\n        }\n        return '';\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/firstChild\n     * @return Node's first child in the tree, or null if the node has no children.\n     */\n    get firstChild() {\n        return this.childNodes[0] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/lastChild\n     * @return The last child of a node, or null if there are no child elements.\n     */\n    get lastChild() {\n        return this.childNodes[this.childNodes.length - 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/nextSibling\n     * @return node immediately following the specified one in it's parent's childNodes, or null if one doesn't exist.\n     */\n    get nextSibling() {\n        if (this.parentNode === null) {\n            return null;\n        }\n        const parentChildNodes = this.parentNode.childNodes;\n        return parentChildNodes[parentChildNodes.indexOf(this) + 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/previousSibling\n     * @return node immediately preceding the specified one in its parent's childNodes, or null if the specified node is the first in that list.\n     */\n    get previousSibling() {\n        if (this.parentNode === null) {\n            return null;\n        }\n        const parentChildNodes = this.parentNode.childNodes;\n        return parentChildNodes[parentChildNodes.indexOf(this) - 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/hasChildNodes\n     * @return boolean if the Node has childNodes.\n     */\n    hasChildNodes() {\n        return this.childNodes.length > 0;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/contains\n     * @param otherNode\n     * @return whether a Node is a descendant of a given Node\n     */\n    contains(otherNode) {\n        if (otherNode === this) {\n            return true;\n        }\n        if (this.childNodes.length > 0) {\n            if (this.childNodes.includes(this)) {\n                return true;\n            }\n            return this.childNodes.some((child) => child.contains(otherNode));\n        }\n        return false;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/insertBefore\n     * @param child\n     * @param referenceNode\n     * @return child after it has been inserted.\n     */\n    insertBefore(child, referenceNode) {\n        if (child === null || child === this) {\n            // The new child cannot contain the parent.\n            return child;\n        }\n        if (child.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */) {\n            child.childNodes.slice().forEach((node) => this.insertBefore(node, referenceNode));\n        }\n        else if (referenceNode == null) {\n            // When a referenceNode is not valid, appendChild(child).\n            return this.appendChild(child);\n        }\n        else if (this.childNodes.indexOf(referenceNode) >= 0) {\n            // Should only insertBefore direct children of this Node.\n            child.remove();\n            // Removing a child can cause this.childNodes to change, meaning we need to splice from its updated location.\n            this.childNodes.splice(this.childNodes.indexOf(referenceNode), 0, child);\n            this[56 /* insertedNode */](child);\n            mutate(this.ownerDocument, {\n                addedNodes: [child],\n                nextSibling: referenceNode,\n                type: 2 /* CHILD_LIST */,\n                target: this,\n            }, [\n                2 /* CHILD_LIST */,\n                this[7 /* index */],\n                referenceNode[7 /* index */],\n                0,\n                1,\n                0,\n                child[7 /* index */],\n            ]);\n            return child;\n        }\n        return null;\n    }\n    /**\n     * When a Node is inserted, this method is called (and can be extended by other classes)\n     * @param child\n     */\n    [56 /* insertedNode */](child) {\n        child.parentNode = this;\n        propagate(child, 'isConnected', this.isConnected);\n        propagate(child, 45 /* scopingRoot */, this[45 /* scopingRoot */]);\n    }\n    /**\n     * When a node is removed, this method is called (and can be extended by other classes)\n     * @param child\n     */\n    [57 /* removedNode */](child) {\n        child.parentNode = null;\n        propagate(child, 'isConnected', false);\n        propagate(child, 45 /* scopingRoot */, child);\n    }\n    /**\n     * Adds the specified childNode argument as the last child to the current node.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/appendChild\n     * @param child Child Node to append to this Node.\n     * @return Node the appended node.\n     */\n    appendChild(child) {\n        if (child.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */) {\n            child.childNodes.slice().forEach(this.appendChild, this);\n        }\n        else {\n            child.remove();\n            this.childNodes.push(child);\n            this[56 /* insertedNode */](child);\n            const previousSibling = this.childNodes[this.childNodes.length - 2];\n            mutate(this.ownerDocument, {\n                addedNodes: [child],\n                previousSibling,\n                type: 2 /* CHILD_LIST */,\n                target: this,\n            }, [\n                2 /* CHILD_LIST */,\n                this[7 /* index */],\n                0,\n                previousSibling ? previousSibling[7 /* index */] : 0,\n                1,\n                0,\n                child[7 /* index */],\n            ]);\n        }\n        return child;\n    }\n    /**\n     * Removes a child node from the current element.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/removeChild\n     * @param child Child Node to remove from this Node.\n     * @return Node removed from the tree or null if the node wasn't attached to this tree.\n     */\n    removeChild(child) {\n        const index = this.childNodes.indexOf(child);\n        const exists = index >= 0;\n        if (exists) {\n            this.childNodes.splice(index, 1);\n            this[57 /* removedNode */](child);\n            mutate(this.ownerDocument, {\n                removedNodes: [child],\n                type: 2 /* CHILD_LIST */,\n                target: this,\n            }, [2 /* CHILD_LIST */, this[7 /* index */], 0, 0, 0, 1, child[7 /* index */]]);\n            return child;\n        }\n        return null;\n    }\n    /**\n     * @param newChild\n     * @param oldChild\n     * @return child that was replaced.\n     * @note `HierarchyRequestError` not handled e.g. newChild is an ancestor of current node.\n     * @see https://dom.spec.whatwg.org/#concept-node-replace\n     */\n    replaceChild(newChild, oldChild) {\n        if (newChild === oldChild ||\n            // In DOM, this throws DOMException: \"The node to be replaced is not a child of this node.\"\n            oldChild.parentNode !== this ||\n            // In DOM, this throws DOMException: \"The new child element contains the parent.\"\n            newChild.contains(this)) {\n            return oldChild;\n        }\n        // If newChild already exists in the DOM, it is first removed.\n        // TODO: Consider using a mutation-free API here to avoid two mutations\n        // per replaceChild() call.\n        newChild.remove();\n        const index = this.childNodes.indexOf(oldChild);\n        this.childNodes.splice(index, 1, newChild);\n        this[57 /* removedNode */](oldChild);\n        this[56 /* insertedNode */](newChild);\n        mutate(this.ownerDocument, {\n            addedNodes: [newChild],\n            removedNodes: [oldChild],\n            type: 2 /* CHILD_LIST */,\n            nextSibling: this.childNodes[index + 1],\n            target: this,\n        }, [\n            2 /* CHILD_LIST */,\n            this[7 /* index */],\n            this.childNodes[index + 1] ? this.childNodes[index + 1][7 /* index */] : 0,\n            0,\n            1,\n            1,\n            newChild[7 /* index */],\n            oldChild[7 /* index */],\n        ]);\n        return oldChild;\n    }\n    /**\n     * Replaces the current node with the provided Array<node|string>.\n     * @param nodes\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ChildNode/replaceWith\n     */\n    replaceWith(...nodes) {\n        const parent = this.parentNode;\n        let nodeIterator = nodes.length;\n        let currentNode;\n        if (!parent) {\n            return;\n        }\n        if (!nodeIterator) {\n            parent.removeChild(this);\n        }\n        while (nodeIterator--) {\n            currentNode = nodes[nodeIterator];\n            if (typeof currentNode !== 'object') {\n                currentNode = this.ownerDocument.createTextNode(currentNode);\n            }\n            // TODO: Investigate inserting all new nodes in a single operation.\n            if (!nodeIterator) {\n                // currentNode is the first argument (currentNode === arguments[0])\n                parent.replaceChild(currentNode, this);\n            }\n            else {\n                parent.insertBefore(currentNode, this.nextSibling);\n            }\n        }\n    }\n    /**\n     * Removes this Node from the tree it belogs too.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ChildNode/remove\n     */\n    remove() {\n        if (this.parentNode) {\n            this.parentNode.removeChild(this);\n        }\n    }\n    /**\n     * Add an event listener to callback when a specific event type is dispatched.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n     * @param type Event Type (i.e 'click')\n     * @param handler Function called when event is dispatched.\n     */\n    addEventListener(type, handler, options = {}) {\n        const lowerType = toLower(type);\n        const storedType = storeString(lowerType);\n        const handlers = this[10 /* handlers */][lowerType];\n        let index = 0;\n        if (handlers) {\n            index = handlers.push(handler);\n        }\n        else {\n            this[10 /* handlers */][lowerType] = [handler];\n        }\n        transfer(this.ownerDocument, [\n            4 /* EVENT_SUBSCRIPTION */,\n            this[7 /* index */],\n            0,\n            1,\n            storedType,\n            index,\n            Number(Boolean(options.capture)),\n            Number(Boolean(options.once)),\n            Number(Boolean(options.passive)),\n            Number(Boolean(options.workerDOMPreventDefault)),\n        ]);\n    }\n    /**\n     * Remove a registered event listener for a specific event type.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n     * @param type Event Type (i.e 'click')\n     * @param handler Function to stop calling when event is dispatched.\n     */\n    removeEventListener(type, handler) {\n        const lowerType = toLower(type);\n        const handlers = this[10 /* handlers */][lowerType];\n        const index = !!handlers ? handlers.indexOf(handler) : -1;\n        if (index >= 0) {\n            handlers.splice(index, 1);\n            transfer(this.ownerDocument, [\n                4 /* EVENT_SUBSCRIPTION */,\n                this[7 /* index */],\n                1,\n                0,\n                storeString(lowerType),\n                index,\n            ]);\n        }\n    }\n    /**\n     * Dispatch an event for this Node.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent\n     * @param event Event to dispatch to this node and potentially cascade to parents.\n     */\n    dispatchEvent(event) {\n        let target = (event.currentTarget = this);\n        let handlers;\n        let iterator;\n        do {\n            handlers = target && target[10 /* handlers */] && target[10 /* handlers */][toLower(event.type)];\n            if (handlers) {\n                for (iterator = handlers.length; iterator--;) {\n                    if ((handlers[iterator].call(target, event) === false || event[51 /* end */]) && event.cancelable) {\n                        break;\n                    }\n                }\n            }\n        } while (event.bubbles && !(event.cancelable && event[50 /* stop */]) && (target = target && target.parentNode));\n        return !event.defaultPrevented;\n    }\n}\n//# sourceMappingURL=Node.js.map","import { Node } from './Node';\nimport { mutate } from '../MutationObserver';\nimport { store as storeString } from '../strings';\n// @see https://developer.mozilla.org/en-US/docs/Web/API/CharacterData\nexport class CharacterData extends Node {\n    [38 /* data */];\n    constructor(data, nodeType, nodeName, ownerDocument, overrideIndex) {\n        super(nodeType, nodeName, ownerDocument, overrideIndex);\n        this[38 /* data */] = data;\n        this[8 /* creationFormat */] = [this[7 /* index */], nodeType, storeString(nodeName), storeString(data), 0];\n    }\n    // Unimplemented Methods\n    // NonDocumentTypeChildNode.nextElementSibling – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/nextElementSibling\n    // NonDocumentTypeChildNode.previousElementSibling – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/previousElementSibling\n    // CharacterData.appendData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/appendData\n    // CharacterData.deleteData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/deleteData\n    // CharacterData.insertData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/insertData\n    // CharacterData.replaceData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/replaceData\n    // CharacterData.substringData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/substringData\n    /**\n     * @return Returns the string contained in private CharacterData.data\n     */\n    get data() {\n        return this[38 /* data */];\n    }\n    /**\n     * @param value string value to store as CharacterData.data.\n     */\n    set data(value) {\n        const oldValue = this.data;\n        this[38 /* data */] = value;\n        mutate(this.ownerDocument, {\n            target: this,\n            type: 1 /* CHARACTER_DATA */,\n            value,\n            oldValue,\n        }, [1 /* CHARACTER_DATA */, this[7 /* index */], storeString(value)]);\n    }\n    /**\n     * @return Returns the size of the string contained in CharacterData.data\n     */\n    get length() {\n        return this[38 /* data */].length;\n    }\n    /**\n     * @return Returns the string contained in CharacterData.data\n     */\n    get nodeValue() {\n        return this[38 /* data */];\n    }\n    /**\n     * @param value string value to store as CharacterData.data.\n     */\n    set nodeValue(value) {\n        this.data = value;\n    }\n}\n//# sourceMappingURL=CharacterData.js.map","import { CharacterData } from './CharacterData';\n// @see https://developer.mozilla.org/en-US/docs/Web/API/Comment\nexport class Comment extends CharacterData {\n    constructor(data, ownerDocument, overrideIndex) {\n        super(data, 8 /* COMMENT_NODE */, '#comment', ownerDocument, overrideIndex);\n    }\n    /**\n     * textContent getter, retrieves underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     */\n    get textContent() {\n        return this.data;\n    }\n    /**\n     * textContent setter, mutates underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     * @param value new value\n     */\n    set textContent(value) {\n        // Mutation Observation is performed by CharacterData.\n        this.nodeValue = value;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n     * @return new Comment Node with the same data as the Comment to clone.\n     */\n    cloneNode() {\n        return this.ownerDocument.createComment(this.data);\n    }\n}\n//# sourceMappingURL=Comment.js.map","const ALLOWLISTED_GLOBALS = {\n    Array: true,\n    ArrayBuffer: true,\n    BigInt: true,\n    BigInt64Array: true,\n    BigUint64Array: true,\n    Boolean: true,\n    Cache: true,\n    CustomEvent: true,\n    DataView: true,\n    Date: true,\n    Error: true,\n    EvalError: true,\n    Event: true,\n    EventTarget: true,\n    Float32Array: true,\n    Float64Array: true,\n    Function: true,\n    Infinity: true,\n    Int16Array: true,\n    Int32Array: true,\n    Int8Array: true,\n    Intl: true,\n    JSON: true,\n    Map: true,\n    Math: true,\n    NaN: true,\n    Number: true,\n    Object: true,\n    Promise: true,\n    Proxy: true,\n    RangeError: true,\n    ReferenceError: true,\n    Reflect: true,\n    RegExp: true,\n    Set: true,\n    String: true,\n    Symbol: true,\n    SyntaxError: true,\n    TextDecoder: true,\n    TextEncoder: true,\n    TypeError: true,\n    URIError: true,\n    URL: true,\n    Uint16Array: true,\n    Uint32Array: true,\n    Uint8Array: true,\n    Uint8ClampedArray: true,\n    WeakMap: true,\n    WeakSet: true,\n    WebAssembly: true,\n    WebSocket: true,\n    XMLHttpRequest: true,\n    atob: true,\n    addEventListener: true,\n    removeEventListener: true,\n    btoa: true,\n    caches: true,\n    clearInterval: true,\n    clearTimeout: true,\n    console: true,\n    decodeURI: true,\n    decodeURIComponent: true,\n    document: true,\n    encodeURI: true,\n    encodeURIComponent: true,\n    escape: true,\n    fetch: true,\n    indexedDB: true,\n    isFinite: true,\n    isNaN: true,\n    location: true,\n    navigator: true,\n    onerror: true,\n    onrejectionhandled: true,\n    onunhandledrejection: true,\n    parseFloat: true,\n    parseInt: true,\n    performance: true,\n    requestAnimationFrame: true,\n    cancelAnimationFrame: true,\n    self: true,\n    setTimeout: true,\n    setInterval: true,\n    unescape: true,\n};\n// Modify global scope by removing disallowed properties.\nexport function deleteGlobals(global) {\n    /**\n     * @param object\n     * @param property\n     * @return True if property was deleted from object. Otherwise, false.\n     */\n    const deleteUnsafe = (object, property) => {\n        if (!ALLOWLISTED_GLOBALS.hasOwnProperty(property)) {\n            try {\n                delete object[property];\n                return true;\n            }\n            catch (e) { }\n        }\n        return false;\n    };\n    // Walk up global's prototype chain and dereference non-allowlisted properties\n    // until EventTarget is reached.\n    let current = global;\n    while (current && current.constructor !== EventTarget) {\n        const deleted = [];\n        const failedToDelete = [];\n        Object.getOwnPropertyNames(current).forEach((prop) => {\n            if (deleteUnsafe(current, prop)) {\n                deleted.push(prop);\n            }\n            else {\n                failedToDelete.push(prop);\n            }\n        });\n        console.info(`Removed ${deleted.length} references from`, current, ':', deleted);\n        if (failedToDelete.length) {\n            console.info(`Failed to remove ${failedToDelete.length} references from`, current, ':', failedToDelete);\n        }\n        current = Object.getPrototypeOf(current);\n    }\n}\n//# sourceMappingURL=delete-globals.js.map","import { toLower, toUpper } from '../../utils';\n// To future authors: It would be great if we could enforce that elements are not modified by a ConditionPredicate.\nexport const tagNameConditionPredicate = (tagNames) => (element) => {\n    console.assert(tagNames.every((t) => t === toUpper(t)), 'tagNames must be all uppercase.');\n    return tagNames.includes(element.tagName);\n};\nexport const elementPredicate = (node) => node.nodeType === 1 /* ELEMENT_NODE */;\nexport const matchChildrenElements = (node, conditionPredicate) => {\n    const matchingElements = [];\n    node.childNodes.forEach((child) => {\n        if (elementPredicate(child)) {\n            if (conditionPredicate(child)) {\n                matchingElements.push(child);\n            }\n            matchingElements.push(...matchChildrenElements(child, conditionPredicate));\n        }\n    });\n    return matchingElements;\n};\nexport const matchChildElement = (element, conditionPredicate) => {\n    let returnValue = null;\n    element.children.some((child) => {\n        if (conditionPredicate(child)) {\n            returnValue = child;\n            return true;\n        }\n        const grandChildMatch = matchChildElement(child, conditionPredicate);\n        if (grandChildMatch !== null) {\n            returnValue = grandChildMatch;\n            return true;\n        }\n        return false;\n    });\n    return returnValue;\n};\nexport const matchNearestParent = (element, conditionPredicate) => {\n    while ((element = element.parentNode)) {\n        if (conditionPredicate(element)) {\n            return element;\n        }\n    }\n    return null;\n};\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors\n * @param attrSelector the selector we are trying to match for.\n * @param element the element being tested.\n * @return boolean for whether we match the condition\n */\nexport const matchAttrReference = (attrSelector, element) => {\n    if (!attrSelector) {\n        return false;\n    }\n    const equalPos = attrSelector.indexOf('=');\n    const selectorLength = attrSelector.length;\n    const caseInsensitive = attrSelector.charAt(selectorLength - 2) === 'i';\n    const endPos = caseInsensitive ? selectorLength - 3 : selectorLength - 1;\n    if (equalPos !== -1) {\n        const equalSuffix = attrSelector.charAt(equalPos - 1);\n        const possibleSuffixes = ['~', '|', '$', '^', '*'];\n        const attrString = possibleSuffixes.includes(equalSuffix) ? attrSelector.substring(1, equalPos - 1) : attrSelector.substring(1, equalPos);\n        const rawValue = attrSelector.substring(equalPos + 1, endPos);\n        const rawAttrValue = element.getAttribute(attrString);\n        if (rawAttrValue) {\n            const casedValue = caseInsensitive ? toLower(rawValue) : rawValue;\n            const casedAttrValue = caseInsensitive ? toLower(rawAttrValue) : rawAttrValue;\n            switch (equalSuffix) {\n                case '~':\n                    return casedAttrValue.split(' ').indexOf(casedValue) !== -1;\n                case '|':\n                    return casedAttrValue === casedValue || casedAttrValue === `${casedValue}-`;\n                case '^':\n                    return casedAttrValue.startsWith(casedValue);\n                case '$':\n                    return casedAttrValue.endsWith(casedValue);\n                case '*':\n                    return casedAttrValue.indexOf(casedValue) !== -1;\n                default:\n                    return casedAttrValue === casedValue;\n            }\n        }\n        return false;\n    }\n    else {\n        return element.hasAttribute(attrSelector.substring(1, endPos));\n    }\n};\n//# sourceMappingURL=matchElements.js.map","import { keyValueString } from '../../utils';\nexport const toString = (attributes) => attributes.map((attr) => keyValueString(attr.name, attr.value)).join(' ');\nexport const matchPredicate = (namespaceURI, name) => (attr) => attr.namespaceURI === namespaceURI && attr.name === name;\n//# sourceMappingURL=Attr.js.map","import { mutate } from '../MutationObserver';\nimport { toLower } from '../../utils';\nimport { store as storeString } from '../strings';\nconst hyphenateKey = (key) => toLower(key.replace(/(webkit|ms|moz|khtml)/g, '-$1').replace(/([a-zA-Z])(?=[A-Z])/g, '$1-'));\nexport const appendKeys = (keys) => {\n    const keysToAppend = keys.filter((key) => isNaN(key) && !CSSStyleDeclaration.prototype.hasOwnProperty(key));\n    if (keysToAppend.length <= 0) {\n        return;\n    }\n    const previousPrototypeLength = (CSSStyleDeclaration.prototype.length || 0);\n    if (previousPrototypeLength !== 0) {\n        CSSStyleDeclaration.prototype.length = previousPrototypeLength + keysToAppend.length;\n    }\n    else {\n        Object.defineProperty(CSSStyleDeclaration.prototype, 'length', {\n            configurable: true,\n            writable: true,\n            value: keysToAppend.length,\n        });\n    }\n    keysToAppend.forEach((key, index) => {\n        const hyphenatedKey = hyphenateKey(key);\n        CSSStyleDeclaration.prototype[index + previousPrototypeLength] = hyphenatedKey;\n        Object.defineProperties(CSSStyleDeclaration.prototype, {\n            [key]: {\n                get() {\n                    return this.getPropertyValue(hyphenatedKey);\n                },\n                set(value) {\n                    this.setProperty(hyphenatedKey, value);\n                },\n            },\n        });\n    });\n};\nexport class CSSStyleDeclaration {\n    [3 /* properties */] = {};\n    [44 /* storeAttribute */];\n    [13 /* target */];\n    constructor(target) {\n        this[44 /* storeAttribute */] = target[44 /* storeAttribute */].bind(target);\n        this[13 /* target */] = target;\n    }\n    /**\n     * Retrieve the value for a given property key.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/getPropertyValue\n     * @param key the name of the property to retrieve the value for.\n     * @return value stored for the provided key.\n     */\n    getPropertyValue(key) {\n        return this[3 /* properties */][key] || '';\n    }\n    /**\n     * Remove a value for a given property key.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/removeProperty\n     * @param key the name of the property to retrieve the value for.\n     * @return previously stored value for the provided key.\n     */\n    removeProperty(key) {\n        const oldValue = this.getPropertyValue(key);\n        this[3 /* properties */][key] = null;\n        this.mutated(this.cssText);\n        return oldValue;\n    }\n    /**\n     * Stores a given value for the provided key.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/setProperty\n     * @param key modify this key\n     * @param value store this value\n     */\n    setProperty(key, value) {\n        this[3 /* properties */][key] = value;\n        this.mutated(this.cssText);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/cssText\n     * @return css text string representing known and valid style declarations.\n     */\n    get cssText() {\n        let value;\n        let returnValue = '';\n        for (const key in this[3 /* properties */]) {\n            if ((value = this.getPropertyValue(key)) !== '') {\n                returnValue += `${key}: ${value}; `;\n            }\n        }\n        return returnValue.trim();\n    }\n    /**\n     * Replace all style declarations with new values parsed from a cssText string.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/cssText\n     * @param value css text string to parse and store\n     */\n    set cssText(value) {\n        // value should have an \"unknown\" type but get/set can't have different types.\n        // https://github.com/Microsoft/TypeScript/issues/2521\n        const stringValue = typeof value === 'string' ? value : '';\n        this[3 /* properties */] = {};\n        const values = stringValue.split(/[:;]/);\n        const length = values.length;\n        for (let index = 0; index + 1 < length; index += 2) {\n            this[3 /* properties */][toLower(values[index].trim())] = values[index + 1].trim();\n        }\n        this.mutated(this.cssText);\n    }\n    /**\n     * Report CSSStyleDeclaration mutations to MutationObserver.\n     * @param value value after mutation\n     * @private\n     * // TODO(KB): Write a test to ensure mutations are fired for CSSStyleDeclaration changes.\n     */\n    mutated(value) {\n        const oldValue = this[44 /* storeAttribute */](this[13 /* target */].namespaceURI, 'style', value);\n        mutate(this[13 /* target */].ownerDocument, {\n            type: 0 /* ATTRIBUTES */,\n            target: this[13 /* target */],\n            attributeName: 'style',\n            value,\n            oldValue,\n        }, [\n            0 /* ATTRIBUTES */,\n            this[13 /* target */][7 /* index */],\n            storeString('style'),\n            0,\n            value !== null ? storeString(value) + 1 : 0,\n        ]);\n    }\n}\n//# sourceMappingURL=CSSStyleDeclaration.js.map","import { toLower } from '../../utils';\n// TODO: Do all boolean attributes have boolean properties?\n// TODO: Do enumerated attributes with non-boolean properties exist?\nexport const reflectProperties = (properties, defineOn) => {\n    properties.forEach((pair) => {\n        for (const property in pair) {\n            const { 0: defaultValue, 1: attributeName = toLower(property), 2: keywords } = pair[property];\n            // Boolean attributes only care about presence, not attribute value.\n            // https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes\n            const isBooleanAttribute = typeof defaultValue === 'boolean';\n            Object.defineProperty(defineOn.prototype, property, {\n                enumerable: true,\n                get() {\n                    const element = this;\n                    const attributeValue = element.getAttribute(attributeName);\n                    if (keywords) {\n                        return element.hasAttribute(attributeName) ? attributeValue === keywords[0] : defaultValue;\n                    }\n                    if (isBooleanAttribute) {\n                        return element.hasAttribute(attributeName);\n                    }\n                    const castableValue = attributeValue || defaultValue;\n                    return typeof defaultValue === 'number' ? Number(castableValue) : String(castableValue);\n                },\n                set(value) {\n                    const element = this;\n                    if (keywords) {\n                        element.setAttribute(attributeName, value ? keywords[0] : keywords[1]);\n                    }\n                    else if (isBooleanAttribute) {\n                        value ? element.setAttribute(attributeName, '') : element.removeAttribute(attributeName);\n                    }\n                    else {\n                        element.setAttribute(attributeName, String(value));\n                    }\n                },\n            });\n        }\n    });\n};\n//# sourceMappingURL=enhanceElement.js.map","/**\n * @fileoverview\n * WorkerDOM's `Event` class. `CustomEvent` is available natively in web worker.\n */\nimport { get } from './nodes';\nexport class Event {\n    bubbles;\n    cancelable;\n    cancelBubble;\n    currentTarget;\n    defaultPrevented;\n    eventPhase;\n    isTrusted;\n    returnValue;\n    // public srcElement: Element | null;\n    // TODO(KB): Restore srcElement.\n    target;\n    timeStamp;\n    type;\n    scoped;\n    [50 /* stop */] = false;\n    [51 /* end */] = false;\n    pageX;\n    pageY;\n    offsetX;\n    offsetY;\n    touches;\n    changedTouches;\n    constructor(type, opts) {\n        this.type = type;\n        this.bubbles = !!opts.bubbles;\n        this.cancelable = !!opts.cancelable;\n    }\n    stopPropagation() {\n        this[50 /* stop */] = true;\n    }\n    stopImmediatePropagation() {\n        this[51 /* end */] = this[50 /* stop */] = true;\n    }\n    preventDefault() {\n        this.defaultPrevented = true;\n    }\n    /** Event.initEvent() is deprecated but supported here for legacy usage.  */\n    initEvent(type, bubbles, cancelable) {\n        this.type = type;\n        this.bubbles = bubbles;\n        this.cancelable = cancelable;\n    }\n}\n/**\n * Determine the target for a TransferrableEvent.\n * @param document Event intended within the scope of this document.\n * @param event\n */\nconst targetFromTransfer = (document, event) => {\n    if (event[13 /* target */] !== null) {\n        const index = event[13 /* target */][0];\n        // If the target was sent as index 0, use the current document.\n        return get(index !== 0 ? index : document[7 /* index */]);\n    }\n    return null;\n};\n/**\n *\n * @param document\n * @param event\n */\nconst touchListFromTransfer = (document, event, key) => {\n    if (event[key] !== undefined) {\n        const touchListKeys = Object.keys(event[key]);\n        const list = {\n            length: touchListKeys.length,\n            item(index) {\n                return this[index] || null;\n            },\n        };\n        touchListKeys.forEach((touchListKey) => {\n            const numericKey = Number(touchListKey);\n            const transferredTouch = event[key][numericKey];\n            list[numericKey] = {\n                identifier: transferredTouch[0],\n                screenX: transferredTouch[1],\n                screenY: transferredTouch[2],\n                clientX: transferredTouch[3],\n                clientY: transferredTouch[4],\n                pageX: transferredTouch[5],\n                pageY: transferredTouch[6],\n                target: get(transferredTouch[7] !== 0 ? transferredTouch[7] : document[7 /* index */]),\n            };\n        });\n        return list;\n    }\n    return undefined;\n};\n/**\n * When an event is dispatched from the main thread, it needs to be propagated in the worker thread.\n * Propagate adds an event listener to the worker global scope and uses the WorkerDOM Node.dispatchEvent\n * method to dispatch the transfered event in the worker thread.\n */\nexport function propagate(global) {\n    const document = global.document;\n    if (!document.addGlobalEventListener) {\n        return;\n    }\n    document.addGlobalEventListener('message', ({ data }) => {\n        if (data[12 /* type */] !== 1 /* EVENT */) {\n            return;\n        }\n        const event = data[39 /* event */];\n        const node = get(event[7 /* index */]);\n        if (node !== null) {\n            node.dispatchEvent(Object.assign(new Event(event[12 /* type */], {\n                bubbles: event[25 /* bubbles */],\n                cancelable: event[26 /* cancelable */],\n            }), {\n                cancelBubble: event[27 /* cancelBubble */],\n                defaultPrevented: event[29 /* defaultPrevented */],\n                eventPhase: event[30 /* eventPhase */],\n                isTrusted: event[31 /* isTrusted */],\n                returnValue: event[32 /* returnValue */],\n                target: targetFromTransfer(global.document, event),\n                timeStamp: event[33 /* timeStamp */],\n                scoped: event[34 /* scoped */],\n                keyCode: event[35 /* keyCode */],\n                pageX: event[60 /* pageX */],\n                pageY: event[61 /* pageY */],\n                offsetX: event[65 /* offsetX */],\n                offsetY: event[66 /* offsetY */],\n                touches: touchListFromTransfer(global.document, event, 62 /* touches */),\n                changedTouches: touchListFromTransfer(global.document, event, 63 /* changedTouches */),\n            }));\n        }\n    });\n}\n//# sourceMappingURL=Event.js.map","import { Element } from './Element';\nimport { reflectProperties } from './enhanceElement';\nimport { matchNearestParent, tagNameConditionPredicate } from './matchElements';\nexport const appendGlobalEventProperties = (keys) => {\n    const keysToAppend = keys.filter((key) => !HTMLElement.prototype.hasOwnProperty(key));\n    if (keysToAppend.length <= 0) {\n        return;\n    }\n    keysToAppend.forEach((key) => {\n        const normalizedKey = key.replace(/on/, '');\n        Object.defineProperty(HTMLElement.prototype, key, {\n            enumerable: true,\n            get() {\n                return this[76 /* propertyEventHandlers */][normalizedKey] || null;\n            },\n            set(value) {\n                const stored = this[76 /* propertyEventHandlers */][normalizedKey];\n                if (stored) {\n                    this.removeEventListener(normalizedKey, stored);\n                }\n                this.addEventListener(normalizedKey, value);\n                this[76 /* propertyEventHandlers */][normalizedKey] = value;\n            },\n        });\n    });\n};\nexport class HTMLElement extends Element {\n    [76 /* propertyEventHandlers */] = {};\n    /**\n     * Find the nearest parent form element.\n     * Implemented in HTMLElement since so many extensions of HTMLElement repeat this functionality. This is not to spec.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFieldSetElement\n     * @return nearest parent form element.\n     */\n    get form() {\n        return matchNearestParent(this, tagNameConditionPredicate(['FORM']));\n    }\n    [68 /* serializeAsTransferrableObject */]() {\n        return [7 /* HTMLElement */, this[7 /* index */]];\n    }\n}\n// Reflected properties\n// HTMLElement.accessKey => string, reflected attribute\n// HTMLElement.contentEditable => string, reflected attribute\n// HTMLElement.dir => string, reflected attribute\n// HTMLElement.lang => string, reflected attribute\n// HTMLElement.title => string, reflected attribute\n// HTMLElement.draggable => boolean, reflected attribute\n// HTMLElement.hidden => boolean, reflected attribute\n// HTMLElement.noModule => boolean, reflected attribute\n// HTMLElement.spellcheck => boolean, reflected attribute\n// HTMLElement.translate => boolean, reflected attribute\nreflectProperties([\n    { accessKey: [''] },\n    { contentEditable: ['inherit'] },\n    { dir: [''] },\n    { lang: [''] },\n    { title: [''] },\n    {\n        draggable: [false, /* attr */ undefined, /* keywords */ ['true', 'false']],\n    },\n    { hidden: [false, /* attr */ undefined] },\n    { noModule: [false] },\n    {\n        spellcheck: [true, /* attr */ undefined, /* keywords */ ['true', 'false']],\n    },\n    { translate: [true, /* attr */ undefined, /* keywords */ ['yes', 'no']] },\n], HTMLElement);\n// Properties\n// HTMLElement.accessKeyLabel => string, readonly value of \"accessKey\"\n// HTMLElement.isContentEditable => boolean, readonly value of contentEditable\n// HTMLElement.nonce => string, NOT REFLECTED\n// HTMLElement.tabIndex => number, reflected attribute\n// Layout Properties (TBD)\n// HTMLElement.offsetHeight => double, readonly\n// HTMLElement.offsetLeft => double, readonly\n// HTMLElement.offsetParent => Element\n// HTMLElement.offsetTop => double, readonly\n// HTMLElement.offsetWidth => double, readonly\n// Unimplemented Properties\n// HTMLElement.contextMenu => HTMLElement\n// HTMLElement.dataset => Map<string (get/set), string>\n// HTMLElement.dropzone => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.inert => boolean, reflected\n// HTMLElement.itemScope => boolean\n// HTMLElement.itemType => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.itemId => string\n// HTMLElement.itemRef => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.itemProp => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.itemValue => object\n// HTMLElement.properties => HTMLPropertiesCollection, readonly\n//# sourceMappingURL=HTMLElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { DOMTokenList, synchronizedAccessor } from './DOMTokenList';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLAnchorElement extends HTMLElement {\n    _relList;\n    get relList() {\n        return this._relList || (this._relList = new DOMTokenList(this, 'rel'));\n    }\n    /**\n     * Returns the href property/attribute value\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/toString\n     * @return string href attached to HTMLAnchorElement\n     */\n    toString() {\n        return this.href;\n    }\n    /**\n     * A Synonym for the Node.textContent property getter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement\n     * @return value of text node direct child of this Element.\n     */\n    get text() {\n        return this.textContent;\n    }\n    /**\n     * A Synonym for the Node.textContent property setter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement\n     * @param text replacement for all current childNodes.\n     */\n    set text(text) {\n        this.textContent = text;\n    }\n}\nregisterSubclass('a', HTMLAnchorElement);\ndefinePropertyBackedAttributes(HTMLAnchorElement, {\n    rel: [(el) => el.relList.value, (el, value) => (el.relList.value = value)],\n});\nsynchronizedAccessor(HTMLAnchorElement, 'relList', 'rel');\n// Reflected properties, strings.\n// HTMLAnchorElement.href => string, reflected attribute\n// HTMLAnchorElement.hreflang => string, reflected attribute\n// HTMLAnchorElement.media => string, reflected attribute\n// HTMLAnchorElement.target => string, reflected attribute\n// HTMLAnchorElement.type => string, reflected attribute\nreflectProperties([{ href: [''] }, { hreflang: [''] }, { media: [''] }, { target: [''] }, { type: [''] }], HTMLAnchorElement);\n// Unimplemented\n// HTMLAnchorElement.download => string, reflected attribute\n// HTMLAnchorElement.type => Is a DOMString that reflects the type HTML attribute, indicating the MIME type of the linked resource.\n// Unimplemented URL parse of href attribute due to IE11 compatibility and low usage.\n// Note: Implementation doable using a private url property\n/*\n  class {\n    private url: URL | null = null;\n\n    constructor(...) {\n      // Element.getAttribute('href') => Element.href.\n      Object.assign(this[TransferrableKeys.propertyBackedAttributes], {\n        href: this.href,\n      });\n    }\n\n    get href(): string {\n      return this.url ? this.url.href : '';\n    }\n    set href(url: string) {\n      this.url = new URL(url);\n      this.setAttribute('href', this.url.href);\n    }\n  }\n*/\n// HTMLAnchorElement.host => string\n// HTMLAnchorElement.hostname => string\n// HTMLAnchorElement.protocol => string\n// HTMLAnchorElement.pathname => string\n// HTMLAnchorElement.search => string\n// HTMLAnchorElement.hash => string\n// HTMLAnchorElement.username => string\n// HTMLAnchorElement.password => string\n// HTMLAnchorElement.origin => string, readonly (getter no setter)\n//# sourceMappingURL=HTMLAnchorElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLButtonElement extends HTMLElement {\n}\nregisterSubclass('button', HTMLButtonElement);\n// Reflected properties, strings.\n// HTMLButtonElement.formAction => string, reflected attribute\n// HTMLButtonElement.formEnctype => string, reflected attribute\n// HTMLButtonElement.formMethod => string, reflected attribute\n// HTMLButtonElement.formTarget => string, reflected attribute\n// HTMLButtonElement.name => string, reflected attribute\n// HTMLButtonElement.type => string, reflected attribute (default submit)\n// HTMLButtonElement.value => string, reflected attribute\n// HTMLButtonElement.autofocus => boolean, reflected attribute\n// HTMLButtonElement.disabled => boolean, reflected attribute\nreflectProperties([\n    { formAction: [''] },\n    { formEnctype: [''] },\n    { formMethod: [''] },\n    { formTarget: [''] },\n    { name: [''] },\n    { type: ['submit'] },\n    { value: [''] },\n    { autofocus: [false] },\n    { disabled: [false] },\n], HTMLButtonElement);\n// Not reflected\n// HTMLButtonElement.formNoValidate => boolean\n// HTMLButtonElement.validity => ValidityState, readonly\n// Unimplemented\n// HTMLButtonElement.form => HTMLFormElement | null, readonly\n// HTMLButtonElement.labels => Array<HTMLLabelElement>, readonly\n// HTMLButtonElement.menu => HTMLMenuElement\n// HTMLButtonElement.willValidate => boolean, readonly\n// HTMLButtonElement.validationMessage => string, readonly\n//# sourceMappingURL=HTMLButtonElement.js.map","import { transfer } from '../MutationTransfer';\nimport { serializeTransferrableObject } from '../serializeTransferrableObject';\nimport { store } from '../strings';\n/**\n * Wrapper class for CanvasGradient. The user will be able to manipulate as a regular CanvasGradient object.\n */\nexport class CanvasGradient {\n    id;\n    document;\n    constructor(id, document) {\n        this.document = document;\n        this.id = id;\n    }\n    addColorStop(offset, color) {\n        transfer(this.document, [\n            9 /* OBJECT_MUTATION */,\n            store('addColorStop'),\n            2,\n            ...this[68 /* serializeAsTransferrableObject */](),\n            ...serializeTransferrableObject([...arguments]),\n        ]);\n    }\n    [68 /* serializeAsTransferrableObject */]() {\n        return [5 /* TransferObject */, this.id];\n    }\n}\n//# sourceMappingURL=CanvasGradient.js.map","/**\n * Wrapper class for CanvasPattern. The user will be able to manipulate as a regular CanvasPattern object.\n * This class will be used when the CanvasRenderingContext is using an OffscreenCanvas polyfill.\n */\nexport class CanvasPattern {\n    id;\n    constructor(id) {\n        this.id = id;\n    }\n    /**\n     * This is an experimental method.\n     */\n    setTransform() { }\n    [68 /* serializeAsTransferrableObject */]() {\n        return [5 /* TransferObject */, this.id];\n    }\n}\n//# sourceMappingURL=CanvasPattern.js.map","import { transfer } from '../MutationTransfer';\nimport { toLower } from '../../utils';\nimport { store } from '../strings';\nimport { serializeTransferrableObject } from '../serializeTransferrableObject';\nimport { CanvasGradient } from './CanvasGradient';\nimport { CanvasPattern } from './CanvasPattern';\n/**\n * Handles calls to a CanvasRenderingContext2D object in cases where the user's environment does not\n * support native OffscreenCanvas.\n */\nexport class OffscreenCanvasPolyfill {\n    canvas;\n    context;\n    constructor(canvas) {\n        this.canvas = canvas;\n    }\n    getContext(contextType) {\n        if (!this.context) {\n            if (toLower(contextType) === '2d') {\n                this.context = new OffscreenCanvasRenderingContext2DPolyfill(this.canvas);\n            }\n            else {\n                throw new Error('Context type not supported.');\n            }\n        }\n        return this.context;\n    }\n}\nclass OffscreenCanvasRenderingContext2DPolyfill {\n    canvasElement;\n    lineDash;\n    objectIndex = 0;\n    constructor(canvas) {\n        this.canvasElement = canvas;\n        this.lineDash = [];\n    }\n    [67 /* mutated */](fnName, args) {\n        transfer(this.canvasElement.ownerDocument, [\n            9 /* OBJECT_MUTATION */,\n            store(fnName),\n            args.length,\n            ...this[68 /* serializeAsTransferrableObject */](),\n            ...serializeTransferrableObject(args),\n        ]);\n    }\n    [68 /* serializeAsTransferrableObject */]() {\n        return [6 /* CanvasRenderingContext2D */, this.canvasElement[7 /* index */]];\n    }\n    /**\n     * Creates object in the main thread, and associates it with the id provided.\n     * @param objectId ID to associate the created object with.\n     * @param creationMethod Method to use for object creation.\n     * @param creationArgs Arguments to pass into the creation method.\n     */\n    createObjectReference(objectId, creationMethod, creationArgs) {\n        transfer(this.canvasElement.ownerDocument, [\n            10 /* OBJECT_CREATION */,\n            store(creationMethod),\n            objectId,\n            creationArgs.length,\n            ...this[68 /* serializeAsTransferrableObject */](),\n            ...serializeTransferrableObject(creationArgs),\n        ]);\n    }\n    get canvas() {\n        return this.canvasElement;\n    }\n    clearRect(x, y, w, h) {\n        this[67 /* mutated */]('clearRect', [...arguments]);\n    }\n    fillRect(x, y, w, h) {\n        this[67 /* mutated */]('fillRect', [...arguments]);\n    }\n    strokeRect(x, y, w, h) {\n        this[67 /* mutated */]('strokeRect', [...arguments]);\n    }\n    set lineWidth(value) {\n        this[67 /* mutated */]('lineWidth', [...arguments]);\n    }\n    fillText(text, x, y, maxWidth) {\n        this[67 /* mutated */]('fillText', [...arguments]);\n    }\n    moveTo(x, y) {\n        this[67 /* mutated */]('moveTo', [...arguments]);\n    }\n    lineTo(x, y) {\n        this[67 /* mutated */]('lineTo', [...arguments]);\n    }\n    closePath() {\n        this[67 /* mutated */]('closePath', []);\n    }\n    stroke() {\n        this[67 /* mutated */]('stroke', []);\n    }\n    restore() {\n        this[67 /* mutated */]('restore', []);\n    }\n    save() {\n        this[67 /* mutated */]('save', []);\n    }\n    resetTransform() {\n        this[67 /* mutated */]('resetTransform', []);\n    }\n    rotate(angle) {\n        this[67 /* mutated */]('rotate', [...arguments]);\n    }\n    transform(a, b, c, d, e, f) {\n        this[67 /* mutated */]('transform', [...arguments]);\n    }\n    translate(x, y) {\n        this[67 /* mutated */]('translate', [...arguments]);\n    }\n    scale(x, y) {\n        this[67 /* mutated */]('scale', [...arguments]);\n    }\n    set globalAlpha(value) {\n        this[67 /* mutated */]('globalAlpha', [...arguments]);\n    }\n    set globalCompositeOperation(value) {\n        this[67 /* mutated */]('globalCompositeOperation', [...arguments]);\n    }\n    set imageSmoothingQuality(value) {\n        this[67 /* mutated */]('imageSmoothingQuality', [...arguments]);\n    }\n    set fillStyle(value) {\n        this[67 /* mutated */]('fillStyle', [...arguments]);\n    }\n    set strokeStyle(value) {\n        this[67 /* mutated */]('strokeStyle', [...arguments]);\n    }\n    set shadowBlur(value) {\n        this[67 /* mutated */]('shadowBlur', [...arguments]);\n    }\n    set shadowColor(value) {\n        this[67 /* mutated */]('shadowColor', [...arguments]);\n    }\n    set shadowOffsetX(value) {\n        this[67 /* mutated */]('shadowOffsetX', [...arguments]);\n    }\n    set shadowOffsetY(value) {\n        this[67 /* mutated */]('shadowOffsetY', [...arguments]);\n    }\n    set filter(value) {\n        this[67 /* mutated */]('filter', [...arguments]);\n    }\n    beginPath() {\n        this[67 /* mutated */]('beginPath', []);\n    }\n    strokeText(text, x, y, maxWidth) {\n        this[67 /* mutated */]('strokeText', [...arguments]);\n    }\n    set textAlign(value) {\n        this[67 /* mutated */]('textAlign', [...arguments]);\n    }\n    set textBaseline(value) {\n        this[67 /* mutated */]('textBaseline', [...arguments]);\n    }\n    set lineCap(value) {\n        this[67 /* mutated */]('lineCap', [...arguments]);\n    }\n    set lineDashOffset(value) {\n        this[67 /* mutated */]('lineDashOffset', [...arguments]);\n    }\n    set lineJoin(value) {\n        this[67 /* mutated */]('lineJoin', [...arguments]);\n    }\n    set miterLimit(value) {\n        this[67 /* mutated */]('miterLimit', [...arguments]);\n    }\n    arc(x, y, radius, startAngle, endAngle, anticlockwise) {\n        this[67 /* mutated */]('arc', [...arguments]);\n    }\n    arcTo(x1, y1, x2, y2, radius) {\n        this[67 /* mutated */]('arcTo', [...arguments]);\n    }\n    set direction(value) {\n        this[67 /* mutated */]('direction', [...arguments]);\n    }\n    set font(value) {\n        this[67 /* mutated */]('font', [...arguments]);\n    }\n    ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, anticlockwise) {\n        this[67 /* mutated */]('ellipse', [...arguments]);\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this[67 /* mutated */]('bezierCurveTo', [...arguments]);\n    }\n    rect(x, y, width, height) {\n        this[67 /* mutated */]('rect', [...arguments]);\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this[67 /* mutated */]('quadraticCurveTo', [...arguments]);\n    }\n    set imageSmoothingEnabled(value) {\n        this[67 /* mutated */]('imageSmoothingEnabled', [...arguments]);\n    }\n    setLineDash(lineDash) {\n        lineDash = [...lineDash];\n        if (lineDash.length % 2 !== 0) {\n            lineDash = lineDash.concat(lineDash);\n        }\n        this.lineDash = lineDash;\n        this[67 /* mutated */]('setLineDash', [...arguments]);\n    }\n    getLineDash() {\n        return [...this.lineDash];\n    }\n    clip(pathOrFillRule, fillRule) {\n        if (typeof pathOrFillRule === 'object') {\n            throw new Error('clip(Path2D) is currently not supported!');\n        }\n        this[67 /* mutated */]('clip', [...arguments]);\n    }\n    fill(pathOrFillRule, fillRule) {\n        if (typeof pathOrFillRule === 'object') {\n            throw new Error('fill(Path2D) is currently not supported!');\n        }\n        this[67 /* mutated */]('fill', [...arguments]);\n    }\n    // Method has a different signature in MDN than it does in HTML spec\n    setTransform(transformOrA, bOrC, cOrD, dOrE, eOrF, f) {\n        if (typeof transformOrA === 'object') {\n            throw new Error('setTransform(DOMMatrix2DInit) is currently not supported!');\n        }\n        this[67 /* mutated */]('setTransform', [...arguments]);\n    }\n    createLinearGradient(x0, y0, x1, y1) {\n        const gradientId = this.objectIndex++;\n        this.createObjectReference(gradientId, 'createLinearGradient', [...arguments]);\n        return new CanvasGradient(gradientId, this.canvasElement.ownerDocument);\n    }\n    createRadialGradient(x0, y0, r0, x1, y1, r1) {\n        const gradientId = this.objectIndex++;\n        this.createObjectReference(gradientId, 'createRadialGradient', [...arguments]);\n        return new CanvasGradient(gradientId, this.canvasElement.ownerDocument);\n    }\n    createPattern(image, repetition) {\n        const patternId = this.objectIndex++;\n        this.createObjectReference(patternId, 'createPattern', [...arguments]);\n        return new CanvasPattern(patternId);\n    }\n    drawImage(image, dx, dy) {\n        this[67 /* mutated */]('drawImage', [...arguments]);\n    }\n    createImageData() {\n        return {};\n    }\n    getImageData() {\n        return {};\n    }\n    putImageData() { }\n    isPointInPath() {\n        throw new Error('isPointInPath is not implemented.');\n    }\n    isPointInStroke() {\n        throw new Error('isPointInStroke is not implemented.');\n    }\n    measureText() {\n        throw new Error('measureText is not implemented.');\n    }\n}\n//# sourceMappingURL=OffscreenCanvasPolyfill.js.map","import { retrieveImageBitmap } from './canvas-utils';\n/**\n * Wraps CanvasPattern for usage in a native OffscreenCanvas case.\n */\nexport class FakeNativeCanvasPattern {\n    [70 /* patternImplementation */] = {};\n    [71 /* patternUpgraded */] = false;\n    [72 /* patternUpgradePromise */];\n    /**\n     * Retrieves ImageBitmap object from main-thread, which replicates the input image. Upon\n     * retrieval, uses it to create a real CanvasPattern and upgrade the implementation property.\n     * @param canvas Canvas element used to create the pattern.\n     * @param image Image to be used as the pattern's image\n     * @param repetition DOMStrings indicating how to repeat the pattern's image.\n     */\n    [69 /* retrieveCanvasPattern */](canvas, image, repetition) {\n        this[72 /* patternUpgradePromise */] = retrieveImageBitmap(image, canvas)\n            // Create new pattern with retrieved ImageBitmap\n            .then((instance) => {\n            const pattern = canvas.getContext('2d').createPattern(instance, repetition);\n            if (!pattern) {\n                throw new Error('Pattern is null!');\n            }\n            this[70 /* patternImplementation */] = pattern;\n            this[71 /* patternUpgraded */] = true;\n        });\n        return this[72 /* patternUpgradePromise */];\n    }\n    // This method is experimental.\n    // Takes an SVGMatrix as an argument, which is a deprecated API.\n    setTransform() { }\n}\n//# sourceMappingURL=FakeNativeCanvasPattern.js.map","import { transfer } from '../MutationTransfer';\nimport { OffscreenCanvasPolyfill } from './OffscreenCanvasPolyfill';\nimport { FakeNativeCanvasPattern } from './FakeNativeCanvasPattern';\nimport { retrieveImageBitmap } from './canvas-utils';\nexport const deferredUpgrades = new WeakMap();\n/**\n * Delegates all CanvasRenderingContext2D calls, either to an OffscreenCanvas or a polyfill\n * (depending on whether it is supported).\n */\nexport class CanvasRenderingContext2DShim {\n    queue = [];\n    implementation;\n    upgraded = false;\n    canvasElement;\n    polyfillUsed;\n    // createPattern calls need to retrieve an ImageBitmap from the main-thread. Since those can\n    // happen subsequently, we must keep track of these to avoid reentrancy problems.\n    unresolvedCalls = 0;\n    goodImplementation;\n    constructor(canvas) {\n        this.canvasElement = canvas;\n        const OffscreenCanvas = canvas.ownerDocument.defaultView.OffscreenCanvas;\n        // If the browser does not support OffscreenCanvas, use polyfill\n        if (typeof OffscreenCanvas === 'undefined') {\n            this.implementation = new OffscreenCanvasPolyfill(canvas).getContext('2d');\n            this.upgraded = true;\n            this.polyfillUsed = true;\n        }\n        // If the browser supports OffscreenCanvas:\n        // 1. Use un-upgraded (not auto-synchronized) version for all calls performed immediately after\n        // creation. All calls will be queued to call on upgraded version after.\n        // 2. Retrieve an auto-synchronized OffscreenCanvas from the main-thread and call all methods\n        // in the queue.\n        else {\n            this.implementation = new OffscreenCanvas(0, 0).getContext('2d');\n            this.getOffscreenCanvasAsync(this.canvasElement);\n            this.polyfillUsed = false;\n        }\n    }\n    /**\n     * Retrieves auto-synchronized version of an OffscreenCanvas from the main-thread.\n     * @param canvas HTMLCanvasElement associated with this context.\n     */\n    getOffscreenCanvasAsync(canvas) {\n        this.unresolvedCalls++;\n        const deferred = {};\n        const document = this.canvasElement.ownerDocument;\n        const isTestMode = !document.addGlobalEventListener;\n        const upgradePromise = new Promise((resolve) => {\n            const messageHandler = ({ data }) => {\n                if (data[12 /* type */] === 9 /* OFFSCREEN_CANVAS_INSTANCE */ &&\n                    data[13 /* target */][0] === canvas[7 /* index */]) {\n                    document.removeGlobalEventListener('message', messageHandler);\n                    const transferredOffscreenCanvas = data[38 /* data */];\n                    resolve(transferredOffscreenCanvas);\n                }\n            };\n            if (!document.addGlobalEventListener) {\n                if (isTestMode) {\n                    deferred.resolve = resolve;\n                }\n                else {\n                    throw new Error('addGlobalEventListener is not defined.');\n                }\n            }\n            else {\n                document.addGlobalEventListener('message', messageHandler);\n                transfer(canvas.ownerDocument, [8 /* OFFSCREEN_CANVAS_INSTANCE */, canvas[7 /* index */]]);\n            }\n        }).then((instance) => {\n            this.goodImplementation = instance.getContext('2d');\n            this.maybeUpgradeImplementation();\n        });\n        if (isTestMode) {\n            deferred.upgradePromise = upgradePromise;\n            deferredUpgrades.set(canvas, deferred);\n        }\n        return upgradePromise;\n    }\n    /**\n     * Degrades the underlying context implementation and adds to the unresolved call count.\n     */\n    degradeImplementation() {\n        this.upgraded = false;\n        const OffscreenCanvas = this.canvasElement.ownerDocument.defaultView.OffscreenCanvas;\n        this.implementation = new OffscreenCanvas(0, 0).getContext('2d');\n        this.unresolvedCalls++;\n    }\n    /**\n     * Will upgrade the underlying context implementation if no more unresolved calls remain.\n     */\n    maybeUpgradeImplementation() {\n        this.unresolvedCalls--;\n        if (this.unresolvedCalls === 0) {\n            this.implementation = this.goodImplementation;\n            this.upgraded = true;\n            this.flushQueue();\n        }\n    }\n    flushQueue() {\n        for (const call of this.queue) {\n            if (call.isSetter) {\n                this[call.fnName] = call.args[0];\n            }\n            else {\n                this[call.fnName](...call.args);\n            }\n        }\n        this.queue.length = 0;\n    }\n    delegateFunc(name, args) {\n        const returnValue = this.implementation[name](...args);\n        if (!this.upgraded) {\n            this.queue.push({ fnName: name, args, isSetter: false });\n        }\n        return returnValue;\n    }\n    delegateSetter(name, args) {\n        this.implementation[name] = args[0];\n        if (!this.upgraded) {\n            this.queue.push({ fnName: name, args, isSetter: true });\n        }\n    }\n    delegateGetter(name) {\n        return this.implementation[name];\n    }\n    /* DRAWING RECTANGLES */\n    clearRect(x, y, width, height) {\n        this.delegateFunc('clearRect', [...arguments]);\n    }\n    fillRect(x, y, width, height) {\n        this.delegateFunc('fillRect', [...arguments]);\n    }\n    strokeRect(x, y, width, height) {\n        this.delegateFunc('strokeRect', [...arguments]);\n    }\n    /* DRAWING TEXT */\n    fillText(text, x, y, maxWidth) {\n        this.delegateFunc('fillText', [...arguments]);\n    }\n    strokeText(text, x, y, maxWidth) {\n        this.delegateFunc('strokeText', [...arguments]);\n    }\n    measureText(text) {\n        return this.delegateFunc('measureText', [...arguments]);\n    }\n    /* LINE STYLES */\n    set lineWidth(value) {\n        this.delegateSetter('lineWidth', [...arguments]);\n    }\n    get lineWidth() {\n        return this.delegateGetter('lineWidth');\n    }\n    set lineCap(value) {\n        this.delegateSetter('lineCap', [...arguments]);\n    }\n    get lineCap() {\n        return this.delegateGetter('lineCap');\n    }\n    set lineJoin(value) {\n        this.delegateSetter('lineJoin', [...arguments]);\n    }\n    get lineJoin() {\n        return this.delegateGetter('lineJoin');\n    }\n    set miterLimit(value) {\n        this.delegateSetter('miterLimit', [...arguments]);\n    }\n    get miterLimit() {\n        return this.delegateGetter('miterLimit');\n    }\n    getLineDash() {\n        return this.delegateFunc('getLineDash', [...arguments]);\n    }\n    setLineDash(segments) {\n        this.delegateFunc('setLineDash', [...arguments]);\n    }\n    set lineDashOffset(value) {\n        this.delegateSetter('lineDashOffset', [...arguments]);\n    }\n    get lineDashOffset() {\n        return this.delegateGetter('lineDashOffset');\n    }\n    /* TEXT STYLES */\n    set font(value) {\n        this.delegateSetter('font', [...arguments]);\n    }\n    get font() {\n        return this.delegateGetter('font');\n    }\n    set textAlign(value) {\n        this.delegateSetter('textAlign', [...arguments]);\n    }\n    get textAlign() {\n        return this.delegateGetter('textAlign');\n    }\n    set textBaseline(value) {\n        this.delegateSetter('textBaseline', [...arguments]);\n    }\n    get textBaseline() {\n        return this.delegateGetter('textBaseline');\n    }\n    set direction(value) {\n        this.delegateSetter('direction', [...arguments]);\n    }\n    get direction() {\n        return this.delegateGetter('direction');\n    }\n    /* FILL AND STROKE STYLES */\n    set fillStyle(value) {\n        // 1. Native pattern instances given to the user hold the 'real' pattern as their implementation prop.\n        // 2. Pattern must be upgraded, otherwise an undefined 'implementation' will be queued instead of the wrapper object.\n        if (value instanceof FakeNativeCanvasPattern && this.upgraded) {\n            // This case occurs only when an un-upgraded pattern is passed into a different (already\n            // upgraded) canvas context.\n            if (!value[71 /* patternUpgraded */]) {\n                this.queue.push({ fnName: 'fillStyle', args: [value], isSetter: true });\n                this.degradeImplementation();\n                value[72 /* patternUpgradePromise */].then(() => {\n                    this.maybeUpgradeImplementation();\n                });\n            }\n            else {\n                this.delegateSetter('fillStyle', [value[70 /* patternImplementation */]]);\n            }\n            // Any other case does not require special handling.\n        }\n        else {\n            this.delegateSetter('fillStyle', [...arguments]);\n        }\n    }\n    get fillStyle() {\n        return this.delegateGetter('fillStyle');\n    }\n    set strokeStyle(value) {\n        // 1. Native pattern instances given to the user hold the 'real' pattern as their implementation prop.\n        // 2. Pattern must be upgraded, otherwise an undefined 'implementation' could be queued instead of the wrapper object.\n        if (value instanceof FakeNativeCanvasPattern && this.upgraded) {\n            // This case occurs only when an un-upgraded pattern is passed into a different (already\n            // upgraded) canvas context.\n            if (!value[71 /* patternUpgraded */]) {\n                this.queue.push({\n                    fnName: 'strokeStyle',\n                    args: [value],\n                    isSetter: true,\n                });\n                this.degradeImplementation();\n                value[72 /* patternUpgradePromise */].then(() => {\n                    this.maybeUpgradeImplementation();\n                });\n            }\n            else {\n                this.delegateSetter('strokeStyle', [value[70 /* patternImplementation */]]);\n            }\n            // Any other case does not require special handling.\n        }\n        else {\n            this.delegateSetter('strokeStyle', [...arguments]);\n        }\n    }\n    get strokeStyle() {\n        return this.delegateGetter('strokeStyle');\n    }\n    /* GRADIENTS AND PATTERNS */\n    createLinearGradient(x0, y0, x1, y1) {\n        return this.delegateFunc('createLinearGradient', [...arguments]);\n    }\n    createRadialGradient(x0, y0, r0, x1, y1, r1) {\n        return this.delegateFunc('createRadialGradient', [...arguments]);\n    }\n    createPattern(image, repetition) {\n        const ImageBitmap = this.canvasElement.ownerDocument.defaultView.ImageBitmap;\n        // Only HTMLElement image sources require special handling. ImageBitmap is OK to use.\n        if (this.polyfillUsed || image instanceof ImageBitmap) {\n            return this.delegateFunc('createPattern', [...arguments]);\n        }\n        else {\n            // Degrade the underlying implementation because we don't want calls on the real one until\n            // after pattern is retrieved\n            this.degradeImplementation();\n            const fakePattern = new FakeNativeCanvasPattern();\n            fakePattern[69 /* retrieveCanvasPattern */](this.canvas, image, repetition).then(() => {\n                this.maybeUpgradeImplementation();\n            });\n            return fakePattern;\n        }\n    }\n    /* DRAWING IMAGES */\n    drawImage(image, dx, dy) {\n        const ImageBitmap = this.canvasElement.ownerDocument.defaultView.ImageBitmap;\n        // Only HTMLElement image sources require special handling. ImageBitmap is OK to use.\n        if (this.polyfillUsed || image instanceof ImageBitmap) {\n            this.delegateFunc('drawImage', [...arguments]);\n        }\n        else {\n            // Queue the drawImage call to make sure it gets called in correct order\n            const args = [];\n            this.queue.push({ fnName: 'drawImage', args, isSetter: false });\n            // Degrade the underlying implementation because we don't want calls on the real one\n            // until after the ImageBitmap is received.\n            this.degradeImplementation();\n            // Retrieve an ImageBitmap from the main-thread with the same image as the input image\n            retrieveImageBitmap(image, this.canvas)\n                // Then call the actual method with the retrieved ImageBitmap\n                .then((instance) => {\n                args.push(instance, dx, dy);\n                this.maybeUpgradeImplementation();\n            });\n        }\n    }\n    /* SHADOWS */\n    set shadowBlur(value) {\n        this.delegateSetter('shadowBlur', [...arguments]);\n    }\n    get shadowBlur() {\n        return this.delegateGetter('shadowBlur');\n    }\n    set shadowColor(value) {\n        this.delegateSetter('shadowColor', [...arguments]);\n    }\n    get shadowColor() {\n        return this.delegateGetter('shadowColor');\n    }\n    set shadowOffsetX(value) {\n        this.delegateSetter('shadowOffsetX', [...arguments]);\n    }\n    get shadowOffsetX() {\n        return this.delegateGetter('shadowOffsetX');\n    }\n    set shadowOffsetY(value) {\n        this.delegateSetter('shadowOffsetY', [...arguments]);\n    }\n    get shadowOffsetY() {\n        return this.delegateGetter('shadowOffsetY');\n    }\n    /* PATHS */\n    beginPath() {\n        this.delegateFunc('beginPath', [...arguments]);\n    }\n    closePath() {\n        this.delegateFunc('closePath', [...arguments]);\n    }\n    moveTo(x, y) {\n        this.delegateFunc('moveTo', [...arguments]);\n    }\n    lineTo(x, y) {\n        this.delegateFunc('lineTo', [...arguments]);\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this.delegateFunc('bezierCurveTo', [...arguments]);\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this.delegateFunc('quadraticCurveTo', [...arguments]);\n    }\n    arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n        this.delegateFunc('arc', [...arguments]);\n    }\n    arcTo(x1, y1, x2, y2, radius) {\n        this.delegateFunc('arcTo', [...arguments]);\n    }\n    ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise) {\n        this.delegateFunc('ellipse', [...arguments]);\n    }\n    rect(x, y, width, height) {\n        this.delegateFunc('rect', [...arguments]);\n    }\n    /* DRAWING PATHS */\n    fill(pathOrFillRule, fillRule) {\n        const args = [...arguments];\n        this.delegateFunc('fill', args);\n    }\n    stroke(path) {\n        const args = [...arguments];\n        this.delegateFunc('stroke', args);\n    }\n    clip(pathOrFillRule, fillRule) {\n        const args = [...arguments];\n        this.delegateFunc('clip', args);\n    }\n    isPointInPath(pathOrX, xOrY, yOrFillRule, fillRule) {\n        const args = [...arguments];\n        return this.delegateFunc('isPointInPath', args);\n    }\n    isPointInStroke(pathOrX, xOrY, y) {\n        const args = [...arguments];\n        return this.delegateFunc('isPointInStroke', args);\n    }\n    /* TRANSFORMATIONS */\n    rotate(angle) {\n        this.delegateFunc('rotate', [...arguments]);\n    }\n    scale(x, y) {\n        this.delegateFunc('scale', [...arguments]);\n    }\n    translate(x, y) {\n        this.delegateFunc('translate', [...arguments]);\n    }\n    transform(a, b, c, d, e, f) {\n        this.delegateFunc('transform', [...arguments]);\n    }\n    setTransform(transformOrA, bOrC, cOrD, dOrE, eOrF, f) {\n        const args = [...arguments];\n        this.delegateFunc('setTransform', args);\n    }\n    /* experimental */ resetTransform() {\n        this.delegateFunc('resetTransform', [...arguments]);\n    }\n    /* COMPOSITING */\n    set globalAlpha(value) {\n        this.delegateSetter('globalAlpha', [...arguments]);\n    }\n    get globalAlpha() {\n        return this.delegateGetter('globalAlpha');\n    }\n    set globalCompositeOperation(value) {\n        this.delegateSetter('globalCompositeOperation', [...arguments]);\n    }\n    get globalCompositeOperation() {\n        return this.delegateGetter('globalCompositeOperation');\n    }\n    /* PIXEL MANIPULATION */\n    createImageData(imagedataOrWidth, height) {\n        const args = [...arguments];\n        return this.delegateFunc('createImageData', args);\n    }\n    getImageData(sx, sy, sw, sh) {\n        return this.delegateFunc('getImageData', [...arguments]);\n    }\n    putImageData(imageData, dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight) {\n        this.delegateFunc('putImageData', [...arguments]);\n    }\n    /* IMAGE SMOOTHING */\n    /* experimental */ set imageSmoothingEnabled(value) {\n        this.delegateSetter('imageSmoothingEnabled', [...arguments]);\n    }\n    /* experimental */ get imageSmoothingEnabled() {\n        return this.delegateGetter('imageSmoothingEnabled');\n    }\n    /* experimental */ set imageSmoothingQuality(value) {\n        this.delegateSetter('imageSmoothingQuality', [...arguments]);\n    }\n    /* experimental */ get imageSmoothingQuality() {\n        return this.delegateGetter('imageSmoothingQuality');\n    }\n    /* THE CANVAS STATE */\n    save() {\n        this.delegateFunc('save', [...arguments]);\n    }\n    restore() {\n        this.delegateFunc('restore', [...arguments]);\n    }\n    // canvas property is readonly. We don't want to implement getters, but this must be here\n    // in order for TypeScript to not complain (for now)\n    get canvas() {\n        return this.canvasElement;\n    }\n    /* FILTERS */\n    /* experimental */ set filter(value) {\n        this.delegateSetter('filter', [...arguments]);\n    }\n    /* experimental */ get filter() {\n        return this.delegateGetter('filter');\n    }\n}\n//# sourceMappingURL=CanvasRenderingContext2D.js.map","import { HTMLElement } from './HTMLElement';\nimport { registerSubclass } from './Element';\nimport { reflectProperties } from './enhanceElement';\nimport { CanvasRenderingContext2DShim } from '../canvas/CanvasRenderingContext2D';\nexport class HTMLCanvasElement extends HTMLElement {\n    context;\n    getContext(contextType) {\n        if (!this.context) {\n            if (contextType === '2D' || contextType === '2d') {\n                this.context = new CanvasRenderingContext2DShim(this);\n            }\n            else {\n                throw new Error('Context type not supported.');\n            }\n        }\n        return this.context;\n    }\n}\nregisterSubclass('canvas', HTMLCanvasElement);\n// Reflected Properties\n// HTMLCanvasElement.height => number, reflected attribute\n// HTMLCanvasElement.width => number, reflected attribute\nreflectProperties([{ height: [0] }, { width: [0] }], HTMLCanvasElement);\n// Unimplemented Properties\n// HTMLCanvasElement.mozOpaque => boolean\n// HTMLCanvasElement.mozPrintCallback => function\n// Unimplemented Methods\n// HTMLCanvasElement.captureStream()\n// HTMLCanvasElement.toDataURL()\n// HTMLCanvasElement.toBlob()\n// HTMLCanvasElement.transferControlToOffscreen()\n// HTMLCanvasElement.mozGetAsFile()\n//# sourceMappingURL=HTMLCanvasElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLDataElement extends HTMLElement {\n}\nregisterSubclass('data', HTMLDataElement);\n// Reflected properties, strings.\n// HTMLEmbedElement.value => string, reflected attribute\nreflectProperties([{ value: [''] }], HTMLDataElement);\n//# sourceMappingURL=HTMLDataElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nexport class HTMLDataListElement extends HTMLElement {\n    /**\n     * Getter returning option elements that are direct children of a HTMLDataListElement\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLDataListElement\n     * @return Element \"options\" objects that are direct children.\n     */\n    get options() {\n        return this.childNodes.filter((node) => node.nodeName === 'OPTION');\n    }\n}\nregisterSubclass('datalist', HTMLDataListElement);\n/**\n * HTMLDataListElement.options Read only\n * Is a HTMLCollection representing a collection of the contained option elements.\n */\n/**\n * <label for=\"myBrowser\">Choose a browser from this list:</label>\n * <input list=\"browsers\" id=\"myBrowser\" name=\"myBrowser\" />\n * <datalist id=\"browsers\">\n *   <option value=\"Chrome\">\n *   <option value=\"Firefox\">\n *   <option value=\"Internet Explorer\">\n *   <option value=\"Opera\">\n *   <option value=\"Safari\">\n *   <option value=\"Microsoft Edge\">\n * </datalist>\n */\n//# sourceMappingURL=HTMLDataListElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLEmbedElement extends HTMLElement {\n}\nregisterSubclass('embed', HTMLEmbedElement);\n// Reflected properties, strings.\n// HTMLEmbedElement.height => string, reflected attribute\n// HTMLEmbedElement.src => string, reflected attribute\n// HTMLEmbedElement.type => string, reflected attribute\n// HTMLEmbedElement.width => string, reflected attribute\nreflectProperties([{ height: [''] }, { src: [''] }, { type: [''] }, { width: [''] }], HTMLEmbedElement);\n// Unimplemented\n// HTMLEmbedElement.align => string, not reflected\n// HTMLEmbedElement.name => string, not reflected\n//# sourceMappingURL=HTMLEmbedElement.js.map","import { matchChildrenElements, tagNameConditionPredicate } from './matchElements';\nconst MATCHING_CHILD_ELEMENT_TAGNAMES = 'BUTTON FIELDSET INPUT OBJECT OUTPUT SELECT TEXTAREA'.split(' ');\n/**\n * The HTMLFormControlsCollection interface represents a collection of HTML form control elements.\n * It is mixedin to both HTMLFormElement and HTMLFieldSetElement.\n */\nexport const HTMLFormControlsCollectionMixin = (defineOn) => {\n    Object.defineProperty(defineOn.prototype, 'elements', {\n        /**\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormControlsCollection\n         * @return Element array matching children of specific tagnames.\n         */\n        get() {\n            return matchChildrenElements(this, tagNameConditionPredicate(MATCHING_CHILD_ELEMENT_TAGNAMES));\n        },\n    });\n};\n//# sourceMappingURL=HTMLFormControlsMixin.js.map","import { registerSubclass } from './Element';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLFormControlsCollectionMixin } from './HTMLFormControlsMixin';\nimport { HTMLElement } from './HTMLElement';\nimport { toLower } from '../../utils';\nexport class HTMLFieldSetElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFieldSetElement\n     * @return hardcoded string 'fieldset'\n     */\n    get type() {\n        return toLower(this.tagName);\n    }\n}\nregisterSubclass('fieldset', HTMLFieldSetElement);\nHTMLFormControlsCollectionMixin(HTMLFieldSetElement);\n// Reflected properties\n// HTMLFieldSetElement.name => string, reflected attribute\n// HTMLFieldSetElement.disabled => boolean, reflected attribute\nreflectProperties([{ name: [''] }, { disabled: [false] }], HTMLFieldSetElement);\n// Unimplemented properties\n// HTMLFieldSetElement.validity\n// HTMLFieldSetElement.willValidate\n// HTMLFieldSetElement.validationMessage\n//# sourceMappingURL=HTMLFieldSetElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { HTMLFormControlsCollectionMixin } from './HTMLFormControlsMixin';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLFormElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/length\n     * @return number of controls in the form\n     */\n    get length() {\n        return this.elements.length;\n    }\n}\nregisterSubclass('form', HTMLFormElement);\nHTMLFormControlsCollectionMixin(HTMLFormElement);\n// Reflected properties\n// HTMLFormElement.name => string, reflected attribute\n// HTMLFormElement.method => string, reflected attribute\n// HTMLFormElement.target => string, reflected attribute\n// HTMLFormElement.action => string, reflected attribute\n// HTMLFormElement.enctype => string, reflected attribute\n// HTMLFormElement.acceptCharset => string, reflected attribute\n// HTMLFormElement.autocomplete => string, reflected attribute\n// HTMLFormElement.autocapitalize => string, reflected attribute\nreflectProperties([\n    { name: [''] },\n    { method: ['get'] },\n    { target: [''] },\n    { action: [''] },\n    { enctype: ['application/x-www-form-urlencoded'] },\n    { acceptCharset: ['', /* attr */ 'accept-charset'] },\n    { autocomplete: ['on'] },\n    { autocapitalize: ['sentences'] },\n], HTMLFormElement);\n// Unimplemented properties\n// HTMLFormElement.encoding => string, reflected attribute\n// HTMLFormElement.noValidate => boolean, reflected attribute\n/*\nUnimplemented, TBD:\n\nNamed inputs are added to their owner form instance as properties, and can overwrite native properties\nif they share the same name (eg a form with an input named action will have its action property return\nthat input instead of the form's action HTML attribute).\n*/\n//# sourceMappingURL=HTMLFormElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { DOMTokenList } from './DOMTokenList';\nexport class HTMLIFrameElement extends HTMLElement {\n    _sandbox;\n    // HTMLIFrameElement.sandbox, DOMTokenList, reflected attribute\n    get sandbox() {\n        return this._sandbox || (this._sandbox = new DOMTokenList(this, 'sandbox'));\n    }\n}\nregisterSubclass('iframe', HTMLIFrameElement);\ndefinePropertyBackedAttributes(HTMLIFrameElement, {\n    sandbox: [(el) => el.sandbox.value, (el, value) => (el.sandbox.value = value)],\n});\n// Reflected properties\n// HTMLIFrameElement.allow => string, reflected attribute\n// HTMLIFrameElement.allowFullscreen => boolean, reflected attribute\n// HTMLIFrameElement.csp => string, reflected attribute\n// HTMLIFrameElement.height => string, reflected attribute\n// HTMLIFrameElement.name => string, reflected attribute\n// HTMLIFrameElement.referrerPolicy => string, reflected attribute\n// HTMLIFrameElement.src => string, reflected attribute\n// HTMLIFrameElement.srcdoc => string, reflected attribute\n// HTMLIFrameElement.width => string, reflected attribute\nreflectProperties([\n    { allow: [''] },\n    { allowFullscreen: [false] },\n    { csp: [''] },\n    { height: [''] },\n    { name: [''] },\n    { referrerPolicy: [''] },\n    { src: [''] },\n    { srcdoc: [''] },\n    { width: [''] },\n], HTMLIFrameElement);\n// Unimplemented Properties\n// HTMLIFrameElement.allowPaymentRequest => boolean, reflected attribute\n// HTMLIFrameElement.contentDocument => Document, read only (active document in the inline frame's nested browsing context)\n// HTMLIFrameElement.contentWindow => WindowProxy, read only (window proxy for the nested browsing context)\n//# sourceMappingURL=HTMLIFrameElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLImageElement extends HTMLElement {\n}\nregisterSubclass('img', HTMLImageElement);\n// Reflected Properties\n// HTMLImageElement.alt => string, reflected attribute\n// HTMLImageElement.crossOrigin => string, reflected attribute\n// HTMLImageElement.height => number, reflected attribute\n// HTMLImageElement.isMap => boolean, reflected attribute\n// HTMLImageElement.referrerPolicy => string, reflected attribute\n// HTMLImageElement.src => string, reflected attribute\n// HTMLImageElement.sizes => string, reflected attribute\n// HTMLImageElement.srcset => string, reflected attribute\n// HTMLImageElement.useMap => string, reflected attribute\n// HTMLImageElement.width => number, reflected attribute\nreflectProperties([\n    { alt: [''] },\n    { crossOrigin: [''] },\n    { height: [0] },\n    { isMap: [false] },\n    { referrerPolicy: [''] },\n    { src: [''] },\n    { sizes: [''] },\n    { srcset: [''] },\n    { useMap: [''] },\n    { width: [0] },\n], HTMLImageElement);\n// Unimplmented Properties\n// HTMLImageElement.complete Read only\n// Returns a Boolean that is true if the browser has finished fetching the image, whether successful or not. It also shows true, if the image has no src value.\n// HTMLImageElement.currentSrc Read only\n// Returns a DOMString representing the URL to the currently displayed image (which may change, for example in response to media queries).\n// HTMLImageElement.naturalHeight Read only\n// Returns a unsigned long representing the intrinsic height of the image in CSS pixels, if it is available; else, it shows 0.\n// HTMLImageElement.naturalWidth Read only\n// Returns a unsigned long representing the intrinsic width of the image in CSS pixels, if it is available; otherwise, it will show 0.\n//# sourceMappingURL=HTMLImageElement.js.map","import { matchChildrenElements } from './matchElements';\n/**\n * The HTMLInputLabels interface represents a collection of input getters for their related label Elements.\n * It is mixedin to both HTMLInputElement, HTMLMeterElement, and HTMLProgressElement.\n */\nexport const HTMLInputLabelsMixin = (defineOn) => {\n    Object.defineProperty(defineOn.prototype, 'labels', {\n        /**\n         * Getter returning label elements associated to this meter.\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLProgressElement/labels\n         * @return label elements associated to this meter.\n         */\n        get() {\n            return matchChildrenElements(this.ownerDocument || this, (element) => element.tagName === 'LABEL' && element.for && element.for === this.id);\n        },\n    });\n};\n//# sourceMappingURL=HTMLInputLabelsMixin.js.map","import { HTMLElement } from './HTMLElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nimport { reflectProperties } from './enhanceElement';\nimport { registerSubclass } from './Element';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\nexport class HTMLInputElement extends HTMLElement {\n    // Per spec, some attributes like 'value' and 'checked' change behavior based on dirty flags.\n    // Since these flags can only be changed on interaction (outside of worker), we can ignore them here.\n    // Tradeoffs: Consequent attribute changes are missing, HTMLFormElement.reset() doesn't work, etc.\n    // Alternative: Implement dirty flag checking in worker-dom, which would require listening for\n    //     and forwarding interaction events to flag \"dirtiness\".\n    // https://html.spec.whatwg.org/multipage/input.html#common-input-element-apis\n    [21 /* value */] = '';\n    dirtyValue = false;\n    [47 /* checked */] = false;\n    // TODO(willchou): There are a few interrelated issues with `value` property.\n    //   1. \"Dirtiness\" caveat above.\n    //   2. Duplicate SYNC events. Sent by every event fired from elements with a `value`, plus the default 'change' listener.\n    //   3. Duplicate MUTATE events. Caused by stale `value` in worker due to no default 'input' listener (see below).\n    get value() {\n        return !this.dirtyValue ? this.getAttribute('value') || '' : this[21 /* value */];\n    }\n    set value(value) {\n        // Don't early-out if value doesn't appear to have changed.\n        // The worker may have a stale value since 'input' events aren't being forwarded.\n        this[21 /* value */] = String(value);\n        this.dirtyValue = true;\n        transfer(this.ownerDocument, [\n            3 /* PROPERTIES */,\n            this[7 /* index */],\n            storeString('value'),\n            0 /* FALSE */,\n            storeString(value),\n        ]);\n    }\n    get valueAsDate() {\n        // Don't use Date constructor or Date.parse() since ISO 8601 (yyyy-mm-dd) parsing is inconsistent.\n        const date = this.stringToDate(this.value);\n        const invalid = !date || isNaN(date.getTime());\n        return invalid ? null : date;\n    }\n    /** Unlike browsers, does not throw if this input[type] doesn't support dates. */\n    set valueAsDate(value) {\n        if (!(value instanceof Date)) {\n            throw new TypeError('The provided value is not a Date.');\n        }\n        this.value = this.dateToString(value);\n    }\n    get valueAsNumber() {\n        if (this.value.length === 0) {\n            return NaN;\n        }\n        return Number(this.value);\n    }\n    /** Unlike browsers, does not throw if this input[type] doesn't support numbers. */\n    set valueAsNumber(value) {\n        if (typeof value === 'number') {\n            this.value = String(value);\n        }\n        else {\n            this.value = '';\n        }\n    }\n    get checked() {\n        return this[47 /* checked */];\n    }\n    set checked(value) {\n        if (this[47 /* checked */] === value) {\n            return;\n        }\n        this[47 /* checked */] = !!value;\n        transfer(this.ownerDocument, [\n            3 /* PROPERTIES */,\n            this[7 /* index */],\n            storeString('checked'),\n            1 /* TRUE */,\n            value === true ? 1 /* TRUE */ : 0 /* FALSE */,\n        ]);\n    }\n    /**\n     * Returns a date in 'yyyy-mm-dd' format.\n     * @param date\n     */\n    dateToString(date) {\n        const y = date.getFullYear();\n        const m = date.getMonth() + 1; // getMonth() is 0-index.\n        const d = date.getDate();\n        return `${y}-${m > 9 ? '' : '0'}${m}-${d > 9 ? '' : '0'}${d}`;\n    }\n    /**\n     * Returns a Date from a 'yyyy-mm-dd' format.\n     * @param s\n     */\n    stringToDate(str) {\n        const components = str.split('-');\n        if (components.length !== 3) {\n            return null;\n        }\n        const [y, m, d] = components;\n        // Month is 0-index.\n        return new Date(parseInt(y, 10), parseInt(m, 10) - 1, parseInt(d, 10));\n    }\n}\nregisterSubclass('input', HTMLInputElement);\nHTMLInputLabelsMixin(HTMLInputElement);\n// Reflected Properties\n// HTMLInputElement.formAction => string, reflected attribute\n// HTMLInputElement.formEncType\t=> string, reflected attribute\n// HTMLInputElement.formMethod => string, reflected attribute\n// HTMLInputElement.formTarget => string, reflected attribute\n// HTMLInputElement.name => string, reflected attribute\n// HTMLInputElement.type => string, reflected attribute\n// HTMLInputElement.disabled => boolean, reflected attribute\n// HTMLInputElement.autofocus => boolean, reflected attribute\n// HTMLInputElement.required => boolean, reflected attribute\n// HTMLInputElement.defaultChecked => boolean, reflected attribute (\"checked\")\n// HTMLInputElement.alt => string, reflected attribute\n// HTMLInputElement.height => number, reflected attribute\n// HTMLInputElement.src => string, reflected attribute\n// HTMLInputElement.width => number, reflected attribute\n// HTMLInputElement.accept => string, reflected attribute\n// HTMLInputElement.autocomplete => string, reflected attribute\n// HTMLInputElement.maxLength => number, reflected attribute\n// HTMLInputElement.size => number, reflected attribute\n// HTMLInputElement.pattern => string, reflected attribute\n// HTMLInputElement.placeholder => string, reflected attribute\n// HTMLInputElement.readOnly => boolean, reflected attribute\n// HTMLInputElement.min => string, reflected attribute\n// HTMLInputElement.max => string, reflected attribute\n// HTMLInputElement.defaultValue => string, reflected attribute\n// HTMLInputElement.dirname => string, reflected attribute\n// HTMLInputElement.multiple => boolean, reflected attribute\n// HTMLInputElement.step => string, reflected attribute\n// HTMLInputElement.autocapitalize => string, reflected attribute\nreflectProperties([\n    { accept: [''] },\n    { alt: [''] },\n    { autocapitalize: [''] },\n    { autocomplete: [''] },\n    { autofocus: [false] },\n    { defaultChecked: [false, /* attr */ 'checked'] },\n    { defaultValue: ['', /* attr */ 'value'] },\n    { dirName: [''] },\n    { disabled: [false] },\n    { formAction: [''] },\n    { formEncType: [''] },\n    { formMethod: [''] },\n    { formTarget: [''] },\n    { height: [0] },\n    { max: [''] },\n    { maxLength: [0] },\n    { min: [''] },\n    { multiple: [false] },\n    { name: [''] },\n    { pattern: [''] },\n    { placeholder: [''] },\n    { readOnly: [false] },\n    { required: [false] },\n    { size: [0] },\n    { src: [''] },\n    { step: [''] },\n    { type: ['text'] },\n    { width: [0] },\n], HTMLInputElement);\n// TODO(KB) Not Reflected Properties\n// HTMLInputElement.indeterminate => boolean\n// Unimplemented Properties\n// HTMLInputElement.formNoValidate => string, reflected attribute\n// HTMLInputElement.validity => ValidityState, readonly\n// HTMLInputElement.validationMessage => string, readonly\n// HTMLInputElement.willValidate => boolean, readonly\n// HTMLInputElement.allowdirs => boolean\n// HTMLInputElement.files\t=> Array<File>\n// HTMLInputElement.webkitdirectory\t=> boolean, reflected attribute\n// HTMLInputElement.webkitEntries => Array<FileSystemEntry>\n// HTMLInputElement.selectionStart => number\n// HTMLInputElement.selectionEnd => number\n// HTMLInputElement.selectionDirection => string\n// HTMLInputElement.list => Element, read only (element pointed by list attribute)\n// Unimplemented Methods\n// HTMLInputElement.setSelectionRange()\n// HTMLInputElement.setRangeText()\n// HTMLInputElement.setCustomValidity()\n// HTMLInputElement.checkValidity()\n// HTMLInputElement.stepDown()\n// HTMLInputElement.stepUp()\n//# sourceMappingURL=HTMLInputElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { matchChildElement, tagNameConditionPredicate } from './matchElements';\nexport class HTMLLabelElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/control\n     * @return input element\n     */\n    get control() {\n        const htmlFor = this.getAttribute('for');\n        if (htmlFor !== null) {\n            return this.ownerDocument && this.ownerDocument.getElementById(htmlFor);\n        }\n        return matchChildElement(this, tagNameConditionPredicate(['INPUT']));\n    }\n}\nregisterSubclass('label', HTMLLabelElement);\n// Reflected Properties\n// HTMLLabelElement.htmlFor => string, reflected attribute 'for'\nreflectProperties([{ htmlFor: ['', 'for'] }], HTMLLabelElement);\n//# sourceMappingURL=HTMLLabelElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { DOMTokenList, synchronizedAccessor } from './DOMTokenList';\nexport class HTMLLinkElement extends HTMLElement {\n    _relList;\n    get relList() {\n        return this._relList || (this._relList = new DOMTokenList(this, 'rel'));\n    }\n}\nregisterSubclass('link', HTMLLinkElement);\ndefinePropertyBackedAttributes(HTMLLinkElement, {\n    rel: [(el) => el.relList.value, (el, value) => (el.relList.value = value)],\n});\nsynchronizedAccessor(HTMLLinkElement, 'relList', 'rel');\n// Reflected Properties\n// HTMLLinkElement.as => string, reflected attribute\n// HTMLLinkElement.crossOrigin => string, reflected attribute\n// HTMLLinkElement.disabled => boolean, reflected attribute\n// HTMLLinkElement.href => string, reflected attribute\n// HTMLLinkElement.hreflang => string, reflected attribute\n// HTMLLinkElement.media => string, reflected attribute\n// HTMLLinkElement.referrerPolicy => string, reflected attribute\n// HTMLLinkElement.sizes => string, reflected attribute\n// HTMLLinkElement.type => string, reflected attribute\nreflectProperties([\n    { as: [''] },\n    { crossOrigin: [''] },\n    { disabled: [false] },\n    { href: [''] },\n    { hreflang: [''] },\n    { media: [''] },\n    { referrerPolicy: [''] },\n    { sizes: [''] },\n    { type: [''] },\n], HTMLLinkElement);\n// Unimplemented Properties\n// LinkStyle.sheet Read only\n// Returns the StyleSheet object associated with the given element, or null if there is none.\n//# sourceMappingURL=HTMLLinkElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { matchChildrenElements } from './matchElements';\nexport class HTMLMapElement extends HTMLElement {\n    /**\n     * Getter returning area elements associated to this map.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLMapElement\n     * @return area elements associated to this map.\n     */\n    get areas() {\n        return matchChildrenElements(this, (element) => element.tagName === 'AREA');\n    }\n}\nregisterSubclass('map', HTMLMapElement);\n// Reflected Properties\n// HTMLMapElement.name => string, reflected attribute\nreflectProperties([{ name: [''] }], HTMLMapElement);\n//# sourceMappingURL=HTMLMapElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nexport class HTMLMeterElement extends HTMLElement {\n}\nregisterSubclass('meter', HTMLMeterElement);\nHTMLInputLabelsMixin(HTMLMeterElement);\n// Reflected Properties\n// HTMLMeterElement.high => number, reflected attribute\n// HTMLMeterElement.low => number, reflected attribute\n// HTMLMeterElement.max => number, reflected attribute\n// HTMLMeterElement.min => number, reflected attribute\n// HTMLMeterElement.optimum => number, reflected attribute\n// HTMLMeterElement.value => number, reflected attribute\nreflectProperties([{ high: [0] }, { low: [0] }, { max: [1] }, { min: [0] }, { optimum: [0] }, { value: [0] }], HTMLMeterElement);\n//# sourceMappingURL=HTMLMeterElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLModElement extends HTMLElement {\n}\nregisterSubclass('del', HTMLModElement);\nregisterSubclass('ins', HTMLModElement);\n// Reflected Properties\n// HTMLModElement.cite => string, reflected attribute\n// HTMLModElement.datetime => string, reflected attribute\nreflectProperties([{ cite: [''] }, { datetime: [''] }], HTMLModElement);\n//# sourceMappingURL=HTMLModElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLOListElement extends HTMLElement {\n}\nregisterSubclass('ol', HTMLOListElement);\n// Reflected Properties\n// HTMLModElement.reversed => boolean, reflected attribute\n// HTMLModElement.start => number, reflected attribute\n// HTMLOListElement.type => string, reflected attribute\nreflectProperties([{ reversed: [false] }, { start: [1] }, { type: [''] }], HTMLOListElement);\n//# sourceMappingURL=HTMLOListElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { transfer } from '../MutationTransfer';\nimport { store as storeString } from '../strings';\nexport class HTMLOptionElement extends HTMLElement {\n    [52 /* selected */] = false;\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return position of the option within the list of options it's within, or zero if there is no valid parent.\n     */\n    get index() {\n        return (this.parentNode && this.parentNode.children.indexOf(this)) || 0;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return label attribute value or text content if there is no attribute.\n     */\n    get label() {\n        return this.getAttribute('label') || this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param label new label value to store as an attribute.\n     */\n    set label(label) {\n        this.setAttribute('label', label);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return boolean based on if the option element is selected.\n     */\n    get selected() {\n        return this[52 /* selected */];\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param value new selected boolean value.\n     */\n    set selected(value) {\n        this[52 /* selected */] = !!value;\n        transfer(this.ownerDocument, [\n            3 /* PROPERTIES */,\n            this[7 /* index */],\n            storeString('selected'),\n            1 /* TRUE */,\n            this[52 /* selected */] ? 1 /* TRUE */ : 0 /* FALSE */,\n        ]);\n    }\n    /**\n     * A Synonym for the Node.textContent property getter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return value of text node direct child of this Element.\n     */\n    get text() {\n        return this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param text new text content to store for this Element.\n     */\n    set text(text) {\n        this.textContent = text;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return value attribute value or text content if there is no attribute.\n     */\n    get value() {\n        return this.getAttribute('value') || this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param value new value for an option element.\n     */\n    set value(value) {\n        this.setAttribute('value', value);\n    }\n}\nregisterSubclass('option', HTMLOptionElement);\ndefinePropertyBackedAttributes(HTMLOptionElement, {\n    selected: [(el) => String(el[52 /* selected */]), (el, value) => (el.selected = value === 'true')],\n});\n// Reflected Properties\n// HTMLOptionElement.defaultSelected => boolean, reflected attribute\n// HTMLOptionElement.disabled => boolean, reflected attribute\n// HTMLOptionElement.type => string, reflected attribute\nreflectProperties([{ defaultSelected: [false, /* attr */ 'selected'] }, { disabled: [false] }, { type: [''] }], HTMLOptionElement);\n// Implemented at HTMLElement\n// HTMLOptionElement.form, Read only\t=> HTMLFormElement\n//# sourceMappingURL=HTMLOptionElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nexport class HTMLProgressElement extends HTMLElement {\n    [48 /* indeterminate */] = true;\n    [21 /* value */] = 0;\n    dirtyValue = false;\n    get position() {\n        return this[48 /* indeterminate */] ? -1 : this.value / this.max;\n    }\n    get value() {\n        return !this.dirtyValue ? Number(this.getAttribute('value')) || 0 : this[21 /* value */];\n    }\n    set value(value) {\n        this[48 /* indeterminate */] = false;\n        this[21 /* value */] = value;\n        this.dirtyValue = true;\n        // TODO(KB) This is a property mutation needing tracked.\n    }\n}\nregisterSubclass('progress', HTMLProgressElement);\nHTMLInputLabelsMixin(HTMLProgressElement);\n// Reflected Properties\n// HTMLModElement.max => number, reflected attribute\nreflectProperties([{ max: [1] }], HTMLProgressElement);\n//# sourceMappingURL=HTMLProgressElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLQuoteElement extends HTMLElement {\n}\nregisterSubclass('blockquote', HTMLQuoteElement);\nregisterSubclass('q', HTMLQuoteElement);\n// Reflected Properties\n// HTMLModElement.cite => string, reflected attribute\nreflectProperties([{ cite: [''] }], HTMLQuoteElement);\n//# sourceMappingURL=HTMLQuoteElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLScriptElement extends HTMLElement {\n    /**\n     * A Synonym for the Node.textContent property getter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement\n     * @return value of text node direct child of this Element.\n     */\n    get text() {\n        return this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement\n     * @param text new text content to store for this Element.\n     */\n    set text(text) {\n        this.textContent = text;\n    }\n}\nregisterSubclass('script', HTMLScriptElement);\n// Reflected Properties\n// HTMLScriptElement.type => string, reflected attribute\n// HTMLScriptElement.src => string, reflected attribute\n// HTMLScriptElement.charset => string, reflected attribute\n// HTMLScriptElement.async => boolean, reflected attribute\n// HTMLScriptElement.defer => boolean, reflected attribute\n// HTMLScriptElement.crossOrigin => string, reflected attribute\n// HTMLScriptElement.noModule => boolean, reflected attribute\nreflectProperties([{ type: [''] }, { src: [''] }, { charset: [''] }, { async: [false] }, { defer: [false] }, { crossOrigin: [''] }, { noModule: [false] }], HTMLScriptElement);\n//# sourceMappingURL=HTMLScriptElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nimport { matchChildrenElements, matchChildElement, tagNameConditionPredicate } from './matchElements';\nconst isOptionPredicate = tagNameConditionPredicate(['OPTION']);\nconst isSelectedOptionPredicate = (element) => isOptionPredicate(element) && element.selected === true;\nexport class HTMLSelectElement extends HTMLElement {\n    [49 /* size */] = -1 /* UNMODIFIED */;\n    /**\n     * Extend functionality after child insertion to make sure the correct option is selected.\n     * @param child\n     */\n    [56 /* insertedNode */](child) {\n        super[56 /* insertedNode */](child);\n        // When this singular value select is appending a child, set the value property for two cases.\n        // 1. The inserted child is already selected.\n        // 2. The current value of the select is the default ('').\n        if ((!this.multiple && isOptionPredicate(child) && child.selected) || this.value === '') {\n            this.value = child.value;\n        }\n    }\n    /**\n     * Extend functionality after child insertion to make sure the correct option is selected.\n     * @param child\n     */\n    [57 /* removedNode */](child) {\n        super[57 /* removedNode */](child);\n        // When this singular value select is removing a selected child\n        // ... set the value property to the first valid option.\n        if (!this.multiple && child.selected) {\n            const options = this.options;\n            if (options.length > 0) {\n                this.value = options[0].value;\n            }\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/length\n     * @return number of controls in the form\n     */\n    get length() {\n        return this.options.length;\n    }\n    /**\n     * Getter returning option elements that are direct children of a HTMLSelectElement\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return Element \"options\" objects that are direct children.\n     */\n    get options() {\n        return this.children.filter(isOptionPredicate);\n    }\n    /**\n     * Getter returning the index of the first selected <option> element.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedIndex\n     * @return the index of the first selected option element, or -1 if no element is selected.\n     */\n    get selectedIndex() {\n        const firstSelectedChild = matchChildElement(this, isSelectedOptionPredicate);\n        return firstSelectedChild ? this.children.indexOf(firstSelectedChild) : -1;\n    }\n    /**\n     * Setter making the <option> element at the passed index selected.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedIndex\n     * @param selectedIndex index number to make selected.\n     */\n    set selectedIndex(selectedIndex) {\n        this.children.forEach((element, index) => (element.selected = index === selectedIndex));\n    }\n    /**\n     * Getter returning the <option> elements selected.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedOptions\n     * @return array of Elements currently selected.\n     */\n    get selectedOptions() {\n        return matchChildrenElements(this, isSelectedOptionPredicate);\n    }\n    /**\n     * Getter returning the size of the select element (by default 1 for single and 4 for multiple)\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return size of the select element.\n     */\n    get size() {\n        return this[49 /* size */] === -1 /* UNMODIFIED */\n            ? this.multiple\n                ? 4 /* MULTIPLE */\n                : 1 /* SINGLE */\n            : this[49 /* size */];\n    }\n    /**\n     * Override the size of this element (each positive unit is the height of a single option)\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @param size number to set the size to.\n     */\n    set size(size) {\n        this[49 /* size */] = size > 0 ? size : this.multiple ? 4 /* MULTIPLE */ : 1 /* SINGLE */;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return string representing the select element type.\n     */\n    get type() {\n        return this.multiple ? \"select-one\" /* MULTIPLE */ : \"select-multiple\" /* SINGLE */;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return the value of the first selected option\n     */\n    get value() {\n        const firstSelectedChild = matchChildElement(this, isSelectedOptionPredicate);\n        return firstSelectedChild ? firstSelectedChild.value : '';\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @set value\n     */\n    set value(value) {\n        const stringValue = String(value);\n        this.children.forEach((element) => isOptionPredicate(element) && (element.selected = element.value === stringValue));\n    }\n}\nregisterSubclass('select', HTMLSelectElement);\nHTMLInputLabelsMixin(HTMLSelectElement);\n// Reflected Properties\n// HTMLSelectElement.multiple => boolean, reflected attribute\n// HTMLSelectElement.name => string, reflected attribute\n// HTMLSelectElement.required => boolean, reflected attribute\nreflectProperties([{ multiple: [false] }, { name: [''] }, { required: [false] }], HTMLSelectElement);\n// Implemented on HTMLElement\n// HTMLSelectElement.form => HTMLFormElement, readonly\n// Unimplemented Properties\n// HTMLSelectElement.validation => string\n// HTMLSelectElement.validity => ValidityState\n// HTMLSelectElement.willValidate => boolean\n//# sourceMappingURL=HTMLSelectElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLSourceElement extends HTMLElement {\n}\nregisterSubclass('source', HTMLSourceElement);\n// Reflected Properties\n// HTMLSourceElement.media => string, reflected attribute\n// HTMLSourceElement.sizes => string, reflected attribute\n// HTMLSourceElement.src => string, reflected attribute\n// HTMLSourceElement.srcset => string, reflected attribute\n// HTMLSourceElement.type => string, reflected attribute\nreflectProperties([{ media: [''] }, { sizes: [''] }, { src: [''] }, { srcset: [''] }, { type: [''] }], HTMLSourceElement);\n// Unimplemented Properties\n// HTMLSourceElement.keySystem => string\n//# sourceMappingURL=HTMLSourceElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLStyleElement extends HTMLElement {\n}\nregisterSubclass('style', HTMLStyleElement);\n// Reflected Properties\n// HTMLStyleElement.media => string, reflected attribute\n// HTMLStyleElement.type => string, reflected attribute\nreflectProperties([{ media: [''] }, { type: [''] }], HTMLStyleElement);\n// Unimplemented Properties\n// HTMLStyleElement.disabled => boolean\n// HTMLStyleElement.scoped => boolean, reflected attribute\n// HTMLStyleElement.sheet => StyleSheet, read only\n//# sourceMappingURL=HTMLStyleElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { DOMTokenList } from './DOMTokenList';\nimport { matchNearestParent, tagNameConditionPredicate, matchChildrenElements } from './matchElements';\nexport class HTMLTableCellElement extends HTMLElement {\n    _headers;\n    get headers() {\n        return this._headers || (this._headers = new DOMTokenList(this, 'headers'));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCellElement\n     * @return position of the cell within the parent tr, if not nested in a tr the value is -1.\n     */\n    get cellIndex() {\n        const parent = matchNearestParent(this, tagNameConditionPredicate(['TR']));\n        return parent !== null ? matchChildrenElements(parent, tagNameConditionPredicate(['TH', 'TD'])).indexOf(this) : -1;\n    }\n}\nregisterSubclass('th', HTMLTableCellElement);\nregisterSubclass('td', HTMLTableCellElement);\ndefinePropertyBackedAttributes(HTMLTableCellElement, {\n    headers: [(el) => el.headers.value, (el, value) => (el.headers.value = value)],\n});\n// Reflected Properties\n// HTMLTableCellElement.abbr => string, reflected attribute\n// HTMLTableCellElement.colSpan => number, reflected attribute\n// HTMLTableCellElement.rowSpan => number, reflected attribute\n// HTMLTableCellElement.scope => string, reflected attribute\nreflectProperties([{ abbr: [''] }, { colSpan: [1] }, { rowSpan: [1] }, { scope: [''] }], HTMLTableCellElement);\n//# sourceMappingURL=HTMLTableCellElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLTableColElement extends HTMLElement {\n}\nregisterSubclass('col', HTMLTableColElement);\n// Reflected Properties\n// HTMLTableColElement.span => number, reflected attribute\nreflectProperties([{ span: [1] }], HTMLTableColElement);\n//# sourceMappingURL=HTMLTableColElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { matchChildElement, matchChildrenElements, tagNameConditionPredicate } from './matchElements';\nimport { toUpper } from '../../utils';\nconst removeElement = (element) => element && element.remove();\nconst insertBeforeElementsWithTagName = (parent, element, tagNames) => {\n    console.assert(tagNames.every((t) => t === toUpper(t)), 'tagNames must be all uppercase.');\n    const insertBeforeElement = matchChildElement(parent, (element) => !tagNames.includes(element.tagName));\n    if (insertBeforeElement) {\n        parent.insertBefore(element, insertBeforeElement);\n    }\n    else {\n        parent.appendChild(element);\n    }\n};\nexport class HTMLTableElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/caption\n     * @return first matching caption Element or null if none exists.\n     */\n    get caption() {\n        return matchChildElement(this, tagNameConditionPredicate(['CAPTION']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/caption\n     * @param element new caption element to replace the existing, or become the first element child.\n     */\n    set caption(newElement) {\n        if (newElement && newElement.tagName === 'CAPTION') {\n            // If a correct object is given,\n            // it is inserted in the tree as the first child of this element and the first <caption>\n            // that is a child of this element is removed from the tree, if any.\n            removeElement(this.caption);\n            this.insertBefore(newElement, this.firstElementChild);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @return first matching thead Element or null if none exists.\n     */\n    get tHead() {\n        return matchChildElement(this, tagNameConditionPredicate(['THEAD']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @param newElement new thead element to insert in this table.\n     */\n    set tHead(newElement) {\n        if (newElement && newElement.tagName === 'THEAD') {\n            // If a correct object is given,\n            // it is inserted in the tree immediately before the first element that is\n            // neither a <caption>, nor a <colgroup>, or as the last child if there is no such element.\n            // Additionally, the first <thead> that is a child of this element is removed from the tree, if any.\n            removeElement(this.tHead);\n            insertBeforeElementsWithTagName(this, newElement, ['CAPTION', 'COLGROUP']);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @return first matching thead Element or null if none exists.\n     */\n    get tFoot() {\n        return matchChildElement(this, tagNameConditionPredicate(['TFOOT']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @param newElement new tfoot element to insert in this table.\n     */\n    set tFoot(newElement) {\n        if (newElement && newElement.tagName === 'TFOOT') {\n            // If a correct object is given,\n            // it is inserted in the tree immediately before the first element that is neither a <caption>,\n            // a <colgroup>, nor a <thead>, or as the last child if there is no such element, and the first <tfoot> that is a child of\n            // this element is removed from the tree, if any.\n            removeElement(this.tFoot);\n            insertBeforeElementsWithTagName(this, newElement, ['CAPTION', 'COLGROUP', 'THEAD']);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement\n     * @return array of 'tr' tagname elements\n     */\n    get rows() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TR']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement\n     * @return array of 'tbody' tagname elements\n     */\n    get tBodies() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TBODY']));\n    }\n}\nregisterSubclass('table', HTMLTableElement);\n// Unimplemented Properties\n// HTMLTableElement.sortable => boolean\n// Unimplemented Methods\n// HTMLTableElement.createTHead()\n// HTMLTableElement.deleteTHead()\n// HTMLTableElement.createTFoot()\n// HTMLTableElement.deleteTFoot()\n// HTMLTableElement.createCaption()\n// HTMLTableElement.deleteCaption()\n// HTMLTableElement.insertRow()\n// HTMLTableElement.deleteRow()\n//# sourceMappingURL=HTMLTableElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { matchNearestParent, tagNameConditionPredicate, matchChildrenElements } from './matchElements';\nconst TABLE_SECTION_TAGNAMES = 'TABLE TBODY THEAD TFOOT'.split(' ');\nconst indexInAncestor = (element, isValidAncestor) => {\n    const parent = matchNearestParent(element, isValidAncestor);\n    // TODO(KB): This is either a HTMLTableElement or HTMLTableSectionElement.\n    return parent === null ? -1 : parent.rows.indexOf(element);\n};\nexport class HTMLTableRowElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @return td and th elements that are children of this row.\n     */\n    get cells() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TD', 'TH']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @return position of the row within a table, if not nested within in a table the value is -1.\n     */\n    get rowIndex() {\n        return indexInAncestor(this, tagNameConditionPredicate(['TABLE']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @return position of the row within a parent section, if not nested directly in a section the value is -1.\n     */\n    get sectionRowIndex() {\n        return indexInAncestor(this, tagNameConditionPredicate(TABLE_SECTION_TAGNAMES));\n    }\n    /**\n     * Removes the cell in provided position of this row.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @param index position of the cell in the row to remove.\n     */\n    deleteCell(index) {\n        const cell = this.cells[index];\n        if (cell) {\n            cell.remove();\n        }\n    }\n    /**\n     * Insert a new cell ('td') in the row at a specified position.\n     * @param index position in the children to insert before.\n     * @return newly inserted td element.\n     */\n    insertCell(index) {\n        const cells = this.cells;\n        const td = this.ownerDocument.createElement('td');\n        if (index < 0 || index >= cells.length) {\n            this.appendChild(td);\n        }\n        else {\n            this.insertBefore(td, this.children[index]);\n        }\n        return td;\n    }\n}\nregisterSubclass('tr', HTMLTableRowElement);\n//# sourceMappingURL=HTMLTableRowElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { tagNameConditionPredicate, matchChildrenElements } from './matchElements';\nexport class HTMLTableSectionElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\n     * @return All rows (tr elements) within the table section.\n     */\n    get rows() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TR']));\n    }\n    /**\n     * Remove a node in a specified position from the section.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\n     * @param index position in the section to remove the node of.\n     */\n    deleteRow(index) {\n        const rows = this.rows;\n        if (index >= 0 || index <= rows.length) {\n            rows[index].remove();\n        }\n    }\n    /**\n     * Insert a new row ('tr') in the row at a specified position.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\n     * @param index position in the children to insert before.\n     * @return newly inserted tr element.\n     */\n    insertRow(index) {\n        const rows = this.rows;\n        const tr = this.ownerDocument.createElement('tr');\n        if (index < 0 || index >= rows.length) {\n            this.appendChild(tr);\n        }\n        else {\n            this.insertBefore(tr, this.children[index]);\n        }\n        return tr;\n    }\n}\nregisterSubclass('thead', HTMLTableSectionElement);\nregisterSubclass('tfoot', HTMLTableSectionElement);\nregisterSubclass('tbody', HTMLTableSectionElement);\n//# sourceMappingURL=HTMLTableSectionElement.js.map","// <blockquote> and <q>\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLTimeElement extends HTMLElement {\n}\nregisterSubclass('time', HTMLTimeElement);\n// Reflected Properties\n// HTMLTimeElement.dateTime => string, reflected attribute\nreflectProperties([{ dateTime: [''] }], HTMLTimeElement);\n//# sourceMappingURL=HTMLTimeElement.js.map","import { CharacterData } from './CharacterData';\n// @see https://developer.mozilla.org/en-US/docs/Web/API/Text\nexport class Text extends CharacterData {\n    constructor(data, ownerDocument, overrideIndex) {\n        super(data, 3 /* TEXT_NODE */, '#text', ownerDocument, overrideIndex);\n    }\n    // Unimplemented Properties\n    // Text.isElementContentWhitespace – https://developer.mozilla.org/en-US/docs/Web/API/Text/isElementContentWhitespace\n    // Text.wholeText – https://developer.mozilla.org/en-US/docs/Web/API/Text/wholeText\n    // Text.assignedSlot – https://developer.mozilla.org/en-US/docs/Web/API/Text/assignedSlot\n    /**\n     * textContent getter, retrieves underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     */\n    get textContent() {\n        return this.data;\n    }\n    /**\n     * textContent setter, mutates underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     * @param value new value\n     */\n    set textContent(value) {\n        // Mutation Observation is performed by CharacterData.\n        this.nodeValue = value;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n     * @return new Text Node with the same data as the Text to clone.\n     */\n    cloneNode() {\n        return this.ownerDocument.createTextNode(this.data);\n    }\n    /**\n     * Breaks Text node into two nodes at the specified offset, keeping both nodes in the tree as siblings.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Text/splitText\n     * @param offset number position to split text at.\n     * @return Text Node after the offset.\n     */\n    splitText(offset) {\n        const remainderTextNode = new Text(this.data.slice(offset, this.data.length), this.ownerDocument);\n        const parentNode = this.parentNode;\n        this.nodeValue = this.data.slice(0, offset);\n        if (parentNode !== null) {\n            // When this node is attached to the DOM, the remainder text needs to be inserted directly after.\n            const parentChildNodes = parentNode.childNodes;\n            const insertBeforePosition = parentChildNodes.indexOf(this) + 1;\n            const insertBeforeNode = parentChildNodes.length >= insertBeforePosition ? parentChildNodes[insertBeforePosition] : null;\n            return parentNode.insertBefore(remainderTextNode, insertBeforeNode);\n        }\n        return remainderTextNode;\n    }\n}\n//# sourceMappingURL=Text.js.map","import { ParentNode } from './ParentNode';\nimport { store as storeString } from '../strings';\nexport class DocumentFragment extends ParentNode {\n    constructor(ownerDocument, overrideIndex) {\n        super(11 /* DOCUMENT_FRAGMENT_NODE */, '#document-fragment', ownerDocument, overrideIndex);\n        this[8 /* creationFormat */] = [this[7 /* index */], 11 /* DOCUMENT_FRAGMENT_NODE */, storeString(this.nodeName), 0, 0];\n    }\n    /**\n     * @param deep boolean determines if the clone should include a recursive copy of all childNodes.\n     * @return DocumentFragment containing childNode clones of the DocumentFragment requested to be cloned.\n     */\n    cloneNode(deep = false) {\n        const clone = this.ownerDocument.createDocumentFragment();\n        if (deep) {\n            this.childNodes.forEach((child) => clone.appendChild(child.cloneNode(deep)));\n        }\n        return clone;\n    }\n}\n//# sourceMappingURL=DocumentFragment.js.map","import { Element, NS_NAME_TO_CLASS } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport './HTMLAnchorElement';\nimport './HTMLButtonElement';\nimport './HTMLCanvasElement';\nimport './HTMLDataElement';\nimport './HTMLDataListElement';\nimport './HTMLEmbedElement';\nimport './HTMLFieldSetElement';\nimport './HTMLFormElement';\nimport './HTMLIFrameElement';\nimport './HTMLImageElement';\nimport './HTMLInputElement';\nimport './HTMLLabelElement';\nimport './HTMLLinkElement';\nimport './HTMLMapElement';\nimport './HTMLMeterElement';\nimport './HTMLModElement';\nimport './HTMLOListElement';\nimport './HTMLOptionElement';\nimport './HTMLProgressElement';\nimport './HTMLQuoteElement';\nimport './HTMLScriptElement';\nimport './HTMLSelectElement';\nimport './HTMLSourceElement';\nimport './HTMLStyleElement';\nimport './HTMLTableCellElement';\nimport './HTMLTableColElement';\nimport './HTMLTableElement';\nimport './HTMLTableRowElement';\nimport './HTMLTableSectionElement';\nimport './HTMLTimeElement';\nimport { matchChildElement } from './matchElements';\nimport { Text } from './Text';\nimport { Comment } from './Comment';\nimport { toLower } from '../../utils';\nimport { DocumentFragment } from './DocumentFragment';\nimport { HTML_NAMESPACE } from '../../transfer/TransferrableNodes';\nimport { propagate as propagateEvents } from '../Event';\nimport { propagate as propagateSyncValues } from '../SyncValuePropagation';\nimport { propagate as propagateResize } from '../ResizePropagation';\nimport { set as setPhase } from '../phase';\nconst DOCUMENT_NAME = '#document';\nexport class Document extends Element {\n    defaultView;\n    documentElement;\n    body;\n    // Internal variables.\n    postMessage;\n    addGlobalEventListener;\n    removeGlobalEventListener;\n    [58 /* allowTransfer */] = true;\n    constructor(global) {\n        super(9 /* DOCUMENT_NODE */, DOCUMENT_NAME, HTML_NAMESPACE, null);\n        // Element uppercases its nodeName, but Document doesn't.\n        this.nodeName = DOCUMENT_NAME;\n        this.documentElement = this; // TODO(choumx): Should be the <html> element.\n        this.defaultView = Object.assign(global, {\n            document: this,\n            addEventListener: this.addEventListener.bind(this),\n            removeEventListener: this.removeEventListener.bind(this),\n        });\n    }\n    /**\n     * Observing the Document indicates it's attached to a main thread\n     * version of the document.\n     *\n     * Each mutation needs to be transferred, synced values need to propagate.\n     */\n    [59 /* observe */]() {\n        setPhase(1 /* Hydrating */);\n        propagateEvents(this.defaultView);\n        propagateSyncValues(this.defaultView);\n        propagateResize(this.defaultView);\n    }\n    /**\n     * Hydrate\n     * @param strings\n     * @param skeleton\n     */\n    [64 /* hydrateNode */](strings, skeleton) {\n        switch (skeleton[0 /* nodeType */]) {\n            case 3 /* TEXT_NODE */:\n                return new Text(strings[skeleton[5 /* textContent */]], this, skeleton[7 /* index */]);\n            case 8 /* COMMENT_NODE */:\n                return new Comment(strings[skeleton[5 /* textContent */]], this, skeleton[7 /* index */]);\n            default:\n                const namespaceURI = strings[skeleton[6 /* namespaceURI */]] || HTML_NAMESPACE;\n                const localName = strings[skeleton[1 /* localOrNodeName */]];\n                const constructor = NS_NAME_TO_CLASS[`${namespaceURI}:${localName}`] || HTMLElement;\n                const node = new constructor(1 /* ELEMENT_NODE */, localName, namespaceURI, this, skeleton[7 /* index */]);\n                (skeleton[2 /* attributes */] || []).forEach((attribute) => \n                // AttributeNamespaceURI = strings[attribute[0]] !== 'null' ? strings[attribute[0]] : HTML_NAMESPACE\n                node.setAttributeNS(strings[attribute[0]] !== 'null' ? strings[attribute[0]] : HTML_NAMESPACE, strings[attribute[1]], strings[attribute[2]]));\n                (skeleton[4 /* childNodes */] || []).forEach((child) => node.appendChild(this[64 /* hydrateNode */](strings, child)));\n                return node;\n        }\n    }\n    createElement(name) {\n        return this.createElementNS(HTML_NAMESPACE, toLower(name));\n    }\n    createElementNS(namespaceURI, localName) {\n        const constructor = NS_NAME_TO_CLASS[`${namespaceURI}:${localName}`] || HTMLElement;\n        return new constructor(1 /* ELEMENT_NODE */, localName, namespaceURI, this);\n    }\n    /**\n     * Note: Unlike DOM, Event subclasses (e.g. MouseEvent) are not instantiated based on `type`.\n     * @param type\n     */\n    createEvent(type) {\n        return new Event(type, { bubbles: false, cancelable: false });\n    }\n    createTextNode(text) {\n        return new Text(text, this);\n    }\n    createComment(text) {\n        return new Comment(text, this);\n    }\n    createDocumentFragment() {\n        return new DocumentFragment(this);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementById\n     * @return Element with matching id attribute.\n     */\n    getElementById(id) {\n        return matchChildElement(this.body, (element) => element.id === id);\n    }\n}\n//# sourceMappingURL=Document.js.map","import { get } from './nodes';\n/**\n * When an event is dispatched from the main thread, it needs to be propagated in the worker thread.\n * Propagate adds an event listener to the worker global scope and uses the WorkerDOM Node.dispatchEvent\n * method to dispatch the transfered event in the worker thread.\n */\nexport function propagate(global) {\n    const document = global.document;\n    if (!document.addGlobalEventListener) {\n        return;\n    }\n    document.addGlobalEventListener('message', ({ data }) => {\n        if (data[12 /* type */] !== 4 /* SYNC */) {\n            return;\n        }\n        const sync = data[40 /* sync */];\n        const node = get(sync[7 /* index */]);\n        if (node) {\n            node.ownerDocument[58 /* allowTransfer */] = false;\n            // Modify the private backing ivar of `value` property to avoid mutation/sync cycle.\n            node.value = sync[21 /* value */];\n            node.ownerDocument[58 /* allowTransfer */] = true;\n        }\n    });\n}\n//# sourceMappingURL=SyncValuePropagation.js.map","export function propagate(global) {\n    const document = global.document;\n    if (!document.addGlobalEventListener) {\n        return;\n    }\n    document.addGlobalEventListener('message', ({ data }) => {\n        if (data[12 /* type */] !== 5 /* RESIZE */) {\n            return;\n        }\n        const sync = data[40 /* sync */];\n        if (sync) {\n            global.innerWidth = sync[0];\n            global.innerHeight = sync[1];\n        }\n    });\n}\n//# sourceMappingURL=ResizePropagation.js.map","const frameDuration = 1000 / 60;\nlet last = 0;\nlet id = 0;\nlet queue = [];\n/**\n * Schedules the accumulated callbacks to be fired 16ms after the last round.\n */\nfunction scheduleNext() {\n    const now = Date.now();\n    const next = Math.round(Math.max(0, frameDuration - (Date.now() - last)));\n    last = now + next;\n    setTimeout(function () {\n        var cp = queue.slice(0);\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0;\n        for (var i = 0; i < cp.length; i++) {\n            if (cp[i].cancelled) {\n                continue;\n            }\n            try {\n                cp[i].callback(last);\n            }\n            catch (e) {\n                setTimeout(function () {\n                    throw e;\n                }, 0);\n            }\n        }\n    }, next);\n}\nexport function rafPolyfill(callback) {\n    if (queue.length === 0) {\n        scheduleNext();\n    }\n    if (id === Number.MAX_SAFE_INTEGER) {\n        id = 0;\n    }\n    queue.push({\n        handle: ++id,\n        callback,\n        cancelled: false,\n    });\n    return id;\n}\nexport function cafPolyfill(handle) {\n    for (let i = 0; i < queue.length; i++) {\n        if (queue[i].handle === handle) {\n            queue[i].cancelled = true;\n            return;\n        }\n    }\n}\n//# sourceMappingURL=AnimationFrame.js.map","import { Element, registerSubclass } from './Element';\nimport { SVG_NAMESPACE } from '../../transfer/TransferrableNodes';\nexport class SVGElement extends Element {\n    constructor(nodeType, localName, namespaceURI, ownerDocument) {\n        super(nodeType, localName, SVG_NAMESPACE, ownerDocument);\n        // Element uppercases its nodeName, but SVG elements don't.\n        this.nodeName = localName;\n    }\n}\nregisterSubclass('svg', SVGElement, SVG_NAMESPACE);\n//# sourceMappingURL=SVGElement.js.map","import { AMP } from './amp/amp';\nimport { callFunctionMessageHandler, exportFunction } from './function';\nimport { CharacterData } from './dom/CharacterData';\nimport { Comment } from './dom/Comment';\nimport { deleteGlobals } from './amp/delete-globals';\nimport { Document } from './dom/Document';\nimport { DocumentFragment } from './dom/DocumentFragment';\nimport { DOMTokenList } from './dom/DOMTokenList';\nimport { Element } from './dom/Element';\nimport { Event as WorkerDOMEvent } from './Event';\nimport { HTMLAnchorElement } from './dom/HTMLAnchorElement';\nimport { HTMLButtonElement } from './dom/HTMLButtonElement';\nimport { HTMLCanvasElement } from './dom/HTMLCanvasElement';\nimport { HTMLDataElement } from './dom/HTMLDataElement';\nimport { HTMLDataListElement } from './dom/HTMLDataListElement';\nimport { HTMLElement } from './dom/HTMLElement';\nimport { HTMLEmbedElement } from './dom/HTMLEmbedElement';\nimport { HTMLFieldSetElement } from './dom/HTMLFieldSetElement';\nimport { HTMLFormElement } from './dom/HTMLFormElement';\nimport { HTMLIFrameElement } from './dom/HTMLIFrameElement';\nimport { HTMLImageElement } from './dom/HTMLImageElement';\nimport { HTMLInputElement } from './dom/HTMLInputElement';\nimport { HTMLLabelElement } from './dom/HTMLLabelElement';\nimport { HTMLLinkElement } from './dom/HTMLLinkElement';\nimport { HTMLMapElement } from './dom/HTMLMapElement';\nimport { HTMLMeterElement } from './dom/HTMLMeterElement';\nimport { HTMLModElement } from './dom/HTMLModElement';\nimport { HTMLOListElement } from './dom/HTMLOListElement';\nimport { HTMLOptionElement } from './dom/HTMLOptionElement';\nimport { HTMLProgressElement } from './dom/HTMLProgressElement';\nimport { HTMLQuoteElement } from './dom/HTMLQuoteElement';\nimport { HTMLScriptElement } from './dom/HTMLScriptElement';\nimport { HTMLSelectElement } from './dom/HTMLSelectElement';\nimport { HTMLSourceElement } from './dom/HTMLSourceElement';\nimport { HTMLStyleElement } from './dom/HTMLStyleElement';\nimport { HTMLTableCellElement } from './dom/HTMLTableCellElement';\nimport { HTMLTableColElement } from './dom/HTMLTableColElement';\nimport { HTMLTableElement } from './dom/HTMLTableElement';\nimport { HTMLTableRowElement } from './dom/HTMLTableRowElement';\nimport { HTMLTableSectionElement } from './dom/HTMLTableSectionElement';\nimport { HTMLTimeElement } from './dom/HTMLTimeElement';\nimport { initialize } from './initialize';\nimport { MutationObserver } from './MutationObserver';\nimport { rafPolyfill, cafPolyfill } from './AnimationFrame';\nimport { SVGElement } from './dom/SVGElement';\nimport { Text } from './dom/Text';\nimport { wrap as longTaskWrap } from './long-task';\nconst globalScope = {\n    innerWidth: 0,\n    innerHeight: 0,\n    CharacterData,\n    Comment,\n    Document,\n    DocumentFragment,\n    DOMTokenList,\n    Element,\n    HTMLAnchorElement,\n    HTMLButtonElement,\n    HTMLCanvasElement,\n    HTMLDataElement,\n    HTMLDataListElement,\n    HTMLElement,\n    HTMLEmbedElement,\n    HTMLFieldSetElement,\n    HTMLFormElement,\n    HTMLIFrameElement,\n    HTMLImageElement,\n    HTMLInputElement,\n    HTMLLabelElement,\n    HTMLLinkElement,\n    HTMLMapElement,\n    HTMLMeterElement,\n    HTMLModElement,\n    HTMLOListElement,\n    HTMLOptionElement,\n    HTMLProgressElement,\n    HTMLQuoteElement,\n    HTMLScriptElement,\n    HTMLSelectElement,\n    HTMLSourceElement,\n    HTMLStyleElement,\n    HTMLTableCellElement,\n    HTMLTableColElement,\n    HTMLTableElement,\n    HTMLTableRowElement,\n    HTMLTableSectionElement,\n    HTMLTimeElement,\n    SVGElement,\n    Text,\n    Event: WorkerDOMEvent,\n    MutationObserver,\n    requestAnimationFrame: self.requestAnimationFrame || rafPolyfill,\n    cancelAnimationFrame: self.cancelAnimationFrame || cafPolyfill,\n};\nconst noop = () => void 0;\n// WorkerDOM.Document.defaultView ends up being the window object.\n// React requires the classes to exist off the window object for instanceof checks.\nexport const workerDOM = (function (postMessage, addEventListener, removeEventListener) {\n    const document = new Document(globalScope);\n    // TODO(choumx): Avoid polluting Document's public API.\n    document.postMessage = postMessage;\n    document.addGlobalEventListener = addEventListener;\n    document.removeGlobalEventListener = removeEventListener;\n    document.isConnected = true;\n    document.appendChild((document.body = document.createElement('body')));\n    // TODO(choumx): Remove once defaultView contains all native worker globals.\n    // Canvas's use of native OffscreenCanvas checks the existence of the property\n    // on the WorkerDOMGlobalScope.\n    globalScope.OffscreenCanvas = self['OffscreenCanvas'];\n    globalScope.ImageBitmap = self['ImageBitmap'];\n    return document.defaultView;\n})(postMessage.bind(self) || noop, addEventListener.bind(self) || noop, removeEventListener.bind(self) || noop);\n// Modify global scope by removing disallowed properties and wrapping `fetch()`.\n(function (global) {\n    deleteGlobals(global);\n    // Wrap global.fetch() with our longTask API.\n    const originalFetch = global['fetch'];\n    if (originalFetch) {\n        try {\n            Object.defineProperty(global, 'fetch', {\n                enumerable: true,\n                writable: true,\n                configurable: true,\n                value: longTaskWrap(workerDOM.document, originalFetch.bind(global)),\n            });\n        }\n        catch (e) {\n            console.warn(e);\n        }\n    }\n})(self);\n// Offer APIs like AMP.setState() on the global scope.\nself.AMP = new AMP(workerDOM.document);\n// Allows for function invocation\nself.exportFunction = exportFunction;\naddEventListener('message', (evt) => callFunctionMessageHandler(evt, workerDOM.document));\nexport const hydrate = initialize;\n//# sourceMappingURL=index.amp.js.map","import { store } from '../strings';\nimport { transfer } from '../MutationTransfer';\nexport class AMP {\n    document;\n    constructor(document) {\n        this.document = document;\n    }\n    /**\n     * Returns a promise that resolves with the value of `key`.\n     * @param key\n     */\n    getState(key = '') {\n        return new Promise((resolve) => {\n            const messageHandler = (event) => {\n                const message = event.data;\n                if (message[12 /* type */] !== 11 /* GET_STORAGE */) {\n                    return;\n                }\n                // TODO: There is a race condition here if there are multiple concurrent\n                // getState(k) messages in flight, where k is the same value.\n                const storageMessage = message;\n                if (storageMessage[74 /* storageKey */] !== key) {\n                    return;\n                }\n                this.document.removeGlobalEventListener('message', messageHandler);\n                const value = storageMessage[21 /* value */];\n                resolve(value);\n            };\n            this.document.addGlobalEventListener('message', messageHandler);\n            transfer(this.document, [12 /* STORAGE */, 1 /* GET */, 2 /* AmpState */, /* key */ store(key), /* value */ 0]);\n            setTimeout(resolve, 500, null); // TODO: Why a magical constant, define and explain.\n        });\n    }\n    /**\n     * Deep-merges `state` into the existing state.\n     * @param state\n     */\n    setState(state) {\n        // Stringify `state` so it can be post-messaged as a transferrable.\n        let stringified;\n        try {\n            stringified = JSON.stringify(state);\n        }\n        catch (e) {\n            throw new Error(`AMP.setState only accepts valid JSON as input.`);\n        }\n        transfer(this.document, [12 /* STORAGE */, 2 /* SET */, 2 /* AmpState */, /* key */ 0, /* value */ store(stringified)]);\n    }\n}\n//# sourceMappingURL=amp.js.map","import { store as storeString } from './strings';\nimport { appendKeys as addCssKeys } from './css/CSSStyleDeclaration';\nimport { appendGlobalEventProperties } from './dom/HTMLElement';\nimport { initializeStorage } from './initialize-storage';\nexport function initialize(document, strings, hydrateableNode, cssKeys, globalEventHandlerKeys, [innerWidth, innerHeight], localStorageInit, sessionStorageInit) {\n    addCssKeys(cssKeys);\n    appendGlobalEventProperties(globalEventHandlerKeys);\n    strings.forEach(storeString);\n    (hydrateableNode[4 /* childNodes */] || []).forEach((child) => document.body.appendChild(document[64 /* hydrateNode */](strings, child)));\n    const window = document.defaultView;\n    window.innerWidth = innerWidth;\n    window.innerHeight = innerHeight;\n    initializeStorage(document, localStorageInit, sessionStorageInit);\n}\n//# sourceMappingURL=initialize.js.map","import { createStorage } from './Storage';\nexport function initializeStorage(document, localStorageInit, sessionStorageInit) {\n    const window = document.defaultView;\n    if (localStorageInit.storage) {\n        window.localStorage = createStorage(document, 0 /* Local */, localStorageInit.storage);\n    }\n    else {\n        console.warn(localStorageInit.errorMsg);\n    }\n    if (sessionStorageInit.storage) {\n        window.sessionStorage = createStorage(document, 1 /* Session */, sessionStorageInit.storage);\n    }\n    else {\n        console.warn(sessionStorageInit.errorMsg);\n    }\n}\n//# sourceMappingURL=initialize-storage.js.map"],"names":["value","mapping","qa","transfer","sa","R","b","Promise","then","_","node","buffer","A","d","mutate","document","record","transferable","forEach","observer","t","target","parentNode","observerTarget","pushMutation","querySelectorAll","selector","selectorBracketIndexes","element","matchAttrReference","elementSelector","selectorHasAttr","id","substr","attrSelector","classList","contains","localName","matchChildrenElements","matcher","filter","synchronizedAccessor","defineOn","accessorKey","propertyName","Object","defineProperty","prototype","enumerable","configurable","get","set","decodeEntities","html","replace","s","numericEntity","namedEntity","code","charAt","toLowerCase","parseInt","isNaN","String","fromCodePoint","RESERVED_CHARACTERS","definePropertyBackedAttributes","attributes","assign","sub","serializeTransferrableObject","args","i","length","arg","num","serialized","push","f32","u16","store","Array","isArray","_i","serializedArray","_i2","serializedObject","retrieveImageBitmap","image","canvas","resolve","data","callIndex","removeGlobalEventListener","messageHandler","addGlobalEventListener","ownerDocument","createStorage","location","storage","keys","this","n","key","stringValue","wrap","func","apply","arguments","execute","promise","result","reason","count","phase","pending","pendingMutations","pushRecord","callback","takeRecords","property","childNodes","child","constructor","nodeType","nodeName","overrideIndex","isConnected","storeOverrideNodeMapping","Math","max","a","textContent","getTextContent","childNode","firstChild","lastChild","nextSibling","previousSibling","parentChildNodes","indexOf","hasChildNodes","otherNode","includes","insertBefore","slice","referenceNode","remove","splice","addedNodes","type","appendChild","removeChild","replaceChild","newChild","oldChild","index","removedNodes","replaceWith","nodes","currentNode","nodeIterator","parent","storeString","oldValue","nodeValue","cloneNode","createComment","ArrayBuffer","BigInt","BigInt64Array","BigUint64Array","Boolean","Cache","CustomEvent","DataView","Date","Error","EvalError","Event","EventTarget","Float32Array","Float64Array","Function","Infinity","Int16Array","Int32Array","Int8Array","Intl","JSON","Map","NaN","Number","Proxy","RangeError","ReferenceError","Reflect","RegExp","Set","Symbol","SyntaxError","TextDecoder","TextEncoder","TypeError","URIError","URL","Uint16Array","Uint32Array","Uint8Array","Uint8ClampedArray","WeakMap","WeakSet","WebAssembly","WebSocket","XMLHttpRequest","atob","addEventListener","removeEventListener","btoa","caches","clearInterval","clearTimeout","console","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","escape","fetch","indexedDB","isFinite","navigator","onerror","onrejectionhandled","onunhandledrejection","parseFloat","performance","requestAnimationFrame","cancelAnimationFrame","self","setTimeout","setInterval","unescape","tagNames","tagName","conditionPredicate","matchingElements","returnValue","children","some","matchChildElement","equalPos","selectorLength","caseInsensitive","endPos","equalSuffix","attrString","possibleSuffixes","substring","rawAttrValue","getAttribute","casedValue","rawValue","casedAttrValue","split","startsWith","endsWith","hasAttribute","elementPredicate","childElementCount","firstElementChild","find","lastElementChild","querySelector","matches","attributeName","bind","join","collection","newValue","item","token","add","tokens","concat","newToken","delete","toggle","force","WHITESPACE_REGEX","test","undefined","namespaceURI","attr","name","keysToAppend","CSSStyleDeclaration","hasOwnProperty","previousPrototypeLength","writable","hyphenatedKey","defineProperties","getPropertyValue","setProperty","removeProperty","mutated","cssText","trim","values","properties","pair","defaultValue","keywords","isBooleanAttribute","attributeValue","castableValue","setAttribute","removeAttribute","AREA","BASE","BR","COL","HR","IMG","INPUT","LINK","META","PARAM","SOURCE","TRACK","WBR","LI","DT","DD","P","ADDRESS","ARTICLE","ASIDE","BLOCKQUOTE","DETAILS","DIV","DL","FIELDSET","FIGCAPTION","FIGURE","FOOTER","FORM","H1","H2","H3","H4","H5","H6","HEADER","MAIN","NAV","OL","PRE","SECTION","TABLE","UL","RT","RP","OPTGROUP","OPTION","THEAD","TBODY","TFOOT","TR","TD","TH","B","I","SCRIPT","NOSCRIPT","STYLE","__proto__","amp","lt","gt","quot","opts","scoped","timeStamp","isTrusted","eventPhase","defaultPrevented","currentTarget","cancelBubble","cancelable","bubbles","changedTouches","touches","offsetY","offsetX","pageY","pageX","stopPropagation","stopImmediatePropagation","preventDefault","initEvent","event","touchListKeys","list","touchListKey","numericKey","transferredTouch","identifier","screenX","screenY","clientX","clientY","subclass","namespace","ElementKind","NORMAL","VOID","_classList","kind","style_","VOID_ELEMENTS","style","outerHTML","toString","start","contents","tag","innerHTML","map","parse","rootElement","currentParent","currentNamespace","root","match","lastTextPos","kMarkupPattern","exec","createTextNode","text","lastIndex","commentContents","beginningSlash","endSlash","kElementsClosedByOpening","normalizedTagName","stack","pop","attMatch","kAttributePattern","matchAttributes","childToAppend","kBlockTextElements","kSelfClosingElements","kElementsClosedByClosing","tagsClosed","wrapper","propagate","setAttributeNS","getAttributeNS","removeAttributeNS","hasAttributeNS","hasAttributes","propertyBacked","matchAttrPredicate","valueAsString","attributeNamespace","getElementsByClassName","names","inputClassList","inputClassName","getElementsByTagName","lowerTagName","getElementsByName","stringName","deep","clone","getBoundingClientRectAsync","left","top","right","bottom","x","y","width","height","transferredBoundingClientRect","click","dispatchEvent","scrollIntoView","DOMTokenList","Element","class","el","HTMLElement","normalizedKey","stored","form","tagNameConditionPredicate","reflectProperties","accessKey","contentEditable","dir","lang","title","draggable","hidden","noModule","spellcheck","translate","_relList","relList","href","registerSubclass","HTMLAnchorElement","rel","hreflang","media","HTMLButtonElement","formAction","formEnctype","formMethod","formTarget","autofocus","disabled","addColorStop","offset","color","setTransform","context","getContext","contextType","OffscreenCanvasRenderingContext2DPolyfill","objectIndex","canvasElement","lineDash","fnName","createObjectReference","objectId","creationMethod","creationArgs","clearRect","w","h","fillRect","strokeRect","lineWidth","fillText","maxWidth","moveTo","lineTo","closePath","stroke","restore","save","resetTransform","rotate","angle","transform","c","e","f","scale","globalAlpha","globalCompositeOperation","imageSmoothingQuality","fillStyle","strokeStyle","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","beginPath","strokeText","textAlign","textBaseline","lineCap","lineDashOffset","lineJoin","miterLimit","arc","radius","startAngle","endAngle","anticlockwise","arcTo","x1","y1","x2","y2","direction","font","ellipse","radiusX","radiusY","rotation","bezierCurveTo","cp1x","cp1y","cp2x","cp2y","rect","quadraticCurveTo","cpx","cpy","imageSmoothingEnabled","setLineDash","getLineDash","clip","pathOrFillRule","fillRule","fill","transformOrA","bOrC","cOrD","dOrE","eOrF","createLinearGradient","x0","y0","gradientId","CanvasGradient","createRadialGradient","r0","r1","createPattern","repetition","patternId","CanvasPattern","drawImage","dx","dy","createImageData","getImageData","putImageData","isPointInPath","isPointInStroke","measureText","indexTracker","instance","pattern","queue","implementation","upgraded","polyfillUsed","unresolvedCalls","goodImplementation","OffscreenCanvasPolyfill","OffscreenCanvas","getOffscreenCanvasAsync","isTestMode","deferred","maybeUpgradeImplementation","upgradePromise","deferredUpgrades","degradeImplementation","flushQueue","call","isSetter","delegateFunc","delegateSetter","delegateGetter","segments","FakeNativeCanvasPattern","antiClockwise","path","pathOrX","xOrY","yOrFillRule","imagedataOrWidth","sx","sy","sw","sh","imageData","dirtyX","dirtyY","dirtyWidth","dirtyHeight","CanvasRenderingContext2DShim","HTMLCanvasElement","HTMLDataElement","options","HTMLDataListElement","HTMLEmbedElement","src","MATCHING_CHILD_ELEMENT_TAGNAMES","HTMLFieldSetElement","elements","HTMLFormElement","method","action","enctype","acceptCharset","autocomplete","autocapitalize","_sandbox","sandbox","HTMLIFrameElement","allow","allowFullscreen","csp","referrerPolicy","srcdoc","HTMLImageElement","alt","crossOrigin","isMap","sizes","srcset","useMap","for","dirtyValue","valueAsDate","date","dateToString","valueAsNumber","checked","m","stringToDate","str","HTMLInputElement","accept","defaultChecked","dirName","formEncType","maxLength","min","multiple","placeholder","readOnly","required","size","step","control","htmlFor","getElementById","HTMLLabelElement","HTMLLinkElement","as","areas","HTMLMapElement","HTMLMeterElement","high","low","optimum","HTMLModElement","cite","datetime","HTMLOListElement","reversed","label","selected","HTMLOptionElement","defaultSelected","position","HTMLProgressElement","HTMLQuoteElement","HTMLScriptElement","charset","async","defer","isOptionPredicate","selectedIndex","isSelectedOptionPredicate","firstSelectedChild","selectedOptions","HTMLSelectElement","HTMLSourceElement","HTMLStyleElement","_headers","headers","cellIndex","HTMLTableCellElement","abbr","colSpan","rowSpan","scope","HTMLTableColElement","span","insertBeforeElement","caption","newElement","tHead","tFoot","rows","tBodies","HTMLTableElement","isValidAncestor","matchNearestParent","cells","rowIndex","sectionRowIndex","TABLE_SECTION_TAGNAMES","deleteCell","cell","insertCell","td","HTMLTableRowElement","deleteRow","insertRow","tr","HTMLTableSectionElement","HTMLTimeElement","dateTime","splitText","remainderTextNode","global","postMessage","body","documentElement","defaultView","newPhase","propagate$2","p","q","u","F","z","keyCode","touchListFromTransfer","propagate$1","sync","innerWidth","innerHeight","strings","skeleton","Text","Comment","attribute","createElement","createElementNS","createEvent","createDocumentFragment","DocumentFragment","last","SVGElement","CharacterData","Document","WorkerDOMEvent","MutationObserver","observe","disconnect","observers","records","rafPolyfill","scheduleNext","frameDuration","now","next","cp","cancelled","MAX_SAFE_INTEGER","handle","cafPolyfill","globalScope","ImageBitmap","noop","deleteGlobals","current","getOwnPropertyNames","prop","ALLOWLISTED_GLOBALS","object","getPrototypeOf","originalFetch","longTaskWrap","workerDOM","AMP","getState","message","setState","state","stringified","stringify","exportFunction","fn","exportedFunctions","evt","callFunctionMessageHandler","fnArguments","err","fnIdentifier","errorMessage","initialize","hydrateableNode","cssKeys","globalEventHandlerKeys","localStorageInit","sessionStorageInit","addCssKeys","initializeStorage","window","localStorage","sessionStorage"],"mappings":"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"}