{
  "version": 3,
  "sources": ["../../src/core/constants/consent-state.js", "../../src/core/mode/prod.js", "../../src/core/mode/test.js", "../../src/core/mode/local-dev.js", "../../src/core/mode/minified.js", "../../src/core/mode/version.js", "../../src/core/mode/esm.js", "../../src/core/types/object/index.js", "../../src/core/types/array.js", "../../src/core/types/object/json.js", "../../src/core/window/index.js", "../../src/core/types/string/index.js", "../../src/core/types/index.js", "../../src/core/error/message-helpers.js", "../../src/core/assert/base.js", "../../src/core/assert/dev.js", "../../src/core/assert/user.js", "../../third_party/css-escape/css-escape.js", "../../src/core/dom/css-selectors.js", "../../src/core/dom/query.js", "../../src/core/dom/index.js", "../../src/core/dom/layout/index.js", "../../src/core/types/string/url.js", "../../src/core/types/function/index.js", "../../src/config.js", "../../src/mode.js", "../../src/utils/log.js", "../../src/core/data-structures/promise.js", "../../src/service-helpers.js", "../../src/experiments/index.js", "../../src/service/extension-script.js", "../../src/element-service.js", "../../src/service/index.js", "../../src/core/data-structures/lru-cache.js", "../../src/url.js", "../../extensions/amp-next-page/0.1/config.js", "../../src/core/constants/visibility-state.js", "../../src/core/dom/layout/rect.js", "../../src/core/dom/style.js", "../../src/service/position-observer/position-observer-worker.js", "../../src/service/position-observer/position-observer-impl.js", "../../src/utils/analytics.js", "../../build/amp-next-page-0.1.css.js", "../../src/core/constants/common-signals.js", "../../src/core/dom/web-components.js", "../../third_party/webcomponentsjs/ShadowCSS.js", "../../src/style-installer.js", "../../src/utils/dom-writer.js", "../../src/shadow-embed.js", "../../src/multidoc-manager.js", "../../extensions/amp-next-page/0.1/next-page-service.js", "../../src/batched-json.js", "../../src/consent.js", "../../src/form-data-wrapper.js", "../../src/utils/xhr-utils.js", "../../src/document-fetcher.js", "../../extensions/amp-next-page/0.1/amp-next-page.js"],
  "sourcesContent": ["// This file will be imported by 3P scripts.\n\n/**\n * Possible consent policy state to proceed with.\n * @enum {number}\n */\nexport const CONSENT_POLICY_STATE = {\n  // Enum value has external dependency. Please do not change existing value.\n  // If new values are added, please notify the AMP for Ads team to assure\n  // correct Real Time Config behavior is maintained for Fast Fetch.\n  SUFFICIENT: 1,\n  INSUFFICIENT: 2,\n  UNKNOWN_NOT_REQUIRED: 3,\n  UNKNOWN: 4,\n};\n\n/**\n * Defines valid consent string types passed\n * in by consent iframe metadata.\n * @enum {number}\n */\nexport const CONSENT_STRING_TYPE = {\n  // Enum value has external dependency for metadata collection.\n  // It is up to the vendor to interpret an undefined CONSENT_STRING_TYPE.\n  TCF_V1: 1,\n  TCF_V2: 2,\n  US_PRIVACY_STRING: 3,\n};\n", "/**\n * Returns true when the build is meant for distribution.\n * This means `amp dist` was called _without_ the --fortesting flag.\n *\n * This is a magic constant replaced by babel.\n *\n * Calls are DCE'd when compiled.\n * @return {boolean}\n */\nexport function isProd() {\n  return IS_PROD;\n}\n", "import {isProd} from './prod';\n\n/**\n * Returns true if executing in a testing environment. Calls may be DCE'd when\n * compiled based on isForDistribution.\n * @param {!Window=} opt_win\n * @return {boolean}\n */\nexport function isTest(opt_win) {\n  if (isProd()) {\n    return false;\n  }\n  const win = opt_win || self;\n  return !!(win.AMP_CONFIG?.test || win.__AMP_TEST || win['__karma__']);\n}\n", "import {isProd} from './prod';\nimport {isTest} from './test';\n\n/**\n * Returns true if executing in a local development or testing environment.\n * Calls may be DCE'd when compiled based on isForDistribution and isTest.\n *\n * @param {!Window=} opt_win\n * @return {boolean}\n */\nexport function isLocalDev(opt_win) {\n  if (isProd()) {\n    return false;\n  }\n\n  return !!self.AMP_CONFIG?.localDev || isTest(opt_win);\n}\n", "/**\n * Returns true whenever closure compiler is used.\n * This is a magic constant that is replaced by babel.\n *\n * @return {boolean}\n */\nexport function isMinified() {\n  return IS_MINIFIED;\n}\n", "/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nexport function version() {\n  return INTERNAL_RUNTIME_VERSION;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isProd} from './prod';\n\n/**\n * Returns true when compiling an esm binary.\n * This is a magic constant that is replaced by babel.\n *\n * @return {boolean}\n */\nexport function isEsm() {\n  if (isProd()) {\n    return IS_ESM;\n  }\n\n  return self?.__AMP_MODE?.esm ?? IS_ESM;\n}\n", "/* @const */\nconst {hasOwnProperty: hasOwn_, toString: toString_} = Object.prototype;\n\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\nexport function isObject(value) {\n  return toString_.call(value) === '[object Object]';\n}\n\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\nexport function map(opt_initial) {\n  const obj = Object.create(null);\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n  return obj;\n}\n\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\nexport function dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return /** @type {!JsonObject} */ (opt_initial || {});\n}\n\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\nexport function hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\nexport function ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\nexport function deepMerge(target, source, depth = 10) {\n  // Keep track of seen objects to detect recursive references.\n  const seen = [];\n\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n  const queue = [];\n  queue.push({t: target, s: source, d: 0});\n\n  // BFS to ensure objects don't have recursive references at shallower depths.\n  while (queue.length > 0) {\n    const {d, s, t} = queue.shift();\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n    seen.push(s);\n    if (t === s) {\n      continue;\n    }\n    if (d > depth) {\n      Object.assign(t, s);\n      continue;\n    }\n    for (const key of Object.keys(s)) {\n      const newValue = s[key];\n      // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n      if (hasOwn(t, key)) {\n        const oldValue = t[key];\n        if (isObject(newValue) && isObject(oldValue)) {\n          queue.push({t: oldValue, s: newValue, d: d + 1});\n          continue;\n        }\n      }\n      t[key] = newValue;\n    }\n  }\n  return target;\n}\n\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\nexport function omit(o, props) {\n  return Object.keys(o).reduce((acc, key) => {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n    return acc;\n  }, {});\n}\n\n/**\n * @param {!Object|null|undefined} o1\n * @param {!Object|null|undefined} o2\n * @return {boolean}\n */\nexport function objectsEqualShallow(o1, o2) {\n  if (o1 == null || o2 == null) {\n    // Null is only equal to null, and undefined to undefined.\n    return o1 === o2;\n  }\n\n  for (const k in o1) {\n    if (o1[k] !== o2[k]) {\n      return false;\n    }\n  }\n  for (const k in o2) {\n    if (o2[k] !== o1[k]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @param {T} obj\n * @param {string} prop\n * @param {function(T, string):R} factory\n * @return {R}\n * @template T,R\n */\nexport function memo(obj, prop, factory) {\n  let result = /** @type {?R} */ (obj[prop]);\n  if (result === undefined) {\n    result = factory(obj, prop);\n    obj[prop] = result;\n  }\n  return result;\n}\n\n/**\n * Recreates objects with prototype-less copies.\n * @param {!JsonObject} obj\n * @return {!JsonObject}\n */\nexport function recreateNonProtoObject(obj) {\n  const copy = map();\n  for (const k in obj) {\n    if (!hasOwn(obj, k)) {\n      continue;\n    }\n    const v = obj[k];\n    copy[k] = isObject(v) ? recreateNonProtoObject(v) : v;\n  }\n  return /** @type {!JsonObject} */ (copy);\n}\n\n/**\n * Returns a value from an object for a field-based expression. The expression\n * is a simple nested dot-notation of fields, such as `field1.field2`. If any\n * field in a chain does not exist or is not an object or array, the returned\n * value will be `undefined`.\n *\n * @param {!JsonObject} obj\n * @param {string} expr\n * @return {*}\n */\nexport function getValueForExpr(obj, expr) {\n  // The `.` indicates \"the object itself\".\n  if (expr == '.') {\n    return obj;\n  }\n  // Otherwise, navigate via properties.\n  const parts = expr.split('.');\n  let value = obj;\n  for (const part of parts) {\n    if (\n      part &&\n      value &&\n      value[part] !== undefined &&\n      typeof value == 'object' &&\n      hasOwn(value, part)\n    ) {\n      value = value[part];\n      continue;\n    }\n    value = undefined;\n    break;\n  }\n  return value;\n}\n", "/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\nexport function toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\nexport const {isArray} = Array;\n\n/**\n * If the specified argument is an array, it's returned as is. If it's a\n * single item, the array containing this item is created and returned.\n *\n * The double-template pattern here solves a bug where CC can be passed a value\n * with declared type {string|!Array<string>} and return a value with a type of\n * {!Array<string|Array<string>>}.\n *\n * @param {!Array<T>|S} arrayOrSingleItem\n * @return {!Array<T>|!Array<S>}\n * @template S\n * @template T\n */\nexport function arrayOrSingleItemToArray(arrayOrSingleItem) {\n  return isArray(arrayOrSingleItem)\n    ? /** @type {!Array<T>} */ (arrayOrSingleItem)\n    : [/** @type {!S} */ (arrayOrSingleItem)];\n}\n\n/**\n * Compares if two arrays contains exactly same elements of same number\n * of same order. Note that it does NOT handle NaN case as expected.\n *\n * @param {!Array<T>} arr1\n * @param {!Array<T>} arr2\n * @return {boolean}\n * @template T\n */\nexport function areEqualOrdered(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Removes elements that shouldRemove returns true for from the array.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} shouldRemove\n * @return {!Array<T>}\n * @template T\n */\nexport function remove(array, shouldRemove) {\n  const removed = [];\n  let index = 0;\n  for (let i = 0; i < array.length; i++) {\n    const item = array[i];\n    if (shouldRemove(item, i, array)) {\n      removed.push(item);\n    } else {\n      if (index < i) {\n        array[index] = item;\n      }\n      index++;\n    }\n  }\n  if (index < array.length) {\n    array.length = index;\n  }\n  return removed;\n}\n\n/**\n * Returns the index of the first element matching the predicate.\n * Like Array#findIndex.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} predicate\n * @return {number}\n * @template T\n */\nexport function findIndex(array, predicate) {\n  for (let i = 0; i < array.length; i++) {\n    if (predicate(array[i], i, array)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Converts the given iterator to an array.\n *\n * @param {!Iterator<T>} iterator\n * @return {Array<T>}\n * @template T\n */\nexport function fromIterator(iterator) {\n  const array = [];\n  for (let e = iterator.next(); !e.done; e = iterator.next()) {\n    array.push(e.value);\n  }\n  return array;\n}\n\n/**\n * Adds item to array if it is not already present.\n *\n * @param {Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function pushIfNotExist(array, item) {\n  if (array.indexOf(item) < 0) {\n    array.push(item);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Removes the first matching item in the array. Returns `true` if the array\n * has changed.\n *\n * @param {!Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function removeItem(array, item) {\n  const index = array.indexOf(item);\n  if (index == -1) {\n    return false;\n  }\n  array.splice(index, 1);\n  return true;\n}\n\n/**\n * Returns the last item in an array.\n *\n * @param {Array<T>} array\n * @template T\n * @return {?T}\n */\nexport function lastItem(array) {\n  return array[array.length - 1];\n}\n", "import {isArray} from '#core/types/array';\n\n/**\n * @fileoverview This module declares JSON types as defined in the\n * {@link http://json.org/}.\n */\n\n// NOTE Type are changed to {*} because of\n// https://github.com/google/closure-compiler/issues/1999\n\n/**\n * JSON scalar. It's either string, number or boolean.\n * @typedef {string|number|boolean|null}\n */\nlet JSONScalarDef;\n\n/**\n * JSON object. It's a map with string keys and JSON values.\n * @typedef {!Object<string, ?*>} (* should be JSONValueDef)\n */\nlet JSONObjectDef;\n\n/**\n * JSON array. It's an array with JSON values.\n * @typedef {!Array<?*>} (* should be JSONValueDef)\n */\nlet JSONArrayDef;\n\n/**\n * JSON value. It's either a scalar, an object or an array.\n * @typedef {!JSONScalarDef|!JSONObjectDef|!JSONArrayDef}\n */\nlet JSONValueDef;\n\n/**\n * @typedef {{\n *   YOU_MUST_USE: string,\n *   jsonLiteral: function(),\n *   TO_MAKE_THIS_TYPE: string,\n * }}\n */\nlet InternalJsonLiteralTypeDef;\n\n/**\n * Simple wrapper around JSON.parse that casts the return value\n * to JsonObject.\n * Create a new wrapper if an array return value is desired.\n * @param {string} json JSON string to parse\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function parseJson(json) {\n  return /** @type {?JsonObject} */ (JSON.parse(json));\n}\n\n/**\n * Parses the given `json` string without throwing an exception if not valid.\n * Returns `undefined` if parsing fails.\n * Returns the `Object` corresponding to the JSON string when parsing succeeds.\n * @param {string} json JSON string to parse\n * @param {function(!Error)=} opt_onFailed Optional function that will be called\n *     with the error if parsing fails.\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function tryParseJson(json, opt_onFailed) {\n  try {\n    return parseJson(json);\n  } catch (e) {\n    opt_onFailed?.(e);\n    return null;\n  }\n}\n\n/**\n * Deeply checks strict equality of items in nested arrays and objects.\n *\n * @param {JSONValueDef} a\n * @param {JSONValueDef} b\n * @param {number} depth The maximum depth. Must be finite.\n * @return {boolean}\n * @throws {Error} If depth argument is not finite.\n */\nexport function deepEquals(a, b, depth = 5) {\n  if (!isFinite(depth) || depth < 0) {\n    throw new Error('Invalid depth: ' + depth);\n  }\n  if (a === b) {\n    return true;\n  }\n  /** @type {!Array<{a: JSONValueDef, b: JSONValueDef, depth: number}>} */\n  const queue = [{a, b, depth}];\n  while (queue.length > 0) {\n    const {a, b, depth} = queue.shift();\n    // Only check deep equality if depth > 0.\n    if (depth > 0) {\n      if (typeof a !== typeof b) {\n        return false;\n      } else if (isArray(a) && isArray(b)) {\n        if (a.length !== b.length) {\n          return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n          queue.push({a: a[i], b: b[i], depth: depth - 1});\n        }\n        continue;\n      } else if (a && b && typeof a === 'object' && typeof b === 'object') {\n        const keysA = Object.keys(a);\n        const keysB = Object.keys(b);\n        if (keysA.length !== keysB.length) {\n          return false;\n        }\n        for (const k of keysA) {\n          queue.push({a: a[k], b: b[k], depth: depth - 1});\n        }\n        continue;\n      }\n    }\n    // If we get here, then depth == 0 or (a, b) are primitives.\n    if (a !== b) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * This helper function handles configurations specified in a JSON format.\n *\n * It allows the configuration is to be written in plain JS (which has better\n * dev ergonomics like comments and trailing commas), and allows the\n * configuration to be transformed into an efficient JSON-parsed representation\n * in the dist build. See https://v8.dev/blog/cost-of-javascript-2019#json\n *\n * @param {!Object} obj\n * @return {!JsonObject}\n */\nexport function jsonConfiguration(obj) {\n  return /** @type {!JsonObject} */ (obj);\n}\n\n/**\n * This converts an Object into a suitable type to be used in `includeJsonLiteral`.\n * This doesn't actually do any conversion, it only changes the closure type.\n *\n * @param {?JSONValueDef} value\n * @return {!InternalJsonLiteralTypeDef}\n */\nexport function jsonLiteral(value) {\n  return /** @type {!InternalJsonLiteralTypeDef} */ (value);\n}\n\n/**\n * Allows inclusion of a variable (that's wrapped in a jsonLiteral\n * call) to be included inside a jsonConfiguration.\n *\n * @param {!InternalJsonLiteralTypeDef} value\n * @return {*}\n */\nexport function includeJsonLiteral(value) {\n  return value;\n}\n", "/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {?Window} winOrNull\n * @return {!Window}\n */\nexport function toWin(winOrNull) {\n  return /** @type {!Window} */ (winOrNull);\n}\n\n/**\n * Returns the associated Window for a node.\n *\n * @param {!Node} node\n * @return {!Window}\n */\nexport function getWin(node) {\n  return toWin(\n    (node.ownerDocument || /** @type {!Document} */ (node)).defaultView\n  );\n}\n", "/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n\n/**\n * @param {string} match\n * @return {string}\n */\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\nexport function dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\nexport function camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\nexport function dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\nexport function endsWith(string, suffix) {\n  const index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\nexport function includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n  if (start + substring.length > string.length) {\n    return false;\n  }\n  return string.indexOf(substring, start) !== -1;\n}\n\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\nexport function expandTemplate(template, getter, opt_maxIterations) {\n  const maxIterations = opt_maxIterations || 1;\n  for (let i = 0; i < maxIterations; i++) {\n    let matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, (_a, b) => {\n      matches++;\n      return getter(b);\n    });\n    if (!matches) {\n      break;\n    }\n  }\n  return template;\n}\n\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\nexport function stringHash32(str) {\n  const {length} = str;\n  let hash = 5381;\n  for (let i = 0; i < length; i++) {\n    hash = (hash * 33) ^ str.charCodeAt(i);\n  }\n  // Convert from 32-bit signed to unsigned.\n  return String(hash >>> 0);\n}\n\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\nexport function trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\nexport function trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n\n/**\n * Wrapper around String.replace that handles asynchronous resolution.\n * @param {string} str\n * @param {RegExp} regex\n * @param {Function|string} replacer\n * @return {!Promise<string>}\n */\nexport function asyncStringReplace(str, regex, replacer) {\n  if (isString(replacer)) {\n    return Promise.resolve(str.replace(regex, replacer));\n  }\n  const stringBuilder = [];\n  let lastIndex = 0;\n\n  str.replace(regex, function (match) {\n    // String.prototype.replace will pass 3 to n number of arguments to the\n    // callback function based on how many capture groups the regex may or may\n    // not contain. We know that the match will always be first, and the\n    // index will always be second to last.\n    const matchIndex = arguments[arguments.length - 2];\n    stringBuilder.push(str.slice(lastIndex, matchIndex));\n    lastIndex = matchIndex + match.length;\n\n    // Store the promise in it's eventual string position.\n    const replacementPromise = replacer.apply(null, arguments);\n    stringBuilder.push(replacementPromise);\n  });\n  stringBuilder.push(str.slice(lastIndex));\n\n  return Promise.all(stringBuilder).then((resolved) => resolved.join(''));\n}\n\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {string}\n */\nexport function padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n  targetLength = targetLength - s.length;\n  let padding = padString;\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n  return padding.slice(0, targetLength) + s;\n}\n\n/**\n * Tests if a value is a string.\n * @param {?} s\n * @return {boolean}\n */\nexport function isString(s) {\n  return typeof s == 'string';\n}\n", "// Export all type-checking helpers for convenience\nexport {isArray} from './array';\nexport {isEnumValue} from './enum';\nexport {isString} from './string';\nexport {isObject} from './object';\n\n/**\n * Determines if value is an ELement\n * @param {*} value\n * @return {boolean}\n */\nexport function isElement(value) {\n  return value?.nodeType == /* Node.ELEMENT_NODE */ 1;\n}\n\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\nexport function isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n", "import {isElement} from '#core/types';\n\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\nexport const USER_ERROR_SENTINEL = '\\u200B\\u200B\\u200B';\n/**\n * Four zero width space.\n *\n * @const {string}\n */\nexport const USER_ERROR_EMBED_SENTINEL = '\\u200B\\u200B\\u200B\\u200B';\n\n/**\n * Converts an element to a readable string; all other types are unchanged.\n * TODO(rcebulko): Unify with log.js\n * @param {*} val\n * @return {*}\n */\nexport function elementStringOrPassThru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (isElement(val)) {\n    val = /** @type {Element} */ (val);\n    return val.tagName.toLowerCase() + (val.id ? `#${val.id}` : '');\n  }\n  return val;\n}\n\n/**\n * Tests if an error message contains the user sentinel.\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\nexport function isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\nexport function isUserErrorEmbedMessage(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n\n/**\n * Strips the user error sentinel from an error message.\n * @param {string} message\n * @return {string} The new message without USER_ERROR_SENTINEL\n */\nexport function stripUserError(message) {\n  return message.replace(USER_ERROR_SENTINEL, '');\n}\n", "import {elementStringOrPassThru} from '#core/error/message-helpers';\nimport {isArray, isElement, isString} from '#core/types';\nimport {remove} from '#core/types/array';\n\n/**\n * @fileoverview This file provides the base implementation for assertion\n * functions. Most files should never import from this; instead, import from\n * `dev` or `user`. It is also used by the Log class for its assertions.\n */\n\n/**\n * A base assertion function, provided to various assertion helpers.\n * @typedef {function(?, string=, ...*):?|function(?, !Array<*>)}\n */\nexport let AssertionFunctionDef;\n\n/**\n * Throws an error if the second argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n * @param {?string} sentinel\n * @param {T} shouldBeTruthy\n * @param {string} opt_message\n * @param {...*} var_args Arguments substituted into %s in the message\n * @return {T}\n * @template T\n * @throws {Error} when shouldBeTruthy is not truthy.\n */\nexport function assert(\n  sentinel,\n  shouldBeTruthy,\n  opt_message = 'Assertion failed',\n  var_args\n) {\n  if (shouldBeTruthy) {\n    return shouldBeTruthy;\n  }\n\n  // Include the sentinel string if provided and not already present\n  if (sentinel && opt_message.indexOf(sentinel) == -1) {\n    opt_message += sentinel;\n  }\n\n  // Skip the first 3 arguments to isolate format params\n  // const messageArgs = Array.prototype.slice.call(arguments, 3);\n  // Index at which message args start\n  let i = 3;\n\n  // Substitute provided values into format string in message\n  const splitMessage = opt_message.split('%s');\n  let message = splitMessage.shift();\n  const messageArray = [message];\n\n  while (splitMessage.length) {\n    const subValue = arguments[i++];\n    const nextConstant = splitMessage.shift();\n\n    message += elementStringOrPassThru(subValue) + nextConstant;\n    messageArray.push(subValue, nextConstant.trim());\n  }\n\n  const error = new Error(message);\n  error.messageArray = remove(messageArray, (x) => x !== '');\n  // __AMP_REPORT_ERROR is installed globally per window in the entry point in\n  // AMP documents. It may not be present for Bento/Preact elements on non-AMP\n  // pages.\n  self.__AMP_REPORT_ERROR?.(error);\n  throw error;\n}\n\n/**\n * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n *\n * It understands array-based \"id\"-contracted messages.\n *\n * Otherwise creates a sprintf syntax string containing the optional message or the\n * default. The `subject` of the assertion is added at the end.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {T} subject\n * @param {*} shouldBeTruthy\n * @param {string} defaultMessage\n * @param {!Array<*>|string=} opt_message\n * @return {T}\n * @template T\n * @private\n */\nfunction assertType_(\n  assertFn,\n  subject,\n  shouldBeTruthy,\n  defaultMessage,\n  opt_message\n) {\n  if (isArray(opt_message)) {\n    assertFn(\n      shouldBeTruthy,\n      /** @type {!Array} */ (opt_message).concat([subject])\n    );\n  } else {\n    assertFn(shouldBeTruthy, `${opt_message || defaultMessage}: %s`, subject);\n  }\n\n  return subject;\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertElement(assertFn, shouldBeElement, opt_message) {\n  return /** @type {!Element} */ (\n    assertType_(\n      assertFn,\n      shouldBeElement,\n      isElement(shouldBeElement),\n      'Element expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertString(assertFn, shouldBeString, opt_message) {\n  return /** @type {string} */ (\n    assertType_(\n      assertFn,\n      shouldBeString,\n      isString(shouldBeString),\n      'String expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertNumber(assertFn, shouldBeNumber, opt_message) {\n  return /** @type {number} */ (\n    assertType_(\n      assertFn,\n      shouldBeNumber,\n      typeof shouldBeNumber == 'number',\n      'Number expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertArray(assertFn, shouldBeArray, opt_message) {\n  return /** @type {!Array} */ (\n    assertType_(\n      assertFn,\n      shouldBeArray,\n      isArray(shouldBeArray),\n      'Array expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertBoolean(assertFn, shouldBeBoolean, opt_message) {\n  return /** @type {boolean} */ (\n    assertType_(\n      assertFn,\n      shouldBeBoolean,\n      !!shouldBeBoolean === shouldBeBoolean,\n      'Boolean expected',\n      opt_message\n    )\n  );\n}\n", "import * as mode from '#core/mode';\n\nimport * as assertions from './base';\n\n/**\n * @fileoverview This file provides the entrypoint for dev assertions. It's\n * designed so all functions are pure function calls to improve inlining. All\n * functions in this file get DCE'd away during compilation.\n */\n\n/**\n * This will never execute regardless, but will be included on unminified builds\n * builds. It will be DCE'd away from minified builds, and so can be used to\n * validate that Babel is properly removing dev assertions in minified builds.\n */\nfunction devAssertDceCheck() {\n  if (self.__AMP_ASSERTION_CHECK) {\n    console /*OK*/\n      .log('__devAssert_sentinel__');\n  }\n}\n\n/**\n * Throws an error if the first argument isn't trueish. Mirrors devAssert in\n * src/log.js.\n * @param {T} shouldBeTruthy\n * @param {string=} opt_message\n * @param {*=} opt_1 Optional argument (var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T}\n * @template T\n * @throws {Error} when shouldBeTruthy is not truthy.\n * @closurePrimitive {asserts.truthy}\n */\nexport function devAssert(\n  shouldBeTruthy,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (mode.isMinified()) {\n    return shouldBeTruthy;\n  }\n  devAssertDceCheck();\n\n  return assertions.assert(\n    '',\n    shouldBeTruthy,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertElement(shouldBeElement, opt_message) {\n  if (mode.isMinified()) {\n    return /** @type {!Element} */ (shouldBeElement);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertElement(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeElement,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertString(shouldBeString, opt_message) {\n  if (mode.isMinified()) {\n    return /** @type {string} */ (shouldBeString);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertString(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeString,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertNumber(shouldBeNumber, opt_message) {\n  if (mode.isMinified()) {\n    return /** @type {number} */ (shouldBeNumber);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertNumber(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeNumber,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertArray(shouldBeArray, opt_message) {\n  if (mode.isMinified()) {\n    return /** @type {!Array} */ (shouldBeArray);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertArray(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeArray,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertBoolean(shouldBeBoolean, opt_message) {\n  if (mode.isMinified()) {\n    return /** @type {boolean} */ (shouldBeBoolean);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertBoolean(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeBoolean,\n    opt_message\n  );\n}\n", "import {USER_ERROR_SENTINEL} from '#core/error/message-helpers';\n\nimport * as assertions from './base';\n\n/**\n * @fileoverview This file provides the entrypoint for user assertions. It's\n * designed so all functions are pure function calls to improve inlining.\n */\n\n/**\n * Throws a user error if the first argument isn't trueish. Mirrors userAssert\n * in src/log.js.\n * @param {T} shouldBeTruthy\n * @param {string} opt_message\n * @param {*=} opt_1 Optional argument (var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T}\n * @template T\n * @throws {UserError} when shouldBeTruthy is not truthy.\n * @closurePrimitive {asserts.truthy}\n */\nexport function userAssert(\n  shouldBeTruthy,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return assertions.assert(\n    USER_ERROR_SENTINEL,\n    shouldBeTruthy,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertElement(shouldBeElement, opt_message) {\n  return assertions.assertElement(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeElement,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertString(shouldBeString, opt_message) {\n  return assertions.assertString(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeString,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertNumber(shouldBeNumber, opt_message) {\n  return assertions.assertNumber(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeNumber,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertArray(shouldBeArray, opt_message) {\n  return assertions.assertArray(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeArray,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertBoolean(shouldBeBoolean, opt_message) {\n  return assertions.assertBoolean(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeBoolean,\n    opt_message\n  );\n}\n", "/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  }\n  // Nil is the null terminator (group 1) capture\n  if (nil) {\n    return '\\uFFFD';\n  }\n  // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' '\n  }\n  // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n  return '\\\\' + match;\n}\n\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\nexport function cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n", "import {devAssert} from '#core/assert';\nimport * as mode from '#core/mode';\n\nimport {cssEscape} from '#third_party/css-escape/css-escape';\n\n/**\n * @type {boolean|undefined}\n */\nlet scopeSelectorSupported;\n\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\nexport function setScopeSelectorSupportedForTesting(val) {\n  scopeSelectorSupported = val;\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element|!ShadowRoot} el\n * @return {boolean}\n */\nexport function isScopeSelectorSupported(el) {\n  if (scopeSelectorSupported !== undefined) {\n    return scopeSelectorSupported;\n  }\n\n  return (scopeSelectorSupported = testScopeSelector(el));\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element|!ShadowRoot} el\n * @return {boolean}\n */\nfunction testScopeSelector(el) {\n  try {\n    const doc = el.ownerDocument;\n    const testElement = doc.createElement('div');\n    const testChild = doc.createElement('div');\n    testElement.appendChild(testChild);\n    // NOTE(cvializ, #12383): Firefox's implementation is incomplete,\n    // therefore we test actual functionality of`:scope` as well.\n    return testElement./*OK*/ querySelector(':scope div') === testChild;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Prefixes a selector for ancestor selection. Splits in subselectors and\n * applies prefix to each.\n *\n * e.g.\n * ```\n *   prependSelectorsWith('div', '.i-amphtml-scoped');\n *   // => '.i-amphtml-scoped div'\n *   prependSelectorsWith('div, ul', ':scope');\n *   // => ':scope div, :scope ul'\n *   prependSelectorsWith('div, ul', 'article >');\n *   // => 'article > div, article > ul'\n * ```\n *\n * @param {string} selector\n * @param {string} distribute\n * @return {string}\n */\nexport function prependSelectorsWith(selector, distribute) {\n  return selector.replace(/^|,/g, `$&${distribute} `);\n}\n\n/**\n * Escapes an ident (ID or a class name) to be used as a CSS selector.\n *\n * See https://drafts.csswg.org/cssom/#serialize-an-identifier.\n *\n * @param {string} ident\n * @return {string}\n * @suppress {uselessCode}\n */\nexport function escapeCssSelectorIdent(ident) {\n  // This gets rewritten to true/false during compilation. It will trigger an\n  // JSC_UNREACHABLE_CODE warning, but that's intentional for DCE.\n  if (mode.isEsm()) {\n    return CSS.escape(ident);\n  }\n  return cssEscape(ident);\n}\n\n/**\n * Escapes an ident in a way that can be used by :nth-child() psuedo-class.\n *\n * See https://github.com/w3c/csswg-drafts/issues/2306.\n *\n * @param {string|number} ident\n * @return {string}\n */\nexport function escapeCssSelectorNth(ident) {\n  const escaped = String(ident);\n  // Ensure it doesn't close the nth-child psuedo class.\n  devAssert(escaped.indexOf(')') === -1);\n  return escaped;\n}\n", "import {devAssert, devAssertElement} from '#core/assert';\nimport * as mode from '#core/mode';\n\nimport {isScopeSelectorSupported, prependSelectorsWith} from './css-selectors';\n\n/** @fileoverview Helper functions for DOM queries. */\n\n/**\n * Asserts that name is just an alphanumeric word, and does not contain\n * advanced CSS selector features like attributes, psuedo-classes, class names,\n * nor ids.\n * @param {string} name\n */\nfunction assertIsName(name) {\n  devAssert(\n    /^[\\w-]+$/.test(name),\n    `Expected \"${name}\" to be a CSS name composed of alphanumerics and hyphens.`\n  );\n}\n\n/**\n * Finds all elements that matche `selector`, scoped inside `root`\n * for user-agents that do not support native scoping.\n *\n * This method isn't required for modern builds, can be removed.\n *\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nfunction scopedQuerySelectionFallback(root, selector) {\n  const unique = 'i-amphtml-scoped';\n  root.classList.add(unique);\n  const scopedSelector = prependSelectorsWith(selector, `.${unique}`);\n  const elements = root./*OK*/ querySelectorAll(scopedSelector);\n  root.classList.remove(unique);\n  return elements;\n}\n\n/**\n * Finds the first element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {?Element}\n *\n * @suppress {suspiciousCode}\n */\nexport function scopedQuerySelector(root, selector) {\n  if (mode.isEsm() || isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelector(prependSelectorsWith(selector, ':scope'));\n  }\n\n  // Only IE.\n  const fallbackResult = scopedQuerySelectionFallback(root, selector);\n  return fallbackResult[0] === undefined ? null : fallbackResult[0];\n}\n\n/**\n * Finds every element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n *\n * @suppress {suspiciousCode}\n */\nexport function scopedQuerySelectorAll(root, selector) {\n  if (mode.isEsm() || isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelectorAll(\n      prependSelectorsWith(selector, ':scope')\n    );\n  }\n\n  // Only IE.\n  return scopedQuerySelectionFallback(root, selector);\n}\n\n/**\n * Checks if the given element matches the selector\n * @param  {!Element} el The element to verify\n * @param  {string} selector The selector to check against\n * @return {boolean} True if the element matched the selector. False otherwise.\n */\nexport function matches(el, selector) {\n  const matcher =\n    el.matches ||\n    el.webkitMatchesSelector ||\n    el.mozMatchesSelector ||\n    el.msMatchesSelector ||\n    el.oMatchesSelector;\n  if (matcher) {\n    return matcher.call(el, selector);\n  }\n  return false; // IE8 always returns false.\n}\n\n/**\n * Finds the closest element that satisfies the callback from this element\n * up the DOM subtree.\n * @param {!Element} element\n * @param {function(!Element):boolean} callback\n * @param {Element=} opt_stopAt optional elemnt to stop the search at.\n * @return {?Element}\n */\nexport function closest(element, callback, opt_stopAt) {\n  for (let el = element; el && el !== opt_stopAt; el = el.parentElement) {\n    if (callback(el)) {\n      return el;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest node that satisfies the callback from this node\n * up the DOM subtree.\n * @param {!Node} node\n * @param {function(!Node):boolean} callback\n * @return {?Node}\n */\nexport function closestNode(node, callback) {\n  for (let n = node; n; n = n.parentNode) {\n    if (callback(n)) {\n      return n;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest ancestor element with the specified selector from this\n * element.\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element} closest ancestor if found.\n */\nexport function closestAncestorElementBySelector(element, selector) {\n  return element.closest\n    ? element.closest(selector)\n    : closest(element, (el) => matches(el, selector));\n}\n\n/**\n * Finds all ancestor elements that satisfy predicate.\n * @param {!Element} child\n * @param {function(!Element):boolean} predicate\n * @return {!Array<!Element>}\n */\nexport function ancestorElements(child, predicate) {\n  const ancestors = [];\n  for (\n    let ancestor = child.parentElement;\n    ancestor;\n    ancestor = ancestor.parentElement\n  ) {\n    if (predicate(ancestor)) {\n      ancestors.push(ancestor);\n    }\n  }\n  return ancestors;\n}\n\n/**\n * Finds all ancestor elements that has the specified tag name.\n * @param {!Element} child\n * @param {string} tagName\n * @return {!Array<!Element>}\n */\nexport function ancestorElementsByTag(child, tagName) {\n  assertIsName(tagName);\n  tagName = tagName.toUpperCase();\n  return ancestorElements(child, (el) => el.tagName == tagName);\n}\n\n/**\n * Finds the first child element that satisfies the callback.\n * TODO(rcebulko): Can we start using generators in childElements and defer to\n * that here?\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function childElement(parent, callback) {\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the last child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function lastChildElement(parent, callback) {\n  for (\n    let child = parent.lastElementChild;\n    child;\n    child = child.previousElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child elements that satisfy the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {!Array<!Element>}\n */\nexport function childElements(parent, callback) {\n  const children = [];\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      children.push(child);\n    }\n  }\n  return children;\n}\n\n/**\n * Finds all child nodes that satisfy the callback.\n * These nodes can include Text, Comment and other child nodes.\n * @param {!Node} parent\n * @param {function(!Node):boolean} callback\n * @return {!Array<!Node>}\n */\nexport function childNodes(parent, callback) {\n  const nodes = [];\n  for (let child = parent.firstChild; child; child = child.nextSibling) {\n    if (callback(child)) {\n      nodes.push(child);\n    }\n  }\n  return nodes;\n}\n\n/**\n * Finds the first child element that has the specified attribute.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function childElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelector(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the last child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function lastChildElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return lastChildElement(parent, (el) => {\n    return el.hasAttribute(attr);\n  });\n}\n\n/**\n * Finds all child elements that has the specified attribute.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} attr\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the first child element that has the specified tag name.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} tagName\n * @return {?Element}\n */\nexport function childElementByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelector(parent, `> ${tagName}`);\n}\n\n/**\n * Finds all child elements with the specified tag name.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} tagName\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> ${tagName}`);\n}\n\n/**\n * Finds the first descendant element with the specified name.\n * @param {!Element|!Document|!ShadowRoot} element\n * @param {string} tagName\n * @return {?Element}\n */\nexport function elementByTag(element, tagName) {\n  assertIsName(tagName);\n  return element./*OK*/ querySelector(tagName);\n}\n\n/**\n * Returns the original nodes of the custom element without any service\n * nodes that could have been added for markup. These nodes can include\n * Text, Comment and other child nodes.\n *\n * @param {!Node} element\n * @return {!Array<!Node>}\n */\nexport function realChildNodes(element) {\n  return childNodes(element, (node) => !isInternalOrServiceNode(node));\n}\n\n/**\n * Returns the original children of the custom element without any service\n * nodes that could have been added for markup.\n *\n * @param {!Element} element\n * @return {!Array<!Element>}\n */\nexport function realChildElements(element) {\n  return childElements(element, (element) => !isInternalOrServiceNode(element));\n}\n\n/**\n * Returns \"true\" for internal AMP nodes or for placeholder elements.\n * @param {!Node} node\n * @return {boolean}\n */\nexport function isInternalOrServiceNode(node) {\n  if (isInternalElement(node)) {\n    return true;\n  }\n  if (node.nodeType !== Node.ELEMENT_NODE) {\n    return false;\n  }\n  devAssertElement(node);\n\n  return (\n    node.hasAttribute('placeholder') ||\n    node.hasAttribute('fallback') ||\n    node.hasAttribute('overflow')\n  );\n}\n\n/**\n * Whether the tag is an internal (service) AMP tag.\n * @param {!Node|string} nodeOrTagName\n * @return {boolean}\n */\nfunction isInternalElement(nodeOrTagName) {\n  /** @type string */\n  let tagName;\n  if (typeof nodeOrTagName == 'string') {\n    tagName = nodeOrTagName;\n  } else if (nodeOrTagName.nodeType === Node.ELEMENT_NODE) {\n    tagName = devAssertElement(nodeOrTagName).tagName;\n  }\n\n  return !!tagName && tagName.toLowerCase().startsWith('i-');\n}\n", "import * as mode from '#core/mode';\nimport {dict} from '#core/types/object';\nimport {parseJson} from '#core/types/object/json';\nimport {getWin} from '#core/window';\n\nimport {childElementsByTag, matches} from './query';\n\nconst HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n};\nconst HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n\n/**\n * @typedef {{\n *   bubbles: (boolean|undefined),\n *   cancelable: (boolean|undefined),\n * }}\n */\nexport let CustomEventOptionsDef;\n\n/** @const {!CustomEventOptionsDef} */\nconst DEFAULT_CUSTOM_EVENT_OPTIONS = {bubbles: true, cancelable: true};\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n */\nexport function waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  const win = getWin(parent);\n  if (mode.isEsm() || win.MutationObserver) {\n    const observer = new win.MutationObserver(() => {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {childList: true});\n  } else {\n    const interval = win.setInterval(() => {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    }, /* milliseconds */ 5);\n  }\n}\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\nexport function waitForChildPromise(parent, checkFunc) {\n  return new Promise((resolve) => {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\nexport function waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, () => !!doc.body, callback);\n}\n\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\nexport function waitForBodyOpenPromise(doc) {\n  return new Promise((resolve) => waitForBodyOpen(doc, resolve));\n}\n\n/**\n * Removes the element.\n * @param {!Element} element\n */\nexport function removeElement(element) {\n  element.parentElement?.removeChild(element);\n}\n\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element|!DocumentFragment} parent\n */\nexport function removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\nexport function copyChildren(from, to) {\n  const frag = to.ownerDocument.createDocumentFragment();\n  for (let n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n  to.appendChild(frag);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node=} after\n */\nexport function insertAfterOrAtStart(root, element, after = null) {\n  if (!after) {\n    insertAtStart(root, element);\n    return;\n  }\n  const before = after.nextSibling;\n  root.insertBefore(element, before);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n */\nexport function insertAtStart(root, element) {\n  root.insertBefore(element, root.firstChild);\n}\n\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function addAttributesToElement(element, attributes) {\n  for (const attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n  return element;\n}\n\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function createElementWithAttributes(doc, tagName, attributes) {\n  const element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\nexport function isConnectedNode(node) {\n  const connected = node.isConnected;\n  if (connected !== undefined) {\n    return connected;\n  }\n\n  // \"An element is connected if its shadow-including root is a document.\"\n  let n = node;\n  do {\n    n = rootNodeFor(n);\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\nexport function rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n  let n;\n  // Check isShadowRoot() is only needed for the polyfill case.\n  for (\n    n = node;\n    !!n.parentNode && !isShadowRoot(/** @type {HTMLElement} */ (n));\n    n = n.parentNode\n  ) {}\n  return n;\n}\n\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {?HTMLElement} value\n * @return {boolean}\n */\nexport function isShadowRoot(value) {\n  if (!value) {\n    return false;\n  }\n  // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n  return (\n    value.nodeType == /* DOCUMENT_FRAGMENT */ 11 &&\n    Object.prototype.toString.call(value) === '[object ShadowRoot]'\n  );\n}\n\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!HTMLElement} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\nexport function getDataParamsFromAttributes(\n  element,\n  opt_computeParamNameFunc,\n  opt_paramPattern\n) {\n  const computeParamNameFunc = opt_computeParamNameFunc || ((key) => key);\n  const {dataset} = element;\n  const params = dict();\n  const paramPattern = opt_paramPattern || /^param(.+)/;\n  for (const key in dataset) {\n    const matches = key.match(paramPattern);\n    if (matches) {\n      const param = matches[1][0].toLowerCase() + matches[1].substr(1);\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n  return params;\n}\n\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\nexport function hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  let currentElement = element;\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while (\n    (currentElement = currentElement.parentNode) &&\n    currentElement != opt_stopNode\n  );\n  return false;\n}\n\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\nexport function templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    const content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\nexport function iterateCursor(iterable, cb) {\n  const {length} = iterable;\n  for (let i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.getAttribute('type')?.toUpperCase() == 'APPLICATION/JSON'\n  );\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonLdScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.getAttribute('type')?.toUpperCase() == 'APPLICATION/LD+JSON'\n  );\n}\n\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isRTL(doc) {\n  const dir =\n    doc.body.getAttribute('dir') ||\n    doc.documentElement.getAttribute('dir') ||\n    'ltr';\n  return dir == 'rtl';\n}\n\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\nexport function escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n\n/**\n * @param {string} c\n * @return {string}\n */\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\nexport function tryFocus(element) {\n  try {\n    element./*OK*/ focus();\n  } catch (e) {\n    // IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isIframed(win) {\n  return win.parent && win.parent != win;\n}\n\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!HTMLInputElement} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\nexport function isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\nexport function domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  const pos = element1.compareDocumentPosition(element2);\n  const precedingOrContains =\n    Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS;\n\n  // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n  if (pos & precedingOrContains) {\n    return 1;\n  }\n\n  // if fe2 is following or contained by fe1, then fe1 is before fe2\n  return -1;\n}\n\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\nexport function toggleAttribute(element, name, forced) {\n  const hasAttribute = element.hasAttribute(name);\n  const enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n\n/**\n * Parses a string as a boolean value using the expanded rules for DOM boolean\n * attributes:\n * - a `null` or `undefined` returns `null`;\n * - an empty string returns `true`;\n * - a \"false\" string returns `false`;\n * - otherwise, `true` is returned.\n *\n * @param {?string|undefined} s\n * @return {boolean|undefined}\n */\nexport function parseBooleanAttribute(s) {\n  return s == null ? undefined : s !== 'false';\n}\n\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\nexport function getVerticalScrollbarWidth(win) {\n  const {documentElement} = win.document;\n  const windowWidth = win./*OK*/ innerWidth;\n  const documentWidth = documentElement./*OK*/ clientWidth;\n  return windowWidth - documentWidth;\n}\n\n/**\n * Dispatches a custom event.\n *\n * @param {!Node} node\n * @param {string} name\n * @param {!Object=} opt_data Event data.\n * @param {!CustomEventOptionsDef=} opt_options\n */\nexport function dispatchCustomEvent(node, name, opt_data, opt_options) {\n  const data = opt_data || {};\n  // Constructors of events need to come from the correct window. Sigh.\n  const event = node.ownerDocument.createEvent('Event');\n\n  // Technically .data is not a property of Event.\n  event.data = data;\n\n  const {bubbles, cancelable} = opt_options || DEFAULT_CUSTOM_EVENT_OPTIONS;\n  event.initEvent(name, bubbles, cancelable);\n  node.dispatchEvent(event);\n}\n\n/**\n * Ensures the child is contained by the parent, but not the parent itself.\n *\n * @param {!Node} parent\n * @param {!Node} child\n * @return {boolean}\n */\nexport function containsNotSelf(parent, child) {\n  return child !== parent && parent.contains(child);\n}\n\n/**\n * Helper method to get the json config from an element <script> tag\n * @param {!Element} element\n * @return {?JsonObject}\n * @throws {!Error} If element does not have exactly one <script> child\n * with type=\"application/json\", or if the <script> contents are not valid JSON.\n */\nexport function getChildJsonConfig(element) {\n  const scripts = childElementsByTag(element, 'script');\n  const {length} = scripts;\n  if (length !== 1) {\n    throw new Error(`Found ${length} <script> children. Expected 1.`);\n  }\n\n  const script = scripts[0];\n  if (!isJsonScriptTag(script)) {\n    throw new Error('<script> child must have type=\"application/json\"');\n  }\n\n  try {\n    return parseJson(script.textContent);\n  } catch {\n    throw new Error('Failed to parse <script> contents. Is it valid JSON?');\n  }\n}\n", "/**\n * @fileoverview Implements element layout. See https://goo.gl/9avXuT for\n * details.\n */\n\nimport {userAssert} from '#core/assert';\nimport {isFiniteNumber} from '#core/types';\n\n/**\n * @enum {string}\n */\nexport const Layout = {\n  NODISPLAY: 'nodisplay',\n  FIXED: 'fixed',\n  FIXED_HEIGHT: 'fixed-height',\n  RESPONSIVE: 'responsive',\n  CONTAINER: 'container',\n  FILL: 'fill',\n  FLEX_ITEM: 'flex-item',\n  FLUID: 'fluid',\n  INTRINSIC: 'intrinsic',\n};\n\n/**\n * Layout priorities to use with BaseElement#getLayoutPriority() and\n * BaseElement#updateLayoutPriority().\n * @enum {number}\n */\nexport const LayoutPriority = {\n  CONTENT: 0,\n  METADATA: 1,\n  ADS: 2,\n  BACKGROUND: 3,\n};\n\n/**\n * CSS Length type. E.g. \"1px\" or \"20vh\".\n * @typedef {string}\n */\nexport let LengthDef;\n\n/**\n * @typedef {{\n *   width: string,\n *   height: string\n * }}\n */\nexport let DimensionsDef;\n\n/**\n * Elements that the progress can be shown for. This set has to be externalized\n * since the element's implementation may not be downloaded yet.\n * This list does not include video players which are found via regex later.\n * @enum {boolean}\n * @private  Visible for testing only!\n */\nexport const LOADING_ELEMENTS_ = {\n  'AMP-AD': true,\n  'AMP-ANIM': true,\n  'AMP-EMBED': true,\n  'AMP-FACEBOOK': true,\n  'AMP-FACEBOOK-COMMENTS': true,\n  'AMP-FACEBOOK-PAGE': true,\n  'AMP-GOOGLE-DOCUMENT-EMBED': true,\n  'AMP-IFRAME': true,\n  'AMP-IMG': true,\n  'AMP-INSTAGRAM': true,\n  'AMP-LIST': true,\n  'AMP-PINTEREST': true,\n  'AMP-PLAYBUZZ': true,\n  'AMP-RENDER': true,\n  'AMP-TIKTOK': true,\n  'AMP-TWITTER': true,\n};\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they are listed individually.\n * @private @const {!RegExp}\n */\nconst videoPlayerTagNameRe =\n  /^amp\\-(video|.+player)|AMP-BRIGHTCOVE|AMP-DAILYMOTION|AMP-YOUTUBE|AMP-VIMEO|AMP-IMA-VIDEO/i;\n\n/**\n * @param {string} s\n * @return {!Layout|undefined} Returns undefined in case of failure to parse\n *   the layout string.\n */\nexport function parseLayout(s) {\n  for (const k in Layout) {\n    if (Layout[k] == s) {\n      return Layout[k];\n    }\n  }\n  return undefined;\n}\n\n/**\n * @param {!Layout} layout\n * @return {string}\n */\nexport function getLayoutClass(layout) {\n  return 'i-amphtml-layout-' + layout;\n}\n\n/**\n * Whether an element with this layout inherently defines the size.\n * @param {!Layout} layout\n * @return {boolean}\n */\nexport function isLayoutSizeDefined(layout) {\n  return (\n    layout == Layout.FIXED ||\n    layout == Layout.FIXED_HEIGHT ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.FILL ||\n    layout == Layout.FLEX_ITEM ||\n    layout == Layout.FLUID ||\n    layout == Layout.INTRINSIC\n  );\n}\n\n/**\n * Whether an element with this layout has a fixed dimension.\n * @param {!Layout} layout\n * @return {boolean}\n */\nexport function isLayoutSizeFixed(layout) {\n  return layout == Layout.FIXED || layout == Layout.FIXED_HEIGHT;\n}\n\n/**\n * Parses the CSS length value. If no units specified, the assumed value is\n * \"px\". Returns undefined in case of parsing error.\n * @param {string|undefined|null} s\n * @return {!LengthDef|undefined}\n */\nexport function parseLength(s) {\n  if (typeof s == 'number') {\n    return s + 'px';\n  }\n  if (!s) {\n    return undefined;\n  }\n  if (!/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)?$/.test(s)) {\n    return undefined;\n  }\n  if (/^\\d+(\\.\\d+)?$/.test(s)) {\n    return s + 'px';\n  }\n  return s;\n}\n\n/**\n * Asserts that the supplied value is a non-percent CSS Length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertLength(length) {\n  userAssert(\n    /^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)$/.test(length),\n    'Invalid length value: %s',\n    length\n  );\n  return /** @type {!LengthDef} */ (length);\n}\n\n/**\n * Asserts that the supplied value is a CSS Length value\n * (including percent unit).\n * @param {!LengthDef|string} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertLengthOrPercent(length) {\n  userAssert(\n    /^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|%)$/.test(length),\n    'Invalid length or percent value: %s',\n    length\n  );\n  return length;\n}\n\n/**\n * Returns units from the CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {string}\n */\nexport function getLengthUnits(length) {\n  assertLength(length);\n  const m = userAssert(\n    /[a-z]+/i.exec(length),\n    'Failed to read units from %s',\n    length\n  );\n  return m[0];\n}\n\n/**\n * Returns the numeric value of a CSS length value.\n * @param {!LengthDef|string|null|undefined|number} length\n * @return {number|undefined}\n */\nexport function getLengthNumeral(length) {\n  const res = parseFloat(length);\n  return isFiniteNumber(res) ? res : undefined;\n}\n\n/**\n * Whether the loading can be shown for the specified element. This set has\n * to be externalized since the element's implementation may not be\n * downloaded yet.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isLoadingAllowed(element) {\n  const tagName = element.tagName.toUpperCase();\n  return LOADING_ELEMENTS_[tagName] || isIframeVideoPlayerComponent(tagName);\n}\n\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they're present in the LOADING_ELEMENTS_ allowlist.\n * @param {string} tagName\n * @return {boolean}\n */\nexport function isIframeVideoPlayerComponent(tagName) {\n  if (tagName == 'AMP-VIDEO') {\n    return false;\n  }\n  return videoPlayerTagNameRe.test(tagName);\n}\n\n/**\n * Configures the supplied element to have a \"fill content\" layout. The\n * exact interpretation of \"fill content\" depends on the element's layout.\n *\n * If `opt_replacedContent` is specified, it indicates whether the \"replaced\n * content\" styling should be applied. Replaced content is not allowed to\n * have its own paddings or border.\n *\n * @param {!Element} element\n * @param {boolean=} opt_replacedContent\n */\nexport function applyFillContent(element, opt_replacedContent) {\n  element.classList.add('i-amphtml-fill-content');\n  if (opt_replacedContent) {\n    element.classList.add('i-amphtml-replaced-content');\n  }\n}\n", "import {map} from '#core/types/object';\n\nconst QUERY_STRING_REGEX = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent(component, fallback = '') {\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString(queryString) {\n  const params = map();\n  if (!queryString) {\n    return params;\n  }\n\n  let match;\n  while ((match = QUERY_STRING_REGEX.exec(queryString))) {\n    const name = tryDecodeUriComponent(match[1], match[1]);\n    const value = match[2]\n      ? tryDecodeUriComponent(match[2].replace(/\\+/g, ' '), match[2])\n      : '';\n    params[name] = value;\n  }\n  return params;\n}\n\n/**\n * Parses the query # params.\n * @param {!Window=} opt_win\n * @return {!JsonObject}\n */\nexport function getHashParams(opt_win) {\n  const {location} = opt_win || self;\n  // location.originalHash is set by the viewer when it removes the fragment\n  // from the URL.\n  return parseQueryString(location['originalHash'] || location.hash);\n}\n", "/** @fileoverview Helpers to wrap functions. */\n\n/**\n * Creates a function that is evaluated only once and returns the cached result\n * subsequently.\n *\n * Please note that `once` only takes the function definition into account,\n * so it will return the same cached value even when the arguments are\n * different.\n *\n * @param {function(...):T} fn\n * @return {function(...):T}\n * @template T\n */\nexport function once(fn) {\n  let evaluated = false;\n  let retValue = null;\n  let callback = fn;\n  return (...args) => {\n    if (!evaluated) {\n      retValue = callback.apply(self, args);\n      evaluated = true;\n      callback = null; // GC\n    }\n    return retValue;\n  };\n}\n\n/**\n * Wraps a given callback and applies a rate limit.\n * It throttles the calls so that no consequent calls have time interval\n * smaller than the given minimal interval.\n *\n * @param {!Window} win\n * @param {function(...T):R} callback\n * @param {number} minInterval the minimum time interval in millisecond\n * @return {function(...T)}\n * @template T\n * @template R\n */\nexport function throttle(win, callback, minInterval) {\n  let locker = 0;\n  let nextCallArgs = null;\n\n  /**\n   * @param {!Object} args\n   */\n  function fire(args) {\n    nextCallArgs = null;\n    // Lock the fire for minInterval milliseconds\n    locker = win.setTimeout(waiter, minInterval);\n\n    callback.apply(null, args);\n  }\n\n  /**\n   * Waiter function\n   */\n  function waiter() {\n    locker = 0;\n    // If during the period there're invocations queued up, fire once.\n    if (nextCallArgs) {\n      fire(nextCallArgs);\n    }\n  }\n\n  return function (...args) {\n    if (locker) {\n      nextCallArgs = args;\n    } else {\n      fire(args);\n    }\n  };\n}\n\n/**\n * Wraps a given callback and applies a wait timer, so that minInterval\n * milliseconds must pass since the last call before the callback is actually\n * invoked.\n *\n * @param {!Window} win\n * @param {function(...T):R} callback\n * @param {number} minInterval the minimum time interval in millisecond\n * @return {function(...T)}\n * @template T\n * @template R\n */\nexport function debounce(win, callback, minInterval) {\n  let locker = 0;\n  let timestamp = 0;\n  let nextCallArgs = null;\n\n  /**\n   * @param {?Array} args\n   */\n  function fire(args) {\n    nextCallArgs = null;\n    callback.apply(null, args);\n  }\n\n  /**\n   * Wait function for debounce\n   */\n  function waiter() {\n    locker = 0;\n    const remaining = minInterval - (win.Date.now() - timestamp);\n    if (remaining > 0) {\n      locker = win.setTimeout(waiter, remaining);\n    } else {\n      fire(nextCallArgs);\n    }\n  }\n\n  return function (...args) {\n    timestamp = win.Date.now();\n    nextCallArgs = args;\n    if (!locker) {\n      locker = win.setTimeout(waiter, minInterval);\n    }\n  };\n}\n", "/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nconst env = self.AMP_CONFIG || {};\n\nconst thirdPartyFrameRegex =\n  (typeof env['thirdPartyFrameRegex'] == 'string'\n    ? new RegExp(env['thirdPartyFrameRegex'])\n    : env['thirdPartyFrameRegex']) || /^d-\\d+\\.ampproject\\.net$/;\n\nconst cdnProxyRegex =\n  (typeof env['cdnProxyRegex'] == 'string'\n    ? new RegExp(env['cdnProxyRegex'])\n    : env['cdnProxyRegex']) ||\n  /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/;\n\n/**\n * Check for a custom URL definition in special <meta> tags. Note that this does\n * not allow for distinct custom URLs in AmpDocShadow instances. The shell is\n * allowed to define one set of custom URLs via AMP_CONFIG (recommended) or by\n * including <meta> tags in the shell <head>. Those custom URLs then apply to\n * all AMP documents loaded in the shell.\n * @param {string} name\n * @return {?string}\n * @private\n */\nfunction getMetaUrl(name) {\n  // Avoid exceptions in unit tests\n  if (!self.document || !self.document.head) {\n    return null;\n  }\n\n  // Disallow on proxy origins\n  if (self.location && cdnProxyRegex.test(self.location.origin)) {\n    return null;\n  }\n\n  const metaEl = self.document.head./*OK*/ querySelector(\n    `meta[name=\"${name}\"]`\n  );\n  return (metaEl && metaEl.getAttribute('content')) || null;\n}\n\n/**\n * @typedef {{\n *   thirdParty: string,\n *   thirdPartyFrameHost: string,\n *   thirdPartyFrameRegex: !RegExp,\n *   cdn: string,\n *   cdnProxyRegex: !RegExp,\n *   localhostRegex: !RegExp,\n *   errorReporting: string,\n *   betaErrorReporting: string,\n *   localDev: boolean,\n *   trustedViewerHosts: !Array<!RegExp>,\n *   geoApi: ?string,\n * }}\n */\nexport const urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex,\n  cdn:\n    env['cdnUrl'] || getMetaUrl('runtime-host') || 'https://cdn.ampproject.org',\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting:\n    env['errorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r',\n  betaErrorReporting:\n    env['betaErrorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r-beta',\n  localDev: env['localDev'] || false,\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/main/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [\n    /(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/,\n    /(^|\\.)gmail\\.(com|dev)$/,\n  ],\n  // Optional fallback API if amp-geo is left unpatched\n  geoApi: env['geoApiUrl'] || getMetaUrl('amp-geo-api'),\n};\n\nexport const config = {\n  urls,\n};\n", "import * as coreMode from '#core/mode';\nimport {getHashParams} from '#core/types/string/url';\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   esm: boolean,\n *   test: boolean,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined)\n * }}\n */\nexport let ModeDef;\n\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\nlet rtvVersion = '';\n\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\nexport function getMode(opt_win) {\n  const win = opt_win || self;\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n  return (win.__AMP_MODE = getMode_(win));\n}\n\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\nfunction getMode_(win) {\n  const hashParams = getHashParams(win);\n\n  // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `amp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n  return {\n    localDev: coreMode.isLocalDev(win),\n    development: isModeDevelopment(win, hashParams),\n    esm: coreMode.isEsm(),\n    test: coreMode.isTest(win),\n    rtvVersion: getRtvVersion(win),\n  };\n}\n\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @return {string}\n */\nfunction getRtvVersion(win) {\n  // Ignore memoized copy during testing to allow override.\n  if (!rtvVersion || coreMode.isTest(win)) {\n    // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n    // major version. The full version however must also carry the minor version.\n    // We will default to production default `01` minor version for now.\n    // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n    // minor version.\n    rtvVersion = win.AMP_CONFIG?.v || `01${coreMode.version()}`;\n  }\n  return rtvVersion;\n}\n\n/**\n * Triggers validation or enable pub level logging. Validation can be\n * bypassed via #validate=0.\n * Note that AMP_DEV_MODE flag is used for testing purposes.\n * @param {!Window} win\n * @param {!JsonObject=} opt_hashParams\n * @return {boolean}\n */\nexport function isModeDevelopment(win, opt_hashParams) {\n  const devModes = ['1', 'actions', 'amp', 'amp4ads', 'amp4email'];\n  const devParam = opt_hashParams || getHashParams(win);\n  return devModes.includes(devParam['development']) || !!win.AMP_DEV_MODE;\n}\n\n/**\n * @param {!Window} win\n * @return {string}\n * @visibleForTesting\n */\nexport function getRtvVersionForTesting(win) {\n  return getRtvVersion(win);\n}\n\n/** @visibleForTesting */\nexport function resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n", "import * as assertions from '#core/assert/base';\nimport {\n  createError,\n  createExpectedError,\n  duplicateErrorIfNecessary,\n} from '#core/error';\nimport {\n  USER_ERROR_EMBED_SENTINEL,\n  USER_ERROR_SENTINEL,\n  elementStringOrPassThru,\n  isUserErrorMessage,\n  stripUserError,\n} from '#core/error/message-helpers';\nimport * as mode from '#core/mode';\nimport {isArray, isString} from '#core/types';\nimport {once} from '#core/types/function';\nimport {getHashParams} from '#core/types/string/url';\n\nimport {urls} from '../config';\nimport {getMode} from '../mode';\n\nconst noop = () => {};\n\n// These are exported here despite being defined elswhere to avoid updating\n// imports across many files for now.\nexport {USER_ERROR_SENTINEL, isUserErrorMessage};\n\n/**\n * Sets reportError function. Called from error-reporting.js to break cyclic\n * dependency.\n * @param {function(this:Window, Error, (?Element)=): ?|undefined} fn\n */\nexport function setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n\n/**\n * @enum {number}\n */\nexport const LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4,\n};\n\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\nlet levelOverride_ = undefined;\n\n/**\n * @param {!LogLevel} level\n */\nexport function overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\nconst messageUrlRtv = () => `01${mode.version()}`;\n\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\nconst externalMessageUrl = (id, interpolatedParts) =>\n  interpolatedParts.reduce(\n    (prefix, arg) => `${prefix}&s[]=${messageArgToEncodedComponent(arg)}`,\n    `https://log.amp.dev/?v=${messageUrlRtv()}&id=${encodeURIComponent(id)}`\n  );\n\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\nconst externalMessagesSimpleTableUrl = () =>\n  `${urls.cdn}/rtv/${messageUrlRtv()}/log-messages.simple.json`;\n\n/**\n * @param {*} arg\n * @return {string}\n */\nconst messageArgToEncodedComponent = (arg) =>\n  encodeURIComponent(String(elementStringOrPassThru(arg)));\n\n/**\n * @param {!Window=} opt_win\n * @return {number}\n */\nexport const logHashParam = (opt_win) =>\n  parseInt(getHashParams(opt_win)['log'], 10);\n\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don\u2019t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\nexport class Log {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(number, boolean):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  constructor(win, levelFunc, opt_suffix = '') {\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = getMode().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n\n    /** @private @const {function(number, boolean):!LogLevel} */\n    this.levelFunc_ = levelFunc;\n\n    /** @private @const {!LogLevel} */\n    this.level_ = this.defaultLevel_();\n\n    /** @private @const {string} */\n    this.suffix_ = opt_suffix;\n\n    /** @private {?JsonObject} */\n    this.messages_ = null;\n\n    this.fetchExternalMessagesOnce_ = once(() => {\n      win\n        .fetch(externalMessagesSimpleTableUrl())\n        .then((response) => response.json(), noop)\n        .then((opt_messages) => {\n          if (opt_messages) {\n            this.messages_ = /** @type {!JsonObject} */ (opt_messages);\n          }\n        });\n    });\n\n    // This bound assertion function is capable of handling the format used when\n    // error/assertion messages are extracted. This logic hasn't yet been\n    // migrated to an AMP-independent form for use in core. This binding allows\n    // Log assertion helpers to maintain message-extraction capabilities until\n    // that logic can be moved to core.\n    this.boundAssertFn_ = /** @type {!assertions.AssertionFunctionDef} */ (\n      this.assert.bind(this)\n    );\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevel_() {\n    const {win} = this;\n    // No console - can't enable logging.\n    if (\n      !win.console?.log ||\n      // Logging has been explicitly disabled.\n      logHashParam(win) == 0\n    ) {\n      return LogLevel.OFF;\n    }\n\n    // Logging is enabled for tests directly.\n    if (getMode().test && win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    }\n\n    // LocalDev by default allows INFO level, unless overriden by `#log`.\n    if (getMode().localDev) {\n      return LogLevel.INFO;\n    }\n\n    return this.defaultLevelWithFunc_();\n  }\n\n  /**\n   * @param {!Window=} opt_win provided for testing\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevelWithFunc_(opt_win) {\n    // Delegate to the specific resolver.\n    return this.levelFunc_(logHashParam(opt_win), getMode().development);\n  }\n\n  /**\n   * @param {string} tag\n   * @param {!LogLevel} level\n   * @param {!Array} messages\n   * @return {boolean} true if a the message was logged\n   */\n  msg_(tag, level, messages) {\n    if (level > (levelOverride_ ?? this.level_)) {\n      return false;\n    }\n\n    const cs = this.win.console;\n    const fn =\n      {\n        [LogLevel.ERROR]: cs.error,\n        [LogLevel.INFO]: cs.info,\n        [LogLevel.WARN]: cs.warn,\n      }[level] ?? cs.log;\n\n    const args = this.maybeExpandMessageArgs_(messages);\n    // Prefix console message with \"[tag]\".\n    const prefix = `[${tag}]`;\n    if (isString(args[0])) {\n      // Prepend string to avoid breaking string substitutions e.g. %s.\n      args[0] = prefix + ' ' + args[0];\n    } else {\n      args.unshift(prefix);\n    }\n    fn.apply(cs, args);\n\n    return true;\n  }\n\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  fine(tag, ...args) {\n    this.msg_(tag, LogLevel.FINE, args);\n  }\n\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  info(tag, ...args) {\n    this.msg_(tag, LogLevel.INFO, args);\n  }\n\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  warn(tag, ...args) {\n    this.msg_(tag, LogLevel.WARN, args);\n  }\n\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  error(tag, ...args) {\n    if (!this.msg_(tag, LogLevel.ERROR, args)) {\n      const error = this.createError.apply(this, args);\n      error.name = tag || error.name;\n      self.__AMP_REPORT_ERROR?.(error);\n    }\n  }\n\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  expectedError(tag, ...args) {\n    if (!this.msg_(tag, LogLevel.ERROR, args)) {\n      self.__AMP_REPORT_ERROR?.(this.createExpectedError.apply(this, args));\n    }\n  }\n\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createError(var_args) {\n    return this.setErrorSuffix_(createError.apply(null, arguments));\n  }\n\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createExpectedError(var_args) {\n    return this.setErrorSuffix_(createExpectedError.apply(null, arguments));\n  }\n\n  /**\n   * @param {!Error} error\n   * @return {!Error}\n   * @private\n   */\n  setErrorSuffix_(error) {\n    error = duplicateErrorIfNecessary(error);\n\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = stripUserError(error.message);\n    }\n\n    return error;\n  }\n\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  maybeExpandMessageArgs_(args) {\n    return isArray(args[0])\n      ? this.expandMessageArgs_(/** @type {!Array} */ (args[0]))\n      : args;\n  }\n\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  expandMessageArgs_(parts) {\n    // First value should exist.\n    const id = parts.shift();\n    // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n    if (getMode(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n\n    return this.messages_?.[id]\n      ? [this.messages_[id]].concat(parts)\n      : [`More info at ${externalMessageUrl(id, parts)}`];\n  }\n\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {T} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is falsey.\n   * @template T\n   * @closurePrimitive {asserts.truthy}\n   */\n  assert(shouldBeTrueish, opt_message, var_args) {\n    if (isArray(opt_message)) {\n      return this.assert.apply(\n        this,\n        [shouldBeTrueish].concat(\n          this.expandMessageArgs_(/** @type {!Array} */ (opt_message))\n        )\n      );\n    }\n\n    return assertions.assert.apply(\n      null,\n      [this.suffix_].concat(Array.prototype.slice.call(arguments))\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertElement(shouldBeElement, opt_message) {\n    return assertions.assertElement(\n      this.boundAssertFn_,\n      shouldBeElement,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertString(shouldBeString, opt_message) {\n    return assertions.assertString(\n      this.boundAssertFn_,\n      shouldBeString,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertNumber(shouldBeNumber, opt_message) {\n    return assertions.assertNumber(\n      this.boundAssertFn_,\n      shouldBeNumber,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertArray(shouldBeArray, opt_message) {\n    return assertions.assertArray(\n      this.boundAssertFn_,\n      shouldBeArray,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertBoolean(shouldBeBoolean, opt_message) {\n    return assertions.assertBoolean(\n      this.boundAssertFn_,\n      shouldBeBoolean,\n      opt_message\n    );\n  }\n}\n\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null,\n};\n\nconst logs = self.__AMP_LOG;\n\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?typeof Log}\n */\nlet logConstructor = null;\n\n/**\n * Initializes log constructor.\n */\nexport function initLogConstructor() {\n  logConstructor = Log;\n  // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n  dev();\n  user();\n}\n\n/**\n * Resets log constructor for testing.\n */\nexport function resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n\n/**\n * Calls the log constructor with a given level function and suffix.\n * @param {function(number, boolean):!LogLevel} levelFunc\n * @param {string=} opt_suffix\n * @return {!Log}\n */\nfunction callLogConstructor(levelFunc, opt_suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return new logConstructor(self, levelFunc, opt_suffix);\n}\n\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\nexport function user(opt_element) {\n  // logs.user must exist first to perform the logs.user.win check below\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n\n  if (isFromEmbed(logs.user.win, opt_element)) {\n    return (\n      logs.userForEmbed ||\n      (logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL))\n    );\n  }\n  return logs.user;\n}\n\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\nfunction getUserLogger(suffix) {\n  return callLogConstructor(\n    (logNum, development) =>\n      development || logNum >= 1 ? LogLevel.FINE : LogLevel.WARN,\n    suffix\n  );\n}\n\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\nexport function dev() {\n  return (\n    logs.dev ||\n    (logs.dev = callLogConstructor((logNum) =>\n      logNum >= 3 ? LogLevel.FINE : logNum >= 2 ? LogLevel.INFO : LogLevel.OFF\n    ))\n  );\n}\n\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\nfunction isFromEmbed(win, opt_element) {\n  return opt_element && opt_element.ownerDocument.defaultView != win;\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function devAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (mode.isMinified()) {\n    return shouldBeTrueish;\n  }\n  if (self.__AMP_ASSERTION_CHECK) {\n    // This will never execute regardless, but will be included on unminified\n    // builds. It will be DCE'd away from minified builds, and so can be used to\n    // validate that Babel is properly removing dev assertions in minified\n    // builds.\n    console /*OK*/\n      .log('__devAssert_sentinel__');\n  }\n\n  return dev()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function userAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return user()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n", "let resolved;\n\n/**\n * Returns a cached resolved promise.\n * Babel converts direct calls to Promise.resolve() (with no arguments) into\n * calls to this.\n *\n * @return {!Promise<undefined>}\n */\nexport function resolvedPromise() {\n  if (resolved) {\n    return resolved;\n  }\n\n  // It's important that we call with `undefined` here, to prevent a transform\n  // recursion. If we didn't pass an arg, then the transformer would replace\n  // this callsite with a call to `resolvedPromise()`.\n  resolved = Promise.resolve(undefined);\n  return resolved;\n}\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nexport class Deferred {\n  /** Constructor. */\n  constructor() {\n    /** @const {!Promise<T>} */\n    this.promise = new /*OK*/ Promise((res, rej) => {\n      /** @const {function(T=)} */\n      this.resolve = res;\n      /** @const {function(*=)} */\n      this.reject = rej;\n    });\n  }\n}\n\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\nexport function tryResolve(fn) {\n  return new Promise((resolve) => {\n    resolve(fn());\n  });\n}\n\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\nexport class LastAddedResolver {\n  /**\n   * @param {!Array<!IThenable>=} opt_promises\n   */\n  constructor(opt_promises) {\n    /** @private @const {!Deferred} */\n    this.deferred_ = new Deferred();\n\n    /** @private */\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (const promise of opt_promises) {\n        this.add(promise);\n      }\n    }\n  }\n\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!IThenable} promise\n   * @return {!Promise}\n   */\n  add(promise) {\n    const countAtAdd = ++this.count_;\n    promise.then(\n      (result) => {\n        if (this.count_ === countAtAdd) {\n          this.deferred_.resolve(result);\n        }\n      },\n      (error) => {\n        // Don't follow behavior of Promise.all and Promise.race error so that\n        // this will only reject when most recently added promise fails.\n        if (this.count_ === countAtAdd) {\n          this.deferred_.reject(error);\n        }\n      }\n    );\n    return this.deferred_.promise;\n  }\n\n  /** @override */\n  then(opt_resolve, opt_reject) {\n    return this.deferred_.promise.then(opt_resolve, opt_reject);\n  }\n}\n", "/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\nimport {Deferred} from '#core/data-structures/promise';\nimport {getWin} from '#core/window';\n\nimport {dev, devAssert} from '#utils/log';\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (function(new:Object, !Window)|\n *          function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nlet ServiceHolderDef;\n\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\nexport class Disposable {\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  dispose() {}\n}\n\n/**\n * Installs a service override on amp-doc level.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n * @param {!Object} service The service.\n */\nexport function installServiceInEmbedDoc(ampdoc, id, service) {\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ true\n  );\n}\n\n/**\n * Installs a service override in the scope of an embedded window.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {function(new:Object, !Window)} constructor\n */\nexport function registerServiceBuilderInEmbedWin(embedWin, id, constructor) {\n  registerServiceInternal(\n    embedWin,\n    embedWin,\n    id,\n    constructor,\n    /* override */ true\n  );\n}\n\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilderForDoc(\n  nodeOrDoc,\n  id,\n  constructor,\n  opt_instantiate\n) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\nexport function rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). But\n * it looks in the immediate window scope, not the top-level window.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getServiceInEmbedWin(win, id) {\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nexport function getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\nexport function getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\nexport function getServiceForDoc(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Object}\n */\nexport function getServiceForDocOrNull(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\nexport function getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(\n    getAmpdocServiceHolder(elementOrAmpDoc),\n    id\n  );\n}\n\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\nexport function setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\nexport function getParentWindowFrameElement(node, opt_topWin) {\n  const childWin = (node.ownerDocument || node).defaultView;\n  const topWin = opt_topWin || getTopWindow(childWin);\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return /** @type {?HTMLIFrameElement} */ (childWin.frameElement);\n    } catch (e) {\n      // Ignore the error.\n    }\n  }\n  return null;\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\nexport function getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    const win = getWin(nodeOrDoc);\n    return getAmpdocService(win).getAmpDoc(/** @type {!Node} */ (nodeOrDoc));\n  }\n  return /** @type {!./service/ampdoc-impl.AmpDoc} */ (nodeOrDoc);\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\nfunction getAmpdocService(win) {\n  return /** @type {!./service/ampdoc-impl.AmpDocService} */ (\n    getService(win, 'ampdoc')\n  );\n}\n\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n */\nfunction getServiceInternal(holder, id) {\n  devAssert(\n    isServiceRegistered(holder, id),\n    `Expected service ${id} to be registered`\n  );\n  const services = getServices(holder);\n  const s = services[id];\n  if (!s.obj) {\n    devAssert(s.ctor, `Service ${id} registered without ctor nor impl.`);\n    devAssert(s.context, `Service ${id} registered without context.`);\n    s.obj = new s.ctor(s.context);\n    devAssert(s.obj, `Service ${id} constructed to null.`);\n    s.context = null;\n    // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n  return s.obj;\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n * @param {boolean=} opt_sharedInstance\n */\nfunction registerServiceInternal(\n  holder,\n  context,\n  id,\n  ctor,\n  opt_override,\n  opt_sharedInstance\n) {\n  const services = getServices(holder);\n  let s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null,\n      sharedInstance: opt_sharedInstance || false,\n    };\n  }\n\n  if (!opt_override && s.ctor) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context;\n  s.sharedInstance = opt_sharedInstance || false;\n\n  // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nfunction getServicePromiseInternal(holder, id) {\n  const cached = getServicePromiseOrNullInternal(holder, id);\n  if (cached) {\n    return cached;\n  }\n  // Service is not registered.\n\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n  const services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return /** @type {!Promise<!Object>} */ (services[id].promise);\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\nfunction rejectServicePromiseInternal(holder, id, error) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\nfunction getServicePromiseOrNullInternal(holder, id) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return (s.promise = Promise.resolve(/** @type {!Object} */ (s.obj)));\n    }\n  }\n  return null;\n}\n\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\nfunction getServices(holder) {\n  let services = holder.__AMP_SERVICES;\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n  return services;\n}\n\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\nexport function isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\nexport function assertDisposable(service) {\n  devAssert(isDisposable(service), 'required to implement Disposable');\n  return /** @type {!Disposable} */ (service);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\nexport function disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\nexport function disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n\n/**\n * @param {!Object} holder Object holding the service instances.\n */\nfunction disposeServicesInternal(holder) {\n  const services = getServices(holder);\n  for (const id in services) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      continue;\n    }\n    const serviceHolder = services[id];\n    if (serviceHolder.sharedInstance) {\n      continue;\n    }\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then((instance) =>\n        disposeServiceInternal(id, instance)\n      );\n    }\n  }\n}\n\n/**\n * @param {string} id\n * @param {!Object} service\n */\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    dev().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n\n/**\n * This adopts the service **instance** from the parent.\n *\n * This function is dangerous! Sharing an instance means data can leak to and\n * from a child ampdoc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceForEmbedDoc(ampdoc, id) {\n  const service = getServiceInternal(\n    getAmpdocServiceHolder(devAssert(ampdoc.getParent())),\n    id\n  );\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ false,\n    /* sharedInstance */ true\n  );\n}\n\n/**\n * This adopts the service **factory** from the parent.\n *\n * This function is safer than sharing the service instance, since each ampdoc\n * will create its own instance of the factory (and each instance will have its\n * own instance data). Note that static data is still shared, so it's not 100%\n * foolproof.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceFactoryForEmbedDoc(ampdoc, id) {\n  const parentHolder = getAmpdocServiceHolder(devAssert(ampdoc.getParent()));\n  devAssert(\n    isServiceRegistered(parentHolder, id),\n    `Expected service ${id} to be registered`\n  );\n  const service = getServices(parentHolder)[id];\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    devAssert(service.ctor)\n  );\n}\n\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\nexport function resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\nfunction isServiceRegistered(holder, id) {\n  const service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id];\n  // All registered services must have a constructor.\n  return !!(service && service.ctor);\n}\n\n/** @return {!ServiceHolderDef} */\nfunction emptyServiceHolderWithPromise() {\n  const deferred = new Deferred();\n  const {promise, reject, resolve} = deferred;\n  promise.catch(() => {}); // avoid uncaught exception when service gets rejected\n  return {\n    obj: null,\n    promise,\n    resolve,\n    reject,\n    context: null,\n    ctor: null,\n  };\n}\n", "/**\n * @fileoverview Experiments system allows a developer to opt-in to test\n * features that are not yet fully tested.\n *\n * Experiments page: https://cdn.ampproject.org/experiments.html *\n */\n\nimport {isArray} from '#core/types';\nimport {hasOwn, map} from '#core/types/object';\nimport {parseJson} from '#core/types/object/json';\nimport {parseQueryString} from '#core/types/string/url';\n\nimport {dev, user} from '#utils/log';\n\nimport {ExperimentInfoDef} from './experiments.type';\n\nimport {getMode} from '../mode';\nimport {getTopWindow} from '../service-helpers';\n\n/** @const {string} */\nconst TAG = 'EXPERIMENTS';\n\n/** @const {string} */\nconst LOCAL_STORAGE_KEY = 'amp-experiment-toggles';\n\n/** @const {string} */\nconst TOGGLES_WINDOW_PROPERTY = '__AMP__EXPERIMENT_TOGGLES';\n\n/**\n * Whether we are in canary.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isCanary(win) {\n  return !!win.AMP_CONFIG?.canary;\n}\n\n/**\n * Returns binary type, e.g., canary, production, control, or rc.\n * @param {!Window} win\n * @return {string}\n */\nexport function getBinaryType(win) {\n  return win.AMP_CONFIG?.type || 'unknown';\n}\n\n/**\n * Whether the specified experiment is on or off.\n * @param {!Window} win\n * @param {string} experimentId\n * @return {boolean}\n */\nexport function isExperimentOn(win, experimentId) {\n  const toggles = experimentToggles(win);\n  return !!toggles[experimentId];\n}\n\n/**\n * Toggles the experiment on or off. Returns the actual value of the experiment\n * after toggling is done.\n * @param {!Window} win\n * @param {string} experimentId\n * @param {boolean=} opt_on\n * @param {boolean=} opt_transientExperiment  Whether to toggle the\n *     experiment state \"transiently\" (i.e., for this page load only) or\n *     durably (by saving the experiment IDs after toggling).\n *     Default: false (save durably).\n * @return {boolean} New state for experimentId.\n */\nexport function toggleExperiment(\n  win,\n  experimentId,\n  opt_on,\n  opt_transientExperiment\n) {\n  const currentlyOn = isExperimentOn(win, /*OK*/ experimentId);\n  const on = opt_on ?? !currentlyOn;\n  if (on != currentlyOn) {\n    const toggles = experimentToggles(win);\n    toggles[experimentId] = on;\n\n    if (!opt_transientExperiment) {\n      const storedToggles = getExperimentToggles(win);\n      storedToggles[experimentId] = on;\n      saveExperimentToggles(win, storedToggles);\n      // Avoid affecting tests that spy/stub warn().\n      if (!getMode().test) {\n        user().warn(\n          TAG,\n          '\"%s\" experiment %s for the domain \"%s\". See: https://amp.dev/documentation/guides-and-tutorials/learn/experimental',\n          experimentId,\n          on ? 'enabled' : 'disabled',\n          win.location.hostname\n        );\n      }\n    }\n  }\n  return on;\n}\n\n/**\n * Calculate whether the experiment is on or off based off of its default value,\n * stored overriden value, or the global config frequency given.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nexport function experimentToggles(win) {\n  if (win[TOGGLES_WINDOW_PROPERTY]) {\n    return win[TOGGLES_WINDOW_PROPERTY];\n  }\n  win[TOGGLES_WINDOW_PROPERTY] = map();\n  const toggles = win[TOGGLES_WINDOW_PROPERTY];\n\n  // Read default and injected configs of this build.\n  const buildExperimentConfigs = {\n    ...(win.AMP_CONFIG ?? {}),\n    ...(win.AMP_EXP ?? parseJson(win.__AMP_EXP?.textContent || '{}')),\n  };\n  for (const experimentId in buildExperimentConfigs) {\n    const frequency = buildExperimentConfigs[experimentId];\n    if (typeof frequency === 'number' && frequency >= 0 && frequency <= 1) {\n      toggles[experimentId] = Math.random() < frequency;\n    }\n  }\n  // Read document level override from meta tag.\n  const allowedDocOptIn = win.AMP_CONFIG?.['allow-doc-opt-in'];\n  if (isArray(allowedDocOptIn) && allowedDocOptIn.length) {\n    const meta = win.document.head.querySelector(\n      'meta[name=\"amp-experiments-opt-in\"]'\n    );\n    if (meta) {\n      const optedInExperiments = meta.getAttribute('content').split(',');\n      for (const experiment of optedInExperiments) {\n        if (dev().assertArray(allowedDocOptIn).includes(experiment)) {\n          toggles[experiment] = true;\n        }\n      }\n    }\n  }\n\n  Object.assign(toggles, getExperimentToggles(win));\n\n  const allowedUrlOptIn = win.AMP_CONFIG?.['allow-url-opt-in'];\n  if (isArray(allowedUrlOptIn) && allowedUrlOptIn.length) {\n    const hash = win.location['originalHash'] || win.location.hash;\n    const params = parseQueryString(hash);\n    for (const experiment of allowedUrlOptIn) {\n      const param = params[`e-${experiment}`];\n      if (param == '1') {\n        toggles[experiment] = true;\n      }\n      if (param == '0') {\n        toggles[experiment] = false;\n      }\n    }\n  }\n  return toggles;\n}\n\n/**\n * Returns the cached experiments toggles, or null if they have not been\n * computed yet.\n * @param {!Window} win\n * @return {?Object<string, boolean>}\n */\nexport function experimentTogglesOrNull(win) {\n  return win[TOGGLES_WINDOW_PROPERTY] || null;\n}\n\n/**\n * Returns a set of experiment IDs currently on.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nfunction getExperimentToggles(win) {\n  let experimentsString = '';\n  try {\n    if ('localStorage' in win) {\n      experimentsString = win.localStorage.getItem(LOCAL_STORAGE_KEY);\n    }\n  } catch {\n    dev().warn(TAG, 'Failed to retrieve experiments from localStorage.');\n  }\n  const tokens = experimentsString?.split(/\\s*,\\s*/g) || [];\n\n  const toggles = map();\n  for (const token of tokens) {\n    if (!token) {\n      continue;\n    }\n    if (token[0] == '-') {\n      toggles[token.substr(1)] = false;\n    } else {\n      toggles[token] = true;\n    }\n  }\n  return toggles;\n}\n\n/**\n * Saves a set of experiment IDs currently on.\n * @param {!Window} win\n * @param {!Object<string, boolean>} toggles\n */\nfunction saveExperimentToggles(win, toggles) {\n  const experimentIds = [];\n  for (const experiment in toggles) {\n    experimentIds.push((toggles[experiment] === false ? '-' : '') + experiment);\n  }\n  try {\n    win.localStorage?.setItem(LOCAL_STORAGE_KEY, experimentIds.join(','));\n  } catch (e) {\n    user().error(TAG, 'Failed to save experiments to localStorage.');\n  }\n}\n\n/**\n * See getExperimentToggles().\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n * @visibleForTesting\n */\nexport function getExperimentTogglesForTesting(win) {\n  return getExperimentToggles(win);\n}\n\n/**\n * Resets the experimentsToggle cache for testing purposes.\n * @param {!Window} win\n * @visibleForTesting\n */\nexport function resetExperimentTogglesForTesting(win) {\n  saveExperimentToggles(win, {});\n  win[TOGGLES_WINDOW_PROPERTY] = null;\n}\n\n/**\n * In some browser implementations of Math.random(), sequential calls of\n * Math.random() are correlated and can cause a bias.  In particular,\n * if the previous random() call was < 0.001 (as it will be if we select\n * into an experiment), the next value could be less than 0.5 more than\n * 50.7% of the time.  This provides an implementation that roots down into\n * the crypto API, when available, to produce less biased samples.\n *\n * @return {number} Pseudo-random floating-point value on the range [0, 1).\n */\nfunction slowButAccuratePrng() {\n  // TODO(tdrl): Implement.\n  return Math.random();\n}\n\n/**\n * Container for alternate random number generator implementations.  This\n * allows us to set an \"accurate\" PRNG for branch selection, but to mock it\n * out easily in tests.\n *\n * @visibleForTesting\n * @const {!{accuratePrng: function():number}}\n */\nexport const RANDOM_NUMBER_GENERATORS = {\n  accuratePrng: slowButAccuratePrng,\n};\n\n/**\n * Selects, uniformly at random, a single item from the array.\n * @param {!Array<string>} arr Object to select from.\n * @return {?string} Single item from arr or null if arr was empty.\n */\nfunction selectRandomItem(arr) {\n  const rn = RANDOM_NUMBER_GENERATORS.accuratePrng();\n  return dev().assertString(arr[Math.floor(rn * arr.length)]) || null;\n}\n\n/**\n * Selects which page-level experiment branches are enabled. If a given\n * experiment name is already set (including to the null / no branches selected\n * state), this won't alter its state.\n *\n * Check whether a given experiment is set using isExperimentOn(win,\n * experimentName) and, if it is on, look for which branch is selected in\n * win.__AMP_EXPERIMENT_BRANCHES[experimentName].\n *\n * @param {!Window} win Window context on which to save experiment\n *     selection state.\n * @param {!Array<!ExperimentInfoDef>} experiments  Set of experiments to\n *     configure for this page load.\n * @return {!Object<string, string>} Map of experiment names to selected\n *     branches.\n */\nexport function randomlySelectUnsetExperiments(win, experiments) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  const selectedExperiments = {};\n  for (const experiment of experiments) {\n    const experimentName = experiment.experimentId;\n    if (hasOwn(win.__AMP_EXPERIMENT_BRANCHES, experimentName)) {\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n      continue;\n    }\n\n    if (!experiment.isTrafficEligible?.(win)) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = null;\n      continue;\n    }\n\n    // If we're in the experiment, but we haven't already forced a specific\n    // experiment branch (e.g., via a test setup), then randomize the branch\n    // choice.\n    if (\n      !win.__AMP_EXPERIMENT_BRANCHES[experimentName] &&\n      isExperimentOn(win, /*OK*/ experimentName)\n    ) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = selectRandomItem(\n        experiment.branches\n      );\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n    }\n  }\n  return selectedExperiments;\n}\n\n/**\n * Returns the experiment branch enabled for the given experiment ID.\n * For example, 'control' or 'experiment'.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @return {?string} Active experiment branch ID for experimentName (possibly\n *     null if experimentName has been tested but no branch was enabled).\n */\nexport function getExperimentBranch(win, experimentName) {\n  return win.__AMP_EXPERIMENT_BRANCHES\n    ? win.__AMP_EXPERIMENT_BRANCHES[experimentName]\n    : null;\n}\n\n/**\n * Returns an object containing all active experiment branches on the\n * top Window.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @return {!Object} contains all experiment branches and their ids.\n */\nexport function getActiveExperimentBranches(win) {\n  const topWin = getTopWindow(win);\n  if (!topWin.__AMP_EXPERIMENT_BRANCHES) {\n    topWin.__AMP_EXPERIMENT_BRANCHES = {};\n  }\n  return {...topWin.__AMP_EXPERIMENT_BRANCHES};\n}\n\n/**\n * Force enable (or disable) a specific branch of a given experiment name.\n * Disables the experiment name altogether if branchId is falseish.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @param {?string} branchId ID of branch to force or null to disable\n *     altogether.\n * @visibleForTesting\n */\nexport function forceExperimentBranch(win, experimentName, branchId) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  toggleExperiment(win, experimentName, !!branchId, true);\n  win.__AMP_EXPERIMENT_BRANCHES[experimentName] = branchId;\n}\n", "import * as mode from '#core/mode';\n\nimport {urls} from '../config';\nimport {getMode} from '../mode';\n\nconst CUSTOM_TEMPLATES = ['amp-mustache'];\nconst LATEST_VERSION = 'latest';\n\n/**\n * Calculate the base url for any scripts.\n * @param {!Location} location The window's location\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateScriptBaseUrl(location, opt_isLocalDev) {\n  if (opt_isLocalDev) {\n    let prefix = `${location.protocol}//${location.host}`;\n    if (\n      location.protocol == 'about:' ||\n      location.protocol == 'blob:' ||\n      location.protocol == 'data:'\n    ) {\n      prefix = '';\n    }\n    return `${prefix}/dist`;\n  }\n  return urls.cdn;\n}\n\n/**\n * Calculate script url for an extension.\n * @param {!Location} location The window's location\n * @param {string} extensionId\n * @param {string} version\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateExtensionScriptUrl(\n  location,\n  extensionId,\n  version,\n  opt_isLocalDev\n) {\n  const fileExtension = mode.isEsm() ? '.mjs' : '.js';\n  const base = calculateScriptBaseUrl(location, opt_isLocalDev);\n  const rtv = getMode().rtvVersion;\n  const extensionVersion = version ? '-' + version : '';\n  return `${base}/rtv/${rtv}/v0/${extensionId}${extensionVersion}${fileExtension}`;\n}\n\n/**\n * Calculate script url for an entry point.\n * If `opt_rtv` is true, returns the URL matching the current RTV.\n * @param {!Location} location The window's location\n * @param {string} entryPoint\n * @param {boolean=} isLocalDev\n * @param {boolean=} opt_rtv\n * @return {string}\n */\nexport function calculateEntryPointScriptUrl(\n  location,\n  entryPoint,\n  isLocalDev,\n  opt_rtv\n) {\n  const fileExtension = mode.isEsm() ? '.mjs' : '.js';\n  const base = calculateScriptBaseUrl(location, isLocalDev);\n  if (isLocalDev) {\n    return `${base}/${entryPoint}${fileExtension}`;\n  }\n  if (opt_rtv) {\n    return `${base}/rtv/${getMode().rtvVersion}/${entryPoint}${fileExtension}`;\n  }\n  return `${base}/${entryPoint}${fileExtension}`;\n}\n\n/**\n * Parse the extension version from a given script URL.\n * @param {string} scriptUrl\n * @return {?{extensionId: string, extensionVersion: string}}\n */\nexport function parseExtensionUrl(scriptUrl) {\n  if (!scriptUrl) {\n    return null;\n  }\n  // Note that the \"(\\.max)?\" group only applies to local dev.\n  const matches = scriptUrl.match(\n    /^(.*)\\/(.*)-([0-9.]+|latest)(\\.max)?\\.(?:js|mjs)$/i\n  );\n  const extensionId = matches ? matches[2] : undefined;\n  const extensionVersion = matches ? matches[3] : undefined;\n  if (!extensionId || !extensionVersion) {\n    return null;\n  }\n  return {extensionId, extensionVersion};\n}\n\n/**\n * Create the missing amp extension HTML script element.\n * @param {!Window} win\n * @param {string} extensionId\n * @param {string} version\n * @return {!Element} Script object\n */\nexport function createExtensionScript(win, extensionId, version) {\n  const scriptElement = win.document.createElement('script');\n  scriptElement.async = true;\n  if (isIntermediateExtension(extensionId)) {\n    version = '';\n  } else {\n    scriptElement.setAttribute(\n      CUSTOM_TEMPLATES.indexOf(extensionId) >= 0\n        ? 'custom-template'\n        : 'custom-element',\n      extensionId\n    );\n  }\n  scriptElement.setAttribute('data-script', extensionId);\n  scriptElement.setAttribute('i-amphtml-inserted', '');\n  if (mode.isEsm()) {\n    scriptElement.setAttribute('type', 'module');\n  }\n\n  // Propagate nonce to all generated script tags.\n  const currentScript = win.document.head.querySelector('script[nonce]');\n  if (currentScript) {\n    scriptElement.setAttribute('nonce', currentScript.getAttribute('nonce'));\n  }\n\n  // Allow error information to be collected\n  // https://github.com/ampproject/amphtml/issues/7353\n  scriptElement.setAttribute('crossorigin', 'anonymous');\n  let loc = win.location;\n  if (getMode(win).test && win.testLocation) {\n    loc = win.testLocation;\n  }\n  const scriptSrc = calculateExtensionScriptUrl(\n    loc,\n    extensionId,\n    version,\n    getMode(win).localDev\n  );\n  scriptElement.src = scriptSrc;\n  return scriptElement;\n}\n\n/**\n * Returns the extension <script> element and attribute for the given\n * extension ID, if it exists. Otherwise, returns null.\n * @param {!Window} win\n * @param {string} extensionId\n * @param {string} version\n * @param {boolean} latest\n * @param {boolean=} includeInserted If true, includes script elements that\n *   are inserted by the runtime dynamically. Default is true.\n * @return {!Array<!Element>}\n */\nexport function getExtensionScripts(\n  win,\n  extensionId,\n  version,\n  latest,\n  includeInserted = true\n) {\n  // Always ignore <script> elements that have a mismatched RTV.\n  const modifier =\n    ':not([i-amphtml-loaded-new-version])' +\n    (includeInserted ? '' : ':not([i-amphtml-inserted])');\n  // We have to match against \"src\" because a few extensions, such as\n  // \"amp-viewer-integration\", do not have \"custom-element\" attribute.\n  const matches = win.document.head./*OK*/ querySelectorAll(\n    `script[src*=\"/${extensionId}-\"]${modifier}`\n  );\n  const filtered = [];\n  for (let i = 0; i < matches.length; i++) {\n    const match = matches[i];\n    const urlParts = parseExtensionUrl(match.src);\n    if (!urlParts) {\n      continue;\n    }\n    const {\n      extensionId: scriptExtensionId,\n      extensionVersion: scriptExtensionVersion,\n    } = urlParts;\n    if (\n      scriptExtensionId == extensionId &&\n      (isIntermediateExtension(extensionId) ||\n        scriptExtensionVersion == version ||\n        (scriptExtensionVersion == LATEST_VERSION && latest))\n    ) {\n      filtered.push(match);\n    }\n  }\n  return filtered;\n}\n\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot|Document} head\n * @return {!Array<{script: HTMLScriptElement, extensionId: string, extensionVersion: string}>}\n */\nexport function extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n  // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n  const list = head.querySelectorAll(\n    'script[custom-element],script[custom-template]'\n  );\n  const scripts = [];\n  for (let i = 0; i < list.length; i++) {\n    const script = list[i];\n    const extensionId =\n      script.getAttribute('custom-element') ||\n      script.getAttribute('custom-template');\n    const urlParts = parseExtensionUrl(script.src);\n    if (extensionId && urlParts) {\n      scripts.push({\n        script,\n        extensionId,\n        extensionVersion: urlParts.extensionVersion,\n      });\n    }\n  }\n  return scripts;\n}\n\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {!Window} win\n * @param {string} id\n * @param {string} version\n * @return {boolean}\n */\nexport function extensionScriptInNode(win, id, version) {\n  return extensionScriptsInNode(win.document.head).some(\n    ({extensionId, extensionVersion}) =>\n      id == extensionId && version == extensionVersion\n  );\n}\n\n/**\n * @param {string} extensionId\n * @return {boolean}\n */\nfunction isIntermediateExtension(extensionId) {\n  return extensionId.startsWith('_');\n}\n", "import * as dom from '#core/dom';\n\nimport {extensionScriptInNode} from '#service/extension-script';\n\nimport {userAssert} from '#utils/log';\n\nimport {\n  getAmpdoc,\n  getService,\n  getServiceForDocOrNull,\n  getServicePromise,\n  getServicePromiseForDoc,\n  getServicePromiseOrNull,\n  getServicePromiseOrNullForDoc,\n} from './service-helpers';\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {string} version The extension version.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailable(\n  win,\n  id,\n  extension,\n  version,\n  opt_element\n) {\n  const s = getServicePromiseOrNull(win, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  return getElementServicePromiseOrNull(\n    win,\n    id,\n    extension,\n    version,\n    opt_element\n  );\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(\n    element,\n    id,\n    extension,\n    opt_element\n  ).then((service) => assertService(service, id, extension));\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDoc(\n  element,\n  id,\n  extension,\n  opt_element\n) {\n  const s = getServicePromiseOrNullForDoc(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  const ampdoc = getAmpdoc(element);\n  return ampdoc\n    .whenExtensionsKnown()\n    .then(() => {\n      const version = ampdoc.getExtensionVersion(extension);\n      if (!version) {\n        return null;\n      }\n      const extensions = getService(ampdoc.win, 'extensions');\n      return extensions.waitForExtension(extension, version);\n    })\n    .then((ext) => {\n      if (!ext) {\n        return null;\n      }\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNullForDoc(element, id);\n      }\n      return getServicePromiseForDoc(element, id);\n    });\n}\n\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDocInEmbedScope(\n  element,\n  id,\n  extension\n) {\n  const s = getServiceForDocOrNull(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (Promise.resolve(s));\n  }\n  return getElementServiceIfAvailableForDoc(element, id, extension);\n}\n\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\nfunction assertService(service, id, extension) {\n  return /** @type {!Object} */ (\n    userAssert(\n      service,\n      'Service %s was requested to be provided through %s, ' +\n        'but %s is not loaded in the current page. To fix this ' +\n        'problem load the JavaScript file for %s in this page.',\n      id,\n      extension,\n      extension,\n      extension\n    )\n  );\n}\n\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {string} version\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\nfunction getElementServicePromiseOrNull(\n  win,\n  id,\n  extension,\n  version,\n  opt_element\n) {\n  return dom\n    .waitForBodyOpenPromise(win.document)\n    .then(() => {\n      // If there is an extension script wait for it to load before trying\n      // to get the service. Prevents a race condition when everything but\n      // the extensions is in cache. If there is no script then it's either\n      // not present, or the service was defined by a test. In those cases\n      // we don't wait around for an extension that does not exist.\n      const extensions = getService(win, 'extensions');\n\n      // TODO(jpettitt) investigate registerExtension to short circuit\n      // the dom call in extensionScriptsInNode()\n      if (!extensionScriptInNode(extensions.win, extension, version)) {\n        return null;\n      }\n      return extensions.waitForExtension(extension, version);\n    })\n    .then((ext) => {\n      if (!ext) {\n        return null;\n      }\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNull(win, id);\n      }\n      return getServicePromise(win, id);\n    });\n}\n", "import {\n  getElementServiceForDoc,\n  getElementServiceIfAvailable,\n  getElementServiceIfAvailableForDoc,\n  getElementServiceIfAvailableForDocInEmbedScope,\n} from '../element-service';\nimport {\n  getAmpdoc,\n  getExistingServiceOrNull,\n  getService,\n  getServiceForDoc,\n  getServiceForDocOrNull,\n  getServiceInEmbedWin,\n  getServicePromiseForDoc,\n} from '../service-helpers';\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nexport let SubscriptionService;\n\nexport class Services {\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */ (\n      getElementServiceForDoc(element, 'access', 'amp-access')\n    );\n  }\n\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */ (\n      getElementServiceIfAvailableForDoc(element, 'access', 'amp-access')\n    );\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  static subscriptionsServiceForDoc(element) {\n    return /** @type {!Promise<!SubscriptionService>} */ (\n      getElementServiceForDoc(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  static subscriptionsServiceForDocOrNull(element) {\n    return /** @type {!Promise<?SubscriptionService>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'subscriptions',\n        'amp-subscriptions'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  static actionServiceForDoc(element) {\n    return /** @type {!./service/action-impl.ActionService} */ (\n      getServiceForDocOrNull(element, 'action')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  static standardActionsForDoc(element) {\n    return /** @type {!./service/standard-actions-impl.StandardActions} */ (\n      getServiceForDocOrNull(element, 'standard-actions')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  static activityForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */ (\n      getElementServiceForDoc(element, 'activity', 'amp-analytics')\n    );\n  }\n\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  static ampdocServiceFor(window) {\n    return /** @type {!./service/ampdoc-impl.AmpDocService} */ (\n      getService(window, 'ampdoc')\n    );\n  }\n\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  static ampdoc(nodeOrAmpDoc) {\n    return getAmpdoc(nodeOrAmpDoc);\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDoc(element, loadAnalytics = false) {\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      const ampdoc = getAmpdoc(element);\n      Services.extensionsFor(ampdoc.win)./*OK*/ installExtensionForDoc(\n        ampdoc,\n        'amp-analytics'\n      );\n    }\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (\n      getElementServiceForDoc(\n        element,\n        'amp-analytics-instrumentation',\n        'amp-analytics'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'amp-analytics-instrumentation',\n        'amp-analytics'\n      )\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  static batchedXhrFor(window) {\n    return /** @type {!./service/batched-xhr-impl.BatchedXhr} */ (\n      getService(window, 'batched-xhr')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  static bindForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */ (\n      getElementServiceIfAvailableForDocInEmbedScope(\n        element,\n        'bind',\n        'amp-bind'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>}\n   */\n  static scriptForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>} */ (\n      getElementServiceIfAvailableForDocInEmbedScope(\n        element,\n        'amp-script',\n        'amp-script'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  static cidForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/cid-impl.CidDef>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'cid')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  static navigationForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/navigation.Navigation} */ (\n      getServiceForDoc(elementOrAmpDoc, 'navigation')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  static loaderServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */ (\n      getElementServiceForDoc(element, 'loader', 'amp-loader')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  static standaloneServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */ (\n      getElementServiceForDoc(element, 'standalone', 'amp-standalone')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  static cryptoFor(window) {\n    return /** @type {!./service/crypto-impl.Crypto} */ (\n      getService(window, 'crypto')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  static documentInfoForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/document-info-impl.DocInfo} */ (\n      getServiceForDoc(elementOrAmpDoc, 'documentInfo')\n    ).get();\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  static extensionsFor(window) {\n    return /** @type {!./service/extensions-impl.Extensions} */ (\n      getService(window, 'extensions')\n    );\n  }\n\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  static formSubmitForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'form-submit-service')\n    );\n  }\n\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  static hiddenObserverForDoc(element) {\n    return /** @type {!./service/hidden-observer-impl.HiddenObserver} */ (\n      getServiceForDocOrNull(element, 'hidden-observer')\n    );\n  }\n\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  static historyForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/history-impl.History} */ (\n      getServiceForDoc(elementOrAmpDoc, 'history')\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  static inputFor(win) {\n    return getService(win, 'input');\n  }\n\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  static inputmaskServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */ (\n      getElementServiceIfAvailableForDoc(element, 'inputmask', 'amp-inputmask')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {?./service/loading-indicator.LoadingIndicatorImpl}\n   */\n  static loadingIndicatorOrNull(elementOrAmpDoc) {\n    return /** @type {?./service/loading-indicator.LoadingIndicatorImpl} */ (\n      getServiceForDocOrNull(elementOrAmpDoc, 'loadingIndicator')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-next-page/1.0/service.NextPageService}\n   */\n  static nextPageServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-next-page/1.0/service.NextPageService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'next-page')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/mutator-interface.MutatorInterface}\n   */\n  static mutatorForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/mutator-interface.MutatorInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'mutator')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  static ownersForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/owners-interface.OwnersInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'owners')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceFor(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (\n      getService(window, 'performance')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceForOrNull(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (\n      getExistingServiceOrNull(window, 'performance')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  static platformFor(window) {\n    return /** @type {!./service/platform-impl.Platform} */ (\n      getService(window, 'platform')\n    );\n  }\n\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  static positionObserverForDoc(element) {\n    return /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */ (\n      getServiceForDoc(element, 'position-observer')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./preconnect.PreconnectService}\n   */\n  static preconnectFor(window) {\n    return getService(window, 'preconnect');\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  static resourcesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/resources-interface.ResourcesInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'resources')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  static resourcesPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'resources')\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>}\n   */\n  static storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>} */\n      (getElementServiceIfAvailable(win, 'story-variable', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  static storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (getExistingServiceOrNull(win, 'story-variable'))\n    );\n  }\n\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>}\n   */\n  static storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>} */\n      (getElementServiceIfAvailable(win, 'story-store', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (getExistingServiceOrNull(win, 'story-store'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  static storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (getExistingServiceOrNull(win, 'story-media-query'))\n    );\n  }\n\n  /**\n   * Get promise with story request service\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>}\n   */\n  static storyRequestServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>} */\n      (getElementServiceIfAvailable(win, 'story-request', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (getExistingServiceOrNull(win, 'story-request'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  static mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (getExistingServiceOrNull(win, 'media-performance-metrics'))\n    );\n  }\n\n  /**\n   * @param {!Element} el\n   * @return {!Promise<./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNull(el) {\n    return /** @type {!Promise<?./service/localization.LocalizationService>} */ (\n      getServicePromiseForDoc(el, 'localization')\n    );\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {?./service/localization.LocalizationService}\n   */\n  static localizationForDoc(element) {\n    return /** @type {?./service/localization.LocalizationService} */ (\n      getServiceForDocOrNull(element, 'localization')\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  static storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (\n        getElementServiceIfAvailable(\n          win,\n          'story-analytics',\n          'amp-story',\n          '1.0',\n          true\n        )\n      )\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  static storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (getExistingServiceOrNull(win, 'story-analytics'))\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  static webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (getElementServiceForDoc(element, 'web-animation', 'amp-animation'))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/real-time-config/real-time-config-impl.RealTimeConfigManager>}\n   */\n  static realTimeConfigForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/real-time-config/real-time-config-impl.RealTimeConfigManager>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'real-time-config')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  static storageForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'storage')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   * TODO(dmanek): Add tests for this method.\n   */\n  static storageForTopLevelDoc(elementOrAmpDoc) {\n    const thisAmpdoc = Services.ampdoc(elementOrAmpDoc);\n    const ampdocService = Services.ampdocServiceFor(thisAmpdoc.win);\n    const topAmpdoc = ampdocService.isSingleDoc()\n      ? ampdocService.getSingleDoc()\n      : null;\n    // We need to verify that ampdocs are on the same origin, therefore\n    // we compare the windows of both.\n    const ampdoc =\n      topAmpdoc && topAmpdoc.win == thisAmpdoc.win ? topAmpdoc : thisAmpdoc;\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (\n      getServicePromiseForDoc(ampdoc, 'storage')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/template-impl.Templates}\n   */\n  static templatesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/template-impl.Templates} */ (\n      getServiceForDoc(elementOrAmpDoc, 'templates')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  static timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return /** @type {!./service/timer-impl.Timer} */ (\n      getServiceInEmbedWin(window, 'timer')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  static urlReplacementsForDoc(element) {\n    return /** @type {!./service/url-replacements-impl.UrlReplacements} */ (\n      getServiceForDocOrNull(element, 'url-replace')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  static userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (\n        getElementServiceForDoc(\n          element,\n          'userNotificationManager',\n          'amp-user-notification'\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  static consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (\n        getElementServiceIfAvailableForDoc(\n          element,\n          'consentPolicyManager',\n          'amp-consent'\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  static geoForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */ (\n      getElementServiceIfAvailableForDoc(element, 'geo', 'amp-geo', true)\n    );\n  }\n\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  static urlForDoc(element) {\n    return /** @type {!./service/url-impl.Url} */ (\n      getServiceForDocOrNull(element, 'url')\n    );\n  }\n\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  static variantsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'variant',\n        'amp-experiment',\n        true\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  static videoManagerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/video-manager-impl.VideoManager} */ (\n      getServiceForDoc(elementOrAmpDoc, 'video-manager')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  static viewerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewer-interface.ViewerInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'viewer')\n    );\n  }\n\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  static viewerPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'viewer')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  static vsyncFor(window) {\n    return /** @type {!./service/vsync-impl.Vsync} */ (\n      getService(window, 'vsync')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  static viewportForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewport/viewport-interface.ViewportInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'viewport')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  static xhrFor(window) {\n    return /** @type {!./service/xhr-impl.Xhr} */ (getService(window, 'xhr'));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../amp-cache-url/amp-cache-url.AmpCacheUrlService>}\n   */\n  static cacheUrlServicePromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<?../amp-cache-url/amp-cache-url.AmpCacheUrlService>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'cache-url')\n    );\n  }\n}\n", "import {map} from '#core/types/object';\n\n/**\n * @template T\n */\nexport class LruCache {\n  /**\n   * @param {number} capacity\n   */\n  constructor(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n\n    /** @private {number} */\n    this.size_ = 0;\n\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n    this.access_ = 0;\n\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n    this.cache_ = map();\n  }\n\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n  has(key) {\n    return !!this.cache_[key];\n  }\n\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  get(key) {\n    const cacheable = this.cache_[key];\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n    this.cache_[key] = {payload, access: this.access_};\n    this.evict_();\n  }\n\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    const cache = this.cache_;\n    let oldest = this.access_ + 1;\n    let oldestKey;\n    for (const key in cache) {\n      const {access} = cache[key];\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  }\n}\n", "import {LruCache} from '#core/data-structures/lru-cache';\nimport * as mode from '#core/mode';\nimport {arrayOrSingleItemToArray} from '#core/types/array';\nimport {dict, hasOwn} from '#core/types/object';\nimport {endsWith} from '#core/types/string';\nimport {parseQueryString} from '#core/types/string/url';\n\nimport {userAssert} from '#utils/log';\n\nimport {urls} from './config';\n\nconst SERVING_TYPE_PREFIX = new Set([\n  // No viewer\n  'c',\n  // In viewer\n  'v',\n  // Ad landing page\n  'a',\n  // Ad\n  'ad',\n]);\n\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\nlet cachedAnchorEl;\n\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\nlet urlCache;\n\n// eslint-disable-next-line no-script-url\nconst INVALID_PROTOCOLS = ['javascript:', 'data:', 'vbscript:'];\n\n/** @const {string} */\nexport const SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n\n/**\n * Coerces a url into a location;\n * @function\n * @param {string|!Location} url\n * @return {!Location}\n */\nconst urlAsLocation = (url) =>\n  typeof url == 'string' ? parseUrlDeprecated(url) : url;\n\n/**\n * Returns the correct origin for a given window.\n * TODO(rcebulko): This really belongs under #core/window somewhere, not in url\n * @param {!Window} win\n * @return {string} origin\n */\nexport function getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * TODO(#34453): The URL constructor isn't supported in IE11, but is supported\n * everywhere else. There's a lot of code paths (and all uses of the LruCache)\n * that are built around this polyfill. Once we can drop IE11 support and just\n * use the URL constructor, we can clear out all of parseWithA, all the URL\n * cache logic (incl. additional caches in other call-sites). Most is guarded by\n * isEsm() and is only included in nomodule builds, but still.\n * @param {string} url\n * @param {boolean=} opt_nocache\n *   Cache is always ignored on ESM builds, see https://go.amp.dev/pr/31594\n * @return {!Location}\n */\nexport function parseUrlDeprecated(url, opt_nocache) {\n  if (!cachedAnchorEl) {\n    cachedAnchorEl = /** @type {!HTMLAnchorElement} */ (\n      self.document.createElement('a')\n    );\n    urlCache = mode.isEsm()\n      ? null\n      : self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new LruCache(100));\n  }\n\n  return parseUrlWithA(\n    cachedAnchorEl,\n    url,\n    mode.isEsm() || opt_nocache ? null : urlCache\n  );\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} anchorEl\n * @param {string} url\n * @param {LruCache=} opt_cache\n *   Cache is always ignored on ESM builds, see https://go.amp.dev/pr/31594\n * @return {!Location}\n * @restricted\n */\nexport function parseUrlWithA(anchorEl, url, opt_cache) {\n  if (mode.isEsm()) {\n    // Doing this causes the <a> to auto-set its own href to the resolved path,\n    // which would be the baseUrl for the URL constructor.\n    anchorEl.href = '';\n    return /** @type {?} */ (new URL(url, anchorEl.href));\n  }\n\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  anchorEl.href = url;\n\n  // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n  if (!anchorEl.protocol) {\n    anchorEl.href = anchorEl.href;\n  }\n\n  const info = /** @type {!Location} */ ({\n    href: anchorEl.href,\n    protocol: anchorEl.protocol,\n    host: anchorEl.host,\n    hostname: anchorEl.hostname,\n    port: anchorEl.port == '0' ? '' : anchorEl.port,\n    pathname: anchorEl.pathname,\n    search: anchorEl.search,\n    hash: anchorEl.hash,\n    origin: null, // Set below.\n  });\n\n  // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  }\n\n  // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n  if (\n    (info.protocol == 'http:' && info.port == 80) ||\n    (info.protocol == 'https:' && info.port == 443)\n  ) {\n    info.port = '';\n    info.host = info.hostname;\n  }\n\n  // For data URI anchorEl.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n  let origin;\n  if (anchorEl.origin && anchorEl.origin != 'null') {\n    origin = anchorEl.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n  info.origin = origin;\n\n  // Freeze during testing to avoid accidental mutation.\n  const frozen = mode.isTest() && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function appendEncodedParamStringToUrl(\n  url,\n  paramString,\n  opt_addToFront\n) {\n  if (!paramString) {\n    return url;\n  }\n  const mainAndFragment = url.split('#', 2);\n  const mainAndQuery = mainAndFragment[0].split('?', 2);\n\n  let newUrl =\n    mainAndQuery[0] +\n    (mainAndQuery[1]\n      ? opt_addToFront\n        ? `?${paramString}&${mainAndQuery[1]}`\n        : `?${mainAndQuery[1]}&${paramString}`\n      : `?${paramString}`);\n  newUrl += mainAndFragment[1] ? `#${mainAndFragment[1]}` : '';\n  return newUrl;\n}\n\n/**\n * @param {string} key\n * @param {string} value\n * @return {string}\n */\nfunction urlEncodeKeyValue(key, value) {\n  return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n}\n\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function addParamToUrl(url, key, value, opt_addToFront) {\n  return appendEncodedParamStringToUrl(\n    url,\n    urlEncodeKeyValue(key, value),\n    opt_addToFront\n  );\n}\n\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addMissingParamsToUrl(url, params) {\n  const location = parseUrlDeprecated(url);\n  const existingParams = parseQueryString(location.search);\n  const paramsToAdd = dict({});\n  const keys = Object.keys(params);\n  for (let i = 0; i < keys.length; i++) {\n    if (!hasOwn(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n  return addParamsToUrl(url, paramsToAdd);\n}\n\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function serializeQueryString(params) {\n  const s = [];\n  for (const k in params) {\n    let v = params[k];\n    if (v == null) {\n      continue;\n    }\n\n    v = arrayOrSingleItemToArray(v);\n    for (let i = 0; i < v.length; i++) {\n      s.push(urlEncodeKeyValue(k, v[i]));\n    }\n  }\n  return s.join('&');\n}\n\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isSecureUrlDeprecated(url) {\n  url = urlAsLocation(url);\n  return (\n    url.protocol == 'https:' ||\n    url.hostname == 'localhost' ||\n    url.hostname == '127.0.0.1' ||\n    endsWith(url.hostname, '.localhost')\n  );\n}\n\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\nexport function assertHttpsUrl(\n  urlString,\n  elementContext,\n  sourceName = 'source'\n) {\n  userAssert(\n    urlString != null,\n    '%s %s must be available',\n    elementContext,\n    sourceName\n  );\n  userAssert(\n    isSecureUrlDeprecated(urlString) || /^\\/\\//.test(urlString),\n    '%s %s must start with ' +\n      '\"https://\" or \"//\" or be relative and served from ' +\n      'either https or from localhost. Invalid value: %s',\n    elementContext,\n    sourceName,\n    urlString\n  );\n  return urlString;\n}\n\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\nexport function assertAbsoluteHttpOrHttpsUrl(urlString) {\n  userAssert(\n    /^https?\\:/i.test(urlString),\n    'URL must start with \"http://\" or \"https://\". Invalid value: %s',\n    urlString\n  );\n  return parseUrlDeprecated(urlString).href;\n}\n\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function removeFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return url;\n  }\n  return url.substring(0, index);\n}\n\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function getFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return '';\n  }\n  return url.substring(index);\n}\n\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isProxyOrigin(url) {\n  return urls.cdnProxyRegex.test(urlAsLocation(url).origin);\n}\n\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isLocalhostOrigin(url) {\n  return urls.localhostRegex.test(urlAsLocation(url).origin);\n}\n\n/**\n * @param {string} uri\n * @return {boolean}\n */\nexport function isAmpScriptUri(uri) {\n  return uri.startsWith('amp-script:');\n}\n\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\nexport function getProxyServingType(url) {\n  url = urlAsLocation(url);\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n  const path = url.pathname.split('/', 2);\n  return path[1];\n}\n\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isProtocolValid(url) {\n  return !(url && INVALID_PROTOCOLS.includes(urlAsLocation(url).protocol));\n}\n\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\nexport function removeAmpJsParamsFromUrl(url) {\n  const {hash, origin, pathname, search} = parseUrlDeprecated(url);\n  const searchRemoved = removeAmpJsParamsFromSearch(search);\n  return origin + pathname + searchRemoved + hash;\n}\n\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\nexport function removeSearch(url) {\n  const index = url.indexOf('?');\n  if (index == -1) {\n    return url;\n  }\n  const fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  // The below regex is a combo of these original patterns. Combining these,\n  // removing the corresponding `.replace` calls, and reusing\n  // removeParamsFromSearch saves ~175B. Matches params in query string:\n  // - /[?&]amp_js[^&]*/   amp_js_*\n  // - /[?&]amp_gsa[^&]*/  amp_gsa\n  // - /[?&]amp_r[^&]*/    amp_r\n  // - /[?&]amp_kit[^&]*/  amp_kit\n  // - /[?&]usqp[^&]*/     usqp (from goog experiment)\n  return removeParamsFromSearch(urlSearch, '(amp_(js[^&=]*|gsa|r|kit)|usqp)');\n}\n\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\nexport function removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: Accept paramNames as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const paramRegex = new RegExp(`[?&]${paramName}\\\\b[^&]*`, 'g');\n  const search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\nexport function getSourceUrl(url) {\n  url = urlAsLocation(url);\n\n  // Not a proxy URL - return the URL itself.\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  }\n\n  // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n  const path = url.pathname.split('/');\n  const prefix = path[1];\n  userAssert(\n    SERVING_TYPE_PREFIX.has(prefix),\n    'Unknown path prefix in url %s',\n    url.href\n  );\n  const domainOrHttpsSignal = path[2];\n  const origin =\n    domainOrHttpsSignal == 's'\n      ? 'https://' + decodeURIComponent(path[3])\n      : 'http://' + decodeURIComponent(domainOrHttpsSignal);\n  // Sanity test that what we found looks like a domain.\n  userAssert(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return (\n    origin +\n    path.join('/') +\n    removeAmpJsParamsFromSearch(url.search) +\n    (url.hash || '')\n  );\n}\n\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\nexport function getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\nexport function resolveRelativeUrl(relativeUrlString, baseUrl) {\n  baseUrl = urlAsLocation(baseUrl);\n  if (mode.isEsm() || typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private @visibleForTesting\n */\nexport function resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  baseUrl = urlAsLocation(baseUrl);\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  const relativeUrl = parseUrlDeprecated(relativeUrlString);\n\n  // Absolute URL.\n  if (relativeUrlString.toLowerCase().startsWith(relativeUrl.protocol)) {\n    return relativeUrl.href;\n  }\n\n  // Protocol-relative URL.\n  if (relativeUrlString.startsWith('//')) {\n    return baseUrl.protocol + relativeUrlString;\n  }\n\n  // Absolute path.\n  if (relativeUrlString.startsWith('/')) {\n    return baseUrl.origin + relativeUrlString;\n  }\n\n  // Relative path.\n  return (\n    baseUrl.origin +\n    baseUrl.pathname.replace(/\\/[^/]*$/, '/') +\n    relativeUrlString\n  );\n}\n\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\nexport function getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  const sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\nexport function checkCorsUrl(url) {\n  const parsedUrl = parseUrlDeprecated(url);\n  const query = parseQueryString(parsedUrl.search);\n  userAssert(\n    !(SOURCE_ORIGIN_PARAM in query),\n    'Source origin is not allowed in %s',\n    url\n  );\n}\n\n/**\n * Adds the path to the given url.\n *\n * @param {!Location} url\n * @param {string} path\n * @return {string}\n */\nexport function appendPathToUrl(url, path) {\n  const pathname = url.pathname.replace(/\\/?$/, '/') + path.replace(/^\\//, '');\n  return url.origin + pathname + url.search + url.hash;\n}\n", "import {isArray} from '#core/types';\n\nimport {Services} from '#service';\n\nimport {user, userAssert} from '#utils/log';\n\nimport {\n  getSourceOrigin,\n  getSourceUrl,\n  resolveRelativeUrl,\n} from '../../../src/url';\n\nconst ADSENSE_REC_ORIGIN = 'https://googleads.g.doubleclick.net';\n\n/**\n * @typedef {{\n *   pages: !Array<!AmpNextPageItem>,\n *   hideSelectors: (!Array<string>|undefined)\n * }}\n */\nexport let AmpNextPageConfig;\n\n/**\n * @typedef {{\n *   ampUrl: string,\n *   image: string,\n *   title: string,\n * }}\n */\nexport let AmpNextPageItem;\n\n/**\n * Checks whether the object conforms to the AmpNextPageConfig spec.\n * @param {!Element} context\n * @param {*} config The config to validate.\n * @param {string} documentUrl URL of the currently active document, i.e.\n *     context.getAmpDoc().getUrl()\n * @return {!AmpNextPageConfig}\n */\nexport function assertConfig(context, config, documentUrl) {\n  userAssert(config, 'amp-next-page config must be specified');\n  userAssert(isArray(config.pages), 'pages must be an array');\n  assertRecos(context, config.pages, documentUrl);\n\n  if ('hideSelectors' in config) {\n    userAssert(\n      isArray(config['hideSelectors']),\n      'amp-next-page hideSelectors should be an array'\n    );\n    assertSelectors(config['hideSelectors']);\n  }\n\n  return /** @type {!AmpNextPageConfig} */ (config);\n}\n\n/**\n * @param {!Element} context\n * @param {!Array<*>} recos\n * @param {string} documentUrl\n */\nfunction assertRecos(context, recos, documentUrl) {\n  recos.forEach((reco) => assertReco(context, reco, documentUrl));\n}\n\nconst BANNED_SELECTOR_PATTERNS = [/(^|\\W)i-amphtml-/];\n\n/**\n * Asserts for valid selectors.\n *\n * @param {!Array<string>} selectors\n */\nfunction assertSelectors(selectors) {\n  selectors.forEach((selector) => {\n    BANNED_SELECTOR_PATTERNS.forEach((pattern) => {\n      user().assertString(\n        selector,\n        'amp-next-page hideSelector value should be a string'\n      );\n      userAssert(\n        !pattern.test(selector),\n        'amp-next-page hideSelector %s not allowed',\n        selector\n      );\n    });\n  });\n}\n\n/**\n * @param {!Element} context\n * @param {*} reco\n * @param {string} documentUrl\n */\nfunction assertReco(context, reco, documentUrl) {\n  user().assertString(reco.ampUrl, 'ampUrl must be a string');\n\n  // Rewrite relative URLs to absolute, relative to the source URL.\n  const base = getSourceUrl(documentUrl);\n  reco.ampUrl = resolveRelativeUrl(reco.ampUrl, base);\n\n  const urlService = Services.urlForDoc(context);\n  const url = urlService.parse(reco.ampUrl);\n  const {origin} = urlService.parse(documentUrl);\n  const sourceOrigin = getSourceOrigin(documentUrl);\n\n  userAssert(\n    url.origin === origin ||\n      url.origin === sourceOrigin ||\n      isValidAdSenseURL(context, url, origin),\n    'pages must be from the same origin as the current document'\n  );\n  user().assertString(reco.image, 'image must be a string');\n  user().assertString(reco.title, 'title must be a string');\n\n  // Rewrite canonical URLs to cache URLs, when served from the cache.\n  if (sourceOrigin !== origin && url.origin === sourceOrigin) {\n    reco.ampUrl =\n      `${origin}/c/` +\n      (url.protocol === 'https:' ? 's/' : '') +\n      encodeURIComponent(url.host) +\n      url.pathname +\n      (url.search || '') +\n      (url.hash || '');\n  }\n}\n\n/**\n * @param {!Element} context\n * @param {!Location} url\n * @param {string} origin\n * @return {boolean}\n */\nfunction isValidAdSenseURL(context, url, origin) {\n  const matches = url.search.match(/adurl=(.*)(?:&|$)/);\n  if (!matches) {\n    return false;\n  }\n  const urlService = Services.urlForDoc(context);\n  const targetUrl = urlService.parse(matches[1]);\n  return url.origin === ADSENSE_REC_ORIGIN && targetUrl.origin === origin;\n}\n", "/**\n * Visibility state of the AMP document.\n * @enum {string}\n */\nexport const VisibilityState = {\n  /**\n   * The AMP document is being pre-rendered before being shown.\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * The AMP document is currently active and visible.\n   */\n  VISIBLE: 'visible',\n\n  /**\n   * The AMP document is active but the browser tab or AMP app is not.\n   */\n  HIDDEN: 'hidden',\n\n  /**\n   * The AMP document is visible, but the user has started swiping away from\n   * it. The runtime may stop active playback.\n   */\n  PAUSED: 'paused',\n\n  /**\n   * The AMP document is no longer active because the user swiped away or\n   * closed the viewer. The document may become visible again later.\n   */\n  INACTIVE: 'inactive',\n};\n", "/**\n * TODO(rcebulko): Migrate the actual ViewportInterface into core or an extern.\n * @typedef {{\n *   getHeight: function(this:ViewportInterfaceDef):number,\n *   getWidth: function(this:ViewportInterfaceDef):number,\n * }}\n */\nlet ViewportInterfaceDef;\n\n/**\n * The structure that combines position and size for an element. The exact\n * interpretation of position and size depends on the use case.\n *\n * @typedef {{\n *   top: number,\n *   bottom: number,\n *   left: number,\n *   right: number,\n *   width: number,\n *   height: number,\n *   x: number,\n *   y: number\n * }}\n */\nexport let LayoutRectDef;\n\n/**\n * The structure that contains the size for an element. The exact\n * interpretation of the size depends on the use case.\n *\n * @typedef {{\n *   width: number,\n *   height: number,\n * }}\n */\nexport let LayoutSizeDef;\n\n/**\n * The structure that represents the margins of an Element.\n *\n * @typedef {{\n *   top: number,\n *   right: number,\n *   bottom: number,\n *   left: number\n * }}\n */\nexport let LayoutMarginsDef;\n\n/**\n * The structure that represents a requested change to the margins of an\n * Element. Any new values specified will replace existing ones (rather than\n * being additive).\n *\n * @typedef {{\n *   top: (number|undefined),\n *   right: (number|undefined),\n *   bottom: (number|undefined),\n *   left: (number|undefined)\n * }}\n */\nexport let LayoutMarginsChangeDef;\n\n/**\n * RelativePositions\n *\n * Describes the relative position of an element to another (whether the\n * first is inside the second, on top of the second or on the bottom\n * @enum {string}\n */\nexport const RelativePositions = {\n  INSIDE: 'inside',\n  TOP: 'top',\n  BOTTOM: 'bottom',\n};\n\n/**\n * Creates a layout rect based on the left, top, width and height parameters\n * in that order.\n * @param {number} left\n * @param {number} top\n * @param {number} width\n * @param {number} height\n * @return {!LayoutRectDef}\n */\nexport function layoutRectLtwh(left, top, width, height) {\n  return {\n    left,\n    top,\n    width,\n    height,\n    bottom: top + height,\n    right: left + width,\n    x: left,\n    y: top,\n  };\n}\n\n/**\n * Creates a layout rect based on the DOMRect, e.g. obtained from calling\n * getBoundingClientRect.\n * @param {!ClientRect} rect\n * @return {!LayoutRectDef}\n */\nexport function layoutRectFromDomRect(rect) {\n  return layoutRectLtwh(\n    Number(rect.left),\n    Number(rect.top),\n    Number(rect.width),\n    Number(rect.height)\n  );\n}\n\n/**\n * Returns true if the specified two rects overlap by a single pixel.\n * @param {!LayoutRectDef|!ClientRect} r1\n * @param {!LayoutRectDef|!ClientRect} r2\n * @return {boolean}\n */\nexport function rectsOverlap(r1, r2) {\n  return (\n    r1.top <= r2.bottom &&\n    r2.top <= r1.bottom &&\n    r1.left <= r2.right &&\n    r2.left <= r1.right\n  );\n}\n\n/**\n * Returns the intersection between a, b or null if there is none.\n * @param {...?LayoutRectDef|undefined} var_args\n * @return {?LayoutRectDef}\n */\nexport function rectIntersection(var_args) {\n  let x0 = -Infinity;\n  let x1 = Infinity;\n  let y0 = -Infinity;\n  let y1 = Infinity;\n  for (let i = 0; i < arguments.length; i++) {\n    const current = arguments[i];\n    if (!current) {\n      continue;\n    }\n    x0 = Math.max(x0, current.left);\n    x1 = Math.min(x1, current.left + current.width);\n    y0 = Math.max(y0, current.top);\n    y1 = Math.min(y1, current.top + current.height);\n    if (x1 < x0 || y1 < y0) {\n      return null;\n    }\n  }\n  if (x1 == Infinity) {\n    return null;\n  }\n  return layoutRectLtwh(x0, y0, x1 - x0, y1 - y0);\n}\n\n/**\n * Returns the position of r2 relative to r1\n * @param {!LayoutRectDef} r1\n * @param {!LayoutRectDef} r2\n * @return {!RelativePositions}\n */\nexport function layoutRectsRelativePos(r1, r2) {\n  if (r1.top < r2.top) {\n    return RelativePositions.TOP;\n  } else if (r1.bottom > r2.bottom) {\n    return RelativePositions.BOTTOM;\n  } else {\n    return RelativePositions.INSIDE;\n  }\n}\n\n/**\n * Determines if any portion of a layoutBox would be onscreen in the given\n * viewport, when scrolled to the specified position.\n * @param {!LayoutRectDef} layoutBox\n * @param {!ViewportInterfaceDef} viewport\n * @param {number} scrollPos\n * @return {!RelativePositions}\n */\nexport function layoutPositionRelativeToScrolledViewport(\n  layoutBox,\n  viewport,\n  scrollPos\n) {\n  const scrollLayoutBox = layoutRectFromDomRect(\n    /** @type {!ClientRect} */ ({\n      top: scrollPos,\n      bottom: scrollPos + viewport.getHeight(),\n      left: 0,\n      right: viewport.getWidth(),\n    })\n  );\n  if (rectsOverlap(layoutBox, scrollLayoutBox)) {\n    return RelativePositions.INSIDE;\n  } else {\n    return layoutRectsRelativePos(layoutBox, scrollLayoutBox);\n  }\n}\n\n/**\n * Expand the layout rect using multiples of width and height.\n * @param {!LayoutRectDef} rect Original rect.\n * @param {number} dw Expansion in width, specified as a multiple of width.\n * @param {number} dh Expansion in height, specified as a multiple of height.\n * @return {!LayoutRectDef}\n */\nexport function expandLayoutRect(rect, dw, dh) {\n  return layoutRectLtwh(\n    rect.left - rect.width * dw,\n    rect.top - rect.height * dh,\n    rect.width * (1 + dw * 2),\n    rect.height * (1 + dh * 2)\n  );\n}\n\n/**\n * Moves the layout rect using dx and dy.\n * @param {!LayoutRectDef} rect Original rect.\n * @param {number} dx Move horizontally with this value.\n * @param {number} dy Move vertically with this value.\n * @return {!LayoutRectDef}\n */\nexport function moveLayoutRect(rect, dx, dy) {\n  if ((dx == 0 && dy == 0) || (rect.width == 0 && rect.height == 0)) {\n    return rect;\n  }\n  return layoutRectLtwh(rect.left + dx, rect.top + dy, rect.width, rect.height);\n}\n\n/**\n * @param {!LayoutMarginsDef} margins\n * @param {!LayoutMarginsChangeDef} change\n * @return {boolean}\n */\nexport function areMarginsChanged(margins, change) {\n  return (\n    (change.top !== undefined && change.top != margins.top) ||\n    (change.right !== undefined && change.right != margins.right) ||\n    (change.bottom !== undefined && change.bottom != margins.bottom) ||\n    (change.left !== undefined && change.left != margins.left)\n  );\n}\n\n/**\n * @param {!LayoutRectDef} from\n * @param {!LayoutRectDef} to\n * @return {boolean}\n */\nexport function layoutRectSizeEquals(from, to) {\n  return from.width == to.width && from.height === to.height;\n}\n\n/**\n * @param {?LayoutRectDef} r1\n * @param {?LayoutRectDef} r2\n * @return {boolean}\n */\nexport function layoutRectEquals(r1, r2) {\n  if (!r1 || !r2) {\n    return false;\n  }\n  return (\n    r1.left == r2.left &&\n    r1.top == r2.top &&\n    r1.width == r2.width &&\n    r1.height == r2.height\n  );\n}\n\n/**\n * @param {LayoutMarginsChangeDef|undefined} marginsChange\n * @return {LayoutMarginsChangeDef|undefined}\n */\nexport function cloneLayoutMarginsChangeDef(marginsChange) {\n  if (!marginsChange) {\n    return marginsChange;\n  }\n  return {\n    top: marginsChange.top,\n    bottom: marginsChange.bottom,\n    left: marginsChange.left,\n    right: marginsChange.right,\n  };\n}\n\n/**\n * @param {!LayoutRectDef|!ClientRect|!DOMRect} rect\n * @return {!LayoutSizeDef}\n */\nexport function layoutSizeFromRect(rect) {\n  const {height, width} = rect;\n  return {width, height};\n}\n", "// Note: loaded by 3p system. Cannot rely on babel polyfills.\nimport {devAssert} from '#core/assert';\nimport {devError} from '#core/error';\nimport {map} from '#core/types/object';\n\n/** @type {Object<string, string>} */\nlet propertyNameCache;\n\n/** @const {!Array<string>} */\nconst vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n\nconst DISPLAY_STYLE_MESSAGE =\n  '`display` style detected. You must use toggle instead.';\n\nconst EMPTY_CSS_DECLARATION = /** @type {!CSSStyleDeclaration} */ ({\n  'getPropertyPriority': () => '',\n  'getPropertyValue': () => '',\n});\n\n/**\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\nexport function camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (let i = 0; i < vendorPrefixes.length; i++) {\n    const propertyName = vendorPrefixes[i] + titleCase;\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n  return '';\n}\n\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\nexport function getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if (isVar(camelCase)) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n  if (!propertyNameCache) {\n    propertyNameCache = map();\n  }\n  let propertyName = propertyNameCache[camelCase];\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n    if (style[camelCase] === undefined) {\n      const titleCase = camelCaseToTitleCase(camelCase);\n      const prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n  return propertyName;\n}\n\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setImportantStyles(element, styles) {\n  const {style} = element;\n  for (const k in styles) {\n    style.setProperty(\n      getVendorJsPropertyName(style, k),\n      String(styles[k]),\n      'important'\n    );\n  }\n}\n\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\nexport function setStyle(element, property, value, opt_units, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return;\n  }\n  const styleValue = /** @type {string} */ (\n    opt_units ? value + opt_units : value\n  );\n  if (isVar(propertyName)) {\n    element.style.setProperty(propertyName, styleValue);\n  } else {\n    element.style[propertyName] = styleValue;\n  }\n}\n\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\nexport function getStyle(element, property, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return undefined;\n  }\n  if (isVar(propertyName)) {\n    return element.style.getPropertyValue(propertyName);\n  }\n  return element.style[propertyName];\n}\n\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setStyles(element, styles) {\n  for (const k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\nexport function setInitialDisplay(el, value) {\n  const {style} = el;\n  devAssert(\n    value !== '' && value !== 'none',\n    'Initial display value must not be \"none\". Use toggle instead.'\n  );\n  devAssert(\n    !style['display'],\n    'setInitialDisplay MUST NOT be used for ' +\n      'resetting the display style. If you are looking for display:none ' +\n      'toggling, use toggle instead.'\n  );\n  style['display'] = value;\n}\n\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\nexport function toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\nexport function px(value) {\n  return `${value}px`;\n}\n\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\nexport function deg(value) {\n  return `${value}deg`;\n}\n\n/**\n * Coerces a number into a string with units.\n * @param {number|string} value\n * @param {function(number):string} fn\n * @return {string}\n */\nfunction units(value, fn) {\n  return typeof value == 'number' ? fn(value) : value;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function translateX(value) {\n  return `translateX(${units(value, px)})`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string|null)=} opt_y\n * @return {string}\n */\nexport function translate(x, opt_y) {\n  return opt_y === undefined || opt_y === null\n    ? `translate(${units(x, px)})`\n    : `translate(${units(x, px)}, ${units(opt_y, px)})`;\n}\n\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function scale(value) {\n  return `scale(${value})`;\n}\n\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function rotate(value) {\n  return `rotate(${units(value, deg)})`;\n}\n\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\nexport function removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(\n    /\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g,\n    '($1,$2,$3, 1)'\n  );\n}\n\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!CSSStyleDeclaration}\n */\nexport function computedStyle(win, el) {\n  const style = /** @type {?CSSStyleDeclaration} */ (win.getComputedStyle(el));\n  return style || EMPTY_CSS_DECLARATION;\n}\n\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\nexport function resetStyles(element, properties) {\n  for (let i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\nexport function propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n\n/**\n * @param {string} property\n * @return {boolean}\n */\nfunction isVar(property) {\n  return property.startsWith('--');\n}\n\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\nexport function assertNotDisplay(style) {\n  // TODO(rcebulko): This calls itself an assert, but doesn't throw an error.\n  // Should it throw sync? If so, this/below can reduce to\n  // `return devAssert(style == 'display', DISPLAY_STYLE_MESSAGE);`\n  if (style === 'display') {\n    devError('STYLE', DISPLAY_STYLE_MESSAGE);\n  }\n  return style;\n}\n\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\nexport function assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    devError('STYLE', DISPLAY_STYLE_MESSAGE);\n  }\n  return styles;\n}\n", "import {\n  layoutRectEquals,\n  layoutRectLtwh,\n  layoutRectsRelativePos,\n  rectsOverlap,\n} from '#core/dom/layout/rect';\n\nimport {Services} from '#service';\n\nimport {devAssert} from '#utils/log';\n\n/** @enum {number} */\nexport const PositionObserverFidelity = {\n  HIGH: 1,\n  LOW: 0,\n};\n\n/** @const @private */\nconst LOW_FIDELITY_FRAME_COUNT = 4;\n\n/**\n * TODO (@zhouyx): rename relativePos to relativePositions\n * The positionObserver returned position value which includes the position rect\n * relative to viewport. And viewport rect which always has top 0, left 0, and\n * viewport width and height.\n * @typedef {{\n *  positionRect: ?../../layout-rect.LayoutRectDef,\n *  viewportRect: !../../layout-rect.LayoutRectDef,\n *  relativePos: ?../../layout-rect.RelativePositions,\n * }}\n */\nexport let PositionInViewportEntryDef;\n\nexport class PositionObserverWorker {\n  /**\n   * @param {!../ampdoc-impl.AmpDoc} ampdoc\n   * @param {!Element} element\n   * @param {!PositionObserverFidelity} fidelity\n   * @param {function(?PositionInViewportEntryDef)} handler\n   */\n  constructor(ampdoc, element, fidelity, handler) {\n    /** @const {!Element} */\n    this.element = element;\n\n    /** @const {function(?PositionInViewportEntryDef)} */\n    this.handler_ = handler;\n\n    /** @type {!PositionObserverFidelity} */\n    this.fidelity = fidelity;\n\n    /** @type {number} */\n    this.turn =\n      fidelity == PositionObserverFidelity.LOW\n        ? Math.floor(Math.random() * LOW_FIDELITY_FRAME_COUNT)\n        : 0;\n\n    /** @type {?PositionInViewportEntryDef} */\n    this.prevPosition_ = null;\n\n    /** @private {!../viewport/viewport-interface.ViewportInterface} */\n    this.viewport_ = Services.viewportForDoc(ampdoc);\n  }\n\n  /**\n   * Call to trigger an entry handler\n   * @param {!PositionInViewportEntryDef} position\n   * @private\n   */\n  trigger_(position) {\n    const prevPos = this.prevPosition_;\n    if (\n      prevPos &&\n      layoutRectEquals(prevPos.positionRect, position.positionRect) &&\n      layoutRectEquals(prevPos.viewportRect, position.viewportRect)\n    ) {\n      // position didn't change, do nothing.\n      return;\n    }\n\n    devAssert(\n      position.positionRect,\n      'PositionObserver should always trigger entry with clientRect'\n    );\n    const positionRect = /** @type {!../../layout-rect.LayoutRectDef} */ (\n      position.positionRect\n    );\n    // Add the relative position of the element to its viewport\n    position.relativePos = layoutRectsRelativePos(\n      positionRect,\n      position.viewportRect\n    );\n\n    if (rectsOverlap(positionRect, position.viewportRect)) {\n      // Update position\n      this.prevPosition_ = position;\n      // Only call handler if entry element overlap with viewport.\n      this.handler_(position);\n    } else if (this.prevPosition_) {\n      // Need to notify that element gets outside viewport\n      // NOTE: This is required for inabox position observer.\n      this.prevPosition_ = null;\n      position.positionRect = null;\n      this.handler_(position);\n    }\n  }\n\n  /**\n   * To update the position of entry element when it is ready.\n   * Called when updateAllEntries, or when first observe an element.\n   * @param {boolean=} opt_force\n   */\n  update(opt_force) {\n    if (!opt_force) {\n      if (this.turn != 0) {\n        this.turn--;\n        return;\n      }\n\n      if (this.fidelity == PositionObserverFidelity.LOW) {\n        this.turn = LOW_FIDELITY_FRAME_COUNT;\n      }\n    }\n\n    const viewportSize = this.viewport_.getSize();\n    const viewportBox = layoutRectLtwh(\n      0,\n      0,\n      viewportSize.width,\n      viewportSize.height\n    );\n    this.viewport_.getClientRectAsync(this.element).then((elementBox) => {\n      this.trigger_(\n        /** @type {./position-observer-worker.PositionInViewportEntryDef}*/ ({\n          positionRect: elementBox,\n          viewportRect: viewportBox,\n          relativePos: null,\n        })\n      );\n    });\n  }\n}\n", "import {debounce} from '#core/types/function';\n\nimport {Services} from '#service';\n\nimport {dev} from '#utils/log';\n\nimport {\n  PositionObserverFidelity, // eslint-disable-line no-unused-vars\n  PositionObserverWorker,\n} from './position-observer-worker';\n\nimport {registerServiceBuilderForDoc} from '../../service-helpers';\n\n/** @const @private */\nconst TAG = 'POSITION_OBSERVER';\n\n/** @const @private */\nconst SCROLL_TIMEOUT = 500;\n\nexport class PositionObserver {\n  /**\n   * @param {!../ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @private {!../ampdoc-impl.AmpDoc} */\n    this.ampdoc_ = ampdoc;\n\n    /** @private {!Window} */\n    this.win_ = ampdoc.win;\n\n    /** @private {!Array<!PositionObserverWorker>} */\n    this.workers_ = [];\n\n    /** @private {!../vsync-impl.Vsync} */\n    this.vsync_ = Services.vsyncFor(this.win_);\n\n    /** @private {!../viewport/viewport-interface.ViewportInterface} */\n    this.viewport_ = Services.viewportForDoc(ampdoc);\n\n    /** @private {Array<function()>} */\n    this.unlisteners_ = [];\n\n    /** @private {boolean} */\n    this.inScroll_ = false;\n\n    /** @private {boolean} */\n    this.measure_ = false;\n\n    /** @private {boolean} */\n    this.callbackStarted_ = false;\n\n    /** @private {function()} */\n    this.boundStopScroll_ = debounce(\n      this.win_,\n      () => {\n        this.inScroll_ = false;\n      },\n      SCROLL_TIMEOUT\n    );\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {!PositionObserverFidelity} fidelity\n   * @param {function(?./position-observer-worker.PositionInViewportEntryDef)} handler\n   * @return {!UnlistenDef}\n   */\n  observe(element, fidelity, handler) {\n    const worker = new PositionObserverWorker(\n      this.ampdoc_,\n      element,\n      fidelity,\n      handler\n    );\n\n    this.workers_.push(worker);\n\n    if (!this.callbackStarted_) {\n      this.startCallback_();\n    }\n\n    worker.update();\n\n    return () => {\n      for (let i = 0; i < this.workers_.length; i++) {\n        if (this.workers_[i] == worker) {\n          this.removeWorker_(i);\n          return;\n        }\n      }\n    };\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  unobserve(element) {\n    for (let i = 0; i < this.workers_.length; i++) {\n      if (this.workers_[i].element == element) {\n        this.removeWorker_(i);\n        return;\n      }\n    }\n    dev().error(TAG, 'cannot unobserve unobserved element');\n  }\n\n  /**\n   * @param {number} index\n   * @private\n   */\n  removeWorker_(index) {\n    this.workers_.splice(index, 1);\n    if (this.workers_.length == 0) {\n      this.stopCallback_();\n    }\n  }\n\n  /**\n   * Callback function that gets called when start to observe the first element.\n   * @private\n   */\n  startCallback_() {\n    this.callbackStarted_ = true;\n    // listen to viewport scroll event to help pass determine if need to\n    this.unlisteners_.push(\n      this.viewport_.onScroll(() => {\n        this.onScrollHandler_();\n      })\n    );\n    this.unlisteners_.push(\n      this.viewport_.onResize(() => {\n        this.onResizeHandler_();\n      })\n    );\n  }\n\n  /**\n   * Callback function that gets called when unobserve last observed element.\n   * @private\n   */\n  stopCallback_() {\n    this.callbackStarted_ = false;\n    while (this.unlisteners_.length) {\n      const unlisten = this.unlisteners_.pop();\n      unlisten();\n    }\n  }\n\n  /**\n   * This should always be called in vsync.\n   * @param {boolean=} opt_force\n   * @visibleForTesting\n   */\n  updateAllEntries(opt_force) {\n    for (let i = 0; i < this.workers_.length; i++) {\n      const worker = this.workers_[i];\n      worker.update(opt_force);\n    }\n  }\n\n  /**\n   * Handle viewport scroll event\n   * @private\n   */\n  onScrollHandler_() {\n    this.boundStopScroll_();\n    this.inScroll_ = true;\n    if (!this.measure_) {\n      this.schedulePass_();\n    }\n  }\n\n  /**\n   * Handle viewport resize event\n   * @private\n   */\n  onResizeHandler_() {\n    this.updateAllEntries(true);\n  }\n\n  /**\n   * Update all entries during scroll\n   * @private\n   */\n  schedulePass_() {\n    // TODO (@zhouyx, #9208):\n    // P1: account for effective fidelity using this.effectiveFidelity\n    // P2: do passes on onDomMutation (if available using MutationObserver\n    // mostly for in-a-box host, since most DOM mutations are constraint to the\n    // AMP elements).\n    this.updateAllEntries();\n    this.measure_ = true;\n    if (!this.inScroll_) {\n      // Stop measure if viewport is no longer scrolling\n      this.measure_ = false;\n      return;\n    }\n    this.vsync_.measure(() => {\n      this.schedulePass_();\n    });\n  }\n}\n\n/**\n * @param {!../ampdoc-impl.AmpDoc} ampdoc\n */\nexport function installPositionObserverServiceForDoc(ampdoc) {\n  registerServiceBuilderForDoc(ampdoc, 'position-observer', PositionObserver);\n}\n", "import {dict} from '#core/types/object';\n\nimport {Services} from '#service';\n\n/**\n * Helper method to trigger analytics event if amp-analytics is available.\n * TODO: Do not expose this function\n * @param {!Element} target\n * @param {string} eventType\n * @param {!JsonObject} vars A map of vars and their values.\n * @param {boolean} enableDataVars A boolean to indicate if data-vars-*\n * attribute value from target element should be included.\n */\nexport function triggerAnalyticsEvent(\n  target,\n  eventType,\n  vars = dict(),\n  enableDataVars = true\n) {\n  Services.analyticsForDocOrNull(target).then((analytics) => {\n    if (!analytics) {\n      return;\n    }\n    analytics.triggerEventForTarget(target, eventType, vars, enableDataVars);\n  });\n}\n", "export const CSS = \".amp-next-page-default-separator{border-bottom:1px solid rgba(0,0,0,0.12)}.amp-next-page-links{border-top:1px solid rgba(0,0,0,0.12)}.amp-next-page-link{border-bottom:1px solid rgba(0,0,0,0.12)}.amp-next-page-text{color:#3c4043;font-size:17px}.i-amphtml-next-page-document{overflow-y:hidden}.i-amphtml-next-page-document>[i-amphtml-fixedid]{display:none}.i-amphtml-next-page-hidden{display:none!important}.i-amphtml-next-page{background:#fff}.i-amphtml-next-page>[separator]{display:none}.i-amphtml-reco-holder-article{display:block;overflow:auto;padding:10px 0;text-decoration:none}.i-amphtml-next-article-image{width:72px;height:72px;float:left;margin:0 10px;background-size:cover;background-position:50%}.i-amphtml-next-article-title{position:relative;margin:5px 30px 5px 0}\\n/*# sourceURL=/extensions/amp-next-page/0.1/amp-next-page.css*/\";\n", "/**\n * Commonly used signals across different elements and documents.\n * @enum {string}\n */\nexport const CommonSignals = {\n  /**\n   * The element's implementation has been registered and ready for upgrade.\n   */\n  READY_TO_UPGRADE: 'ready-upgrade',\n\n  /**\n   * The element has been upgraded from ElementStub to its real implementation.\n   */\n  UPGRADED: 'upgraded',\n\n  /**\n   * The element has been built.\n   */\n  BUILT: 'built',\n\n  /**\n   * The element has been mounted.\n   */\n  MOUNTED: 'mounted',\n\n  /**\n   * The element has started loading.\n   * LOAD_START triggers at the start of the layoutCallback.\n   */\n  LOAD_START: 'load-start',\n\n  /**\n   * Rendering has been confirmed to have been started.\n   * It is a signal to indicate meaningful display (e.g. text could be displayed\n   * CSS is correctly installed/applied).\n   *\n   * Elements can optionally implement RENDER_START signal. (e.g. ad, shadowdoc)\n   * if it want to define its own meaningful display time and toggle visibility.\n   *\n   * Simpler elements's RENDER_START can be equal to the start of the\n   * buildCallback\n   */\n  RENDER_START: 'render-start',\n\n  /**\n   * The element has been loaded.\n   * LOAD_END triggers at the end of the layoutCallback.\n   *\n   */\n  LOAD_END: 'load-end',\n\n  /**\n   * The initial contents of an element/document/embed have been loaded.\n   * INI_LOAD is an optional signal, implemented by ads, story, and elements\n   * that consist of other resources.\n   * It instructs that all critical resources has been loaded, and can be used\n   * for more accurate visibility measurement.\n   * When an element doesn't consist multiple child resources, LOAD_END signal\n   * can be used to indicate resource load completion.\n   * Note: Based on the implementation, INI_LOAD can trigger before or after\n   * LOAD_END.\n   */\n  INI_LOAD: 'ini-load',\n\n  /**\n   * The element has been unlaid out.\n   */\n  UNLOAD: 'unload',\n};\n", "/**\n * Possible versions of Shadow DOM spec\n * @enum {string}\n */\nexport const ShadowDomVersion = {\n  NONE: 'none',\n  V0: 'v0',\n  V1: 'v1',\n};\n\n/**\n * @type {!ShadowDomVersion|undefined}\n * @visibleForTesting\n */\nlet shadowDomSupportedVersion;\n\n/**\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nlet shadowCssSupported;\n\n/**\n * @param {!ShadowDomVersion|undefined} val\n * @visibleForTesting\n */\nexport function setShadowDomSupportedVersionForTesting(val) {\n  shadowDomSupportedVersion = val;\n}\n\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\nexport function setShadowCssSupportedForTesting(val) {\n  shadowCssSupported = val;\n}\n\n/**\n * Returns `true` if the Shadow DOM is supported.\n * @return {boolean}\n */\nexport function isShadowDomSupported() {\n  return getShadowDomSupportedVersion() != ShadowDomVersion.NONE;\n}\n\n/**\n * Returns `true` if Shadow CSS encapsulation is supported.\n * @return {boolean}\n */\nexport function isShadowCssSupported() {\n  if (shadowCssSupported === undefined) {\n    shadowCssSupported =\n      isShadowDomSupported() &&\n      (isNative(Element.prototype.attachShadow) ||\n        isNative(Element.prototype.createShadowRoot));\n  }\n  return shadowCssSupported;\n}\n\n/**\n * Returns `true` if the passed function is native to the browser, and is not\n * polyfilled\n * @param {Function|undefined} func A function that is attatched to a JS\n * object.\n * @return {boolean}\n */\nfunction isNative(func) {\n  return !!func && func.toString().indexOf('[native code]') != -1;\n}\n\n/**\n * Returns the supported version of Shadow DOM spec.\n * @param {typeof Element=} opt_elementClass optional for testing\n * @return {!ShadowDomVersion}\n */\nexport function getShadowDomSupportedVersion(opt_elementClass) {\n  if (shadowDomSupportedVersion === undefined) {\n    shadowDomSupportedVersion = getShadowDomVersion(\n      opt_elementClass || Element\n    );\n  }\n  return shadowDomSupportedVersion;\n}\n\n/**\n * Returns shadow dom version.\n *\n * @param {!typeof Element} element\n * @return {!ShadowDomVersion}\n */\nfunction getShadowDomVersion(element) {\n  if (!!element.prototype.attachShadow) {\n    return ShadowDomVersion.V1;\n  } else if (!!element.prototype.createShadowRoot) {\n    return ShadowDomVersion.V0;\n  }\n  return ShadowDomVersion.NONE;\n}\n", "/**\n* @license\n* Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n* Use of this source code is governed by a BSD-style\n* license that can be found in the LICENSE file or at\n* https://developers.google.com/open-source/licenses/bsd\n*/\n\n/*\n  This is a limited shim for ShadowDOM css styling.\n  https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#styles\n\n  The intention here is to support only the styling features which can be\n  relatively simply implemented. The goal is to allow users to avoid the\n  most obvious pitfalls and do so without compromising performance significantly.\n  For ShadowDOM styling that's not covered here, a set of best practices\n  can be provided that should allow users to accomplish more complex styling.\n\n  The following is a list of specific ShadowDOM styling features and a brief\n  discussion of the approach used to shim.\n\n  Shimmed features:\n\n  * :host, :host-context: ShadowDOM allows styling of the shadowRoot's host\n  element using the :host rule. To shim this feature, the :host styles are\n  reformatted and prefixed with a given scope name and promoted to a\n  document level stylesheet.\n  For example, given a scope name of .foo, a rule like this:\n\n    :host {\n        background: red;\n      }\n    }\n\n  becomes:\n\n    .foo {\n      background: red;\n    }\n\n  * encapsultion: Styles defined within ShadowDOM, apply only to\n  dom inside the ShadowDOM. Polymer uses one of two techniques to imlement\n  this feature.\n\n  By default, rules are prefixed with the host element tag name\n  as a descendant selector. This ensures styling does not leak out of the 'top'\n  of the element's ShadowDOM. For example,\n\n  div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n  x-foo div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n\n  Alternatively, if WebComponents.ShadowCSS.strictStyling is set to true then\n  selectors are scoped by adding an attribute selector suffix to each\n  simple selector that contains the host element tag name. Each element\n  in the element's ShadowDOM template is also given the scope attribute.\n  Thus, these rules match only elements that have the scope attribute.\n  For example, given a scope name of x-foo, a rule like this:\n\n    div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n    div[x-foo] {\n      font-weight: bold;\n    }\n\n  Note that elements that are dynamically added to a scope must have the scope\n  selector added to them manually.\n\n  * upper/lower bound encapsulation: Styles which are defined outside a\n  shadowRoot should not cross the ShadowDOM boundary and should not apply\n  inside a shadowRoot.\n\n  This styling behavior is not emulated. Some possible ways to do this that\n  were rejected due to complexity and/or performance concerns include: (1) reset\n  every possible property for every possible selector for a given scope name;\n  (2) re-implement css in javascript.\n\n  As an alternative, users should make sure to use selectors\n  specific to the scope in which they are working.\n\n  * ::distributed: This behavior is not emulated. It's often not necessary\n  to style the contents of a specific insertion point and instead, descendants\n  of the host element can be styled selectively. Users can also create an\n  extra node around an insertion point and style that node's contents\n  via descendent selectors. For example, with a shadowRoot like this:\n\n    <style>\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <content></content>\n\n  could become:\n\n    <style>\n      / *@polyfill .content-container div * /\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <div class=\"content-container\">\n      <content></content>\n    </div>\n\n  Note the use of @polyfill in the comment above a ShadowDOM specific style\n  declaration. This is a directive to the styling shim to use the selector\n  in comments in lieu of the next selector when running under polyfill.\n*/\n\nexport const ShadowCSS = {\n  strictStyling: false,\n  // change a selector like 'div' to 'name div'\n  /** @this {ShadowCSS} */\n  scopeRules: function(cssRules, scopeSelector, opt_transformer) {\n    var cssText = '';\n    if (cssRules) {\n      Array.prototype.forEach.call(cssRules, function(rule) {\n        if (rule.selectorText && (rule.style && rule.style.cssText !== undefined)) {\n          cssText += this.scopeSelector(rule.selectorText, scopeSelector,\n            this.strictStyling, opt_transformer) + ' {\\n\\t';\n          cssText += this.propertiesFromRule(rule) + '\\n}\\n\\n';\n        } else if (rule.type === CSSRule.MEDIA_RULE) {\n          cssText += '@media ' + rule.media.mediaText + ' {\\n';\n          cssText += this.scopeRules(rule.cssRules, scopeSelector);\n          cssText += '\\n}\\n\\n';\n        } else {\n          // KEYFRAMES_RULE in IE throws when we query cssText\n          // when it contains a -webkit- property.\n          // if this happens, we fallback to constructing the rule\n          // from the CSSRuleSet\n          // https://connect.microsoft.com/IE/feedbackdetail/view/955703/accessing-csstext-of-a-keyframe-rule-that-contains-a-webkit-property-via-cssom-generates-exception\n          try {\n            if (rule.cssText) {\n              cssText += rule.cssText + '\\n\\n';\n            }\n          } catch(x) {\n            if (rule.type === CSSRule.KEYFRAMES_RULE && rule.cssRules) {\n              cssText += this.ieSafeCssTextFromKeyFrameRule(rule);\n            }\n          }\n        }\n      }, this);\n    }\n    return cssText;\n  },\n  /** @this {ShadowCSS} */\n  ieSafeCssTextFromKeyFrameRule: function(rule) {\n    var cssText = '@keyframes ' + rule.name + ' {';\n    Array.prototype.forEach.call(rule.cssRules, function(rule) {\n      cssText += ' ' + rule.keyText + ' {' + rule.style.cssText + '}';\n    });\n    cssText += ' }';\n    return cssText;\n  },\n  /** @this {ShadowCSS} */\n  scopeSelector: function(selector, scopeSelector, strict, opt_transformer) {\n    var r = [], parts = selector.split(',');\n    parts.forEach(function(p) {\n      p = p.trim();\n      if (opt_transformer) {\n        p = opt_transformer(p);\n      }\n      if (this.selectorNeedsScoping(p, scopeSelector)) {\n        p = (strict && !p.match(polyfillHostNoCombinator)) ?\n            this.applyStrictSelectorScope(p, scopeSelector) :\n            this.applySelectorScope(p, scopeSelector);\n      }\n      r.push(p);\n    }, this);\n    return r.join(', ');\n  },\n  /** @this {ShadowCSS} */\n  selectorNeedsScoping: function(selector, scopeSelector) {\n    if (Array.isArray(scopeSelector)) {\n      return true;\n    }\n    var re = this.makeScopeMatcher(scopeSelector);\n    return !selector.match(re);\n  },\n  /** @this {ShadowCSS} */\n  makeScopeMatcher: function(scopeSelector) {\n    scopeSelector = scopeSelector.replace(/\\[/g, '\\\\[').replace(/\\]/g, '\\\\]');\n    return new RegExp('^(' + scopeSelector + ')' + selectorReSuffix, 'm');\n  },\n  /** @this {ShadowCSS} */\n  applySelectorScope: function(selector, selectorScope) {\n    return Array.isArray(selectorScope) ?\n        this.applySelectorScopeList(selector, selectorScope) :\n        this.applySimpleSelectorScope(selector, selectorScope);\n  },\n  // apply an array of selectors\n  /** @this {ShadowCSS} */\n  applySelectorScopeList: function(selector, scopeSelectorList) {\n    var r = [];\n    for (var i=0, s; (s=scopeSelectorList[i]); i++) {\n      r.push(this.applySimpleSelectorScope(selector, s));\n    }\n    return r.join(', ');\n  },\n  // scope via name and [is=name]\n  /** @this {ShadowCSS} */\n  applySimpleSelectorScope: function(selector, scopeSelector) {\n    if (selector.match(polyfillHostRe)) {\n      selector = selector.replace(polyfillHostNoCombinator, scopeSelector);\n      return selector.replace(polyfillHostRe, scopeSelector + ' ');\n    } else {\n      return scopeSelector + ' ' + selector;\n    }\n  },\n  // return a selector with [name] suffix on each simple selector\n  // e.g. .foo.bar > .zot becomes .foo[name].bar[name] > .zot[name]\n  /** @this {ShadowCSS} */\n  applyStrictSelectorScope: function(selector, scopeSelector) {\n    scopeSelector = scopeSelector.replace(/\\[is=([^\\]]*)\\]/g, '$1');\n    var splits = [' ', '>', '+', '~'],\n      scoped = selector,\n      attrName = '[' + scopeSelector + ']';\n    splits.forEach(function(sep) {\n      var parts = scoped.split(sep);\n      scoped = parts.map(function(p) {\n        // remove :host since it should be unnecessary\n        var t = p.trim().replace(polyfillHostRe, '');\n        if (t && (splits.indexOf(t) < 0) && (t.indexOf(attrName) < 0)) {\n          p = t.replace(/([^:]*)(:*)(.*)/, '$1' + attrName + '$2$3');\n        }\n        return p;\n      }).join(sep);\n    });\n    return scoped;\n  },\n  /** @this {ShadowCSS} */\n  propertiesFromRule: function(rule) {\n    var cssText = rule.style.cssText;\n    // TODO(sorvell): Safari cssom incorrectly removes quotes from the content\n    // property. (https://bugs.webkit.org/show_bug.cgi?id=118045)\n    // don't replace attr rules\n    if (rule.style.content && !rule.style.content.match(/['\"]+|attr/)) {\n      cssText = cssText.replace(/content:[^;]*;/g, 'content: \\'' +\n          rule.style.content + '\\';');\n    }\n    // TODO(sorvell): we can workaround this issue here, but we need a list\n    // of troublesome properties to fix https://github.com/Polymer/platform/issues/53\n    //\n    // inherit rules can be omitted from cssText\n    // TODO(sorvell): remove when Blink bug is fixed:\n    // https://code.google.com/p/chromium/issues/detail?id=358273\n    var style = rule.style;\n    for (var i in style) {\n      if (style[i] === 'initial') {\n        cssText += i + ': initial; ';\n      }\n    }\n    return cssText;\n  }\n};\n\nvar selectorRe = /([^{]*)({[\\s\\S]*?})/gim,\n    cssCommentRe = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n    // TODO(sorvell): remove either content or comment\n    cssCommentNextSelectorRe = /\\/\\*\\s*@polyfill ([^*]*\\*+([^/*][^*]*\\*+)*\\/)([^{]*?){/gim,\n    cssContentNextSelectorRe = /polyfill-next-selector[^}]*content\\:[\\s]*?['\"](.*?)['\"][;\\s]*}([^{]*?){/gim,\n    // TODO(sorvell): remove either content or comment\n    cssCommentRuleRe = /\\/\\*\\s@polyfill-rule([^*]*\\*+([^/*][^*]*\\*+)*)\\//gim,\n    cssContentRuleRe = /(polyfill-rule)[^}]*(content\\:[\\s]*['\"](.*?)['\"])[;\\s]*[^}]*}/gim,\n    // TODO(sorvell): remove either content or comment\n    cssCommentUnscopedRuleRe = /\\/\\*\\s@polyfill-unscoped-rule([^*]*\\*+([^/*][^*]*\\*+)*)\\//gim,\n    cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content\\:[\\s]*['\"](.*?)['\"])[;\\s]*[^}]*}/gim,\n    cssPseudoRe = /::(x-[^\\s{,(]*)/gim,\n    cssPartRe = /::part\\(([^)]*)\\)/gim,\n    // note: :host pre-processed to -shadowcsshost.\n    polyfillHost = '-shadowcsshost',\n    // note: :host-context pre-processed to -shadowcsshostcontext.\n    polyfillHostContext = '-shadowcsscontext',\n    parenSuffix = ')(?:\\\\((' +\n        '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n        ')\\\\))?([^,{]*)';\n    var cssColonHostRe = new RegExp('(' + polyfillHost + parenSuffix, 'gim'),\n    cssColonHostContextRe = new RegExp('(' + polyfillHostContext + parenSuffix, 'gim'),\n    selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$',\n    colonHostRe = /\\:host/gim,\n    colonHostContextRe = /\\:host-context/gim,\n    /* host name without combinator */\n    polyfillHostNoCombinator = polyfillHost + '-no-combinator',\n    polyfillHostRe = new RegExp(polyfillHost, 'gim'),\n    polyfillHostContextRe = new RegExp(polyfillHostContext, 'gim'),\n    shadowDOMSelectorsRe = [\n      />>>/g,\n      /::shadow/g,\n      /::content/g,\n      // Deprecated selectors\n      /\\/deep\\//g, // former >>>\n      /\\/shadow\\//g, // former ::shadow\n      /\\/shadow-deep\\//g, // former /deep/\n      /\\^\\^/g,     // former /shadow/\n      /\\^(?!=)/g   // former /shadow-deep/\n    ];\n", "import {CommonSignals} from '#core/constants/common-signals';\nimport {TickLabel} from '#core/constants/enums';\nimport {insertAfterOrAtStart, waitForBodyOpenPromise} from '#core/dom';\nimport {setStyles} from '#core/dom/style';\nimport {rethrowAsync} from '#core/error';\nimport {map} from '#core/types/object';\n\nimport {Services} from '#service';\n\nimport {dev, devAssert} from '#utils/log';\n\nimport {waitForServices} from './render-delaying-services';\nimport {getAmpdoc} from './service-helpers';\n\nconst TRANSFORMER_PROP = '__AMP_CSS_TR';\nconst STYLE_MAP_PROP = '__AMP_CSS_SM';\n\n/**\n * Adds the given css text to the given ampdoc.\n *\n * The style tags will be at the beginning of the head before all author\n * styles. One element can be the main runtime CSS. This is guaranteed\n * to always be the first stylesheet in the doc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc The ampdoc that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are available.\n *     Not using a promise, because this is synchronous when possible.\n *     for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\nexport function installStylesForDoc(\n  ampdoc,\n  cssText,\n  cb,\n  opt_isRuntimeCss,\n  opt_ext\n) {\n  const cssRoot = ampdoc.getHeadNode();\n  const style = insertStyleElement(\n    cssRoot,\n    maybeTransform(cssRoot, cssText),\n    opt_isRuntimeCss || false,\n    opt_ext || null\n  );\n\n  if (cb) {\n    const rootNode = ampdoc.getRootNode();\n    // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n    if (styleLoaded(rootNode, style)) {\n      cb(style);\n      return style;\n    }\n    // Poll until styles are available.\n    const interval = setInterval(() => {\n      if (styleLoaded(rootNode, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n  return style;\n}\n\n/**\n * Creates the properly configured style element.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @param {boolean} isRuntimeCss\n * @param {?string} ext\n * @return {!Element}\n */\nfunction insertStyleElement(cssRoot, cssText, isRuntimeCss, ext) {\n  let styleMap = cssRoot[STYLE_MAP_PROP];\n  if (!styleMap) {\n    styleMap = cssRoot[STYLE_MAP_PROP] = map();\n  }\n\n  const isExtCss =\n    !isRuntimeCss && ext && ext != 'amp-custom' && ext != 'amp-keyframes';\n  const key = isRuntimeCss\n    ? 'amp-runtime'\n    : isExtCss\n    ? `amp-extension=${ext}`\n    : null;\n\n  // Check if it has already been created or discovered.\n  if (key) {\n    const existing = getExistingStyleElement(cssRoot, styleMap, key);\n    if (existing) {\n      if (existing.textContent !== cssText) {\n        existing.textContent = cssText;\n      }\n      return existing;\n    }\n  }\n\n  // Create the new style element and append to cssRoot.\n  const doc = cssRoot.ownerDocument || cssRoot;\n  const style = doc.createElement('style');\n  style./*OK*/ textContent = cssText;\n  let afterElement = null;\n  // Make sure that we place style tags after the main runtime CSS. Otherwise\n  // the order is random.\n  if (isRuntimeCss) {\n    style.setAttribute('amp-runtime', '');\n  } else if (isExtCss) {\n    style.setAttribute('amp-extension', ext || '');\n    afterElement = dev().assertElement(\n      getExistingStyleElement(cssRoot, styleMap, 'amp-runtime')\n    );\n  } else {\n    if (ext) {\n      style.setAttribute(ext, '');\n    }\n    afterElement = cssRoot.lastChild;\n  }\n  insertAfterOrAtStart(cssRoot, style, afterElement);\n  if (key) {\n    styleMap[key] = style;\n  }\n  return style;\n}\n\n/**\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {!Object<string, !Element>} styleMap\n * @param {string} key\n * @return {?Element}\n */\nfunction getExistingStyleElement(cssRoot, styleMap, key) {\n  // Already cached.\n  if (styleMap[key]) {\n    return styleMap[key];\n  }\n  // Check if the style has already been added by the server layout.\n  const existing = cssRoot./*OK*/ querySelector(`style[${key}]`);\n  if (existing) {\n    styleMap[key] = existing;\n    return existing;\n  }\n  // Nothing found.\n  return null;\n}\n\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {function(string):string} transformer\n */\nexport function installCssTransformer(cssRoot, transformer) {\n  cssRoot[TRANSFORMER_PROP] = transformer;\n}\n\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @return {string}\n */\nfunction maybeTransform(cssRoot, cssText) {\n  const transformer = cssRoot[TRANSFORMER_PROP];\n  return transformer ? transformer(cssText) : cssText;\n}\n\n/** @private {boolean} */\nlet bodyMadeVisible = false;\n\n/**\n * @param {boolean} value\n * @visibleForTesting\n */\nexport function setBodyMadeVisibleForTesting(value) {\n  bodyMadeVisible = value;\n}\n\n/**\n * Sets the document's body opacity to 1.\n * If the body is not yet available (because our script was loaded\n * synchronously), polls until it is.\n * @param {!Document} doc The document who's body we should make visible.\n */\nexport function makeBodyVisible(doc) {\n  devAssert(doc.defaultView, 'Passed in document must have a defaultView');\n  const win = /** @type {!Window} */ (doc.defaultView);\n  waitForBodyOpenPromise(doc)\n    .then(() => {\n      return waitForServices(win);\n    })\n    .catch((reason) => {\n      rethrowAsync(reason);\n      return [];\n    })\n    .then((services) => {\n      bodyMadeVisible = true;\n      if (INI_LOAD_INOB) {\n        // Force sync measurement to ensure that style recalc is complete\n        // before showing body, which would trigger FCP. This should reduce\n        // make it less likely that a CLS would be triggered after FCP.\n        doc.body./*OK*/ getBoundingClientRect();\n      }\n      setBodyVisibleStyles(doc);\n      const ampdoc = getAmpdoc(doc);\n      ampdoc.signals().signal(CommonSignals.RENDER_START);\n      if (services.length > 0) {\n        const resources = Services.resourcesForDoc(doc.documentElement);\n        resources./*OK*/ schedulePass(1, /* relayoutAll */ true);\n      }\n      try {\n        const perf = Services.performanceFor(win);\n        perf.tick(TickLabel.MAKE_BODY_VISIBLE);\n        perf.flush();\n      } catch (e) {}\n    });\n}\n\n/**\n * Set the document's body opacity to 1. Called in error cases.\n * @param {!Document} doc The document who's body we should make visible.\n */\nexport function makeBodyVisibleRecovery(doc) {\n  devAssert(doc.defaultView, 'Passed in document must have a defaultView');\n  if (bodyMadeVisible) {\n    return;\n  }\n  bodyMadeVisible = true;\n  setBodyVisibleStyles(doc);\n}\n\n/**\n * Make sure that body exists, and make it visible.\n * @param {!Document} doc\n */\nfunction setBodyVisibleStyles(doc) {\n  setStyles(dev().assertElement(doc.body), {\n    opacity: 1,\n    visibility: 'visible',\n    'animation': 'none',\n  });\n}\n\n/**\n * Indicates that the body is always visible. For instance, in case of PWA.\n * This check is on a module level variable, and could be problematic if you are\n * relying on this function across different binaries.\n * @param {!Window} unusedWin\n */\nexport function bodyAlwaysVisible(unusedWin) {\n  bodyMadeVisible = true;\n}\n\n/**\n * Checks whether a style element was registered in the DOM.\n * @param {!Document|!ShadowRoot} doc\n * @param {!Element} style\n * @return {boolean}\n */\nfunction styleLoaded(doc, style) {\n  const sheets = doc.styleSheets;\n  for (let i = 0; i < sheets.length; i++) {\n    const sheet = sheets[i];\n    if (sheet.ownerNode == style) {\n      return true;\n    }\n  }\n  return false;\n}\n", "import {devAssert} from '#core/assert';\nimport {iterateCursor, removeElement} from '#core/dom';\nimport {childElementsByTag} from '#core/dom/query';\n\nimport {Services} from '#service';\n\nimport {dev} from '#utils/log';\n\n/**\n * Takes as an input a text stream, parses it and incrementally reconstructs\n * it in the new target root.\n *\n * See https://jakearchibald.com/2016/fun-hacks-faster-content/ for more\n * details.\n *\n * @interface\n * @extends {WritableStreamDefaultWriter}\n * @visibleForTesting\n */\nexport class DomWriter {\n  /**\n   * Sets the callback that will be called when body has been parsed.\n   *\n   * For shadow use case, unlike most of other nodes, `<body>` cannot be simply\n   * merged to support Shadow DOM polyfill where the use of `<body>`\n   * element is not possible.\n   *\n   * The callback will be given the parsed document and it must return back\n   * the reconstructed `<body>` node in the target DOM where all children\n   * will be streamed into.\n   *\n   * @param {function(!Document):!Element} unusedCallback\n   */\n  onBody(unusedCallback) {}\n\n  /**\n   * Sets the callback that will be called when new nodes have been merged\n   * into the target DOM.\n   * @param {function()} unusedCallback\n   */\n  onBodyChunk(unusedCallback) {}\n\n  /**\n   * Sets the callback that will be called when the DOM has been fully\n   * constructed.\n   * @param {function()} unusedCallback\n   */\n  onEnd(unusedCallback) {}\n}\n\n/**\n * Takes as an input a text stream, parses it and incrementally reconstructs\n * it in the given root.\n *\n * See https://jakearchibald.com/2016/fun-hacks-faster-content/ for more\n * details.\n *\n * @implements {DomWriter}\n * @visibleForTesting\n */\nexport class DomWriterStreamer {\n  /**\n   * @param {!Window} win\n   */\n  constructor(win) {\n    /** @const @private {!Document} */\n    this.parser_ = win.document.implementation.createHTMLDocument('');\n    this.parser_.open();\n\n    /** @const @private */\n    this.vsync_ = Services.vsyncFor(win);\n\n    /** @private @const */\n    this.boundMerge_ = this.merge_.bind(this);\n\n    /** @private {?function(!Document):!Element} */\n    this.onBody_ = null;\n\n    /** @private {?function()} */\n    this.onBodyChunk_ = null;\n\n    /** @private {?function()} */\n    this.onEnd_ = null;\n\n    /** @private {boolean} */\n    this.mergeScheduled_ = false;\n\n    /** @const @private {!Promise} */\n    this.success_ = Promise.resolve();\n\n    /** @private {boolean} */\n    this.eof_ = false;\n\n    /** @private {?Element} */\n    this.targetBody_ = null;\n  }\n\n  /** @override */\n  onBody(callback) {\n    this.onBody_ = callback;\n  }\n\n  /** @override */\n  onBodyChunk(callback) {\n    this.onBodyChunk_ = callback;\n  }\n\n  /** @override */\n  onEnd(callback) {\n    this.onEnd_ = callback;\n  }\n\n  /** @override */\n  write(chunk) {\n    if (this.eof_) {\n      throw new Error('closed already');\n    }\n    if (chunk) {\n      this.parser_.write(/** @type {string} */ (chunk));\n    }\n    this.schedule_();\n    return this.success_;\n  }\n\n  /** @override */\n  close() {\n    this.parser_.close();\n    this.eof_ = true;\n    this.schedule_();\n    return this.success_;\n  }\n\n  /** @override */\n  abort(unusedReason) {\n    throw new Error('Not implemented');\n  }\n\n  /** @override */\n  releaseLock() {\n    throw new Error('Not implemented');\n  }\n\n  /** @override */\n  get closed() {\n    throw new Error('Not implemented');\n  }\n\n  /** @override */\n  get desiredSize() {\n    throw new Error('Not implemented');\n  }\n\n  /** @override */\n  get ready() {\n    throw new Error('Not implemented');\n  }\n\n  /** @private */\n  schedule_() {\n    devAssert(this.onBody_ && this.onBodyChunk_ && this.onEnd_);\n    if (!this.mergeScheduled_) {\n      this.mergeScheduled_ = true;\n      this.vsync_.mutate(this.boundMerge_);\n    }\n  }\n\n  /** @private */\n  merge_() {\n    this.mergeScheduled_ = false;\n\n    // Body has been newly parsed.\n    if (!this.targetBody_ && this.parser_.body) {\n      this.targetBody_ = this.onBody_(this.parser_);\n    }\n\n    // Merge body children.\n    if (this.targetBody_) {\n      const inputBody = dev().assertElement(this.parser_.body);\n      const targetBody = devAssert(this.targetBody_);\n      let transferCount = 0;\n      removeNoScriptElements(inputBody);\n      while (inputBody.firstChild) {\n        transferCount++;\n        targetBody.appendChild(inputBody.firstChild);\n      }\n      if (transferCount > 0) {\n        this.onBodyChunk_();\n      }\n    }\n\n    // EOF.\n    if (this.eof_) {\n      this.onEnd_();\n    }\n  }\n}\n\n/**\n * Takes as an input a text stream, aggregates it and parses it in one bulk.\n * This is a workaround against the browsers that do not support streaming DOM\n * parsing. Mainly currently Firefox.\n *\n * See https://github.com/whatwg/html/issues/2827 and\n * https://bugzilla.mozilla.org/show_bug.cgi?id=867102\n *\n * @implements {DomWriter}\n * @visibleForTesting\n */\nexport class DomWriterBulk {\n  /**\n   * @param {!Window} win\n   */\n  constructor(win) {\n    /** @private {!Array<string>} */\n    this.fullHtml_ = [];\n\n    /** @const @private */\n    this.vsync_ = Services.vsyncFor(win);\n\n    /** @private {?function(!Document):!Element} */\n    this.onBody_ = null;\n\n    /** @private {?function()} */\n    this.onBodyChunk_ = null;\n\n    /** @private {?function()} */\n    this.onEnd_ = null;\n\n    /** @const @private {!Promise} */\n    this.success_ = Promise.resolve();\n\n    /** @private {boolean} */\n    this.eof_ = false;\n  }\n\n  /** @override */\n  onBody(callback) {\n    this.onBody_ = callback;\n  }\n\n  /** @override */\n  onBodyChunk(callback) {\n    this.onBodyChunk_ = callback;\n  }\n\n  /** @override */\n  onEnd(callback) {\n    this.onEnd_ = callback;\n  }\n\n  /** @override */\n  write(chunk) {\n    devAssert(this.onBody_ && this.onBodyChunk_ && this.onEnd_);\n    if (this.eof_) {\n      throw new Error('closed already');\n    }\n    if (chunk) {\n      this.fullHtml_.push(dev().assertString(chunk));\n    }\n    return this.success_;\n  }\n\n  /** @override */\n  close() {\n    devAssert(this.onBody_ && this.onBodyChunk_ && this.onEnd_);\n    this.eof_ = true;\n    this.vsync_.mutate(() => this.complete_());\n    return this.success_;\n  }\n\n  /** @override */\n  abort(unusedReason) {\n    throw new Error('Not implemented');\n  }\n\n  /** @override */\n  releaseLock() {\n    throw new Error('Not implemented');\n  }\n\n  /** @override */\n  get closed() {\n    throw new Error('Not implemented');\n  }\n\n  /** @override */\n  get desiredSize() {\n    throw new Error('Not implemented');\n  }\n\n  /** @override */\n  get ready() {\n    throw new Error('Not implemented');\n  }\n\n  /** @private */\n  complete_() {\n    const fullHtml = this.fullHtml_.join('');\n    const doc = new DOMParser().parseFromString(fullHtml, 'text/html');\n\n    // Merge body.\n    if (doc.body) {\n      const inputBody = doc.body;\n      const targetBody = this.onBody_(doc);\n      let transferCount = 0;\n      removeNoScriptElements(inputBody);\n      while (inputBody.firstChild) {\n        transferCount++;\n        targetBody.appendChild(inputBody.firstChild);\n      }\n      if (transferCount > 0) {\n        this.onBodyChunk_();\n      }\n    }\n\n    // EOF.\n    this.onEnd_();\n  }\n}\n\n/**\n * Remove any noscript elements.\n *\n * According to the spec\n * (https://w3c.github.io/DOM-Parsing/#the-domparser-interface), with\n * `DOMParser().parseFromString`, contents of `noscript` get parsed as markup,\n * so we need to remove them manually. Why? \u00AF\\_(\u30C4)_/\u00AF `createHTMLDocument()`\n * seems to behave the same way.\n *\n * @param {!Element} parent\n */\nexport function removeNoScriptElements(parent) {\n  const noscriptElements = childElementsByTag(parent, 'noscript');\n  iterateCursor(noscriptElements, (element) => {\n    removeElement(element);\n  });\n}\n", "import {iterateCursor} from '#core/dom';\nimport {escapeCssSelectorIdent} from '#core/dom/css-selectors';\nimport {setInitialDisplay, setStyle} from '#core/dom/style';\nimport {\n  ShadowDomVersion,\n  getShadowDomSupportedVersion,\n  isShadowCssSupported,\n} from '#core/dom/web-components';\nimport {toArray} from '#core/types/array';\nimport {getWin, toWin} from '#core/window';\n\nimport {Services} from '#service';\n\nimport {dev, devAssert} from '#utils/log';\n\nimport {ShadowCSS} from '#third_party/webcomponentsjs/ShadowCSS';\n\nimport {installCssTransformer} from './style-installer';\nimport {DomWriterBulk, DomWriterStreamer} from './utils/dom-writer';\n\n/** @const {!RegExp} */\nconst CSS_SELECTOR_BEG_REGEX = /[^\\.\\-\\_0-9a-zA-Z]/;\n\n/** @const {!RegExp} */\nconst CSS_SELECTOR_END_REGEX = /[^\\-\\_0-9a-zA-Z]/;\n\nconst SHADOW_CSS_CACHE = '__AMP_SHADOW_CSS';\n\n/**\n * @type {boolean|undefined}\n */\nlet shadowDomStreamingSupported;\n\n/**\n * Creates a shadow root for the specified host and returns it. Polyfills\n * shadow root creation if necessary.\n * @param {!Element} hostElement\n * @return {!ShadowRoot}\n */\nexport function createShadowRoot(hostElement) {\n  const win = getWin(hostElement);\n\n  const existingRoot = hostElement.shadowRoot || hostElement.__AMP_SHADOW_ROOT;\n  if (existingRoot) {\n    existingRoot./*OK*/ innerHTML = '';\n    return existingRoot;\n  }\n\n  let shadowRoot;\n  const shadowDomSupported = getShadowDomSupportedVersion();\n  if (shadowDomSupported == ShadowDomVersion.V1) {\n    shadowRoot = hostElement.attachShadow({mode: 'open'});\n    if (!shadowRoot.styleSheets) {\n      Object.defineProperty(shadowRoot, 'styleSheets', {\n        get: function () {\n          const items = [];\n          iterateCursor(shadowRoot.childNodes, (child) => {\n            if (child.tagName === 'STYLE') {\n              items.push(child.sheet);\n            }\n          });\n          return items;\n        },\n      });\n    }\n  } else if (shadowDomSupported == ShadowDomVersion.V0) {\n    shadowRoot = hostElement.createShadowRoot();\n  } else {\n    shadowRoot = createShadowRootPolyfill(hostElement);\n  }\n\n  if (!isShadowCssSupported()) {\n    const rootId = `i-amphtml-sd-${win.Math.floor(win.Math.random() * 10000)}`;\n    shadowRoot['id'] = rootId;\n    shadowRoot.host.classList.add(rootId);\n\n    // CSS isolation.\n    installCssTransformer(shadowRoot, (css) => {\n      return transformShadowCss(shadowRoot, css);\n    });\n  }\n\n  return shadowRoot;\n}\n\n/**\n * Shadow root polyfill.\n * @param {!Element} hostElement\n * @return {!ShadowRoot}\n */\nfunction createShadowRootPolyfill(hostElement) {\n  const doc = hostElement.ownerDocument;\n\n  // Host CSS polyfill.\n  hostElement.classList.add('i-amphtml-shadow-host-polyfill');\n  const hostStyle = doc.createElement('style');\n  hostStyle.textContent =\n    '.i-amphtml-shadow-host-polyfill>:not(i-amphtml-shadow-root)' +\n    '{display:none!important}';\n  hostElement.appendChild(hostStyle);\n\n  // Shadow root.\n  const shadowRoot /** @type {!ShadowRoot} */ =\n    // Cast to ShadowRoot even though it is an Element\n    // TODO(@dvoytenko) Consider to switch to a type union instead.\n    /** @type {?}  */ (doc.createElement('i-amphtml-shadow-root'));\n  hostElement.appendChild(shadowRoot);\n  hostElement.__AMP_SHADOW_ROOT = shadowRoot;\n  Object.defineProperty(hostElement, 'shadowRoot', {\n    enumerable: true,\n    configurable: true,\n    value: shadowRoot,\n  });\n\n  // API: https://www.w3.org/TR/shadow-dom/#the-shadowroot-interface\n\n  shadowRoot.host = hostElement;\n\n  // `getElementById` is resolved via `querySelector('#id')`.\n  shadowRoot.getElementById = function (id) {\n    const escapedId = escapeCssSelectorIdent(id);\n    return /** @type {?HTMLElement} */ (\n      shadowRoot./*OK*/ querySelector(`#${escapedId}`)\n    );\n  };\n\n  // The styleSheets property should have a list of local styles.\n  Object.defineProperty(shadowRoot, 'styleSheets', {\n    get: () => {\n      if (!doc.styleSheets) {\n        return [];\n      }\n      return toArray(doc.styleSheets).filter((styleSheet) =>\n        shadowRoot.contains(styleSheet.ownerNode)\n      );\n    },\n  });\n\n  return shadowRoot;\n}\n\n/**\n * Imports a body into a shadow root with the workaround for a polyfill case.\n * @param {!ShadowRoot} shadowRoot\n * @param {!Element} body\n * @param {boolean} deep\n * @return {!Element}\n */\nexport function importShadowBody(shadowRoot, body, deep) {\n  const doc = shadowRoot.ownerDocument;\n  let resultBody;\n  if (isShadowCssSupported()) {\n    resultBody = dev().assertElement(doc.importNode(body, deep));\n  } else {\n    resultBody = doc.createElement('amp-body');\n    setInitialDisplay(resultBody, 'block');\n    for (let i = 0; i < body.attributes.length; i++) {\n      resultBody.setAttribute(\n        body.attributes[0].name,\n        body.attributes[0].value\n      );\n    }\n    if (deep) {\n      for (let n = body.firstChild; !!n; n = n.nextSibling) {\n        resultBody.appendChild(doc.importNode(n, true));\n      }\n    }\n  }\n  setStyle(resultBody, 'position', 'relative');\n  const oldBody = shadowRoot['body'];\n  if (oldBody) {\n    shadowRoot.removeChild(oldBody);\n  }\n  shadowRoot.appendChild(resultBody);\n  Object.defineProperty(shadowRoot, 'body', {\n    configurable: true,\n    value: resultBody,\n  });\n  return resultBody;\n}\n\n/**\n * If necessary, transforms CSS to isolate AMP CSS within the shaodw root and\n * reduce the possibility of high-level conflicts.\n * @param {!ShadowRoot} shadowRoot\n * @param {string} css\n * @return {string}\n */\nexport function transformShadowCss(shadowRoot, css) {\n  return scopeShadowCss(shadowRoot, css);\n}\n\n/**\n * Transforms CSS to isolate AMP CSS within the shadow root and reduce the\n * possibility of high-level conflicts. There are two types of transformations:\n * 1. Root transformation: `body` -> `amp-body`, etc.\n * 2. Scoping: `a {}` -> `.i-amphtml-sd-123 a {}`.\n *\n * @param {!ShadowRoot} shadowRoot\n * @param {string} css\n * @return {string}\n * @visibleForTesting\n */\nexport function scopeShadowCss(shadowRoot, css) {\n  const id = devAssert(shadowRoot['id']);\n  const doc = shadowRoot.ownerDocument;\n  let rules = null;\n  // Try to use a separate document.\n  try {\n    rules = getStylesheetRules(doc.implementation.createHTMLDocument(''), css);\n  } catch (e) {\n    // Ignore.\n  }\n  // Try to use the current document.\n  if (!rules) {\n    try {\n      rules = getStylesheetRules(doc, css);\n    } catch (e) {\n      // Ignore.\n    }\n  }\n\n  // No rules could be parsed - return css as is.\n  if (!rules) {\n    return css;\n  }\n\n  // Patch selectors.\n  // Invoke `ShadowCSS.scopeRules` via `call` because the way it uses `this`\n  // internally conflicts with Closure compiler's advanced optimizations.\n  const {scopeRules} = ShadowCSS;\n  return scopeRules.call(ShadowCSS, rules, `.${id}`, transformRootSelectors);\n}\n\n/**\n * Replaces top-level selectors such as `html` and `body` with their polyfill\n * counterparts: `amp-html` and `amp-body`.\n * @param {string} selector\n * @return {string}\n */\nfunction transformRootSelectors(selector) {\n  return selector.replace(/(html|body)/g, rootSelectorPrefixer);\n}\n\n/**\n * See `transformRootSelectors`.\n * @param {string} match\n * @param {string} name\n * @param {number} pos\n * @param {string} selector\n * @return {string}\n * @private\n */\nfunction rootSelectorPrefixer(match, name, pos, selector) {\n  const prev = selector.charAt(pos - 1);\n  const next = selector.charAt(pos + match.length);\n  if (\n    (!prev || CSS_SELECTOR_BEG_REGEX.test(prev)) &&\n    (!next || CSS_SELECTOR_END_REGEX.test(next))\n  ) {\n    return 'amp-' + match;\n  }\n  return match;\n}\n\n/**\n * @param {!Document} doc\n * @param {string} css\n * @return {?CSSRuleList}\n */\nfunction getStylesheetRules(doc, css) {\n  const style = /** @type {!HTMLStyleElement} */ (doc.createElement('style'));\n  style./*OK*/ textContent = css;\n  try {\n    (doc.head || doc.documentElement).appendChild(style);\n    if (style.sheet) {\n      return /** @type {!CSSStyleSheet} */ (style.sheet).cssRules;\n    }\n    return null;\n  } finally {\n    if (style.parentNode) {\n      style.parentNode.removeChild(style);\n    }\n  }\n}\n\n/**\n * @param {!ShadowRoot} shadowRoot\n * @param {string} name\n * @param {string} cssText\n */\nexport function installShadowStyle(shadowRoot, name, cssText) {\n  const doc = shadowRoot.ownerDocument;\n  const win = toWin(doc.defaultView);\n  if (\n    shadowRoot.adoptedStyleSheets !== undefined &&\n    win.CSSStyleSheet.prototype.replaceSync !== undefined\n  ) {\n    const cache = win[SHADOW_CSS_CACHE] || (win[SHADOW_CSS_CACHE] = {});\n    let styleSheet = cache[name];\n    if (!styleSheet) {\n      styleSheet = new win.CSSStyleSheet();\n      styleSheet.replaceSync(cssText);\n      cache[name] = styleSheet;\n    }\n    shadowRoot.adoptedStyleSheets =\n      shadowRoot.adoptedStyleSheets.concat(styleSheet);\n  } else {\n    const styleEl = doc.createElement('style');\n    styleEl.setAttribute('data-name', name);\n    styleEl.textContent = cssText;\n    shadowRoot.appendChild(styleEl);\n  }\n}\n\n/**\n * @param {!Window} win\n * @visibleForTesting\n */\nexport function resetShadowStyleCacheForTesting(win) {\n  win[SHADOW_CSS_CACHE] = null;\n}\n\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\nexport function setShadowDomStreamingSupportedForTesting(val) {\n  shadowDomStreamingSupported = val;\n}\n\n/**\n * Returns `true` if the Shadow DOM streaming is supported.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isShadowDomStreamingSupported(win) {\n  if (shadowDomStreamingSupported === undefined) {\n    shadowDomStreamingSupported = calcShadowDomStreamingSupported(win);\n  }\n  return shadowDomStreamingSupported;\n}\n\n/**\n * @param {!Window} win\n * @return {boolean}\n */\nfunction calcShadowDomStreamingSupported(win) {\n  // API must be supported.\n  if (\n    !win.document.implementation ||\n    typeof win.document.implementation.createHTMLDocument != 'function'\n  ) {\n    return false;\n  }\n  // Firefox does not support DOM streaming.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=867102\n  if (Services.platformFor(win).isFirefox()) {\n    return false;\n  }\n  // Assume full streaming support.\n  return true;\n}\n\n/**\n * Creates the Shadow DOM writer available on this platform.\n * @param {!Window} win\n * @return {!./utils/dom-writer.DomWriter}\n */\nexport function createShadowDomWriter(win) {\n  if (isShadowDomStreamingSupported(win)) {\n    return new DomWriterStreamer(win);\n  }\n  return new DomWriterBulk(win);\n}\n", "import {CommonSignals} from '#core/constants/common-signals';\nimport {VisibilityState} from '#core/constants/visibility-state';\nimport {isConnectedNode} from '#core/dom';\nimport {childElementsByTag} from '#core/dom/query';\nimport {setStyle} from '#core/dom/style';\nimport {isArray, isObject} from '#core/types';\n\nimport {Services} from '#service';\nimport {parseExtensionUrl} from '#service/extension-script';\n\nimport {dev, user} from '#utils/log';\n\nimport {getMode} from './mode';\nimport {\n  disposeServicesForDoc,\n  getServicePromiseOrNullForDoc,\n} from './service-helpers';\nimport {\n  createShadowDomWriter,\n  createShadowRoot,\n  importShadowBody,\n} from './shadow-embed';\nimport {installStylesForDoc} from './style-installer';\nimport {parseUrlDeprecated} from './url';\n\n/** @const @private {string} */\nconst TAG = 'multidoc-manager';\n\n/**\n * A manager for documents in the multi-doc environment.\n */\nexport class MultidocManager {\n  /**\n   * @param {!Window} win\n   * @param {!./service/ampdoc-impl.AmpDocService} ampdocService\n   * @param {!./service/extensions-impl.Extensions} extensions\n   * @param {!./service/timer-impl.Timer} timer\n   */\n  constructor(win, ampdocService, extensions, timer) {\n    /** @const */\n    this.win = win;\n    /** @private @const */\n    this.ampdocService_ = ampdocService;\n    /** @private @const */\n    this.extensions_ = extensions;\n    /** @private @const */\n    this.timer_ = timer;\n\n    /** @private @const {!Array<!ShadowRoot>} */\n    this.shadowRoots_ = [];\n  }\n\n  /**\n   * Attaches the shadow root and calls the supplied DOM builder.\n   * @param {!Element} hostElement\n   * @param {string} url\n   * @param {!Object<string, string>|undefined} params\n   * @param {function(!Object, !ShadowRoot,\n   * !./service/ampdoc-impl.AmpDocShadow):!Promise} builder\n   * @return {!./runtime.ShadowDoc}\n   * @private\n   */\n  attachShadowDoc_(hostElement, url, params, builder) {\n    params = params || Object.create(null);\n    this.purgeShadowRoots_();\n\n    setStyle(hostElement, 'visibility', 'hidden');\n    const shadowRoot = createShadowRoot(hostElement);\n\n    // TODO: closeShadowRoot_ is asynchronous. While this safety check is well\n    // intentioned, it leads to a race between unlayout and layout of custom\n    // elements.\n    if (shadowRoot.AMP) {\n      user().warn(TAG, \"Shadow doc wasn't previously closed\");\n      this.closeShadowRoot_(shadowRoot);\n    }\n\n    const amp = {};\n    shadowRoot.AMP = amp;\n    amp.url = url;\n    const {origin} = parseUrlDeprecated(url);\n\n    const ampdoc = this.ampdocService_.installShadowDoc(url, shadowRoot, {\n      params,\n    });\n    /** @const {!./service/ampdoc-impl.AmpDocShadow} */\n    amp.ampdoc = ampdoc;\n    dev().fine(TAG, 'Attach to shadow root:', shadowRoot, ampdoc);\n\n    // Install runtime CSS.\n    installStylesForDoc(\n      ampdoc,\n      AMP.combinedCss,\n      /* callback */ null,\n      /* opt_isRuntimeCss */ true\n    );\n    // Instal doc services.\n    AMP.installAmpdocServices(ampdoc);\n\n    const viewer = Services.viewerForDoc(ampdoc);\n\n    /**\n     * Sets the document's visibility state.\n     * @param {!VisibilityState} state\n     */\n    amp['setVisibilityState'] = function (state) {\n      ampdoc.overrideVisibilityState(state);\n    };\n\n    // Messaging pipe.\n    /**\n     * Posts message to the ampdoc.\n     * @param {string} eventType\n     * @param {!JsonObject} data\n     * @param {boolean} unusedAwaitResponse\n     * @return {(!Promise<*>|undefined)}\n     */\n    amp['postMessage'] = viewer.receiveMessage.bind(viewer);\n\n    /** @type {?function(string, *, boolean):(!Promise<*>|undefined)|undefined} */\n    let onMessage;\n\n    /**\n     * Provides a message delivery mechanism by which AMP document can send\n     * messages to the viewer.\n     * @param {?function(string, *, boolean):(!Promise<*>|undefined)} callback\n     */\n    amp['onMessage'] = function (callback) {\n      onMessage = callback;\n    };\n\n    viewer.setMessageDeliverer((eventType, data, awaitResponse) => {\n      // Special messages.\n      if (eventType == 'broadcast') {\n        this.broadcast_(data, shadowRoot);\n        return awaitResponse ? Promise.resolve() : undefined;\n      }\n\n      // All other messages.\n      return onMessage?.(eventType, data, awaitResponse);\n    }, origin);\n\n    /**\n     * Closes the document, resolving when visibility changes and services have\n     * been cleand up. The document can no longer be activated again.\n     * @return {Promise}\n     */\n    amp['close'] = () => {\n      return this.closeShadowRoot_(shadowRoot);\n    };\n\n    if (getMode().development) {\n      amp.toggleRuntime = viewer.toggleRuntime.bind(viewer);\n      amp.resources = Services.resourcesForDoc(ampdoc);\n    }\n\n    /**\n     * Expose amp-bind getState\n     * @param {string} name - Name of state or deep state\n     * @return {Promise<*>} - Resolves to a copy of the value of a state\n     */\n    amp['getState'] = (name) => {\n      return Services.bindForDocOrNull(shadowRoot).then((bind) => {\n        if (!bind) {\n          return Promise.reject('amp-bind is not available in this document');\n        }\n        return bind.getState(name);\n      });\n    };\n\n    /**\n     * Expose amp-bind setState\n     * @param {(!JsonObject|string)} state - State to be set\n     * @return {Promise} - Resolves after state and history have been updated\n     */\n    amp['setState'] = (state) => {\n      return Services.bindForDocOrNull(shadowRoot).then((bind) => {\n        if (!bind) {\n          return Promise.reject('amp-bind is not available in this document');\n        }\n        if (typeof state === 'string') {\n          return bind.setStateWithExpression(\n            /** @type {string} */ (state),\n            /** @type {!JsonObject} */ ({})\n          );\n        } else if (isObject(state) || isArray(state)) {\n          return bind.setStateWithObject(/** @type {!JsonObject} */ (state));\n        }\n        return Promise.reject('Invalid state');\n      });\n    };\n\n    // Start building the shadow doc DOM.\n    builder(amp, shadowRoot, ampdoc).then(() => {\n      // Document is ready.\n      ampdoc.setReady();\n      ampdoc.signals().signal(CommonSignals.RENDER_START);\n      setStyle(hostElement, 'visibility', 'visible');\n    });\n\n    // Store reference.\n    if (!this.shadowRoots_.includes(shadowRoot)) {\n      this.shadowRoots_.push(shadowRoot);\n    }\n\n    dev().fine(TAG, 'Shadow root initialization is done:', shadowRoot, ampdoc);\n    return amp;\n  }\n\n  /**\n   * Implementation for `attachShadowDoc` function. Attaches the shadow doc and\n   * configures ampdoc for it.\n   * @param {!Element} hostElement\n   * @param {!Document} doc\n   * @param {string} url\n   * @param {!Object<string, string>=} opt_initParams\n   * @return {!./runtime.ShadowDoc}\n   */\n  attachShadowDoc(hostElement, doc, url, opt_initParams) {\n    user().assertString(url);\n    dev().fine(TAG, 'Attach shadow doc:', doc);\n    // TODO(dvoytenko, #9490): once stable, port full document case to emulated\n    // stream.\n    return this.attachShadowDoc_(\n      hostElement,\n      url,\n      opt_initParams,\n      (amp, shadowRoot, ampdoc) => {\n        // Install extensions.\n        this.mergeShadowHead_(ampdoc, shadowRoot, doc);\n\n        // Append body.\n        if (doc.body) {\n          const body = importShadowBody(shadowRoot, doc.body, /* deep */ true);\n          body.classList.add('amp-shadow');\n          ampdoc.setBody(body);\n        }\n\n        // TODO(dvoytenko): find a better and more stable way to make content\n        // visible. E.g. integrate with dynamic classes. In shadow case\n        // specifically, we have to wait for stubbing to complete, which may\n        // take awhile due to importNode.\n        setTimeout(() => {\n          ampdoc.signals().signal(CommonSignals.RENDER_START);\n          setStyle(hostElement, 'visibility', 'visible');\n        }, 50);\n\n        return Promise.resolve();\n      }\n    );\n  }\n\n  /**\n   * Implementation for `attachShadowDocAsStream` function. Attaches the shadow\n   * doc and configures ampdoc for it.\n   * @param {!Element} hostElement\n   * @param {string} url\n   * @param {!Object<string, string>=} opt_initParams\n   * @return {!Object}\n   */\n  attachShadowDocAsStream(hostElement, url, opt_initParams) {\n    user().assertString(url);\n    dev().fine(TAG, 'Attach shadow doc as stream');\n    return this.attachShadowDoc_(\n      hostElement,\n      url,\n      opt_initParams,\n      (amp, shadowRoot, ampdoc) => {\n        // Start streaming.\n        let renderStarted = false;\n        const writer = createShadowDomWriter(this.win);\n        amp['writer'] = writer;\n        writer.onBody((doc) => {\n          // Install extensions.\n          this.mergeShadowHead_(ampdoc, shadowRoot, doc);\n\n          // Append shallow body.\n          const body = importShadowBody(\n            shadowRoot,\n            dev().assertElement(doc.body),\n            /* deep */ false\n          );\n          body.classList.add('amp-shadow');\n          ampdoc.setBody(body);\n          return body;\n        });\n        writer.onBodyChunk(() => {\n          // TODO(dvoytenko): find a better and more stable way to make\n          // content visible. E.g. integrate with dynamic classes. In shadow\n          // case specifically, we have to wait for stubbing to complete,\n          // which may take awhile due to node importing.\n          if (!renderStarted) {\n            renderStarted = true;\n            setTimeout(() => {\n              ampdoc.signals().signal(CommonSignals.RENDER_START);\n              setStyle(hostElement, 'visibility', 'visible');\n            }, 50);\n          }\n        });\n        return new Promise((resolve) => {\n          writer.onEnd(() => {\n            resolve();\n            amp.writer = null;\n          });\n        });\n      }\n    );\n  }\n\n  /**\n   * Processes the contents of the shadow document's head.\n   * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n   * @param {!ShadowRoot} shadowRoot\n   * @param {!Document} doc\n   * @private\n   */\n  mergeShadowHead_(ampdoc, shadowRoot, doc) {\n    if (doc.head) {\n      shadowRoot.AMP.head = doc.head;\n      const parentLinks = {};\n      const links = childElementsByTag(\n        dev().assertElement(this.win.document.head),\n        'link'\n      );\n      for (let i = 0; i < links.length; i++) {\n        const href = links[i].getAttribute('href');\n        if (href) {\n          parentLinks[href] = true;\n        }\n      }\n\n      for (let n = doc.head.firstElementChild; n; n = n.nextElementSibling) {\n        const {tagName} = n;\n        const name = n.getAttribute('name');\n        const rel = n.getAttribute('rel');\n        switch (tagName) {\n          case 'TITLE':\n            shadowRoot.AMP.title = n.textContent;\n            dev().fine(TAG, '- set title: ', shadowRoot.AMP.title);\n            break;\n          case 'META':\n            if (n.hasAttribute('charset')) {\n              // Ignore.\n            } else if (name == 'viewport') {\n              // Ignore.\n            } else if (name) {\n              // Store meta name/content pairs.\n              ampdoc.setMetaByName(name, n.getAttribute('content') || '');\n            } else {\n              // TODO(dvoytenko): copy other meta tags.\n              dev().warn(TAG, 'meta ignored: ', n);\n            }\n            break;\n          case 'LINK':\n            /** @const {string} */\n            const href = n.getAttribute('href');\n            if (rel == 'canonical') {\n              shadowRoot.AMP.canonicalUrl = href;\n              dev().fine(TAG, '- set canonical: ', shadowRoot.AMP.canonicalUrl);\n            } else if (rel == 'stylesheet') {\n              // Must be a font definition: no other stylesheets are allowed.\n              if (parentLinks[href]) {\n                dev().fine(TAG, '- stylesheet already included: ', href);\n                // To accomodate icon fonts whose stylesheets include\n                // the class definitions in addition to the font definition,\n                // we re-import the stylesheet into the shadow document.\n                // Note: <link> in shadow mode is not yet fully supported on\n                // all browsers, so we use <style>@import \"url\"</style> instead\n                installStylesForDoc(\n                  ampdoc,\n                  `@import \"${href}\"`,\n                  /* callback */ null,\n                  /* isRuntimeCss */ false\n                );\n              } else {\n                parentLinks[href] = true;\n                const el = this.win.document.createElement('link');\n                el.setAttribute('rel', 'stylesheet');\n                el.setAttribute('type', 'text/css');\n                el.setAttribute('href', href);\n                this.win.document.head.appendChild(el);\n                dev().fine(TAG, '- import font to parent: ', href, el);\n              }\n            } else {\n              dev().fine(TAG, '- ignore link rel=', rel);\n            }\n            break;\n          case 'STYLE':\n            if (n.hasAttribute('amp-boilerplate')) {\n              // Ignore.\n              dev().fine(TAG, '- ignore boilerplate style: ', n);\n            } else if (n.hasAttribute('amp-custom')) {\n              installStylesForDoc(\n                ampdoc,\n                n.textContent,\n                /* callback */ null,\n                /* isRuntimeCss */ false,\n                'amp-custom'\n              );\n              dev().fine(TAG, '- import style: ', n);\n            } else if (n.hasAttribute('amp-keyframes')) {\n              installStylesForDoc(\n                ampdoc,\n                n.textContent,\n                /* callback */ null,\n                /* isRuntimeCss */ false,\n                'amp-keyframes'\n              );\n              dev().fine(TAG, '- import style: ', n);\n            }\n            break;\n          case 'SCRIPT':\n            if (n.hasAttribute('src')) {\n              dev().fine(TAG, '- src script: ', n);\n              const src = n.getAttribute('src');\n              const urlParts = parseExtensionUrl(src);\n              // Note: Some extensions don't have [custom-element] or\n              // [custom-template] e.g. amp-viewer-integration.\n              const customElement = n.getAttribute('custom-element');\n              const customTemplate = n.getAttribute('custom-template');\n              const extensionId = customElement || customTemplate;\n              if (!urlParts) {\n                dev().fine(TAG, '- ignore runtime script: ', src);\n              } else if (extensionId) {\n                // This is an extension.\n                this.extensions_.installExtensionForDoc(\n                  ampdoc,\n                  extensionId,\n                  urlParts.extensionVersion\n                );\n              } else if (!n.hasAttribute('data-amp-report-test')) {\n                user().error(TAG, '- unknown script: ', n, src);\n              }\n            } else {\n              // Non-src version of script.\n              const type = n.getAttribute('type') || 'application/javascript';\n              if (type.indexOf('javascript') == -1) {\n                shadowRoot.appendChild(this.win.document.importNode(n, true));\n                dev().fine(TAG, '- non-src script: ', n);\n              } else if (!n.hasAttribute('amp-onerror')) {\n                // Don't error on amp-onerror script (https://github.com/ampproject/amphtml/issues/31966)\n                user().error(TAG, '- unallowed inline javascript: ', n);\n              }\n            }\n            break;\n          case 'NOSCRIPT':\n            // Ignore.\n            break;\n          default:\n            user().error(TAG, '- UNKNOWN head element:', n);\n            break;\n        }\n      }\n    }\n    ampdoc.setExtensionsKnown();\n  }\n\n  /**\n   * @param {*} data\n   * @param {!ShadowRoot} sender\n   * @private\n   */\n  broadcast_(data, sender) {\n    this.purgeShadowRoots_();\n    this.shadowRoots_.forEach((shadowRoot) => {\n      if (shadowRoot == sender) {\n        // Don't broadcast to the sender.\n        return;\n      }\n      // Broadcast message asynchronously.\n      const viewer = Services.viewerForDoc(shadowRoot.AMP.ampdoc);\n      this.timer_.delay(() => {\n        viewer.receiveMessage(\n          'broadcast',\n          /** @type {!JsonObject} */ (data),\n          /* awaitResponse */ false\n        );\n      }, 0);\n    });\n  }\n\n  /**\n   * @param {!ShadowRoot} shadowRoot\n   * @return {Promise}\n   * @private\n   */\n  closeShadowRoot_(shadowRoot) {\n    this.removeShadowRoot_(shadowRoot);\n    const amp = shadowRoot.AMP;\n    delete shadowRoot.AMP;\n    const {ampdoc} = amp;\n    ampdoc.overrideVisibilityState(VisibilityState.INACTIVE);\n    disposeServicesForDoc(ampdoc);\n\n    // There is a race between the visibility state change finishing and\n    // resources.onNextPass firing, but this is intentional. closeShadowRoot_\n    // was traditionally introduced as a synchronous method, so PWAs in the wild\n    // do not expect to have to wait for a promise to resolve before the shadow\n    // is deemed 'closed'. Moving .overrideVisibilityState() and\n    // disposeServicesForDoc inside a promise could adversely affect sites that\n    // depend on at least the synchronous portions of those methods completing\n    // before proceeding. The promise race is designed to be very quick so that\n    // even if the pass callback completes before resources.onNextPass is called\n    // below, we only delay promise resolution by a few ms.\n    return this.timer_\n      .timeoutPromise(\n        15, // Delay for queued pass after visibility change is 10ms\n        new this.win.Promise((resolve) => {\n          getServicePromiseOrNullForDoc(ampdoc, 'resources').then(\n            (resources) => {\n              if (resources) {\n                resources.onNextPass(resolve);\n              } else {\n                resolve();\n              }\n            }\n          );\n        }),\n        'Timeout reached waiting for visibility state change callback'\n      )\n      .catch((error) => {\n        user().info(TAG, error);\n      });\n  }\n\n  /**\n   * @param {!ShadowRoot} shadowRoot\n   * @private\n   */\n  removeShadowRoot_(shadowRoot) {\n    const index = this.shadowRoots_.indexOf(shadowRoot);\n    if (index != -1) {\n      this.shadowRoots_.splice(index, 1);\n    }\n  }\n\n  /**\n   * @param {!ShadowRoot} shadowRoot\n   * @private\n   */\n  closeShadowRootAsync_(shadowRoot) {\n    this.timer_.delay(() => {\n      this.closeShadowRoot_(shadowRoot);\n    }, 0);\n  }\n\n  /** @private */\n  purgeShadowRoots_() {\n    this.shadowRoots_.forEach((shadowRoot) => {\n      // The shadow root has been disconnected. Force it closed.\n      if (!shadowRoot.host || !isConnectedNode(shadowRoot.host)) {\n        user().warn(TAG, \"Shadow doc wasn't previously closed\");\n        this.removeShadowRoot_(shadowRoot);\n        this.closeShadowRootAsync_(shadowRoot);\n      }\n    });\n  }\n}\n", "import {VisibilityState} from '#core/constants/visibility-state';\nimport {removeElement} from '#core/dom';\nimport {layoutRectLtwh} from '#core/dom/layout/rect';\nimport {setStyle, toggle} from '#core/dom/style';\nimport {dict} from '#core/types/object';\n\nimport {Services} from '#service';\nimport {installPositionObserverServiceForDoc} from '#service/position-observer/position-observer-impl';\nimport {PositionObserverFidelity} from '#service/position-observer/position-observer-worker';\n\nimport {triggerAnalyticsEvent} from '#utils/analytics';\nimport {dev, devAssert, user, userAssert} from '#utils/log';\n\nimport {CSS} from '../../../build/amp-next-page-0.1.css';\nimport {MultidocManager} from '../../../src/multidoc-manager';\nimport {getAmpdoc} from '../../../src/service-helpers';\nimport {installStylesForDoc} from '../../../src/style-installer';\n\n// TODO(emarchiori): Make this a configurable parameter.\nconst SEPARATOR_RECOS = 3;\n\nconst MAX_ARTICLES = 2;\n\nconst PRERENDER_VIEWPORT_COUNT = 3;\n\nconst TAG = 'amp-next-page';\n\n/**\n * @typedef {{\n *   ampUrl: string,\n *   amp: (?../../../src/runtime.ShadowDoc | undefined),\n *   recUnit: {el: ?Element, isObserving: boolean},\n *   cancelled: boolean\n * }}\n */\nexport let DocumentRef;\n\n/**\n * Window-scoped service to handle the amp-next-page lifecycle. Handles all\n * events and page lifecycle for the first {@code AmpNextPage} element\n * registered. All subsequent registrations will be ignored.\n */\nexport class NextPageService {\n  /**\n   * Creates an instance of NextPageService.\n   */\n  constructor() {\n    /** @private {?Window} */\n    this.win_ = null;\n\n    /** @private {?Element} */\n    this.element_ = null;\n\n    /** @private {?../../../src/service/xhr-impl.Xhr} */\n    this.xhr_ = null;\n\n    /** @private {?./config.AmpNextPageConfig} */\n    this.config_ = null;\n\n    /** @private {string} */\n    this.hideSelector_;\n\n    /** @private {?Element} */\n    this.separator_ = null;\n\n    /** @private {?../../../src/service/mutator-interface.MutatorInterface} */\n    this.mutator_ = null;\n\n    /** @private {?MultidocManager} */\n    this.multidocManager_ = null;\n\n    /** @private {number} */\n    this.nextArticle_ = 0;\n\n    /** @private {boolean} */\n    this.documentQueued_ = false;\n\n    /** @private {?../../../src/service/navigation.Navigation} */\n    this.navigation_ = null;\n\n    /** @private {?../../../src/service/viewport/viewport-interface.ViewportInterface} */\n    this.viewport_ = null;\n\n    /** @private {?../../../src/service/position-observer/position-observer-impl.PositionObserver} */\n    this.positionObserver_ = null;\n\n    /** @private @const {!Array<!DocumentRef>} */\n    this.documentRefs_ = [];\n\n    /** @private {?DocumentRef} */\n    this.activeDocumentRef_ = null;\n\n    /** @private {function(!Element): !Promise} */\n    this.appendPageHandler_ = () => {};\n\n    /** @private {?../../../src/service/url-impl.Url} */\n    this.urlService_ = null;\n\n    /** @private {string} */\n    this.origin_ = '';\n\n    /** @private {?../../../src/service/history-impl.History} */\n    this.history_ = null;\n  }\n\n  /**\n   * Returns true if the service has already been initialized.\n   *\n   * @return {*} TODO(#23582): Specify return type\n   */\n  isActive() {\n    return this.config_ !== null;\n  }\n\n  /**\n   * Registers the window-scoped service against the specified {@code\n   * recommendationsOb}. Only the first call to this method will be used, any\n   * subsequent calls will be ignored.\n   * @param {!Element} element {@link AmpNextPage} element.\n   * @param {!./config.AmpNextPageConfig} config Element configuration.\n   * @param {?Element} separator Separator element to display between pages. If\n   *     none is specified a default hairline separator will be used.\n   */\n  register(element, config, separator) {\n    if (this.isActive()) {\n      return;\n    }\n\n    const ampDoc = getAmpdoc(element);\n    const {win} = ampDoc;\n\n    this.config_ = config;\n    this.win_ = win;\n    this.separator_ = separator || this.createDefaultSeparator_();\n    this.element_ = element;\n    this.xhr_ = Services.xhrFor(win);\n\n    if (this.config_.hideSelectors) {\n      this.hideSelector_ = this.config_.hideSelectors.join(',');\n    }\n\n    this.navigation_ = Services.navigationForDoc(ampDoc);\n    this.viewport_ = Services.viewportForDoc(ampDoc);\n    this.mutator_ = Services.mutatorForDoc(ampDoc);\n    this.multidocManager_ = new MultidocManager(\n      win,\n      Services.ampdocServiceFor(win),\n      Services.extensionsFor(win),\n      Services.timerFor(win)\n    );\n    this.urlService_ = Services.urlForDoc(dev().assertElement(this.element_));\n    this.origin_ = this.urlService_.parse(ampDoc.getUrl()).origin;\n    this.history_ = Services.historyForDoc(ampDoc);\n\n    installPositionObserverServiceForDoc(ampDoc);\n    this.positionObserver_ = Services.positionObserverForDoc(element);\n\n    const {canonicalUrl} = Services.documentInfoForDoc(ampDoc);\n    const documentRef = createDocumentRef(\n      win.document.location.href,\n      win.document.title,\n      canonicalUrl\n    );\n\n    // TODO(wassgha): Untype as ShadowDoc and tighten the ShadowDoc type spec\n    /** @type {!../../../src/runtime.ShadowDoc} */\n    const amp = {\n      ampdoc: ampDoc,\n      url: win.document.location.href,\n      title: win.document.title,\n      canonicalUrl,\n    };\n    documentRef.amp = amp;\n\n    this.documentRefs_.push(documentRef);\n    this.activeDocumentRef_ = this.documentRefs_[0];\n\n    this.viewport_.onScroll(() => this.scrollHandler_());\n    this.viewport_.onResize(() => this.scrollHandler_());\n\n    // Check scroll position immediately to handle documents which are shorter\n    // than the viewport.\n    this.scrollHandler_();\n  }\n\n  /**\n   * Sets the handler to be called with a\n   * @param {function(!Element): !Promise} handler Handler to be called when\n   *     a new page needs adding to the DOM, with a container element for that\n   *     page.\n   */\n  setAppendPageHandler(handler) {\n    this.appendPageHandler_ = handler;\n  }\n\n  /**\n   * Attach a ShadowDoc using the given document.\n   * @param {!Element} shadowRoot Root element to attach the shadow document to.\n   * @param {!Document} doc Document to attach.\n   * @return {?../../../src/runtime.ShadowDoc} Return value of {@link MultidocManager#attachShadowDoc}\n   */\n  attachShadowDoc_(shadowRoot, doc) {\n    if (this.hideSelector_) {\n      const elements = doc.querySelectorAll(this.hideSelector_);\n      for (let i = 0; i < elements.length; i++) {\n        elements[i].classList.add('i-amphtml-next-page-hidden');\n      }\n    }\n\n    // Drop any amp-analytics tags from the child doc. We want to reuse the\n    // parent config instead.\n    const analytics = doc.querySelectorAll('amp-analytics');\n    for (let i = 0; i < analytics.length; i++) {\n      const item = analytics[i];\n      removeElement(item);\n    }\n\n    /** @type {!../../../src/runtime.ShadowDoc} */\n    const amp = this.multidocManager_.attachShadowDoc(shadowRoot, doc, '', {\n      visibilityState: VisibilityState.PRERENDER,\n    });\n    const ampdoc = devAssert(amp.ampdoc);\n    installStylesForDoc(ampdoc, CSS, null, false, TAG);\n\n    const body = ampdoc.getBody();\n    body.classList.add('i-amphtml-next-page-document');\n\n    return amp;\n  }\n\n  /**\n   * Creates an invisible element used to measure the position of the documents\n   * @return {!Element}\n   */\n  createMeasurer_() {\n    const measurer = this.win_.document.createElement('div');\n    measurer.classList.add('i-amphtml-next-page-measurer');\n    return measurer;\n  }\n\n  /**\n   * Creates a default hairline separator element to go between two documents.\n   * @return {!Element}\n   */\n  createDefaultSeparator_() {\n    const separator = this.win_.document.createElement('div');\n    separator.classList.add('amp-next-page-default-separator');\n    return separator;\n  }\n\n  /**\n   * Append a new article if still possible.\n   */\n  appendNextArticle_() {\n    if (this.nextArticle_ < this.config_.pages.length) {\n      const next = this.config_.pages[this.nextArticle_];\n      const documentRef = createDocumentRef(next.ampUrl);\n      this.documentRefs_.push(documentRef);\n\n      const container = this.win_.document.createElement('div');\n\n      const measurer = this.createMeasurer_();\n      container.appendChild(measurer);\n\n      const separator = this.separator_.cloneNode(true);\n      separator.removeAttribute('separator');\n      container.appendChild(separator);\n\n      const articleLinks = this.createArticleLinks_(this.nextArticle_);\n      container.appendChild(articleLinks);\n      documentRef.recUnit.el = articleLinks;\n\n      const shadowRoot = this.win_.document.createElement('div');\n      container.appendChild(shadowRoot);\n\n      const page = this.nextArticle_;\n      this.appendPageHandler_(container).then(() => {\n        this.positionObserver_.observe(\n          measurer,\n          PositionObserverFidelity.LOW,\n          (position) => this.positionUpdate_(page, position)\n        );\n        this.positionObserver_.observe(\n          articleLinks,\n          PositionObserverFidelity.LOW,\n          (unused) => this.articleLinksPositionUpdate_(documentRef)\n        );\n      });\n\n      // Don't fetch the next article if we've rendered the maximum on screen.\n      // We just want the article links.\n      if (this.nextArticle_ >= MAX_ARTICLES) {\n        return;\n      }\n\n      this.nextArticle_++;\n      this.xhr_\n        .fetch(next.ampUrl, {ampCors: false})\n        .then((response) => {\n          // Update AMP URL in case we were redirected.\n          documentRef.ampUrl = response.url;\n          const url = this.urlService_.parse(response.url);\n          userAssert(\n            url.origin === this.origin_,\n            'ampUrl resolved to a different origin from the origin of the ' +\n              'current document'\n          );\n          return response.text();\n        })\n        .then((html) => {\n          const doc = this.win_.document.implementation.createHTMLDocument('');\n          doc.open();\n          doc.write(html);\n          doc.close();\n          return doc;\n        })\n        .then(\n          (doc) =>\n            new Promise((resolve, reject) => {\n              if (documentRef.cancelled) {\n                // User has reached the end of the document already, don't render.\n                resolve();\n                return;\n              }\n\n              if (documentRef.recUnit.isObserving) {\n                this.positionObserver_.unobserve(articleLinks);\n                documentRef.recUnit.isObserving = true;\n              }\n              this.mutator_.mutateElement(container, () => {\n                try {\n                  documentRef.amp = this.attachShadowDoc_(shadowRoot, doc);\n\n                  toggle(dev().assertElement(documentRef.recUnit.el), false);\n                  this.documentQueued_ = false;\n                  resolve();\n                } catch (e) {\n                  reject(e);\n                }\n              });\n            }),\n          (e) => user().error(TAG, 'failed to fetch %s', next.ampUrl, e)\n        )\n        .catch((e) =>\n          dev().error(\n            TAG,\n            'failed to attach shadow document for %s',\n            next.ampUrl,\n            e\n          )\n        )\n        // The new page may be short and the next may already need fetching.\n        .then(() => this.scrollHandler_());\n    }\n  }\n\n  /**\n   * Creates a recommendation unit with links to articles, starting from a given\n   * one.\n   * @param {number} nextPage Index of the next unseen page to use as the first\n   *     recommendation in the list.\n   * @return {!Element} Container element for the recommendations.\n   */\n  createArticleLinks_(nextPage) {\n    const doc = this.win_.document;\n    const currentArticle = nextPage - 1;\n    let article = nextPage;\n    let currentAmpUrl = '';\n    if (nextPage > 0) {\n      currentAmpUrl = this.documentRefs_[currentArticle].ampUrl;\n    }\n\n    const element = doc.createElement('div');\n    element.classList.add('amp-next-page-links');\n\n    while (\n      article < this.config_.pages.length &&\n      article - nextPage < SEPARATOR_RECOS\n    ) {\n      const next = this.config_.pages[article];\n      article++;\n\n      const articleHolder = doc.createElement('a');\n      articleHolder.href = next.ampUrl;\n      articleHolder.classList.add(\n        'i-amphtml-reco-holder-article',\n        'amp-next-page-link'\n      );\n      articleHolder.addEventListener('click', (e) => {\n        this.triggerAnalyticsEvent_(\n          'amp-next-page-click',\n          next.ampUrl,\n          currentAmpUrl\n        );\n        const a2a = this.navigation_.navigateToAmpUrl(\n          next.ampUrl,\n          'content-discovery'\n        );\n        if (a2a) {\n          // A2A is enabled, don't navigate the browser.\n          e.preventDefault();\n        }\n      });\n\n      const imageElement = doc.createElement('div');\n      imageElement.classList.add(\n        'i-amphtml-next-article-image',\n        'amp-next-page-image'\n      );\n      setStyle(imageElement, 'background-image', `url(${next.image})`);\n      articleHolder.appendChild(imageElement);\n\n      const titleElement = doc.createElement('div');\n      titleElement.classList.add(\n        'i-amphtml-next-article-title',\n        'amp-next-page-text'\n      );\n\n      titleElement.textContent = next.title;\n      articleHolder.appendChild(titleElement);\n\n      element.appendChild(articleHolder);\n    }\n\n    return element;\n  }\n\n  /**\n   * Handles scroll events from the viewport and appends the next document when\n   * the user comes within {@code PRERENDER_VIEWPORT_COUNT} viewports of the\n   * end.\n   * @private\n   */\n  scrollHandler_() {\n    if (this.documentQueued_) {\n      return;\n    }\n\n    const viewportSize = this.viewport_.getSize();\n    const viewportBox = layoutRectLtwh(\n      0,\n      0,\n      viewportSize.width,\n      viewportSize.height\n    );\n    this.viewport_\n      .getClientRectAsync(dev().assertElement(this.element_))\n      .then((elementBox) => {\n        if (this.documentQueued_) {\n          return;\n        }\n\n        const prerenderHeight = PRERENDER_VIEWPORT_COUNT * viewportSize.height;\n        if (elementBox.bottom - viewportBox.bottom < prerenderHeight) {\n          this.documentQueued_ = true;\n          this.appendNextArticle_();\n        }\n      });\n  }\n\n  /**\n   * Handles updates from the {@code PositionObserver} indicating a change in\n   * the position of a page separator in the viewport.\n   * @param {number} i Index of the documentRef this recommendation unit is\n   *     attached to.\n   * @param {?../../../src/service/position-observer/position-observer-worker.PositionInViewportEntryDef} position\n   *     Position of the current recommendation unit in the viewport.\n   */\n  positionUpdate_(i, position) {\n    // We're only interested when the recommendations exit the viewport\n    if (!position || position.positionRect !== null) {\n      return;\n    }\n\n    let ref = this.documentRefs_[i];\n    let analyticsEvent = '';\n\n    switch (position.relativePos) {\n      case 'top':\n        ref = this.documentRefs_[i + 1];\n        analyticsEvent = 'amp-next-page-scroll';\n        break;\n      case 'bottom':\n        analyticsEvent = 'amp-next-page-scroll-back';\n        break;\n      default:\n        break;\n    }\n\n    if (ref && ref.amp) {\n      this.triggerAnalyticsEvent_(\n        analyticsEvent,\n        ref.ampUrl,\n        this.activeDocumentRef_.ampUrl\n      );\n      this.setActiveDocument_(ref);\n    }\n  }\n\n  /**\n   * Handles updates from the {@code PositionObserver} indicating a change in\n   * the position of the recommendation unit in the viewport. Used to indicate\n   * when the recommendation unit has entered the viewport, and should not be\n   * hidden from view automatically.\n   * @param {!DocumentRef} documentRef Reference to the active document.\n   */\n  articleLinksPositionUpdate_(documentRef) {\n    documentRef.cancelled = true;\n    if (documentRef.recUnit.isObserving) {\n      this.positionObserver_.unobserve(\n        dev().assertElement(documentRef.recUnit.el)\n      );\n      documentRef.recUnit.isObserving = false;\n    }\n  }\n\n  /**\n   * Sets the specified document as active, updating the document title and URL.\n   *\n   * @param {!DocumentRef} ref Reference to the document to be activated\n   * @private\n   */\n  setActiveDocument_(ref) {\n    this.documentRefs_.forEach((docRef) => {\n      const {amp} = docRef;\n      // Update the title and history\n      if (docRef === ref) {\n        this.win_.document.title = amp.title || '';\n        this.activeDocumentRef_ = docRef;\n        this.setActiveDocumentInHistory_(docRef);\n        // Show the active document\n        this.setDocumentVisibility_(docRef, VisibilityState.VISIBLE);\n      } else {\n        // Hide other documents\n        this.setDocumentVisibility_(docRef, VisibilityState.HIDDEN);\n      }\n    });\n\n    // TODO(emarchiori): Consider updating position fixed elements.\n  }\n\n  /**\n   * Manually overrides the document's visible state to the given state\n   *\n   * @param {!DocumentRef} ref Reference to the document to change\n   * @param {!../../../src/core/constants/visibility-state.VisibilityState} visibilityState\n   * @private\n   */\n  setDocumentVisibility_(ref, visibilityState) {\n    // Prevent updating visibility of the host document\n    if (ref === this.documentRefs_[0]) {\n      return;\n    }\n\n    const ampDoc = ref.amp && ref.amp.ampdoc;\n\n    // Prevent hiding of documents that are not shadow docs\n    if (!ampDoc) {\n      return;\n    }\n\n    // Prevent hiding of documents that are being pre-rendered\n    if (!ampDoc.hasBeenVisible() && visibilityState == VisibilityState.HIDDEN) {\n      return;\n    }\n\n    ref.amp.setVisibilityState(visibilityState);\n  }\n\n  /**\n   * @param {!DocumentRef} documentRef\n   * @private\n   */\n  setActiveDocumentInHistory_(documentRef) {\n    const {canonicalUrl, title} = documentRef.amp;\n    const {pathname, search} = this.urlService_.parse(documentRef.ampUrl);\n    this.history_.replace({title, url: pathname + search, canonicalUrl});\n  }\n\n  /**\n   * Wrapper around {@code triggerAnalyticsEvent}.\n   * @param {string} eventType\n   * @param {string} toURL The new url after the event.\n   * @param {string=} fromURL The old URL before the event.\n   */\n  triggerAnalyticsEvent_(eventType, toURL, fromURL) {\n    fromURL = fromURL || '';\n\n    const vars = dict({\n      'toURL': toURL,\n      'fromURL': fromURL,\n    });\n    triggerAnalyticsEvent(dev().assertElement(this.element_), eventType, vars);\n  }\n}\n\n/**\n * Creates a new {@link DocumentRef} for the specified URL.\n * @param {string} ampUrl AMP URL of the document.\n * @param {string=} title Document title, if known before loading.\n * @param {string=} canonicalUrl Canonical URL of the page, if known before\n *     loading.\n * @return {!DocumentRef} Ref object initialised with the given URL.\n */\nfunction createDocumentRef(ampUrl, title, canonicalUrl) {\n  const amp = title || canonicalUrl ? {title, canonicalUrl} : null;\n  return {\n    ampUrl,\n    amp,\n    recUnit: {\n      el: null,\n      isObserving: false,\n    },\n    cancelled: false,\n  };\n}\n", "import {getValueForExpr} from '#core/types/object';\n\nimport {Services} from '#service';\n\nimport {user} from '#utils/log';\n\nimport {assertHttpsUrl} from './url';\n\n/**\n * Detail of each `options` property:\n * expr - Dot-syntax reference to subdata of JSON result to return. If not specified,\n *     entire JSON result is returned.\n * urlReplacement - If ALL, replaces all URL vars. If OPT_IN, replaces allowlisted\n *     URL vars. Otherwise, don't expand.\n * refresh - Forces refresh of browser cache.\n * xssiPrefix - Prefix to optionally strip from the response before calling parseJson.\n *\n * @typedef {{\n *  expr:(string|undefined),\n *  urlReplacement: (UrlReplacementPolicy|undefined),\n *  refresh: (boolean|undefined),\n *  xssiPrefix: (string|undefined),\n * }}\n */\nexport let BatchFetchOptionsDef;\n\n/**\n * @enum {number}\n */\nexport const UrlReplacementPolicy = {\n  NONE: 0,\n  OPT_IN: 1,\n  ALL: 2,\n};\n\n/**\n * Batch fetches the JSON endpoint at the given element's `src` attribute.\n * Sets the fetch credentials option from the element's `credentials` attribute,\n * if it exists.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {!Element} element\n * @param {!BatchFetchOptionsDef} options options bag for modifying the request.\n * @return {!Promise<!JsonObject|!Array<JsonObject>>} Resolved with JSON\n *     result or rejected if response is invalid.\n */\nexport function batchFetchJsonFor(ampdoc, element, options = {}) {\n  const {\n    expr = '.',\n    urlReplacement = UrlReplacementPolicy.NONE,\n    refresh = false,\n    xssiPrefix = undefined,\n  } = options;\n  assertHttpsUrl(element.getAttribute('src'), element);\n  const xhr = Services.batchedXhrFor(ampdoc.win);\n  return requestForBatchFetch(element, urlReplacement, refresh)\n    .then((data) => {\n      return xhr.fetchJson(data.xhrUrl, data.fetchOpt);\n    })\n    .then((res) => Services.xhrFor(ampdoc.win).xssiJson(res, xssiPrefix))\n    .then((data) => {\n      if (data == null) {\n        throw new Error('Response is undefined.');\n      }\n      return getValueForExpr(data, expr || '.');\n    })\n    .catch((err) => {\n      throw user().createError('failed fetching JSON data', err);\n    });\n}\n\n/**\n * Handles url replacement and constructs the FetchInitJsonDef required for a\n * fetch.\n * @param {!Element} element\n * @param {!UrlReplacementPolicy} replacement If ALL, replaces all URL\n *     vars. If OPT_IN, replaces allowlisted URL vars. Otherwise, don't expand.\n * @param {boolean} refresh Forces refresh of browser cache.\n * @return {!Promise<!FetchRequestDef>}\n */\nexport function requestForBatchFetch(element, replacement, refresh) {\n  const url = element.getAttribute('src');\n\n  // Replace vars in URL if desired.\n  const urlReplacements = Services.urlReplacementsForDoc(element);\n  const promise =\n    replacement >= UrlReplacementPolicy.OPT_IN\n      ? urlReplacements.expandUrlAsync(url)\n      : Promise.resolve(url);\n\n  return promise.then((xhrUrl) => {\n    // Throw user error if this element is performing URL substitutions\n    // without the soon-to-be-required opt-in (#12498).\n    if (replacement == UrlReplacementPolicy.OPT_IN) {\n      const invalid = urlReplacements.collectDisallowedVarsSync(element);\n      if (invalid.length > 0) {\n        throw user().createError(\n          'URL variable substitutions in CORS ' +\n            'fetches from dynamic URLs (e.g. via amp-bind) require opt-in. ' +\n            `Please add data-amp-replace=\"${invalid.join(' ')}\" to the ` +\n            `<${element.tagName}> element. See https://bit.ly/amp-var-subs.`\n        );\n      }\n    }\n    const fetchOpt = {};\n    if (element.hasAttribute('credentials')) {\n      fetchOpt.credentials = element.getAttribute('credentials');\n    }\n    // https://hacks.mozilla.org/2016/03/referrer-and-cache-control-apis-for-fetch/\n    if (refresh) {\n      fetchOpt.cache = 'reload';\n    }\n    return {'xhrUrl': xhrUrl, 'fetchOpt': fetchOpt};\n  });\n}\n", "import {\n  CONSENT_POLICY_STATE, // eslint-disable-line no-unused-vars\n} from '#core/constants/consent-state';\nimport {dict} from '#core/types/object';\n\nimport {Services} from '#service';\n\n/**\n * Returns a promise that resolve when all consent state the policy wait\n * for resolve. Or if consent service is not available.\n * @param {!Element|!ShadowRoot} element\n * @param {string=} policyId\n * @return {!Promise<?CONSENT_POLICY_STATE>}\n */\nexport function getConsentPolicyState(element, policyId = 'default') {\n  return Services.consentPolicyServiceForDocOrNull(element).then(\n    (consentPolicy) => {\n      if (!consentPolicy) {\n        return null;\n      }\n      return consentPolicy.whenPolicyResolved(/** @type {string} */ (policyId));\n    }\n  );\n}\n\n/**\n * Returns a promise that resolves to a sharedData retrieved from consent\n * remote endpoint.\n * @param {!Element|!ShadowRoot} element\n * @param {string} policyId\n * @return {!Promise<?Object>}\n */\nexport function getConsentPolicySharedData(element, policyId) {\n  return Services.consentPolicyServiceForDocOrNull(element).then(\n    (consentPolicy) => {\n      if (!consentPolicy) {\n        return null;\n      }\n      return consentPolicy.getMergedSharedData(\n        /** @type {string} */ (policyId)\n      );\n    }\n  );\n}\n\n/**\n * @param {!Element|!ShadowRoot} element\n * @param {string=} policyId\n * @return {!Promise<string>}\n */\nexport function getConsentPolicyInfo(element, policyId = 'default') {\n  // Return the stored consent string.\n  return Services.consentPolicyServiceForDocOrNull(element).then(\n    (consentPolicy) => {\n      if (!consentPolicy) {\n        return null;\n      }\n      return consentPolicy.getConsentStringInfo(\n        /** @type {string} */ (policyId)\n      );\n    }\n  );\n}\n\n/**\n * @param {!Element|!ShadowRoot} element\n * @param {string=} policyId\n * @return {!Promise<?Object|undefined>}\n */\nexport function getConsentMetadata(element, policyId = 'default') {\n  // Return the stored consent metadata.\n  return Services.consentPolicyServiceForDocOrNull(element).then(\n    (consentPolicy) => {\n      if (!consentPolicy) {\n        return null;\n      }\n      return consentPolicy.getConsentMetadataInfo(\n        /** @type {string} */ (policyId)\n      );\n    }\n  );\n}\n\n/**\n * Returns a set of consent values to forward to a 3rd party (like an iframe).\n * @param {!Element} element\n * @param {?string=} opt_policyId\n * @return {!Promise<!JsonObject>}\n *   See extensions/amp-consent/customizing-extension-behaviors-on-consent.md:\n *    - consentMetadata\n *    - consentString\n *    - consentPolicyState\n *    - consentPolicySharedData\n */\nexport function getConsentDataToForward(element, opt_policyId) {\n  return Services.consentPolicyServiceForDocOrNull(element).then((policy) => {\n    const gettersOrNull = dict({\n      'consentMetadata': policy && policy.getConsentMetadataInfo,\n      'consentString': policy && policy.getConsentStringInfo,\n      'consentPolicyState': policy && policy.whenPolicyResolved,\n      'consentPolicySharedData': policy && policy.getMergedSharedData,\n    });\n    if (!policy) {\n      return gettersOrNull;\n    }\n    return /** @type {!JsonObject} */ (\n      Promise.all(\n        Object.keys(gettersOrNull).map((key) =>\n          gettersOrNull[key]\n            .call(policy, opt_policyId || 'default')\n            .then((value) => ({[key]: value}))\n        )\n      ).then((objs) => Object.assign.apply({}, objs))\n    );\n  });\n}\n\n/**\n * Determine if an element needs to be blocked by consent based on meta tags.\n * @param {*} element\n * @return {boolean}\n */\nexport function shouldBlockOnConsentByMeta(element) {\n  const ampdoc = element.getAmpDoc();\n  let content = ampdoc.getMetaByName('amp-consent-blocking');\n  if (!content) {\n    return false;\n  }\n\n  // Handles whitespace\n  content = content.toUpperCase().replace(/\\s+/g, '');\n\n  const contents = /** @type {Array<string>} */ (content.split(','));\n  return contents.includes(element.tagName);\n}\n", "import {iterateCursor} from '#core/dom';\nimport {getFormAsObject, getSubmitButtonUsed} from '#core/dom/form';\nimport {map} from '#core/types/object';\n\nimport {Services} from '#service';\n\n/**\n * Create a form data wrapper. The wrapper is necessary to provide a common\n * API for FormData objects on all browsers. For example, not all browsers\n * support the FormData#entries or FormData#delete functions.\n *\n * @param {!Window} win\n * @param {!HTMLFormElement=} opt_form\n * @return {!FormDataWrapperInterface}\n */\nexport function createFormDataWrapper(win, opt_form) {\n  const platform = Services.platformFor(win);\n\n  if (platform.isIos() && platform.getMajorVersion() == 11) {\n    return new Ios11NativeFormDataWrapper(opt_form);\n  } else if (FormData.prototype.entries && FormData.prototype.delete) {\n    return new NativeFormDataWrapper(opt_form);\n  } else {\n    return new PolyfillFormDataWrapper(opt_form);\n  }\n}\n\n/**\n * Check if the given object is a FormDataWrapper instance\n * @param {*} o\n * @return {boolean} True if the object is a FormDataWrapper instance.\n */\nexport function isFormDataWrapper(o) {\n  // instanceof doesn't work as expected, so we detect with duck-typing.\n  return !!o && typeof o.getFormData == 'function';\n}\n\n/**\n * A polyfill wrapper for a `FormData` object.\n *\n * If there's no native `FormData#entries`, chances are there are no native\n * methods to read the content of the `FormData` after construction, so the\n * only way to implement `entries` in this class is to capture the fields in\n * the form passed to the constructor (and the arguments passed to the\n * `append` method).\n *\n * For more details on this, see http://mdn.io/FormData.\n *\n * @implements {FormDataWrapperInterface}\n * @visibleForTesting\n */\nexport class PolyfillFormDataWrapper {\n  /** @override */\n  constructor(opt_form = undefined) {\n    /** @private @const {!Object<string, !Array<string>>} */\n    this.fieldValues_ = opt_form ? getFormAsObject(opt_form) : map();\n  }\n\n  /**\n   * @param {string} name\n   * @param {string|!File} value\n   * @param {string=} opt_filename\n   * @override\n   */\n  append(name, value, opt_filename) {\n    // Coercion to string is required to match\n    // the native FormData.append behavior\n    const nameString = String(name);\n    this.fieldValues_[nameString] = this.fieldValues_[nameString] || [];\n    this.fieldValues_[nameString].push(String(value));\n  }\n\n  /** @override */\n  delete(name) {\n    delete this.fieldValues_[name];\n  }\n\n  /** @override */\n  entries() {\n    const fieldEntries = [];\n    Object.keys(this.fieldValues_).forEach((name) => {\n      const values = this.fieldValues_[name];\n      values.forEach((value) => fieldEntries.push([name, value]));\n    });\n\n    // Generator functions are not supported by the current Babel configuration,\n    // so we must manually implement the iterator interface.\n    let nextIndex = 0;\n    return /** @type {!Iterator<!Array<string>>} */ ({\n      next() {\n        return nextIndex < fieldEntries.length\n          ? {value: fieldEntries[nextIndex++], done: false}\n          : {value: undefined, done: true};\n      },\n    });\n  }\n\n  /** @override */\n  getFormData() {\n    const formData = new FormData();\n\n    Object.keys(this.fieldValues_).forEach((name) => {\n      const values = this.fieldValues_[name];\n      values.forEach((value) => formData.append(name, value));\n    });\n\n    return formData;\n  }\n}\n\n/**\n * Wrap the native `FormData` implementation.\n *\n * NOTE: This differs from the standard `FormData` constructor. This constructor\n * includes a submit button if it was used to submit the `opt_form`, where\n * the native `FormData` constructor does not include the submit button used to\n * submit the form.\n * {@link https://xhr.spec.whatwg.org/#dom-formdata}\n * @implements {FormDataWrapperInterface}\n */\nclass NativeFormDataWrapper {\n  /** @override */\n  constructor(opt_form) {\n    /** @private @const {!FormData} */\n    this.formData_ = new FormData(opt_form);\n\n    this.maybeIncludeSubmitButton_(opt_form);\n  }\n\n  /**\n   * If a submit button is focused (because it was used to submit the form),\n   * or was the first submit button present, add its name and value to the\n   * `FormData`, since publishers expect the submit button to be present.\n   * @param {!HTMLFormElement=} opt_form\n   * @private\n   */\n  maybeIncludeSubmitButton_(opt_form) {\n    // If a form is not passed to the constructor,\n    // we are not in a submitting code path.\n    if (!opt_form) {\n      return;\n    }\n\n    const button = getSubmitButtonUsed(opt_form);\n    if (button && button.name) {\n      this.append(button.name, button.value);\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @param {string|!File} value\n   * @param {string=} opt_filename\n   * @override\n   */\n  append(name, value, opt_filename) {\n    this.formData_.append(name, value);\n  }\n\n  /** @override */\n  delete(name) {\n    this.formData_.delete(name);\n  }\n\n  /** @override */\n  entries() {\n    return this.formData_.entries();\n  }\n\n  /** @override */\n  getFormData() {\n    return this.formData_;\n  }\n}\n\n/**\n * iOS 11 has a bug when submitting empty file inputs.\n * This works around the bug by replacing the empty files with Blob objects.\n */\nclass Ios11NativeFormDataWrapper extends NativeFormDataWrapper {\n  /** @override */\n  constructor(opt_form) {\n    super(opt_form);\n\n    if (opt_form) {\n      iterateCursor(opt_form.elements, (input) => {\n        if (input.type == 'file' && input.files.length == 0) {\n          this.formData_.delete(input.name);\n          this.formData_.append(input.name, new Blob([]), '');\n        }\n      });\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @param {string|!File} value\n   * @param {string=} opt_filename\n   * @override\n   */\n  append(name, value, opt_filename) {\n    // Safari 11 breaks on submitting empty File values.\n    if (value && typeof value == 'object' && isEmptyFile(value)) {\n      this.formData_.append(name, new Blob([]), opt_filename || '');\n    } else {\n      this.formData_.append(name, value);\n    }\n  }\n}\n\n/**\n * A wrapper for a native `FormData` object that allows the retrieval of entries\n * in the form data after construction even on browsers that don't natively\n * support `FormData.prototype.entries`.\n *\n * @interface\n * Subclassing `FormData` doesn't work in this case as the transpiler\n *     generates code that calls the super constructor directly using\n *     `Function.prototype.call`. WebKit (Safari) doesn't allow this and\n *     enforces that constructors be called with the `new` operator.\n */\nclass FormDataWrapperInterface {\n  /**\n   * Creates a new wrapper for a `FormData` object.\n   *\n   * If there's no native `FormData#entries`, chances are there are no native\n   * methods to read the content of the `FormData` after construction, so the\n   * only way to implement `entries` in this class is to capture the fields in\n   * the form passed to the constructor (and the arguments passed to the\n   * `append` method).\n   *\n   * This constructor should also add the submitter element as defined in the\n   * HTML spec for Form Submission Algorithm, but is not defined by the standard\n   * when using the `FormData` constructor directly.\n   *\n   * For more details on this, see http://mdn.io/FormData.\n   *\n   * @param {!HTMLFormElement=} opt_form An HTML `<form>` element \u2014 when\n   *     specified, the `FormData` object will be populated with the form's\n   *     current keys/values using the name property of each element for the\n   *     keys and their submitted value for the values. It will also encode file\n   *     input content.\n   */\n  constructor(opt_form) {}\n\n  /**\n   * Appends a new value onto an existing key inside a `FormData` object, or\n   * adds the key if it does not already exist.\n   *\n   * Appending a `File` object is not yet supported and the `filename`\n   * parameter is ignored for this wrapper.\n   *\n   * For more details on this, see http://mdn.io/FormData/append.\n   *\n   * TODO(cvializ): Update file support\n   *\n   * @param {string} unusedName The name of the field whose data is contained in\n   *     `value`.\n   * @param {string|!File} unusedValue The field's value.\n   * @param {string=} opt_filename The filename to use if the value is a file.\n   */\n  append(unusedName, unusedValue, opt_filename) {}\n\n  /**\n   * Remove the given value from the FormData.\n   *\n   * For more details on this, see http://mdn.io/FormData/delete.\n   *\n   * @param {string} unusedName The name of the field to remove from the FormData.\n   */\n  delete(unusedName) {}\n\n  /**\n   * Returns an iterator of all key/value pairs contained in this object.\n   *\n   * For more details on this, see http://mdn.io/FormData/entries.\n   *\n   * @return {!Iterator<!Array<string|!File>>}\n   */\n  entries() {}\n\n  /**\n   * Returns the wrapped native `FormData` object.\n   *\n   * @return {!FormData}\n   */\n  getFormData() {}\n}\n\n/**\n * Check if the given file is an empty file, which is the result of submitting\n * an empty `<input type=\"file\">`. These cause errors when submitting forms\n * in Safari 11.\n *\n * @param {!File} file\n * @return {boolean}\n */\nfunction isEmptyFile(file) {\n  return file.name == '' && file.size == 0;\n}\n", "import {devAssert, userAssert} from '#core/assert';\nimport {fromIterator, isArray} from '#core/types/array';\nimport {dict, isObject, map} from '#core/types/object';\n\nimport {isExperimentOn} from '#experiments';\n\nimport {Services} from '#service';\n\nimport {user} from '#utils/log';\n\nimport {isFormDataWrapper} from '../form-data-wrapper';\nimport {getMode} from '../mode';\nimport {\n  getCorsUrl,\n  getWinOrigin,\n  isProxyOrigin,\n  parseUrlDeprecated,\n  serializeQueryString,\n} from '../url';\n\n/** @private @const {!Array<string>} */\nconst allowedMethods_ = ['GET', 'POST'];\n\n/** @private @const {!Array<function(*):boolean>} */\nconst allowedJsonBodyTypes_ = [isArray, isObject];\n\n/**\n * Serializes a fetch request so that it can be passed to `postMessage()`,\n * i.e., can be cloned using the\n * [structured clone algorithm](http://mdn.io/Structured_clone_algorithm).\n *\n * The request is serialized in the following way:\n *\n * 1. If the `init.body` is a `FormData`, set content-type header to\n * `multipart/form-data` and transform `init.body` into an\n * `!Array<!Array<string>>` holding the list of form entries, where each\n * element in the array is a form entry (key-value pair) represented as a\n * 2-element array.\n *\n * 2. Return a new object having properties `input` and the transformed\n * `init`.\n *\n * The serialized request is assumed to be de-serialized in the following way:\n *\n * 1.If content-type header starts with `multipart/form-data`\n * (case-insensitive), transform the entry array in `init.body` into a\n * `FormData` object.\n *\n * 2. Pass `input` and transformed `init` to `fetch` (or the constructor of\n * `Request`).\n *\n * Currently only `FormData` used in `init.body` is handled as it's the only\n * type being used in AMP runtime that needs serialization. The `Headers` type\n * also needs serialization, but callers should not be passing `Headers`\n * object in `init`, as that fails `fetchPolyfill` on browsers that don't\n * support fetch. Some serialization-needing types for `init.body` such as\n * `ArrayBuffer` and `Blob` are already supported by the structured clone\n * algorithm. Other serialization-needing types such as `URLSearchParams`\n * (which is not supported in IE and Safari) and `FederatedCredentials` are\n * not used in AMP runtime. `init.body` can also be a string\n * (application/x-www-form-urlencoded) but that doesn't require serialization.\n *\n * @param {string} input The URL of the XHR to convert to structured\n *     cloneable.\n * @param {!FetchInitDef} init The options of the XHR to convert to structured\n *     cloneable.\n * @return {{input: string, init: !FetchInitDef}} The serialized structurally-\n *     cloneable request.\n */\nexport function toStructuredCloneable(input, init) {\n  const newInit = /** @type {!FetchInitDef} */ ({...init});\n  if (isFormDataWrapper(init.body)) {\n    const wrapper = /** @type {!FormDataWrapperInterface} */ (init.body);\n    newInit.headers['Content-Type'] = 'multipart/form-data;charset=utf-8';\n    newInit.body = fromIterator(wrapper.entries());\n  }\n  return {input, init: newInit};\n}\n\n/**\n * De-serializes a fetch response that was made possible to be passed to\n * `postMessage()`, i.e., can be cloned using the\n * [structured clone algorithm](http://mdn.io/Structured_clone_algorithm).\n *\n * The response is assumed to be serialized in the following way:\n *\n * 1. Transform the entries in the headers of the response into an\n * `!Array<!Array<string>>` holding the list of header entries, where each\n * element in the array is a header entry (key-value pair) represented as a\n * 2-element array. The header key is case-insensitive.\n *\n * 2. Include the header entry list and `status` and `statusText` properties\n * of the response in as `headers`, `status` and `statusText` properties of\n * `init`.\n *\n * 3. Include the body of the response serialized as string in `body`.\n *\n * 4. Return a new object having properties `body` and `init`.\n *\n * The response is de-serialized in the following way:\n *\n * 1. If the `Response` type is supported and `responseType` is not\n * document, pass `body` and `init` directly to the constructor of `Response`.\n *\n * 2. Otherwise, populate a fake XHR object to pass to `FetchResponse` as if\n * the response is returned by the fetch polyfill.\n *\n * 3. If `responseType` is `document`, also parse the body and populate\n * `responseXML` as a `Document` type.\n *\n * @param {JsonObject|string|undefined} response The structurally-cloneable\n *     response to convert back to a regular Response.\n * @param {string|undefined} responseType The original response type used to\n *     initiate the XHR.\n * @return {!Response} The deserialized regular response.\n * @private\n */\nexport function fromStructuredCloneable(response, responseType) {\n  userAssert(isObject(response), 'Object expected: %s', response);\n\n  const isDocumentType = responseType == 'document';\n  if (!isDocumentType) {\n    // Use native `Response` type if available for performance. If response\n    // type is `document`, we must fall back to `FetchResponse` polyfill\n    // because callers would then rely on the `responseXML` property being\n    // present, which is not supported by the Response type.\n    return new Response(response['body'], response['init']);\n  }\n\n  const lowercasedHeaders = map();\n  const data = {\n    status: 200,\n    statusText: 'OK',\n    /**\n     * @param {string} name\n     * @return {string}\n     */\n    getResponseHeader(name) {\n      return lowercasedHeaders[String(name).toLowerCase()] || null;\n    },\n  };\n\n  if (response['init']) {\n    const init = response['init'];\n    if (isArray(init.headers)) {\n      /** @type {!Array} */ (init.headers).forEach((entry) => {\n        const headerName = entry[0];\n        const headerValue = entry[1];\n        lowercasedHeaders[String(headerName).toLowerCase()] =\n          String(headerValue);\n      });\n    }\n    if (init.status) {\n      data.status = parseInt(init.status, 10);\n    }\n    if (init.statusText) {\n      data.statusText = String(init.statusText);\n    }\n  }\n\n  return new Response(response['body'] ? String(response['body']) : '', data);\n}\n\n/**\n * Intercepts the XHR and proxies it through the viewer if necessary.\n *\n * XHRs are intercepted if all of the following are true:\n * - The AMP doc is in single doc mode\n * - The requested resource is not a 1p request.\n * - The viewer has the `xhrInterceptor` capability\n * - The Viewer is a trusted viewer or AMP is currently in developement mode\n * - The AMP doc is opted-in for XHR interception (`<html>` tag has\n *   `allow-xhr-interception` attribute)\n *\n * @param {!Window} win\n * @param {?../service/ampdoc-impl.AmpDoc} ampdocSingle\n * @param {string} input The URL of the XHR which may get intercepted.\n * @param {!FetchInitDef} init The options of the XHR which may get\n *     intercepted.\n * @return {!Promise<!Response|undefined>}\n *     A response returned by the interceptor if XHR is intercepted or\n *     `Promise<undefined>` otherwise.\n */\nexport function getViewerInterceptResponse(win, ampdocSingle, input, init) {\n  if (!ampdocSingle) {\n    return Promise.resolve();\n  }\n\n  const whenUnblocked = init.prerenderSafe\n    ? Promise.resolve()\n    : ampdocSingle.whenFirstVisible();\n  const viewer = Services.viewerForDoc(ampdocSingle);\n  const urlIsProxy = isProxyOrigin(input);\n  const viewerCanIntercept = viewer.hasCapability('xhrInterceptor');\n  const interceptorDisabledForLocalDev =\n    init.bypassInterceptorForDev && getMode(win).localDev;\n  if (urlIsProxy || !viewerCanIntercept || interceptorDisabledForLocalDev) {\n    return whenUnblocked;\n  }\n\n  const htmlElement = ampdocSingle.getRootNode().documentElement;\n  const docOptedIn = htmlElement.hasAttribute('allow-xhr-interception');\n  if (!docOptedIn) {\n    return whenUnblocked;\n  }\n\n  return whenUnblocked\n    .then(() => viewer.isTrustedViewer())\n    .then((viewerTrusted) => {\n      if (\n        !(\n          viewerTrusted ||\n          getMode(win).localDev ||\n          isExperimentOn(win, 'untrusted-xhr-interception')\n        )\n      ) {\n        return;\n      }\n      const messagePayload = dict({\n        'originalRequest': toStructuredCloneable(input, init),\n      });\n      return viewer\n        .sendMessageAwaitResponse('xhr', messagePayload)\n        .then((response) =>\n          fromStructuredCloneable(response, init.responseType)\n        );\n    });\n}\n\n/**\n * Sets up URL based on ampCors\n * @param {!Window} win\n * @param {string} input\n * @param {!FetchInitDef} init The options of the XHR which may get\n * intercepted.\n * @return {string}\n */\nexport function setupInput(win, input, init) {\n  devAssert(typeof input == 'string', 'Only URL supported: %s', input);\n  if (init.ampCors !== false) {\n    input = getCorsUrl(win, input);\n  }\n  return input;\n}\n\n/**\n * Sets up and normalizes the FetchInitDef\n *\n * @param {?FetchInitDef=} opt_init Fetch options object.\n * @param {string=} opt_accept The HTTP Accept header value.\n * @return {!FetchInitDef}\n */\nexport function setupInit(opt_init, opt_accept) {\n  const init = opt_init || {};\n\n  // In particular, Firefox does not tolerate `null` values for\n  // `credentials`.\n  const creds = init.credentials;\n  devAssert(\n    creds === undefined || creds == 'include' || creds == 'omit',\n    'Only credentials=include|omit support: %s',\n    creds\n  );\n\n  init.method = normalizeMethod_(init.method);\n  init.headers = init.headers || dict({});\n  if (opt_accept) {\n    init.headers['Accept'] = opt_accept;\n  }\n\n  // In edge a `TypeMismatchError` is thrown when body is set to null.\n  devAssert(init.body !== null, 'fetch `body` can not be `null`');\n\n  return init;\n}\n\n/**\n *\n * Sets up AMPSpecific CORS headers.\n * @param {!Window} win\n * @param {string} input\n * @param {?FetchInitDef=} init\n * @return {!FetchInitDef}\n */\nexport function setupAMPCors(win, input, init) {\n  init = init || {};\n  // For some same origin requests, add AMP-Same-Origin: true header to allow\n  // publishers to validate that this request came from their own origin.\n  const currentOrigin = getWinOrigin(win);\n  const targetOrigin = parseUrlDeprecated(input).origin;\n  if (currentOrigin == targetOrigin) {\n    init['headers'] = init['headers'] || {};\n    init['headers']['AMP-Same-Origin'] = 'true';\n  }\n  return init;\n}\n\n/**\n * @param {?FetchInitDef=} init\n * @return {!FetchInitDef}\n */\nexport function setupJsonFetchInit(init) {\n  const fetchInit = setupInit(init, 'application/json');\n  if (fetchInit.method == 'POST' && !isFormDataWrapper(fetchInit.body)) {\n    // Assume JSON strict mode where only objects or arrays are allowed\n    // as body.\n    devAssert(\n      allowedJsonBodyTypes_.some((test) => test(fetchInit.body)),\n      'body must be of type object or array. %s',\n      fetchInit.body\n    );\n\n    // Content should be 'text/plain' to avoid CORS preflight.\n    fetchInit.headers['Content-Type'] =\n      fetchInit.headers['Content-Type'] || 'text/plain;charset=utf-8';\n    const headerContentType = fetchInit.headers['Content-Type'];\n    // Cast is valid, because we checked that it is not form data above.\n    if (headerContentType === 'application/x-www-form-urlencoded') {\n      fetchInit.body = serializeQueryString(\n        /** @type {!JsonObject} */ (fetchInit.body)\n      );\n    } else {\n      fetchInit.body = JSON.stringify(\n        /** @type {!JsonObject} */ (fetchInit.body)\n      );\n    }\n  }\n  return fetchInit;\n}\n\n/**\n * Normalized method name by uppercasing.\n * @param {string|undefined} method\n * @return {string}\n * @private\n */\nfunction normalizeMethod_(method) {\n  if (method === undefined) {\n    return 'GET';\n  }\n  method = method.toUpperCase();\n  devAssert(\n    allowedMethods_.includes(method),\n    'Only one of %s is currently allowed. Got %s',\n    allowedMethods_.join(', '),\n    method\n  );\n  return method;\n}\n\n/**\n * If 415 or in the 5xx range.\n * @param {number} status\n * @return {boolean}\n */\nfunction isRetriable(status) {\n  return status == 415 || (status >= 500 && status < 600);\n}\n\n/**\n * Returns the response if successful or otherwise throws an error.\n * @param {!Response} response\n * @return {!Promise<!Response>}\n */\nexport function assertSuccess(response) {\n  return new Promise((resolve) => {\n    if (response.ok) {\n      return resolve(response);\n    }\n\n    const {status} = response;\n    const err = user().createError(`HTTP error ${status}`);\n    err['retriable'] = isRetriable(status);\n    // TODO(@jridgewell, #9448): Callers who need the response should\n    // skip processing.\n    err['response'] = response;\n    throw err;\n  });\n}\n", "import {dict} from '#core/types/object';\n\nimport {Services} from '#service';\n\nimport {user} from '#utils/log';\n\nimport {\n  assertSuccess,\n  getViewerInterceptResponse,\n  setupAMPCors,\n  setupInit,\n  setupInput,\n} from './utils/xhr-utils';\n\n/**\n *\n *\n * @param {!Window} win\n * @param {string} input\n * @param {?FetchInitDef=} opt_init\n * @return {!Promise<!Document>}\n * @ignore\n */\nexport function fetchDocument(win, input, opt_init) {\n  let init = setupInit(opt_init, 'text/html');\n  init = setupAMPCors(win, input, init);\n  input = setupInput(win, input, init);\n  const ampdocService = Services.ampdocServiceFor(win);\n  const ampdocSingle = ampdocService.isSingleDoc()\n    ? ampdocService.getSingleDoc()\n    : null;\n  init.responseType = 'document';\n  return getViewerInterceptResponse(win, ampdocSingle, input, init).then(\n    (interceptorResponse) => {\n      if (interceptorResponse) {\n        return interceptorResponse\n          .text()\n          .then((body) => new DOMParser().parseFromString(body, 'text/html'));\n      }\n      return xhrRequest(input, init).then((resp) => {\n        const {xhr} = resp;\n        return xhr.responseXML;\n      });\n    }\n  );\n}\n\n/**\n *\n *\n * @param {string} input\n * @param {!FetchInitDef} init\n * @return {!Promise<!{response: !Response, xhr: !XMLHttpRequest}>}\n * @private\n */\nfunction xhrRequest(input, init) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open(init.method || 'GET', input, true);\n    xhr.withCredentials = init.credentials == 'include';\n    xhr.responseType = 'document';\n    // Incoming headers are in fetch format,\n    // so we need to convert them into xhr.\n    for (const header in init.headers) {\n      xhr.setRequestHeader(header, init.headers[header]);\n    }\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState < /* STATUS_RECEIVED */ 2) {\n        return;\n      }\n      if (xhr.status < 100 || xhr.status > 599) {\n        xhr.onreadystatechange = null;\n        reject(user().createExpectedError(`Unknown HTTP status ${xhr.status}`));\n        return;\n      }\n      // TODO(dvoytenko): This is currently simplified: we will wait for the\n      // whole document loading to complete. This is fine for the use cases\n      // we have now, but may need to be reimplemented later.\n      if (xhr.readyState == /* COMPLETE */ 4) {\n        const options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders()),\n        };\n        const response = new Response(\n          '',\n          /** @type {!ResponseInit} */ (options)\n        );\n        const promise = assertSuccess(response).then((response) => ({\n          response,\n          xhr,\n        }));\n        resolve(promise);\n      }\n    };\n    xhr.onerror = () => {\n      reject(user().createExpectedError('Request failure'));\n    };\n    xhr.onabort = () => {\n      reject(user().createExpectedError('Request aborted'));\n    };\n    if (init.method == 'POST') {\n      xhr.send(/** @type {!FormData} */ (init.body));\n    } else {\n      xhr.send();\n    }\n  });\n}\n\n/**\n * Parses XHR's response headers into JSONObject.\n * @param {string} rawHeaders\n * @return {!JsonObject}\n */\nfunction parseHeaders(rawHeaders) {\n  const headers = dict({});\n  // Replace instances of \\r\\n and \\n followed by at least one space or\n  // horizontal tab with a space.\n  const preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n  preProcessedHeaders.split(/\\r?\\n/).forEach(function (line) {\n    const parts = line.split(':');\n    const key = parts.shift().trim();\n    if (key) {\n      const value = parts.join(':').trim();\n      headers[key] = value;\n    }\n  });\n  return headers;\n}\n", "import {CONSENT_POLICY_STATE} from '#core/constants/consent-state';\nimport {isJsonScriptTag, removeElement} from '#core/dom';\nimport {Layout} from '#core/dom/layout';\nimport {\n  childElementsByAttr,\n  childElementsByTag,\n  elementByTag,\n} from '#core/dom/query';\nimport {parseJson, tryParseJson} from '#core/types/object/json';\n\nimport {isExperimentOn} from '#experiments';\n\nimport {Services} from '#service';\n\nimport {dev, user, userAssert} from '#utils/log';\n\nimport {assertConfig} from './config';\nimport {NextPageService} from './next-page-service';\n\nimport {CSS} from '../../../build/amp-next-page-0.1.css';\nimport {\n  UrlReplacementPolicy,\n  batchFetchJsonFor,\n} from '../../../src/batched-json';\nimport {getConsentPolicyState} from '../../../src/consent';\nimport {fetchDocument} from '../../../src/document-fetcher';\nimport {getServicePromiseForDoc} from '../../../src/service-helpers';\n\nconst TAG = 'amp-next-page';\n\nconst SERVICE_ID = 'next-page';\n\nconst ADSENSE_BASE_URL = 'https://googleads.g.doubleclick.net/pagead/ads';\n\nexport class AmpNextPage extends AMP.BaseElement {\n  /** @override */\n  isLayoutSupported(layout) {\n    return layout == Layout.CONTAINER;\n  }\n\n  /** @override */\n  buildCallback() {\n    userAssert(\n      isExperimentOn(this.win, 'amp-next-page'),\n      'Experiment amp-next-page disabled'\n    );\n\n    const separatorElements = childElementsByAttr(this.element, 'separator');\n    userAssert(\n      separatorElements.length <= 1,\n      '%s should contain at most one <div separator> child',\n      TAG\n    );\n\n    let separator = null;\n    if (separatorElements.length === 1) {\n      separator = separatorElements[0];\n      removeElement(separator);\n    }\n\n    return nextPageServiceForDoc(this.getAmpDoc()).then((service) => {\n      if (service.isActive()) {\n        return;\n      }\n\n      const {element} = this;\n      element.classList.add('i-amphtml-next-page');\n\n      // Warning for validation conflicts between 1.0 and 0.1\n      const prohibitedAttribute = element.hasAttribute('deep-parsing')\n        ? 'deep-parsing'\n        : element.hasAttribute('xssi-prefix')\n        ? 'xssi-prefix'\n        : element.hasAttribute('max-pages')\n        ? 'max-pages'\n        : null;\n      if (prohibitedAttribute) {\n        this.unsupportedFeatureWarn_(prohibitedAttribute);\n      }\n\n      const src = element.getAttribute('src');\n      let configPromise;\n      let pagesPromise = Promise.resolve([]);\n\n      const type = element.getAttribute('type');\n      if (type) {\n        userAssert(type === 'adsense', `${TAG} only supports type=adsense`);\n        const client = element.getAttribute('data-client');\n        const slot = element.getAttribute('data-slot');\n\n        userAssert(\n          /^ca-pub-\\d+$/.test(client),\n          `${TAG} AdSense client should be of the format 'ca-pub-123456'`\n        );\n        userAssert(\n          /^\\d+$/.test(slot),\n          `${TAG} AdSense slot should be a number`\n        );\n\n        const consentPolicyId = this.getConsentPolicy();\n        const consent = consentPolicyId\n          ? getConsentPolicyState(element, consentPolicyId).catch((err) => {\n              user().error(TAG, 'Error determining consent state', err);\n              return CONSENT_POLICY_STATE.UNKNOWN;\n            })\n          : Promise.resolve(CONSENT_POLICY_STATE.SUFFICIENT);\n\n        pagesPromise = consent\n          .then((state) =>\n            this.fetchAdSensePages_(\n              client,\n              slot,\n              state === CONSENT_POLICY_STATE.SUFFICIENT ||\n                state === CONSENT_POLICY_STATE.UNKNOWN_NOT_REQUIRED\n            )\n          )\n          .catch((error) => {\n            user().warn(\n              TAG,\n              'error fetching recommendations from AdSense',\n              error\n            );\n            // Resolve this promise with an empty array anyway so we can use\n            // the inline/src config as a fallback.\n            return [];\n          });\n      }\n\n      const inlineConfig = this.getInlineConfig_();\n\n      if (src) {\n        configPromise = this.fetchConfig_().catch((error) =>\n          user().error(TAG, 'error fetching config', error)\n        );\n      } else {\n        configPromise = Promise.resolve(inlineConfig);\n      }\n\n      if (inlineConfig && (src || type)) {\n        this.unsupportedFeatureWarn_('mixing configuration types');\n      }\n\n      userAssert(\n        inlineConfig || src || type,\n        '%s should contain a <script> child, a URL specified in [src], or a ' +\n          '[type]',\n        TAG\n      );\n\n      return Promise.all([configPromise, pagesPromise]).then((values) => {\n        const config = values[0] || {};\n        const pages = values[1] || [];\n        config.pages = pages.concat(config.pages || []);\n        this.register_(service, config, separator);\n      });\n    });\n  }\n\n  /**\n   * Reads the inline config from the element.\n   * @return {?*} Config JSON object, or null if no inline config specified.\n   * @private\n   */\n  getInlineConfig_() {\n    const scriptElements = childElementsByTag(this.element, 'SCRIPT');\n    if (!scriptElements.length) {\n      return null;\n    }\n    userAssert(\n      scriptElements.length === 1,\n      `${TAG} should contain at most one <script> child`\n    );\n    const scriptElement = scriptElements[0];\n    userAssert(\n      isJsonScriptTag(scriptElement),\n      `${TAG} config should ` +\n        'be inside a <script> tag with type=\"application/json\"'\n    );\n    return tryParseJson(scriptElement.textContent, (error) => {\n      user().error(TAG, 'failed to parse config', error);\n    });\n  }\n\n  /**\n   * Fetches content recommendations from AdSense and returns a list of {@link\n   * AmpNextPageItem}.\n   * @param {string} client AdSense publisher code.\n   * @param {string} slot AdSense Matched Content ad slotname.\n   * @param {boolean} personalized {@code true} if the request should be\n   *     personalized (with cookies).\n   * @return {!Promise<Array<./config.AmpNextPageItem>>} List of recommended\n   *     pages.\n   * @private\n   */\n  fetchAdSensePages_(client, slot, personalized) {\n    const adUrl =\n      `${ADSENSE_BASE_URL}?client=${client}&slotname=${slot}` +\n      `&url=${encodeURIComponent(this.getAmpDoc().getUrl())}` +\n      '&ecr=1&crui=title&is_amp=3&output=xml';\n    return fetchDocument(this.win, adUrl, {\n      credentials: personalized ? 'include' : 'omit',\n    }).then((doc) => {\n      const urlService = Services.urlForDoc(dev().assertElement(this.element));\n      const {origin} = urlService.parse(this.getAmpDoc().getUrl());\n\n      const recs = [];\n      const ads = doc.getElementsByTagName('AD');\n      for (let i = 0; i < ads.length; i++) {\n        const ad = ads[i];\n        const titleEl = elementByTag(ad, 'LINE1');\n        const mediaEl = elementByTag(ad, 'MEDIA_TEMPLATE_DATA');\n\n        const visibleUrl = ad.getAttribute('visible_url');\n        const url = ad.getAttribute('url');\n        const title = extractAdSenseTextContent(titleEl);\n        const image = extractAdSenseImageUrl(mediaEl);\n\n        const isValidOrigin = urlService.parse(visibleUrl).origin === origin;\n        if (isValidOrigin && url && title && image) {\n          recs.push({\n            title,\n            image,\n            ampUrl: url,\n          });\n        }\n      }\n      return recs;\n    });\n  }\n\n  /**\n   * Verifies the specified config as a valid {@code NextPageConfig} and\n   * registers the {@link NextPageService} for this document.\n   * @param {!NextPageService} service Service to register with.\n   * @param {*} configJson Config JSON object.\n   * @param {?Element} separator Optional custom separator element.\n   * @private\n   */\n  register_(service, configJson, separator) {\n    const {element} = this;\n    const config = assertConfig(element, configJson, this.getAmpDoc().getUrl());\n    service.register(element, config, separator);\n    service.setAppendPageHandler((element) => this.appendPage_(element));\n  }\n\n  /**\n   * Appends the element too page\n   * @param {!Element} element\n   * @return {!Promise}\n   */\n  appendPage_(element) {\n    return this.mutateElement(() => this.element.appendChild(element));\n  }\n\n  /**\n   * Fetches the element config from the URL specified in [src].\n   * @private\n   * @return {*} TODO(#23582): Specify return type\n   */\n  fetchConfig_() {\n    const ampdoc = this.getAmpDoc();\n    const policy = UrlReplacementPolicy.ALL;\n    return batchFetchJsonFor(ampdoc, this.element, {urlReplacement: policy});\n  }\n\n  /**\n   * @param {string} feature unsupported feature\n   * @private\n   */\n  unsupportedFeatureWarn_(feature) {\n    user().warn(\n      TAG,\n      `${feature} is a feature of ${TAG} 1.0, please update your version to use it`\n    );\n  }\n}\n\n/**\n * @param {!Element|!../../../src/service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @return {!Promise<!NextPageService>}\n */\nfunction nextPageServiceForDoc(elementOrAmpDoc) {\n  return /** @type {!Promise<!NextPageService>} */ (\n    getServicePromiseForDoc(elementOrAmpDoc, SERVICE_ID)\n  );\n}\n\n/**\n * Extracts the core_image_url string from the JSON text content of the\n * MEDIA_TEMPLATE_DATA tag.\n * @param {Element} el The element containing the media JSON text.\n * @return {string} The image URL, or empty string if it could not be\n *     extracted.\n */\nfunction extractAdSenseImageUrl(el) {\n  try {\n    // Media payload is a JSON string terminated with a semicolon. Remove it\n    // before parsing.\n    const media = parseJson(el.textContent.trim().slice(0, -1))[0];\n    return media['core_image_url'];\n  } catch (e) {\n    return '';\n  }\n}\n\n/**\n * Returns the text content of an element, with leading/trailing whitespace\n * trimmed.\n * @param {Element} el\n * @return {*} TODO(#23582): Specify return type\n */\nfunction extractAdSenseTextContent(el) {\n  const content = (el && el.textContent) || '';\n  return content.trim();\n}\n\nAMP.extension(TAG, '0.1', (AMP) => {\n  const service = new NextPageService();\n  AMP.registerServiceForDoc(SERVICE_ID, function () {\n    return service;\n  });\n  AMP.registerElement(TAG, AmpNextPage, CSS);\n});\n"],
  "mappings": "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",
  "names": []
}
