{
  "version": 3,
  "sources": ["../../src/core/data-structures/promise.js", "../../src/core/constants/consent-state.js", "../../src/core/types/array.js", "../../src/core/types/enum.js", "../../src/core/types/string/index.js", "../../src/core/types/object/index.js", "../../src/core/types/index.js", "../../src/core/dom/fingerprint.js", "../../extensions/amp-geo/0.1/amp-geo-in-group.js", "../../src/core/mode/prod.js", "../../src/core/mode/test.js", "../../src/core/mode/local-dev.js", "../../src/core/mode/minified.js", "../../src/core/mode/version.js", "../../src/core/mode/esm.js", "../../src/core/types/object/json.js", "../../src/core/window/index.js", "../../src/core/error/message-helpers.js", "../../src/core/assert/base.js", "../../src/core/assert/dev.js", "../../third_party/css-escape/css-escape.js", "../../src/core/dom/css-selectors.js", "../../src/core/dom/query.js", "../../src/core/dom/index.js", "../../src/config.js", "../../src/core/types/string/url.js", "../../src/mode.js", "../../src/service/extension-script.js", "../../src/core/error/index.js", "../../src/core/types/function/index.js", "../../src/utils/log.js", "../../src/service-helpers.js", "../../src/element-service.js", "../../src/service/index.js", "../../ads/google/a4a/shared/url-builder.js", "../../src/experiments/index.js", "../../src/consent.js", "../../src/service/resources-interface.js", "../../src/ini-load.js", "../../ads/_config.js", "../../src/ad-cid.js", "../../src/core/dom/layout/rect.js", "../../src/core/dom/layout/page-layout-box.js", "../../src/core/document/format.js", "../../src/core/document/ready.js", "../../src/core/dom/event-helper-listen.js", "../../src/utils/event-helper.js", "../../src/service/variable-source.js", "../../ads/google/a4a/utils.js", "../../ads/google/a4a/traffic-experiments.js", "../../src/core/dom/style.js", "../../src/core/types/string/bytes.js", "../../src/experiments/story-ad-auto-advance.js", "../../src/experiments/story-ad-page-outlink.js", "../../src/experiments/story-ad-placements.js", "../../src/experiments/story-ad-progress-segment.js", "../../src/core/data-structures/priority-queue.js", "../../src/core/window/interface.js", "../../src/core/data-structures/lru-cache.js", "../../src/url.js", "../../src/impression.js", "../../src/open-window-dialog.js", "../../src/service/navigation.js", "../../extensions/amp-ad-network-adsense-impl/0.1/adsense-shared-state.js", "../../ads/google/a4a/shared/content-recommendation.js", "../../ads/google/utils.js", "../../src/core/math.js", "../../extensions/amp-ad-network-adsense-impl/0.1/responsive-state.js", "../../src/core/3p-frame.js", "../../src/core/dom/layout/index.js", "../../src/mode-object.js", "../../src/iframe-attributes.js", "../../src/3p-frame.js", "../../src/core/constants/common-signals.js", "../../src/utils/analytics.js", "../../src/extension-analytics.js", "../../ads/_a4a-config.js", "../../src/core/dom/layout/viewport-observer.js", "../../src/core/dom/layout/intersection.js", "../../src/core/dom/stream/detached.js", "../../src/core/dom/stream/response.js", "../../src/service/real-time-config/callout-vendors.js", "../../src/core/constants/amp-events.js", "../../src/core/types/function/exponential-backoff.js", "../../src/style-installer.js", "../../src/error-reporting.js", "../../src/service/real-time-config/real-time-config-impl.js", "../../src/service/url-expander/expander.js", "../../src/service/url-replacements-impl.js", "../../src/utils/dom-writer.js", "../../src/utils/dom-tranform-stream.js", "../../extensions/amp-a4a/0.1/a4a-variable-source.js", "../../extensions/amp-a4a/0.1/amp-ad-utils.js", "../../src/core/constants/visibility-state.js", "../../src/core/data-structures/signals.js", "../../src/polyfills/abort-controller.js", "../../src/polyfills/custom-elements.js", "../../src/polyfills/document-contains.js", "../../src/polyfills/stubs/intersection-observer-stub.js", "../../src/polyfills/intersection-observer.js", "../../src/polyfills/stubs/resize-observer-stub.js", "../../src/polyfills/resize-observer.js", "../../src/core/dom/static-template.js", "../../src/service/resource.js", "../../src/chunk.js", "../../src/core/constants/action-constants.js", "../../src/iframe-helper.js", "../../src/utils/intersection-observer-3p-host.js", "../../src/custom-element.js", "../../src/service/custom-element-registry.js", "../../src/core/data-structures/observable.js", "../../src/pass.js", "../../src/inabox/inabox-resources.js", "../../src/core/constants/key-codes.js", "../../src/service/action-impl.js", "../../src/core/types/string/base64.js", "../../src/service/cache-cid-api.js", "../../src/cookies.js", "../../src/service/cid-api.js", "../../src/service/viewer-cid-api.js", "../../src/service/cid-impl.js", "../../src/service/document-info-impl.js", "../../src/service/hidden-observer-impl.js", "../../src/core/window/history.js", "../../src/service/history-impl.js", "../../src/service/loader-element.js", "../../src/service/loading-indicator.js", "../../src/focus-history.js", "../../src/service/mutator-impl.js", "../../src/service/owners-impl.js", "../../src/core/data-structures/finite-state-machine.js", "../../src/service/task-queue.js", "../../src/service/resources-impl.js", "../../src/service/standard-actions-impl.js", "../../src/service/storage-impl.js", "../../src/service/template-impl.js", "../../src/service/timer-impl.js", "../../src/service/url-impl.js", "../../src/service/viewer-impl.js", "../../src/core/dom/transition.js", "../../src/core/data-structures/curve.js", "../../src/utils/animation.js", "../../src/service/viewport/viewport-binding-def.js", "../../src/service/viewport/viewport-binding-ios-embed-wrapper.js", "../../src/service/viewport/viewport-binding-natural.js", "../../src/service/viewport/viewport-impl.js", "../../src/document-submit.js", "../../src/preconnect.js", "../../src/service/core-services.js", "../../build/ampshared.css.js", "../../src/friendly-iframe-embed.js", "../../extensions/amp-a4a/0.1/head-validation.js", "../../extensions/amp-a4a/0.1/secure-frame.js", "../../extensions/amp-a4a/0.1/signature-verifier.js", "../../extensions/amp-a4a/0.1/within-viewport.js", "../../src/ad-helper.js", "../../extensions/amp-ad/0.1/concurrent-load.js", "../../extensions/amp-a4a/0.1/amp-a4a.js", "../../extensions/amp-ad-network-adsense-impl/0.1/amp-ad-network-adsense-impl.js"],
  "sourcesContent": ["let resolved;\n\n/**\n * Returns a cached resolved promise.\n * Babel converts direct calls to Promise.resolve() (with no arguments) into\n * calls to this.\n *\n * @return {!Promise<undefined>}\n */\nexport function resolvedPromise() {\n  if (resolved) {\n    return resolved;\n  }\n\n  // It's important that we call with `undefined` here, to prevent a transform\n  // recursion. If we didn't pass an arg, then the transformer would replace\n  // this callsite with a call to `resolvedPromise()`.\n  resolved = Promise.resolve(undefined);\n  return resolved;\n}\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nexport class Deferred {\n  /** Constructor. */\n  constructor() {\n    /** @const {!Promise<T>} */\n    this.promise = new /*OK*/ Promise((res, rej) => {\n      /** @const {function(T=)} */\n      this.resolve = res;\n      /** @const {function(*=)} */\n      this.reject = rej;\n    });\n  }\n}\n\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\nexport function tryResolve(fn) {\n  return new Promise((resolve) => {\n    resolve(fn());\n  });\n}\n\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\nexport class LastAddedResolver {\n  /**\n   * @param {!Array<!IThenable>=} opt_promises\n   */\n  constructor(opt_promises) {\n    /** @private @const {!Deferred} */\n    this.deferred_ = new Deferred();\n\n    /** @private */\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (const promise of opt_promises) {\n        this.add(promise);\n      }\n    }\n  }\n\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!IThenable} promise\n   * @return {!Promise}\n   */\n  add(promise) {\n    const countAtAdd = ++this.count_;\n    promise.then(\n      (result) => {\n        if (this.count_ === countAtAdd) {\n          this.deferred_.resolve(result);\n        }\n      },\n      (error) => {\n        // Don't follow behavior of Promise.all and Promise.race error so that\n        // this will only reject when most recently added promise fails.\n        if (this.count_ === countAtAdd) {\n          this.deferred_.reject(error);\n        }\n      }\n    );\n    return this.deferred_.promise;\n  }\n\n  /** @override */\n  then(opt_resolve, opt_reject) {\n    return this.deferred_.promise.then(opt_resolve, opt_reject);\n  }\n}\n", "// This file will be imported by 3P scripts.\n\n/**\n * Possible consent policy state to proceed with.\n * @enum {number}\n */\nexport const CONSENT_POLICY_STATE = {\n  // Enum value has external dependency. Please do not change existing value.\n  // If new values are added, please notify the AMP for Ads team to assure\n  // correct Real Time Config behavior is maintained for Fast Fetch.\n  SUFFICIENT: 1,\n  INSUFFICIENT: 2,\n  UNKNOWN_NOT_REQUIRED: 3,\n  UNKNOWN: 4,\n};\n\n/**\n * Defines valid consent string types passed\n * in by consent iframe metadata.\n * @enum {number}\n */\nexport const CONSENT_STRING_TYPE = {\n  // Enum value has external dependency for metadata collection.\n  // It is up to the vendor to interpret an undefined CONSENT_STRING_TYPE.\n  TCF_V1: 1,\n  TCF_V2: 2,\n  US_PRIVACY_STRING: 3,\n};\n", "/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\nexport function toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\nexport const {isArray} = Array;\n\n/**\n * If the specified argument is an array, it's returned as is. If it's a\n * single item, the array containing this item is created and returned.\n *\n * The double-template pattern here solves a bug where CC can be passed a value\n * with declared type {string|!Array<string>} and return a value with a type of\n * {!Array<string|Array<string>>}.\n *\n * @param {!Array<T>|S} arrayOrSingleItem\n * @return {!Array<T>|!Array<S>}\n * @template S\n * @template T\n */\nexport function arrayOrSingleItemToArray(arrayOrSingleItem) {\n  return isArray(arrayOrSingleItem)\n    ? /** @type {!Array<T>} */ (arrayOrSingleItem)\n    : [/** @type {!S} */ (arrayOrSingleItem)];\n}\n\n/**\n * Compares if two arrays contains exactly same elements of same number\n * of same order. Note that it does NOT handle NaN case as expected.\n *\n * @param {!Array<T>} arr1\n * @param {!Array<T>} arr2\n * @return {boolean}\n * @template T\n */\nexport function areEqualOrdered(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Removes elements that shouldRemove returns true for from the array.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} shouldRemove\n * @return {!Array<T>}\n * @template T\n */\nexport function remove(array, shouldRemove) {\n  const removed = [];\n  let index = 0;\n  for (let i = 0; i < array.length; i++) {\n    const item = array[i];\n    if (shouldRemove(item, i, array)) {\n      removed.push(item);\n    } else {\n      if (index < i) {\n        array[index] = item;\n      }\n      index++;\n    }\n  }\n  if (index < array.length) {\n    array.length = index;\n  }\n  return removed;\n}\n\n/**\n * Returns the index of the first element matching the predicate.\n * Like Array#findIndex.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} predicate\n * @return {number}\n * @template T\n */\nexport function findIndex(array, predicate) {\n  for (let i = 0; i < array.length; i++) {\n    if (predicate(array[i], i, array)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Converts the given iterator to an array.\n *\n * @param {!Iterator<T>} iterator\n * @return {Array<T>}\n * @template T\n */\nexport function fromIterator(iterator) {\n  const array = [];\n  for (let e = iterator.next(); !e.done; e = iterator.next()) {\n    array.push(e.value);\n  }\n  return array;\n}\n\n/**\n * Adds item to array if it is not already present.\n *\n * @param {Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function pushIfNotExist(array, item) {\n  if (array.indexOf(item) < 0) {\n    array.push(item);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Removes the first matching item in the array. Returns `true` if the array\n * has changed.\n *\n * @param {!Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function removeItem(array, item) {\n  const index = array.indexOf(item);\n  if (index == -1) {\n    return false;\n  }\n  array.splice(index, 1);\n  return true;\n}\n\n/**\n * Returns the last item in an array.\n *\n * @param {Array<T>} array\n * @template T\n * @return {?T}\n */\nexport function lastItem(array) {\n  return array[array.length - 1];\n}\n", "/**\n * Checks whether `val` is a valid value of `enumObj`.\n *\n * @param {!Object<T>} enumObj\n * @param {T} val\n * @return {boolean}\n * @template T\n */\nexport function isEnumValue(enumObj, val) {\n  for (const k in enumObj) {\n    if (enumObj[k] === val) {\n      return true;\n    }\n  }\n  return false;\n}\n", "/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n\n/**\n * @param {string} match\n * @return {string}\n */\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\nexport function dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\nexport function camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\nexport function dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\nexport function endsWith(string, suffix) {\n  const index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\nexport function includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n  if (start + substring.length > string.length) {\n    return false;\n  }\n  return string.indexOf(substring, start) !== -1;\n}\n\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\nexport function expandTemplate(template, getter, opt_maxIterations) {\n  const maxIterations = opt_maxIterations || 1;\n  for (let i = 0; i < maxIterations; i++) {\n    let matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, (_a, b) => {\n      matches++;\n      return getter(b);\n    });\n    if (!matches) {\n      break;\n    }\n  }\n  return template;\n}\n\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\nexport function stringHash32(str) {\n  const {length} = str;\n  let hash = 5381;\n  for (let i = 0; i < length; i++) {\n    hash = (hash * 33) ^ str.charCodeAt(i);\n  }\n  // Convert from 32-bit signed to unsigned.\n  return String(hash >>> 0);\n}\n\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\nexport function trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\nexport function trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n\n/**\n * Wrapper around String.replace that handles asynchronous resolution.\n * @param {string} str\n * @param {RegExp} regex\n * @param {Function|string} replacer\n * @return {!Promise<string>}\n */\nexport function asyncStringReplace(str, regex, replacer) {\n  if (isString(replacer)) {\n    return Promise.resolve(str.replace(regex, replacer));\n  }\n  const stringBuilder = [];\n  let lastIndex = 0;\n\n  str.replace(regex, function (match) {\n    // String.prototype.replace will pass 3 to n number of arguments to the\n    // callback function based on how many capture groups the regex may or may\n    // not contain. We know that the match will always be first, and the\n    // index will always be second to last.\n    const matchIndex = arguments[arguments.length - 2];\n    stringBuilder.push(str.slice(lastIndex, matchIndex));\n    lastIndex = matchIndex + match.length;\n\n    // Store the promise in it's eventual string position.\n    const replacementPromise = replacer.apply(null, arguments);\n    stringBuilder.push(replacementPromise);\n  });\n  stringBuilder.push(str.slice(lastIndex));\n\n  return Promise.all(stringBuilder).then((resolved) => resolved.join(''));\n}\n\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {string}\n */\nexport function padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n  targetLength = targetLength - s.length;\n  let padding = padString;\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n  return padding.slice(0, targetLength) + s;\n}\n\n/**\n * Tests if a value is a string.\n * @param {?} s\n * @return {boolean}\n */\nexport function isString(s) {\n  return typeof s == 'string';\n}\n", "/* @const */\nconst {hasOwnProperty: hasOwn_, toString: toString_} = Object.prototype;\n\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\nexport function isObject(value) {\n  return toString_.call(value) === '[object Object]';\n}\n\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\nexport function map(opt_initial) {\n  const obj = Object.create(null);\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n  return obj;\n}\n\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\nexport function dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return /** @type {!JsonObject} */ (opt_initial || {});\n}\n\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\nexport function hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\nexport function ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\nexport function deepMerge(target, source, depth = 10) {\n  // Keep track of seen objects to detect recursive references.\n  const seen = [];\n\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n  const queue = [];\n  queue.push({t: target, s: source, d: 0});\n\n  // BFS to ensure objects don't have recursive references at shallower depths.\n  while (queue.length > 0) {\n    const {d, s, t} = queue.shift();\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n    seen.push(s);\n    if (t === s) {\n      continue;\n    }\n    if (d > depth) {\n      Object.assign(t, s);\n      continue;\n    }\n    for (const key of Object.keys(s)) {\n      const newValue = s[key];\n      // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n      if (hasOwn(t, key)) {\n        const oldValue = t[key];\n        if (isObject(newValue) && isObject(oldValue)) {\n          queue.push({t: oldValue, s: newValue, d: d + 1});\n          continue;\n        }\n      }\n      t[key] = newValue;\n    }\n  }\n  return target;\n}\n\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\nexport function omit(o, props) {\n  return Object.keys(o).reduce((acc, key) => {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n    return acc;\n  }, {});\n}\n\n/**\n * @param {!Object|null|undefined} o1\n * @param {!Object|null|undefined} o2\n * @return {boolean}\n */\nexport function objectsEqualShallow(o1, o2) {\n  if (o1 == null || o2 == null) {\n    // Null is only equal to null, and undefined to undefined.\n    return o1 === o2;\n  }\n\n  for (const k in o1) {\n    if (o1[k] !== o2[k]) {\n      return false;\n    }\n  }\n  for (const k in o2) {\n    if (o2[k] !== o1[k]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @param {T} obj\n * @param {string} prop\n * @param {function(T, string):R} factory\n * @return {R}\n * @template T,R\n */\nexport function memo(obj, prop, factory) {\n  let result = /** @type {?R} */ (obj[prop]);\n  if (result === undefined) {\n    result = factory(obj, prop);\n    obj[prop] = result;\n  }\n  return result;\n}\n\n/**\n * Recreates objects with prototype-less copies.\n * @param {!JsonObject} obj\n * @return {!JsonObject}\n */\nexport function recreateNonProtoObject(obj) {\n  const copy = map();\n  for (const k in obj) {\n    if (!hasOwn(obj, k)) {\n      continue;\n    }\n    const v = obj[k];\n    copy[k] = isObject(v) ? recreateNonProtoObject(v) : v;\n  }\n  return /** @type {!JsonObject} */ (copy);\n}\n\n/**\n * Returns a value from an object for a field-based expression. The expression\n * is a simple nested dot-notation of fields, such as `field1.field2`. If any\n * field in a chain does not exist or is not an object or array, the returned\n * value will be `undefined`.\n *\n * @param {!JsonObject} obj\n * @param {string} expr\n * @return {*}\n */\nexport function getValueForExpr(obj, expr) {\n  // The `.` indicates \"the object itself\".\n  if (expr == '.') {\n    return obj;\n  }\n  // Otherwise, navigate via properties.\n  const parts = expr.split('.');\n  let value = obj;\n  for (const part of parts) {\n    if (\n      part &&\n      value &&\n      value[part] !== undefined &&\n      typeof value == 'object' &&\n      hasOwn(value, part)\n    ) {\n      value = value[part];\n      continue;\n    }\n    value = undefined;\n    break;\n  }\n  return value;\n}\n", "// Export all type-checking helpers for convenience\nexport {isArray} from './array';\nexport {isEnumValue} from './enum';\nexport {isString} from './string';\nexport {isObject} from './object';\n\n/**\n * Determines if value is an ELement\n * @param {*} value\n * @return {boolean}\n */\nexport function isElement(value) {\n  return value?.nodeType == /* Node.ELEMENT_NODE */ 1;\n}\n\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\nexport function isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n", "import {isElement} from '#core/types';\nimport {stringHash32} from '#core/types/string';\n\n/**\n * Gets a string of concatenated element names and relative positions\n * of the DOM element and its parentElement's (up to 25).  Relative position\n * is the index of nodes with this tag within the parent's children.\n * The order is from the inner to outer nodes in DOM hierarchy.\n *\n * If a DOM hierarchy is the following:\n *\n * <div id='id1' ...>\n *   <div id='id2' ...>\n *     <table ...>       // table:0\n *       <tr>            // tr:0\n *         <td>...</td>  // td:0\n *         <td>          // td:1\n *           <amp-ad ...></amp-ad>\n *         </td>\n *       </tr>\n *       <tr>...</tr>    // tr:1\n *     </table>\n *   </div>\n * </div>\n *\n * With the amp-ad element passed in:\n * 'amp-ad.0,td.1,tr.0,table.0,div/id2.0,div/id1.0'\n *\n * Note: 25 is chosen arbitrarily.\n *\n * @param {?Element} element DOM node from which to get fingerprint.\n * @return {string} Concatenated element ids.\n */\nexport function domFingerprintPlain(element) {\n  const ids = [];\n  let level = 0;\n  while (isElement(element) && level < 25) {\n    let id = '';\n    if (element.id) {\n      id = `/${element.id}`;\n    }\n    const nodeName = element.nodeName.toLowerCase();\n    ids.push(`${nodeName}${id}${indexWithinParent(element)}`);\n    level++;\n    element = element.parentElement;\n  }\n  return ids.join();\n}\n\nexport class DomFingerprint {\n  /**\n   * Calculates ad slot DOM fingerprint.  This key is intended to\n   * identify \"same\" ad unit across many page views. This is\n   * based on where the ad appears within the page's DOM structure.\n   *\n   * @param {?Element} element The DOM element from which to collect\n   *     the DOM chain element IDs.  If null, DOM chain element IDs are not\n   *     included in the hash.\n   * @return {string} The ad unit hash key string.\n   */\n  static generate(element) {\n    return stringHash32(domFingerprintPlain(element));\n  }\n}\n\n/**\n * Gets a string showing the index of an element within\n * the children of its parent, counting only nodes with the same tag.\n * Stop at 25, just to have a limit.\n * @param {!Element} element DOM node to get index of.\n * @return {string} '.<index>' or ''.\n */\nfunction indexWithinParent(element) {\n  const {nodeName} = element;\n  // Find my index within my parent's children\n  let i = 0;\n  let count = 0;\n  let sibling = element.previousElementSibling;\n  // Different browsers have different children.\n  // So count only nodes with the same tag.\n  // Use a limit for the tags, so that different browsers get the same\n  // count. So 25 and higher all return no index.\n  while (sibling && count < 25 && i < 100) {\n    if (sibling.nodeName == nodeName) {\n      count++;\n    }\n    i++;\n    sibling = sibling.previousElementSibling;\n  }\n  // If we got to the end, then the count is accurate; otherwise skip count.\n  return count < 25 && i < 100 ? `.${count}` : '';\n}\n", "/**\n * @enum {number}\n */\nexport const GEO_IN_GROUP = {\n  NOT_DEFINED: 1,\n  IN: 2,\n  NOT_IN: 3,\n};\n", "/**\n * Returns true when the build is meant for distribution.\n * This means `amp dist` was called _without_ the --fortesting flag.\n *\n * This is a magic constant replaced by babel.\n *\n * Calls are DCE'd when compiled.\n * @return {boolean}\n */\nexport function isProd() {\n  return IS_PROD;\n}\n", "import {isProd} from './prod';\n\n/**\n * Returns true if executing in a testing environment. Calls may be DCE'd when\n * compiled based on isForDistribution.\n * @param {!Window=} opt_win\n * @return {boolean}\n */\nexport function isTest(opt_win) {\n  if (isProd()) {\n    return false;\n  }\n  const win = opt_win || self;\n  return !!(win.AMP_CONFIG?.test || win.__AMP_TEST || win['__karma__']);\n}\n", "import {isProd} from './prod';\nimport {isTest} from './test';\n\n/**\n * Returns true if executing in a local development or testing environment.\n * Calls may be DCE'd when compiled based on isForDistribution and isTest.\n *\n * @param {!Window=} opt_win\n * @return {boolean}\n */\nexport function isLocalDev(opt_win) {\n  if (isProd()) {\n    return false;\n  }\n\n  return !!self.AMP_CONFIG?.localDev || isTest(opt_win);\n}\n", "/**\n * Returns true whenever closure compiler is used.\n * This is a magic constant that is replaced by babel.\n *\n * @return {boolean}\n */\nexport function isMinified() {\n  return IS_MINIFIED;\n}\n", "/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nexport function version() {\n  return INTERNAL_RUNTIME_VERSION;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isProd} from './prod';\n\n/**\n * Returns true when compiling an esm binary.\n * This is a magic constant that is replaced by babel.\n *\n * @return {boolean}\n */\nexport function isEsm() {\n  if (isProd()) {\n    return IS_ESM;\n  }\n\n  return self?.__AMP_MODE?.esm ?? IS_ESM;\n}\n", "import {isArray} from '#core/types/array';\n\n/**\n * @fileoverview This module declares JSON types as defined in the\n * {@link http://json.org/}.\n */\n\n// NOTE Type are changed to {*} because of\n// https://github.com/google/closure-compiler/issues/1999\n\n/**\n * JSON scalar. It's either string, number or boolean.\n * @typedef {string|number|boolean|null}\n */\nlet JSONScalarDef;\n\n/**\n * JSON object. It's a map with string keys and JSON values.\n * @typedef {!Object<string, ?*>} (* should be JSONValueDef)\n */\nlet JSONObjectDef;\n\n/**\n * JSON array. It's an array with JSON values.\n * @typedef {!Array<?*>} (* should be JSONValueDef)\n */\nlet JSONArrayDef;\n\n/**\n * JSON value. It's either a scalar, an object or an array.\n * @typedef {!JSONScalarDef|!JSONObjectDef|!JSONArrayDef}\n */\nlet JSONValueDef;\n\n/**\n * @typedef {{\n *   YOU_MUST_USE: string,\n *   jsonLiteral: function(),\n *   TO_MAKE_THIS_TYPE: string,\n * }}\n */\nlet InternalJsonLiteralTypeDef;\n\n/**\n * Simple wrapper around JSON.parse that casts the return value\n * to JsonObject.\n * Create a new wrapper if an array return value is desired.\n * @param {string} json JSON string to parse\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function parseJson(json) {\n  return /** @type {?JsonObject} */ (JSON.parse(json));\n}\n\n/**\n * Parses the given `json` string without throwing an exception if not valid.\n * Returns `undefined` if parsing fails.\n * Returns the `Object` corresponding to the JSON string when parsing succeeds.\n * @param {string} json JSON string to parse\n * @param {function(!Error)=} opt_onFailed Optional function that will be called\n *     with the error if parsing fails.\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function tryParseJson(json, opt_onFailed) {\n  try {\n    return parseJson(json);\n  } catch (e) {\n    opt_onFailed?.(e);\n    return null;\n  }\n}\n\n/**\n * Deeply checks strict equality of items in nested arrays and objects.\n *\n * @param {JSONValueDef} a\n * @param {JSONValueDef} b\n * @param {number} depth The maximum depth. Must be finite.\n * @return {boolean}\n * @throws {Error} If depth argument is not finite.\n */\nexport function deepEquals(a, b, depth = 5) {\n  if (!isFinite(depth) || depth < 0) {\n    throw new Error('Invalid depth: ' + depth);\n  }\n  if (a === b) {\n    return true;\n  }\n  /** @type {!Array<{a: JSONValueDef, b: JSONValueDef, depth: number}>} */\n  const queue = [{a, b, depth}];\n  while (queue.length > 0) {\n    const {a, b, depth} = queue.shift();\n    // Only check deep equality if depth > 0.\n    if (depth > 0) {\n      if (typeof a !== typeof b) {\n        return false;\n      } else if (isArray(a) && isArray(b)) {\n        if (a.length !== b.length) {\n          return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n          queue.push({a: a[i], b: b[i], depth: depth - 1});\n        }\n        continue;\n      } else if (a && b && typeof a === 'object' && typeof b === 'object') {\n        const keysA = Object.keys(a);\n        const keysB = Object.keys(b);\n        if (keysA.length !== keysB.length) {\n          return false;\n        }\n        for (const k of keysA) {\n          queue.push({a: a[k], b: b[k], depth: depth - 1});\n        }\n        continue;\n      }\n    }\n    // If we get here, then depth == 0 or (a, b) are primitives.\n    if (a !== b) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * This helper function handles configurations specified in a JSON format.\n *\n * It allows the configuration is to be written in plain JS (which has better\n * dev ergonomics like comments and trailing commas), and allows the\n * configuration to be transformed into an efficient JSON-parsed representation\n * in the dist build. See https://v8.dev/blog/cost-of-javascript-2019#json\n *\n * @param {!Object} obj\n * @return {!JsonObject}\n */\nexport function jsonConfiguration(obj) {\n  return /** @type {!JsonObject} */ (obj);\n}\n\n/**\n * This converts an Object into a suitable type to be used in `includeJsonLiteral`.\n * This doesn't actually do any conversion, it only changes the closure type.\n *\n * @param {?JSONValueDef} value\n * @return {!InternalJsonLiteralTypeDef}\n */\nexport function jsonLiteral(value) {\n  return /** @type {!InternalJsonLiteralTypeDef} */ (value);\n}\n\n/**\n * Allows inclusion of a variable (that's wrapped in a jsonLiteral\n * call) to be included inside a jsonConfiguration.\n *\n * @param {!InternalJsonLiteralTypeDef} value\n * @return {*}\n */\nexport function includeJsonLiteral(value) {\n  return value;\n}\n", "/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {?Window} winOrNull\n * @return {!Window}\n */\nexport function toWin(winOrNull) {\n  return /** @type {!Window} */ (winOrNull);\n}\n\n/**\n * Returns the associated Window for a node.\n *\n * @param {!Node} node\n * @return {!Window}\n */\nexport function getWin(node) {\n  return toWin(\n    (node.ownerDocument || /** @type {!Document} */ (node)).defaultView\n  );\n}\n", "import {isElement} from '#core/types';\n\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\nexport const USER_ERROR_SENTINEL = '\\u200B\\u200B\\u200B';\n/**\n * Four zero width space.\n *\n * @const {string}\n */\nexport const USER_ERROR_EMBED_SENTINEL = '\\u200B\\u200B\\u200B\\u200B';\n\n/**\n * Converts an element to a readable string; all other types are unchanged.\n * TODO(rcebulko): Unify with log.js\n * @param {*} val\n * @return {*}\n */\nexport function elementStringOrPassThru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (isElement(val)) {\n    val = /** @type {Element} */ (val);\n    return val.tagName.toLowerCase() + (val.id ? `#${val.id}` : '');\n  }\n  return val;\n}\n\n/**\n * Tests if an error message contains the user sentinel.\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\nexport function isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\nexport function isUserErrorEmbedMessage(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n\n/**\n * Strips the user error sentinel from an error message.\n * @param {string} message\n * @return {string} The new message without USER_ERROR_SENTINEL\n */\nexport function stripUserError(message) {\n  return message.replace(USER_ERROR_SENTINEL, '');\n}\n", "import {elementStringOrPassThru} from '#core/error/message-helpers';\nimport {isArray, isElement, isString} from '#core/types';\nimport {remove} from '#core/types/array';\n\n/**\n * @fileoverview This file provides the base implementation for assertion\n * functions. Most files should never import from this; instead, import from\n * `dev` or `user`. It is also used by the Log class for its assertions.\n */\n\n/**\n * A base assertion function, provided to various assertion helpers.\n * @typedef {function(?, string=, ...*):?|function(?, !Array<*>)}\n */\nexport let AssertionFunctionDef;\n\n/**\n * Throws an error if the second argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n * @param {?string} sentinel\n * @param {T} shouldBeTruthy\n * @param {string} opt_message\n * @param {...*} var_args Arguments substituted into %s in the message\n * @return {T}\n * @template T\n * @throws {Error} when shouldBeTruthy is not truthy.\n */\nexport function assert(\n  sentinel,\n  shouldBeTruthy,\n  opt_message = 'Assertion failed',\n  var_args\n) {\n  if (shouldBeTruthy) {\n    return shouldBeTruthy;\n  }\n\n  // Include the sentinel string if provided and not already present\n  if (sentinel && opt_message.indexOf(sentinel) == -1) {\n    opt_message += sentinel;\n  }\n\n  // Skip the first 3 arguments to isolate format params\n  // const messageArgs = Array.prototype.slice.call(arguments, 3);\n  // Index at which message args start\n  let i = 3;\n\n  // Substitute provided values into format string in message\n  const splitMessage = opt_message.split('%s');\n  let message = splitMessage.shift();\n  const messageArray = [message];\n\n  while (splitMessage.length) {\n    const subValue = arguments[i++];\n    const nextConstant = splitMessage.shift();\n\n    message += elementStringOrPassThru(subValue) + nextConstant;\n    messageArray.push(subValue, nextConstant.trim());\n  }\n\n  const error = new Error(message);\n  error.messageArray = remove(messageArray, (x) => x !== '');\n  // __AMP_REPORT_ERROR is installed globally per window in the entry point in\n  // AMP documents. It may not be present for Bento/Preact elements on non-AMP\n  // pages.\n  self.__AMP_REPORT_ERROR?.(error);\n  throw error;\n}\n\n/**\n * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n *\n * It understands array-based \"id\"-contracted messages.\n *\n * Otherwise creates a sprintf syntax string containing the optional message or the\n * default. The `subject` of the assertion is added at the end.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {T} subject\n * @param {*} shouldBeTruthy\n * @param {string} defaultMessage\n * @param {!Array<*>|string=} opt_message\n * @return {T}\n * @template T\n * @private\n */\nfunction assertType_(\n  assertFn,\n  subject,\n  shouldBeTruthy,\n  defaultMessage,\n  opt_message\n) {\n  if (isArray(opt_message)) {\n    assertFn(\n      shouldBeTruthy,\n      /** @type {!Array} */ (opt_message).concat([subject])\n    );\n  } else {\n    assertFn(shouldBeTruthy, `${opt_message || defaultMessage}: %s`, subject);\n  }\n\n  return subject;\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertElement(assertFn, shouldBeElement, opt_message) {\n  return /** @type {!Element} */ (\n    assertType_(\n      assertFn,\n      shouldBeElement,\n      isElement(shouldBeElement),\n      'Element expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertString(assertFn, shouldBeString, opt_message) {\n  return /** @type {string} */ (\n    assertType_(\n      assertFn,\n      shouldBeString,\n      isString(shouldBeString),\n      'String expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertNumber(assertFn, shouldBeNumber, opt_message) {\n  return /** @type {number} */ (\n    assertType_(\n      assertFn,\n      shouldBeNumber,\n      typeof shouldBeNumber == 'number',\n      'Number expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertArray(assertFn, shouldBeArray, opt_message) {\n  return /** @type {!Array} */ (\n    assertType_(\n      assertFn,\n      shouldBeArray,\n      isArray(shouldBeArray),\n      'Array expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertBoolean(assertFn, shouldBeBoolean, opt_message) {\n  return /** @type {boolean} */ (\n    assertType_(\n      assertFn,\n      shouldBeBoolean,\n      !!shouldBeBoolean === shouldBeBoolean,\n      'Boolean expected',\n      opt_message\n    )\n  );\n}\n", "import * as mode from '#core/mode';\n\nimport * as assertions from './base';\n\n/**\n * @fileoverview This file provides the entrypoint for dev assertions. It's\n * designed so all functions are pure function calls to improve inlining. All\n * functions in this file get DCE'd away during compilation.\n */\n\n/**\n * This will never execute regardless, but will be included on unminified builds\n * builds. It will be DCE'd away from minified builds, and so can be used to\n * validate that Babel is properly removing dev assertions in minified builds.\n */\nfunction devAssertDceCheck() {\n  if (self.__AMP_ASSERTION_CHECK) {\n    console /*OK*/\n      .log('__devAssert_sentinel__');\n  }\n}\n\n/**\n * Throws an error if the first argument isn't trueish. Mirrors devAssert in\n * src/log.js.\n * @param {T} shouldBeTruthy\n * @param {string=} opt_message\n * @param {*=} opt_1 Optional argument (var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T}\n * @template T\n * @throws {Error} when shouldBeTruthy is not truthy.\n * @closurePrimitive {asserts.truthy}\n */\nexport function devAssert(\n  shouldBeTruthy,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (mode.isMinified()) {\n    return shouldBeTruthy;\n  }\n  devAssertDceCheck();\n\n  return assertions.assert(\n    '',\n    shouldBeTruthy,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertElement(shouldBeElement, opt_message) {\n  if (mode.isMinified()) {\n    return /** @type {!Element} */ (shouldBeElement);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertElement(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeElement,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertString(shouldBeString, opt_message) {\n  if (mode.isMinified()) {\n    return /** @type {string} */ (shouldBeString);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertString(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeString,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertNumber(shouldBeNumber, opt_message) {\n  if (mode.isMinified()) {\n    return /** @type {number} */ (shouldBeNumber);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertNumber(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeNumber,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertArray(shouldBeArray, opt_message) {\n  if (mode.isMinified()) {\n    return /** @type {!Array} */ (shouldBeArray);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertArray(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeArray,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertBoolean(shouldBeBoolean, opt_message) {\n  if (mode.isMinified()) {\n    return /** @type {boolean} */ (shouldBeBoolean);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertBoolean(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeBoolean,\n    opt_message\n  );\n}\n", "/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  }\n  // Nil is the null terminator (group 1) capture\n  if (nil) {\n    return '\\uFFFD';\n  }\n  // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' '\n  }\n  // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n  return '\\\\' + match;\n}\n\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\nexport function cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n", "import {devAssert} from '#core/assert';\nimport * as mode from '#core/mode';\n\nimport {cssEscape} from '#third_party/css-escape/css-escape';\n\n/**\n * @type {boolean|undefined}\n */\nlet scopeSelectorSupported;\n\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\nexport function setScopeSelectorSupportedForTesting(val) {\n  scopeSelectorSupported = val;\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element|!ShadowRoot} el\n * @return {boolean}\n */\nexport function isScopeSelectorSupported(el) {\n  if (scopeSelectorSupported !== undefined) {\n    return scopeSelectorSupported;\n  }\n\n  return (scopeSelectorSupported = testScopeSelector(el));\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element|!ShadowRoot} el\n * @return {boolean}\n */\nfunction testScopeSelector(el) {\n  try {\n    const doc = el.ownerDocument;\n    const testElement = doc.createElement('div');\n    const testChild = doc.createElement('div');\n    testElement.appendChild(testChild);\n    // NOTE(cvializ, #12383): Firefox's implementation is incomplete,\n    // therefore we test actual functionality of`:scope` as well.\n    return testElement./*OK*/ querySelector(':scope div') === testChild;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Prefixes a selector for ancestor selection. Splits in subselectors and\n * applies prefix to each.\n *\n * e.g.\n * ```\n *   prependSelectorsWith('div', '.i-amphtml-scoped');\n *   // => '.i-amphtml-scoped div'\n *   prependSelectorsWith('div, ul', ':scope');\n *   // => ':scope div, :scope ul'\n *   prependSelectorsWith('div, ul', 'article >');\n *   // => 'article > div, article > ul'\n * ```\n *\n * @param {string} selector\n * @param {string} distribute\n * @return {string}\n */\nexport function prependSelectorsWith(selector, distribute) {\n  return selector.replace(/^|,/g, `$&${distribute} `);\n}\n\n/**\n * Escapes an ident (ID or a class name) to be used as a CSS selector.\n *\n * See https://drafts.csswg.org/cssom/#serialize-an-identifier.\n *\n * @param {string} ident\n * @return {string}\n * @suppress {uselessCode}\n */\nexport function escapeCssSelectorIdent(ident) {\n  // This gets rewritten to true/false during compilation. It will trigger an\n  // JSC_UNREACHABLE_CODE warning, but that's intentional for DCE.\n  if (mode.isEsm()) {\n    return CSS.escape(ident);\n  }\n  return cssEscape(ident);\n}\n\n/**\n * Escapes an ident in a way that can be used by :nth-child() psuedo-class.\n *\n * See https://github.com/w3c/csswg-drafts/issues/2306.\n *\n * @param {string|number} ident\n * @return {string}\n */\nexport function escapeCssSelectorNth(ident) {\n  const escaped = String(ident);\n  // Ensure it doesn't close the nth-child psuedo class.\n  devAssert(escaped.indexOf(')') === -1);\n  return escaped;\n}\n", "import {devAssert, devAssertElement} from '#core/assert';\nimport * as mode from '#core/mode';\n\nimport {isScopeSelectorSupported, prependSelectorsWith} from './css-selectors';\n\n/** @fileoverview Helper functions for DOM queries. */\n\n/**\n * Asserts that name is just an alphanumeric word, and does not contain\n * advanced CSS selector features like attributes, psuedo-classes, class names,\n * nor ids.\n * @param {string} name\n */\nfunction assertIsName(name) {\n  devAssert(\n    /^[\\w-]+$/.test(name),\n    `Expected \"${name}\" to be a CSS name composed of alphanumerics and hyphens.`\n  );\n}\n\n/**\n * Finds all elements that matche `selector`, scoped inside `root`\n * for user-agents that do not support native scoping.\n *\n * This method isn't required for modern builds, can be removed.\n *\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nfunction scopedQuerySelectionFallback(root, selector) {\n  const unique = 'i-amphtml-scoped';\n  root.classList.add(unique);\n  const scopedSelector = prependSelectorsWith(selector, `.${unique}`);\n  const elements = root./*OK*/ querySelectorAll(scopedSelector);\n  root.classList.remove(unique);\n  return elements;\n}\n\n/**\n * Finds the first element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {?Element}\n *\n * @suppress {suspiciousCode}\n */\nexport function scopedQuerySelector(root, selector) {\n  if (mode.isEsm() || isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelector(prependSelectorsWith(selector, ':scope'));\n  }\n\n  // Only IE.\n  const fallbackResult = scopedQuerySelectionFallback(root, selector);\n  return fallbackResult[0] === undefined ? null : fallbackResult[0];\n}\n\n/**\n * Finds every element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n *\n * @suppress {suspiciousCode}\n */\nexport function scopedQuerySelectorAll(root, selector) {\n  if (mode.isEsm() || isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelectorAll(\n      prependSelectorsWith(selector, ':scope')\n    );\n  }\n\n  // Only IE.\n  return scopedQuerySelectionFallback(root, selector);\n}\n\n/**\n * Checks if the given element matches the selector\n * @param  {!Element} el The element to verify\n * @param  {string} selector The selector to check against\n * @return {boolean} True if the element matched the selector. False otherwise.\n */\nexport function matches(el, selector) {\n  const matcher =\n    el.matches ||\n    el.webkitMatchesSelector ||\n    el.mozMatchesSelector ||\n    el.msMatchesSelector ||\n    el.oMatchesSelector;\n  if (matcher) {\n    return matcher.call(el, selector);\n  }\n  return false; // IE8 always returns false.\n}\n\n/**\n * Finds the closest element that satisfies the callback from this element\n * up the DOM subtree.\n * @param {!Element} element\n * @param {function(!Element):boolean} callback\n * @param {Element=} opt_stopAt optional elemnt to stop the search at.\n * @return {?Element}\n */\nexport function closest(element, callback, opt_stopAt) {\n  for (let el = element; el && el !== opt_stopAt; el = el.parentElement) {\n    if (callback(el)) {\n      return el;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest node that satisfies the callback from this node\n * up the DOM subtree.\n * @param {!Node} node\n * @param {function(!Node):boolean} callback\n * @return {?Node}\n */\nexport function closestNode(node, callback) {\n  for (let n = node; n; n = n.parentNode) {\n    if (callback(n)) {\n      return n;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest ancestor element with the specified selector from this\n * element.\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element} closest ancestor if found.\n */\nexport function closestAncestorElementBySelector(element, selector) {\n  return element.closest\n    ? element.closest(selector)\n    : closest(element, (el) => matches(el, selector));\n}\n\n/**\n * Finds all ancestor elements that satisfy predicate.\n * @param {!Element} child\n * @param {function(!Element):boolean} predicate\n * @return {!Array<!Element>}\n */\nexport function ancestorElements(child, predicate) {\n  const ancestors = [];\n  for (\n    let ancestor = child.parentElement;\n    ancestor;\n    ancestor = ancestor.parentElement\n  ) {\n    if (predicate(ancestor)) {\n      ancestors.push(ancestor);\n    }\n  }\n  return ancestors;\n}\n\n/**\n * Finds all ancestor elements that has the specified tag name.\n * @param {!Element} child\n * @param {string} tagName\n * @return {!Array<!Element>}\n */\nexport function ancestorElementsByTag(child, tagName) {\n  assertIsName(tagName);\n  tagName = tagName.toUpperCase();\n  return ancestorElements(child, (el) => el.tagName == tagName);\n}\n\n/**\n * Finds the first child element that satisfies the callback.\n * TODO(rcebulko): Can we start using generators in childElements and defer to\n * that here?\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function childElement(parent, callback) {\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the last child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function lastChildElement(parent, callback) {\n  for (\n    let child = parent.lastElementChild;\n    child;\n    child = child.previousElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child elements that satisfy the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {!Array<!Element>}\n */\nexport function childElements(parent, callback) {\n  const children = [];\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      children.push(child);\n    }\n  }\n  return children;\n}\n\n/**\n * Finds all child nodes that satisfy the callback.\n * These nodes can include Text, Comment and other child nodes.\n * @param {!Node} parent\n * @param {function(!Node):boolean} callback\n * @return {!Array<!Node>}\n */\nexport function childNodes(parent, callback) {\n  const nodes = [];\n  for (let child = parent.firstChild; child; child = child.nextSibling) {\n    if (callback(child)) {\n      nodes.push(child);\n    }\n  }\n  return nodes;\n}\n\n/**\n * Finds the first child element that has the specified attribute.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function childElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelector(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the last child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function lastChildElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return lastChildElement(parent, (el) => {\n    return el.hasAttribute(attr);\n  });\n}\n\n/**\n * Finds all child elements that has the specified attribute.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} attr\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the first child element that has the specified tag name.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} tagName\n * @return {?Element}\n */\nexport function childElementByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelector(parent, `> ${tagName}`);\n}\n\n/**\n * Finds all child elements with the specified tag name.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} tagName\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> ${tagName}`);\n}\n\n/**\n * Finds the first descendant element with the specified name.\n * @param {!Element|!Document|!ShadowRoot} element\n * @param {string} tagName\n * @return {?Element}\n */\nexport function elementByTag(element, tagName) {\n  assertIsName(tagName);\n  return element./*OK*/ querySelector(tagName);\n}\n\n/**\n * Returns the original nodes of the custom element without any service\n * nodes that could have been added for markup. These nodes can include\n * Text, Comment and other child nodes.\n *\n * @param {!Node} element\n * @return {!Array<!Node>}\n */\nexport function realChildNodes(element) {\n  return childNodes(element, (node) => !isInternalOrServiceNode(node));\n}\n\n/**\n * Returns the original children of the custom element without any service\n * nodes that could have been added for markup.\n *\n * @param {!Element} element\n * @return {!Array<!Element>}\n */\nexport function realChildElements(element) {\n  return childElements(element, (element) => !isInternalOrServiceNode(element));\n}\n\n/**\n * Returns \"true\" for internal AMP nodes or for placeholder elements.\n * @param {!Node} node\n * @return {boolean}\n */\nexport function isInternalOrServiceNode(node) {\n  if (isInternalElement(node)) {\n    return true;\n  }\n  if (node.nodeType !== Node.ELEMENT_NODE) {\n    return false;\n  }\n  devAssertElement(node);\n\n  return (\n    node.hasAttribute('placeholder') ||\n    node.hasAttribute('fallback') ||\n    node.hasAttribute('overflow')\n  );\n}\n\n/**\n * Whether the tag is an internal (service) AMP tag.\n * @param {!Node|string} nodeOrTagName\n * @return {boolean}\n */\nfunction isInternalElement(nodeOrTagName) {\n  /** @type string */\n  let tagName;\n  if (typeof nodeOrTagName == 'string') {\n    tagName = nodeOrTagName;\n  } else if (nodeOrTagName.nodeType === Node.ELEMENT_NODE) {\n    tagName = devAssertElement(nodeOrTagName).tagName;\n  }\n\n  return !!tagName && tagName.toLowerCase().startsWith('i-');\n}\n", "import * as mode from '#core/mode';\nimport {dict} from '#core/types/object';\nimport {parseJson} from '#core/types/object/json';\nimport {getWin} from '#core/window';\n\nimport {childElementsByTag, matches} from './query';\n\nconst HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n};\nconst HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n\n/**\n * @typedef {{\n *   bubbles: (boolean|undefined),\n *   cancelable: (boolean|undefined),\n * }}\n */\nexport let CustomEventOptionsDef;\n\n/** @const {!CustomEventOptionsDef} */\nconst DEFAULT_CUSTOM_EVENT_OPTIONS = {bubbles: true, cancelable: true};\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n */\nexport function waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  const win = getWin(parent);\n  if (mode.isEsm() || win.MutationObserver) {\n    const observer = new win.MutationObserver(() => {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {childList: true});\n  } else {\n    const interval = win.setInterval(() => {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    }, /* milliseconds */ 5);\n  }\n}\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\nexport function waitForChildPromise(parent, checkFunc) {\n  return new Promise((resolve) => {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\nexport function waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, () => !!doc.body, callback);\n}\n\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\nexport function waitForBodyOpenPromise(doc) {\n  return new Promise((resolve) => waitForBodyOpen(doc, resolve));\n}\n\n/**\n * Removes the element.\n * @param {!Element} element\n */\nexport function removeElement(element) {\n  element.parentElement?.removeChild(element);\n}\n\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element|!DocumentFragment} parent\n */\nexport function removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\nexport function copyChildren(from, to) {\n  const frag = to.ownerDocument.createDocumentFragment();\n  for (let n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n  to.appendChild(frag);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node=} after\n */\nexport function insertAfterOrAtStart(root, element, after = null) {\n  if (!after) {\n    insertAtStart(root, element);\n    return;\n  }\n  const before = after.nextSibling;\n  root.insertBefore(element, before);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n */\nexport function insertAtStart(root, element) {\n  root.insertBefore(element, root.firstChild);\n}\n\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function addAttributesToElement(element, attributes) {\n  for (const attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n  return element;\n}\n\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function createElementWithAttributes(doc, tagName, attributes) {\n  const element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\nexport function isConnectedNode(node) {\n  const connected = node.isConnected;\n  if (connected !== undefined) {\n    return connected;\n  }\n\n  // \"An element is connected if its shadow-including root is a document.\"\n  let n = node;\n  do {\n    n = rootNodeFor(n);\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\nexport function rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n  let n;\n  // Check isShadowRoot() is only needed for the polyfill case.\n  for (\n    n = node;\n    !!n.parentNode && !isShadowRoot(/** @type {HTMLElement} */ (n));\n    n = n.parentNode\n  ) {}\n  return n;\n}\n\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {?HTMLElement} value\n * @return {boolean}\n */\nexport function isShadowRoot(value) {\n  if (!value) {\n    return false;\n  }\n  // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n  return (\n    value.nodeType == /* DOCUMENT_FRAGMENT */ 11 &&\n    Object.prototype.toString.call(value) === '[object ShadowRoot]'\n  );\n}\n\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!HTMLElement} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\nexport function getDataParamsFromAttributes(\n  element,\n  opt_computeParamNameFunc,\n  opt_paramPattern\n) {\n  const computeParamNameFunc = opt_computeParamNameFunc || ((key) => key);\n  const {dataset} = element;\n  const params = dict();\n  const paramPattern = opt_paramPattern || /^param(.+)/;\n  for (const key in dataset) {\n    const matches = key.match(paramPattern);\n    if (matches) {\n      const param = matches[1][0].toLowerCase() + matches[1].substr(1);\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n  return params;\n}\n\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\nexport function hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  let currentElement = element;\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while (\n    (currentElement = currentElement.parentNode) &&\n    currentElement != opt_stopNode\n  );\n  return false;\n}\n\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\nexport function templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    const content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\nexport function iterateCursor(iterable, cb) {\n  const {length} = iterable;\n  for (let i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.getAttribute('type')?.toUpperCase() == 'APPLICATION/JSON'\n  );\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonLdScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.getAttribute('type')?.toUpperCase() == 'APPLICATION/LD+JSON'\n  );\n}\n\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isRTL(doc) {\n  const dir =\n    doc.body.getAttribute('dir') ||\n    doc.documentElement.getAttribute('dir') ||\n    'ltr';\n  return dir == 'rtl';\n}\n\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\nexport function escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n\n/**\n * @param {string} c\n * @return {string}\n */\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\nexport function tryFocus(element) {\n  try {\n    element./*OK*/ focus();\n  } catch (e) {\n    // IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isIframed(win) {\n  return win.parent && win.parent != win;\n}\n\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!HTMLInputElement} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\nexport function isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\nexport function domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  const pos = element1.compareDocumentPosition(element2);\n  const precedingOrContains =\n    Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS;\n\n  // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n  if (pos & precedingOrContains) {\n    return 1;\n  }\n\n  // if fe2 is following or contained by fe1, then fe1 is before fe2\n  return -1;\n}\n\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\nexport function toggleAttribute(element, name, forced) {\n  const hasAttribute = element.hasAttribute(name);\n  const enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n\n/**\n * Parses a string as a boolean value using the expanded rules for DOM boolean\n * attributes:\n * - a `null` or `undefined` returns `null`;\n * - an empty string returns `true`;\n * - a \"false\" string returns `false`;\n * - otherwise, `true` is returned.\n *\n * @param {?string|undefined} s\n * @return {boolean|undefined}\n */\nexport function parseBooleanAttribute(s) {\n  return s == null ? undefined : s !== 'false';\n}\n\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\nexport function getVerticalScrollbarWidth(win) {\n  const {documentElement} = win.document;\n  const windowWidth = win./*OK*/ innerWidth;\n  const documentWidth = documentElement./*OK*/ clientWidth;\n  return windowWidth - documentWidth;\n}\n\n/**\n * Dispatches a custom event.\n *\n * @param {!Node} node\n * @param {string} name\n * @param {!Object=} opt_data Event data.\n * @param {!CustomEventOptionsDef=} opt_options\n */\nexport function dispatchCustomEvent(node, name, opt_data, opt_options) {\n  const data = opt_data || {};\n  // Constructors of events need to come from the correct window. Sigh.\n  const event = node.ownerDocument.createEvent('Event');\n\n  // Technically .data is not a property of Event.\n  event.data = data;\n\n  const {bubbles, cancelable} = opt_options || DEFAULT_CUSTOM_EVENT_OPTIONS;\n  event.initEvent(name, bubbles, cancelable);\n  node.dispatchEvent(event);\n}\n\n/**\n * Ensures the child is contained by the parent, but not the parent itself.\n *\n * @param {!Node} parent\n * @param {!Node} child\n * @return {boolean}\n */\nexport function containsNotSelf(parent, child) {\n  return child !== parent && parent.contains(child);\n}\n\n/**\n * Helper method to get the json config from an element <script> tag\n * @param {!Element} element\n * @return {?JsonObject}\n * @throws {!Error} If element does not have exactly one <script> child\n * with type=\"application/json\", or if the <script> contents are not valid JSON.\n */\nexport function getChildJsonConfig(element) {\n  const scripts = childElementsByTag(element, 'script');\n  const {length} = scripts;\n  if (length !== 1) {\n    throw new Error(`Found ${length} <script> children. Expected 1.`);\n  }\n\n  const script = scripts[0];\n  if (!isJsonScriptTag(script)) {\n    throw new Error('<script> child must have type=\"application/json\"');\n  }\n\n  try {\n    return parseJson(script.textContent);\n  } catch {\n    throw new Error('Failed to parse <script> contents. Is it valid JSON?');\n  }\n}\n", "/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nconst env = self.AMP_CONFIG || {};\n\nconst thirdPartyFrameRegex =\n  (typeof env['thirdPartyFrameRegex'] == 'string'\n    ? new RegExp(env['thirdPartyFrameRegex'])\n    : env['thirdPartyFrameRegex']) || /^d-\\d+\\.ampproject\\.net$/;\n\nconst cdnProxyRegex =\n  (typeof env['cdnProxyRegex'] == 'string'\n    ? new RegExp(env['cdnProxyRegex'])\n    : env['cdnProxyRegex']) ||\n  /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/;\n\n/**\n * Check for a custom URL definition in special <meta> tags. Note that this does\n * not allow for distinct custom URLs in AmpDocShadow instances. The shell is\n * allowed to define one set of custom URLs via AMP_CONFIG (recommended) or by\n * including <meta> tags in the shell <head>. Those custom URLs then apply to\n * all AMP documents loaded in the shell.\n * @param {string} name\n * @return {?string}\n * @private\n */\nfunction getMetaUrl(name) {\n  // Avoid exceptions in unit tests\n  if (!self.document || !self.document.head) {\n    return null;\n  }\n\n  // Disallow on proxy origins\n  if (self.location && cdnProxyRegex.test(self.location.origin)) {\n    return null;\n  }\n\n  const metaEl = self.document.head./*OK*/ querySelector(\n    `meta[name=\"${name}\"]`\n  );\n  return (metaEl && metaEl.getAttribute('content')) || null;\n}\n\n/**\n * @typedef {{\n *   thirdParty: string,\n *   thirdPartyFrameHost: string,\n *   thirdPartyFrameRegex: !RegExp,\n *   cdn: string,\n *   cdnProxyRegex: !RegExp,\n *   localhostRegex: !RegExp,\n *   errorReporting: string,\n *   betaErrorReporting: string,\n *   localDev: boolean,\n *   trustedViewerHosts: !Array<!RegExp>,\n *   geoApi: ?string,\n * }}\n */\nexport const urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex,\n  cdn:\n    env['cdnUrl'] || getMetaUrl('runtime-host') || 'https://cdn.ampproject.org',\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting:\n    env['errorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r',\n  betaErrorReporting:\n    env['betaErrorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r-beta',\n  localDev: env['localDev'] || false,\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/main/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [\n    /(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/,\n    /(^|\\.)gmail\\.(com|dev)$/,\n  ],\n  // Optional fallback API if amp-geo is left unpatched\n  geoApi: env['geoApiUrl'] || getMetaUrl('amp-geo-api'),\n};\n\nexport const config = {\n  urls,\n};\n", "import {map} from '#core/types/object';\n\nconst QUERY_STRING_REGEX = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent(component, fallback = '') {\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString(queryString) {\n  const params = map();\n  if (!queryString) {\n    return params;\n  }\n\n  let match;\n  while ((match = QUERY_STRING_REGEX.exec(queryString))) {\n    const name = tryDecodeUriComponent(match[1], match[1]);\n    const value = match[2]\n      ? tryDecodeUriComponent(match[2].replace(/\\+/g, ' '), match[2])\n      : '';\n    params[name] = value;\n  }\n  return params;\n}\n\n/**\n * Parses the query # params.\n * @param {!Window=} opt_win\n * @return {!JsonObject}\n */\nexport function getHashParams(opt_win) {\n  const {location} = opt_win || self;\n  // location.originalHash is set by the viewer when it removes the fragment\n  // from the URL.\n  return parseQueryString(location['originalHash'] || location.hash);\n}\n", "import * as coreMode from '#core/mode';\nimport {getHashParams} from '#core/types/string/url';\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   esm: boolean,\n *   test: boolean,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined)\n * }}\n */\nexport let ModeDef;\n\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\nlet rtvVersion = '';\n\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\nexport function getMode(opt_win) {\n  const win = opt_win || self;\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n  return (win.__AMP_MODE = getMode_(win));\n}\n\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\nfunction getMode_(win) {\n  const hashParams = getHashParams(win);\n\n  // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `amp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n  return {\n    localDev: coreMode.isLocalDev(win),\n    development: isModeDevelopment(win, hashParams),\n    esm: coreMode.isEsm(),\n    test: coreMode.isTest(win),\n    rtvVersion: getRtvVersion(win),\n  };\n}\n\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @return {string}\n */\nfunction getRtvVersion(win) {\n  // Ignore memoized copy during testing to allow override.\n  if (!rtvVersion || coreMode.isTest(win)) {\n    // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n    // major version. The full version however must also carry the minor version.\n    // We will default to production default `01` minor version for now.\n    // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n    // minor version.\n    rtvVersion = win.AMP_CONFIG?.v || `01${coreMode.version()}`;\n  }\n  return rtvVersion;\n}\n\n/**\n * Triggers validation or enable pub level logging. Validation can be\n * bypassed via #validate=0.\n * Note that AMP_DEV_MODE flag is used for testing purposes.\n * @param {!Window} win\n * @param {!JsonObject=} opt_hashParams\n * @return {boolean}\n */\nexport function isModeDevelopment(win, opt_hashParams) {\n  const devModes = ['1', 'actions', 'amp', 'amp4ads', 'amp4email'];\n  const devParam = opt_hashParams || getHashParams(win);\n  return devModes.includes(devParam['development']) || !!win.AMP_DEV_MODE;\n}\n\n/**\n * @param {!Window} win\n * @return {string}\n * @visibleForTesting\n */\nexport function getRtvVersionForTesting(win) {\n  return getRtvVersion(win);\n}\n\n/** @visibleForTesting */\nexport function resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n", "import * as mode from '#core/mode';\n\nimport {urls} from '../config';\nimport {getMode} from '../mode';\n\nconst CUSTOM_TEMPLATES = ['amp-mustache'];\nconst LATEST_VERSION = 'latest';\n\n/**\n * Calculate the base url for any scripts.\n * @param {!Location} location The window's location\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateScriptBaseUrl(location, opt_isLocalDev) {\n  if (opt_isLocalDev) {\n    let prefix = `${location.protocol}//${location.host}`;\n    if (\n      location.protocol == 'about:' ||\n      location.protocol == 'blob:' ||\n      location.protocol == 'data:'\n    ) {\n      prefix = '';\n    }\n    return `${prefix}/dist`;\n  }\n  return urls.cdn;\n}\n\n/**\n * Calculate script url for an extension.\n * @param {!Location} location The window's location\n * @param {string} extensionId\n * @param {string} version\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateExtensionScriptUrl(\n  location,\n  extensionId,\n  version,\n  opt_isLocalDev\n) {\n  const fileExtension = mode.isEsm() ? '.mjs' : '.js';\n  const base = calculateScriptBaseUrl(location, opt_isLocalDev);\n  const rtv = getMode().rtvVersion;\n  const extensionVersion = version ? '-' + version : '';\n  return `${base}/rtv/${rtv}/v0/${extensionId}${extensionVersion}${fileExtension}`;\n}\n\n/**\n * Calculate script url for an entry point.\n * If `opt_rtv` is true, returns the URL matching the current RTV.\n * @param {!Location} location The window's location\n * @param {string} entryPoint\n * @param {boolean=} isLocalDev\n * @param {boolean=} opt_rtv\n * @return {string}\n */\nexport function calculateEntryPointScriptUrl(\n  location,\n  entryPoint,\n  isLocalDev,\n  opt_rtv\n) {\n  const fileExtension = mode.isEsm() ? '.mjs' : '.js';\n  const base = calculateScriptBaseUrl(location, isLocalDev);\n  if (isLocalDev) {\n    return `${base}/${entryPoint}${fileExtension}`;\n  }\n  if (opt_rtv) {\n    return `${base}/rtv/${getMode().rtvVersion}/${entryPoint}${fileExtension}`;\n  }\n  return `${base}/${entryPoint}${fileExtension}`;\n}\n\n/**\n * Parse the extension version from a given script URL.\n * @param {string} scriptUrl\n * @return {?{extensionId: string, extensionVersion: string}}\n */\nexport function parseExtensionUrl(scriptUrl) {\n  if (!scriptUrl) {\n    return null;\n  }\n  // Note that the \"(\\.max)?\" group only applies to local dev.\n  const matches = scriptUrl.match(\n    /^(.*)\\/(.*)-([0-9.]+|latest)(\\.max)?\\.(?:js|mjs)$/i\n  );\n  const extensionId = matches ? matches[2] : undefined;\n  const extensionVersion = matches ? matches[3] : undefined;\n  if (!extensionId || !extensionVersion) {\n    return null;\n  }\n  return {extensionId, extensionVersion};\n}\n\n/**\n * Create the missing amp extension HTML script element.\n * @param {!Window} win\n * @param {string} extensionId\n * @param {string} version\n * @return {!Element} Script object\n */\nexport function createExtensionScript(win, extensionId, version) {\n  const scriptElement = win.document.createElement('script');\n  scriptElement.async = true;\n  if (isIntermediateExtension(extensionId)) {\n    version = '';\n  } else {\n    scriptElement.setAttribute(\n      CUSTOM_TEMPLATES.indexOf(extensionId) >= 0\n        ? 'custom-template'\n        : 'custom-element',\n      extensionId\n    );\n  }\n  scriptElement.setAttribute('data-script', extensionId);\n  scriptElement.setAttribute('i-amphtml-inserted', '');\n  if (mode.isEsm()) {\n    scriptElement.setAttribute('type', 'module');\n  }\n\n  // Propagate nonce to all generated script tags.\n  const currentScript = win.document.head.querySelector('script[nonce]');\n  if (currentScript) {\n    scriptElement.setAttribute('nonce', currentScript.getAttribute('nonce'));\n  }\n\n  // Allow error information to be collected\n  // https://github.com/ampproject/amphtml/issues/7353\n  scriptElement.setAttribute('crossorigin', 'anonymous');\n  let loc = win.location;\n  if (getMode(win).test && win.testLocation) {\n    loc = win.testLocation;\n  }\n  const scriptSrc = calculateExtensionScriptUrl(\n    loc,\n    extensionId,\n    version,\n    getMode(win).localDev\n  );\n  scriptElement.src = scriptSrc;\n  return scriptElement;\n}\n\n/**\n * Returns the extension <script> element and attribute for the given\n * extension ID, if it exists. Otherwise, returns null.\n * @param {!Window} win\n * @param {string} extensionId\n * @param {string} version\n * @param {boolean} latest\n * @param {boolean=} includeInserted If true, includes script elements that\n *   are inserted by the runtime dynamically. Default is true.\n * @return {!Array<!Element>}\n */\nexport function getExtensionScripts(\n  win,\n  extensionId,\n  version,\n  latest,\n  includeInserted = true\n) {\n  // Always ignore <script> elements that have a mismatched RTV.\n  const modifier =\n    ':not([i-amphtml-loaded-new-version])' +\n    (includeInserted ? '' : ':not([i-amphtml-inserted])');\n  // We have to match against \"src\" because a few extensions, such as\n  // \"amp-viewer-integration\", do not have \"custom-element\" attribute.\n  const matches = win.document.head./*OK*/ querySelectorAll(\n    `script[src*=\"/${extensionId}-\"]${modifier}`\n  );\n  const filtered = [];\n  for (let i = 0; i < matches.length; i++) {\n    const match = matches[i];\n    const urlParts = parseExtensionUrl(match.src);\n    if (!urlParts) {\n      continue;\n    }\n    const {\n      extensionId: scriptExtensionId,\n      extensionVersion: scriptExtensionVersion,\n    } = urlParts;\n    if (\n      scriptExtensionId == extensionId &&\n      (isIntermediateExtension(extensionId) ||\n        scriptExtensionVersion == version ||\n        (scriptExtensionVersion == LATEST_VERSION && latest))\n    ) {\n      filtered.push(match);\n    }\n  }\n  return filtered;\n}\n\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot|Document} head\n * @return {!Array<{script: HTMLScriptElement, extensionId: string, extensionVersion: string}>}\n */\nexport function extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n  // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n  const list = head.querySelectorAll(\n    'script[custom-element],script[custom-template]'\n  );\n  const scripts = [];\n  for (let i = 0; i < list.length; i++) {\n    const script = list[i];\n    const extensionId =\n      script.getAttribute('custom-element') ||\n      script.getAttribute('custom-template');\n    const urlParts = parseExtensionUrl(script.src);\n    if (extensionId && urlParts) {\n      scripts.push({\n        script,\n        extensionId,\n        extensionVersion: urlParts.extensionVersion,\n      });\n    }\n  }\n  return scripts;\n}\n\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {!Window} win\n * @param {string} id\n * @param {string} version\n * @return {boolean}\n */\nexport function extensionScriptInNode(win, id, version) {\n  return extensionScriptsInNode(win.document.head).some(\n    ({extensionId, extensionVersion}) =>\n      id == extensionId && version == extensionVersion\n  );\n}\n\n/**\n * @param {string} extensionId\n * @return {boolean}\n */\nfunction isIntermediateExtension(extensionId) {\n  return extensionId.startsWith('_');\n}\n", "/**\n * Some exceptions (DOMException, namely) have read-only message.\n * @param {!Error} error\n * @return {!Error}\n */\nexport function duplicateErrorIfNecessary(error) {\n  const messageProperty = Object.getOwnPropertyDescriptor(error, 'message');\n  if (messageProperty?.writable) {\n    return error;\n  }\n\n  const {message, stack} = error;\n  const e = new Error(message);\n  // Copy all the extraneous things we attach.\n  for (const prop in error) {\n    e[prop] = error[prop];\n  }\n  // Ensure these are copied.\n  e.stack = stack;\n  return e;\n}\n\n/**\n * Creates an error object.\n * @param {...*} var_args\n * @return {!Error}\n */\nexport function createError(var_args) {\n  let error = null;\n  let message = '';\n  for (const arg of arguments) {\n    if (arg instanceof Error && !error) {\n      error = duplicateErrorIfNecessary(arg);\n    } else {\n      if (message) {\n        message += ' ';\n      }\n      message += arg;\n    }\n  }\n\n  if (!error) {\n    error = new Error(message);\n  } else if (message) {\n    error.message = message + ': ' + error.message;\n  }\n  return error;\n}\n\n/**\n * Reports an error, if the global error reporting function is defined.\n * @param {!Error} error\n */\nfunction maybeReportError(error) {\n  self.__AMP_REPORT_ERROR?.(error);\n}\n\n/**\n * Constructs and throws an error without terminating the current context. This\n * preserves whether the original error designation is a user error or a dev\n * error.\n * @param {...*} var_args\n */\nexport function rethrowAsync(var_args) {\n  const error = createError.apply(null, arguments);\n  setTimeout(() => {\n    // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n    // It may not exist for Bento components without the runtime.\n    maybeReportError(error);\n    throw error;\n  });\n}\n\n/**\n * Executes the provided callback in a try/catch and rethrows any errors\n * asynchronously.\n *\n * @param {function(S):T} callback\n * @param {S} args\n * @return {T}\n * @template T\n * @template S\n */\nexport function tryCallback(callback, ...args) {\n  try {\n    return callback.apply(null, args);\n  } catch (e) {\n    rethrowAsync(e);\n  }\n}\n\n/**\n * Creates an error object with its expected property set to true.\n * @param {...*} var_args\n * @return {!Error}\n */\nexport function createExpectedError(var_args) {\n  const error = createError.apply(null, arguments);\n  error.expected = true;\n  return error;\n}\n\n/**\n * Reports an error message.\n * @param {string} tag\n * @param {...*} args\n */\nexport function devError(tag, ...args) {\n  const error = createError.apply(null, args);\n  // TODO(rcebulko): Determine if/how this Error#name property is used.\n  error.name = tag || error.name;\n  maybeReportError(error);\n}\n\n/**\n * Reports an error message and marks with an expected property. If the\n * logging is disabled, the error is rethrown asynchronously.\n * @param {string} unusedTag\n * @param {...*} args\n */\nexport function devExpectedError(unusedTag, ...args) {\n  maybeReportError(createExpectedError.apply(null, args));\n}\n", "/** @fileoverview Helpers to wrap functions. */\n\n/**\n * Creates a function that is evaluated only once and returns the cached result\n * subsequently.\n *\n * Please note that `once` only takes the function definition into account,\n * so it will return the same cached value even when the arguments are\n * different.\n *\n * @param {function(...):T} fn\n * @return {function(...):T}\n * @template T\n */\nexport function once(fn) {\n  let evaluated = false;\n  let retValue = null;\n  let callback = fn;\n  return (...args) => {\n    if (!evaluated) {\n      retValue = callback.apply(self, args);\n      evaluated = true;\n      callback = null; // GC\n    }\n    return retValue;\n  };\n}\n\n/**\n * Wraps a given callback and applies a rate limit.\n * It throttles the calls so that no consequent calls have time interval\n * smaller than the given minimal interval.\n *\n * @param {!Window} win\n * @param {function(...T):R} callback\n * @param {number} minInterval the minimum time interval in millisecond\n * @return {function(...T)}\n * @template T\n * @template R\n */\nexport function throttle(win, callback, minInterval) {\n  let locker = 0;\n  let nextCallArgs = null;\n\n  /**\n   * @param {!Object} args\n   */\n  function fire(args) {\n    nextCallArgs = null;\n    // Lock the fire for minInterval milliseconds\n    locker = win.setTimeout(waiter, minInterval);\n\n    callback.apply(null, args);\n  }\n\n  /**\n   * Waiter function\n   */\n  function waiter() {\n    locker = 0;\n    // If during the period there're invocations queued up, fire once.\n    if (nextCallArgs) {\n      fire(nextCallArgs);\n    }\n  }\n\n  return function (...args) {\n    if (locker) {\n      nextCallArgs = args;\n    } else {\n      fire(args);\n    }\n  };\n}\n\n/**\n * Wraps a given callback and applies a wait timer, so that minInterval\n * milliseconds must pass since the last call before the callback is actually\n * invoked.\n *\n * @param {!Window} win\n * @param {function(...T):R} callback\n * @param {number} minInterval the minimum time interval in millisecond\n * @return {function(...T)}\n * @template T\n * @template R\n */\nexport function debounce(win, callback, minInterval) {\n  let locker = 0;\n  let timestamp = 0;\n  let nextCallArgs = null;\n\n  /**\n   * @param {?Array} args\n   */\n  function fire(args) {\n    nextCallArgs = null;\n    callback.apply(null, args);\n  }\n\n  /**\n   * Wait function for debounce\n   */\n  function waiter() {\n    locker = 0;\n    const remaining = minInterval - (win.Date.now() - timestamp);\n    if (remaining > 0) {\n      locker = win.setTimeout(waiter, remaining);\n    } else {\n      fire(nextCallArgs);\n    }\n  }\n\n  return function (...args) {\n    timestamp = win.Date.now();\n    nextCallArgs = args;\n    if (!locker) {\n      locker = win.setTimeout(waiter, minInterval);\n    }\n  };\n}\n", "import * as assertions from '#core/assert/base';\nimport {\n  createError,\n  createExpectedError,\n  duplicateErrorIfNecessary,\n} from '#core/error';\nimport {\n  USER_ERROR_EMBED_SENTINEL,\n  USER_ERROR_SENTINEL,\n  elementStringOrPassThru,\n  isUserErrorMessage,\n  stripUserError,\n} from '#core/error/message-helpers';\nimport * as mode from '#core/mode';\nimport {isArray, isString} from '#core/types';\nimport {once} from '#core/types/function';\nimport {getHashParams} from '#core/types/string/url';\n\nimport {urls} from '../config';\nimport {getMode} from '../mode';\n\nconst noop = () => {};\n\n// These are exported here despite being defined elswhere to avoid updating\n// imports across many files for now.\nexport {USER_ERROR_SENTINEL, isUserErrorMessage};\n\n/**\n * Sets reportError function. Called from error-reporting.js to break cyclic\n * dependency.\n * @param {function(this:Window, Error, (?Element)=): ?|undefined} fn\n */\nexport function setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n\n/**\n * @enum {number}\n */\nexport const LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4,\n};\n\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\nlet levelOverride_ = undefined;\n\n/**\n * @param {!LogLevel} level\n */\nexport function overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\nconst messageUrlRtv = () => `01${mode.version()}`;\n\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\nconst externalMessageUrl = (id, interpolatedParts) =>\n  interpolatedParts.reduce(\n    (prefix, arg) => `${prefix}&s[]=${messageArgToEncodedComponent(arg)}`,\n    `https://log.amp.dev/?v=${messageUrlRtv()}&id=${encodeURIComponent(id)}`\n  );\n\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\nconst externalMessagesSimpleTableUrl = () =>\n  `${urls.cdn}/rtv/${messageUrlRtv()}/log-messages.simple.json`;\n\n/**\n * @param {*} arg\n * @return {string}\n */\nconst messageArgToEncodedComponent = (arg) =>\n  encodeURIComponent(String(elementStringOrPassThru(arg)));\n\n/**\n * @param {!Window=} opt_win\n * @return {number}\n */\nexport const logHashParam = (opt_win) =>\n  parseInt(getHashParams(opt_win)['log'], 10);\n\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don\u2019t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\nexport class Log {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(number, boolean):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  constructor(win, levelFunc, opt_suffix = '') {\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = getMode().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n\n    /** @private @const {function(number, boolean):!LogLevel} */\n    this.levelFunc_ = levelFunc;\n\n    /** @private @const {!LogLevel} */\n    this.level_ = this.defaultLevel_();\n\n    /** @private @const {string} */\n    this.suffix_ = opt_suffix;\n\n    /** @private {?JsonObject} */\n    this.messages_ = null;\n\n    this.fetchExternalMessagesOnce_ = once(() => {\n      win\n        .fetch(externalMessagesSimpleTableUrl())\n        .then((response) => response.json(), noop)\n        .then((opt_messages) => {\n          if (opt_messages) {\n            this.messages_ = /** @type {!JsonObject} */ (opt_messages);\n          }\n        });\n    });\n\n    // This bound assertion function is capable of handling the format used when\n    // error/assertion messages are extracted. This logic hasn't yet been\n    // migrated to an AMP-independent form for use in core. This binding allows\n    // Log assertion helpers to maintain message-extraction capabilities until\n    // that logic can be moved to core.\n    this.boundAssertFn_ = /** @type {!assertions.AssertionFunctionDef} */ (\n      this.assert.bind(this)\n    );\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevel_() {\n    const {win} = this;\n    // No console - can't enable logging.\n    if (\n      !win.console?.log ||\n      // Logging has been explicitly disabled.\n      logHashParam(win) == 0\n    ) {\n      return LogLevel.OFF;\n    }\n\n    // Logging is enabled for tests directly.\n    if (getMode().test && win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    }\n\n    // LocalDev by default allows INFO level, unless overriden by `#log`.\n    if (getMode().localDev) {\n      return LogLevel.INFO;\n    }\n\n    return this.defaultLevelWithFunc_();\n  }\n\n  /**\n   * @param {!Window=} opt_win provided for testing\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevelWithFunc_(opt_win) {\n    // Delegate to the specific resolver.\n    return this.levelFunc_(logHashParam(opt_win), getMode().development);\n  }\n\n  /**\n   * @param {string} tag\n   * @param {!LogLevel} level\n   * @param {!Array} messages\n   * @return {boolean} true if a the message was logged\n   */\n  msg_(tag, level, messages) {\n    if (level > (levelOverride_ ?? this.level_)) {\n      return false;\n    }\n\n    const cs = this.win.console;\n    const fn =\n      {\n        [LogLevel.ERROR]: cs.error,\n        [LogLevel.INFO]: cs.info,\n        [LogLevel.WARN]: cs.warn,\n      }[level] ?? cs.log;\n\n    const args = this.maybeExpandMessageArgs_(messages);\n    // Prefix console message with \"[tag]\".\n    const prefix = `[${tag}]`;\n    if (isString(args[0])) {\n      // Prepend string to avoid breaking string substitutions e.g. %s.\n      args[0] = prefix + ' ' + args[0];\n    } else {\n      args.unshift(prefix);\n    }\n    fn.apply(cs, args);\n\n    return true;\n  }\n\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  fine(tag, ...args) {\n    this.msg_(tag, LogLevel.FINE, args);\n  }\n\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  info(tag, ...args) {\n    this.msg_(tag, LogLevel.INFO, args);\n  }\n\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  warn(tag, ...args) {\n    this.msg_(tag, LogLevel.WARN, args);\n  }\n\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  error(tag, ...args) {\n    if (!this.msg_(tag, LogLevel.ERROR, args)) {\n      const error = this.createError.apply(this, args);\n      error.name = tag || error.name;\n      self.__AMP_REPORT_ERROR?.(error);\n    }\n  }\n\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  expectedError(tag, ...args) {\n    if (!this.msg_(tag, LogLevel.ERROR, args)) {\n      self.__AMP_REPORT_ERROR?.(this.createExpectedError.apply(this, args));\n    }\n  }\n\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createError(var_args) {\n    return this.setErrorSuffix_(createError.apply(null, arguments));\n  }\n\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createExpectedError(var_args) {\n    return this.setErrorSuffix_(createExpectedError.apply(null, arguments));\n  }\n\n  /**\n   * @param {!Error} error\n   * @return {!Error}\n   * @private\n   */\n  setErrorSuffix_(error) {\n    error = duplicateErrorIfNecessary(error);\n\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = stripUserError(error.message);\n    }\n\n    return error;\n  }\n\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  maybeExpandMessageArgs_(args) {\n    return isArray(args[0])\n      ? this.expandMessageArgs_(/** @type {!Array} */ (args[0]))\n      : args;\n  }\n\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  expandMessageArgs_(parts) {\n    // First value should exist.\n    const id = parts.shift();\n    // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n    if (getMode(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n\n    return this.messages_?.[id]\n      ? [this.messages_[id]].concat(parts)\n      : [`More info at ${externalMessageUrl(id, parts)}`];\n  }\n\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {T} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is falsey.\n   * @template T\n   * @closurePrimitive {asserts.truthy}\n   */\n  assert(shouldBeTrueish, opt_message, var_args) {\n    if (isArray(opt_message)) {\n      return this.assert.apply(\n        this,\n        [shouldBeTrueish].concat(\n          this.expandMessageArgs_(/** @type {!Array} */ (opt_message))\n        )\n      );\n    }\n\n    return assertions.assert.apply(\n      null,\n      [this.suffix_].concat(Array.prototype.slice.call(arguments))\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertElement(shouldBeElement, opt_message) {\n    return assertions.assertElement(\n      this.boundAssertFn_,\n      shouldBeElement,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertString(shouldBeString, opt_message) {\n    return assertions.assertString(\n      this.boundAssertFn_,\n      shouldBeString,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertNumber(shouldBeNumber, opt_message) {\n    return assertions.assertNumber(\n      this.boundAssertFn_,\n      shouldBeNumber,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertArray(shouldBeArray, opt_message) {\n    return assertions.assertArray(\n      this.boundAssertFn_,\n      shouldBeArray,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertBoolean(shouldBeBoolean, opt_message) {\n    return assertions.assertBoolean(\n      this.boundAssertFn_,\n      shouldBeBoolean,\n      opt_message\n    );\n  }\n}\n\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null,\n};\n\nconst logs = self.__AMP_LOG;\n\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?typeof Log}\n */\nlet logConstructor = null;\n\n/**\n * Initializes log constructor.\n */\nexport function initLogConstructor() {\n  logConstructor = Log;\n  // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n  dev();\n  user();\n}\n\n/**\n * Resets log constructor for testing.\n */\nexport function resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n\n/**\n * Calls the log constructor with a given level function and suffix.\n * @param {function(number, boolean):!LogLevel} levelFunc\n * @param {string=} opt_suffix\n * @return {!Log}\n */\nfunction callLogConstructor(levelFunc, opt_suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return new logConstructor(self, levelFunc, opt_suffix);\n}\n\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\nexport function user(opt_element) {\n  // logs.user must exist first to perform the logs.user.win check below\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n\n  if (isFromEmbed(logs.user.win, opt_element)) {\n    return (\n      logs.userForEmbed ||\n      (logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL))\n    );\n  }\n  return logs.user;\n}\n\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\nfunction getUserLogger(suffix) {\n  return callLogConstructor(\n    (logNum, development) =>\n      development || logNum >= 1 ? LogLevel.FINE : LogLevel.WARN,\n    suffix\n  );\n}\n\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\nexport function dev() {\n  return (\n    logs.dev ||\n    (logs.dev = callLogConstructor((logNum) =>\n      logNum >= 3 ? LogLevel.FINE : logNum >= 2 ? LogLevel.INFO : LogLevel.OFF\n    ))\n  );\n}\n\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\nfunction isFromEmbed(win, opt_element) {\n  return opt_element && opt_element.ownerDocument.defaultView != win;\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function devAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (mode.isMinified()) {\n    return shouldBeTrueish;\n  }\n  if (self.__AMP_ASSERTION_CHECK) {\n    // This will never execute regardless, but will be included on unminified\n    // builds. It will be DCE'd away from minified builds, and so can be used to\n    // validate that Babel is properly removing dev assertions in minified\n    // builds.\n    console /*OK*/\n      .log('__devAssert_sentinel__');\n  }\n\n  return dev()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function userAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return user()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n", "/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\nimport {Deferred} from '#core/data-structures/promise';\nimport {getWin} from '#core/window';\n\nimport {dev, devAssert} from '#utils/log';\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (function(new:Object, !Window)|\n *          function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nlet ServiceHolderDef;\n\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\nexport class Disposable {\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  dispose() {}\n}\n\n/**\n * Installs a service override on amp-doc level.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n * @param {!Object} service The service.\n */\nexport function installServiceInEmbedDoc(ampdoc, id, service) {\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ true\n  );\n}\n\n/**\n * Installs a service override in the scope of an embedded window.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {function(new:Object, !Window)} constructor\n */\nexport function registerServiceBuilderInEmbedWin(embedWin, id, constructor) {\n  registerServiceInternal(\n    embedWin,\n    embedWin,\n    id,\n    constructor,\n    /* override */ true\n  );\n}\n\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilderForDoc(\n  nodeOrDoc,\n  id,\n  constructor,\n  opt_instantiate\n) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\nexport function rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). But\n * it looks in the immediate window scope, not the top-level window.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getServiceInEmbedWin(win, id) {\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nexport function getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\nexport function getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\nexport function getServiceForDoc(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Object}\n */\nexport function getServiceForDocOrNull(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\nexport function getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(\n    getAmpdocServiceHolder(elementOrAmpDoc),\n    id\n  );\n}\n\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\nexport function setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\nexport function getParentWindowFrameElement(node, opt_topWin) {\n  const childWin = (node.ownerDocument || node).defaultView;\n  const topWin = opt_topWin || getTopWindow(childWin);\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return /** @type {?HTMLIFrameElement} */ (childWin.frameElement);\n    } catch (e) {\n      // Ignore the error.\n    }\n  }\n  return null;\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\nexport function getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    const win = getWin(nodeOrDoc);\n    return getAmpdocService(win).getAmpDoc(/** @type {!Node} */ (nodeOrDoc));\n  }\n  return /** @type {!./service/ampdoc-impl.AmpDoc} */ (nodeOrDoc);\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\nfunction getAmpdocService(win) {\n  return /** @type {!./service/ampdoc-impl.AmpDocService} */ (\n    getService(win, 'ampdoc')\n  );\n}\n\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n */\nfunction getServiceInternal(holder, id) {\n  devAssert(\n    isServiceRegistered(holder, id),\n    `Expected service ${id} to be registered`\n  );\n  const services = getServices(holder);\n  const s = services[id];\n  if (!s.obj) {\n    devAssert(s.ctor, `Service ${id} registered without ctor nor impl.`);\n    devAssert(s.context, `Service ${id} registered without context.`);\n    s.obj = new s.ctor(s.context);\n    devAssert(s.obj, `Service ${id} constructed to null.`);\n    s.context = null;\n    // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n  return s.obj;\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n * @param {boolean=} opt_sharedInstance\n */\nfunction registerServiceInternal(\n  holder,\n  context,\n  id,\n  ctor,\n  opt_override,\n  opt_sharedInstance\n) {\n  const services = getServices(holder);\n  let s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null,\n      sharedInstance: opt_sharedInstance || false,\n    };\n  }\n\n  if (!opt_override && s.ctor) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context;\n  s.sharedInstance = opt_sharedInstance || false;\n\n  // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nfunction getServicePromiseInternal(holder, id) {\n  const cached = getServicePromiseOrNullInternal(holder, id);\n  if (cached) {\n    return cached;\n  }\n  // Service is not registered.\n\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n  const services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return /** @type {!Promise<!Object>} */ (services[id].promise);\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\nfunction rejectServicePromiseInternal(holder, id, error) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\nfunction getServicePromiseOrNullInternal(holder, id) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return (s.promise = Promise.resolve(/** @type {!Object} */ (s.obj)));\n    }\n  }\n  return null;\n}\n\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\nfunction getServices(holder) {\n  let services = holder.__AMP_SERVICES;\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n  return services;\n}\n\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\nexport function isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\nexport function assertDisposable(service) {\n  devAssert(isDisposable(service), 'required to implement Disposable');\n  return /** @type {!Disposable} */ (service);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\nexport function disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\nexport function disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n\n/**\n * @param {!Object} holder Object holding the service instances.\n */\nfunction disposeServicesInternal(holder) {\n  const services = getServices(holder);\n  for (const id in services) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      continue;\n    }\n    const serviceHolder = services[id];\n    if (serviceHolder.sharedInstance) {\n      continue;\n    }\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then((instance) =>\n        disposeServiceInternal(id, instance)\n      );\n    }\n  }\n}\n\n/**\n * @param {string} id\n * @param {!Object} service\n */\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    dev().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n\n/**\n * This adopts the service **instance** from the parent.\n *\n * This function is dangerous! Sharing an instance means data can leak to and\n * from a child ampdoc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceForEmbedDoc(ampdoc, id) {\n  const service = getServiceInternal(\n    getAmpdocServiceHolder(devAssert(ampdoc.getParent())),\n    id\n  );\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ false,\n    /* sharedInstance */ true\n  );\n}\n\n/**\n * This adopts the service **factory** from the parent.\n *\n * This function is safer than sharing the service instance, since each ampdoc\n * will create its own instance of the factory (and each instance will have its\n * own instance data). Note that static data is still shared, so it's not 100%\n * foolproof.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceFactoryForEmbedDoc(ampdoc, id) {\n  const parentHolder = getAmpdocServiceHolder(devAssert(ampdoc.getParent()));\n  devAssert(\n    isServiceRegistered(parentHolder, id),\n    `Expected service ${id} to be registered`\n  );\n  const service = getServices(parentHolder)[id];\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    devAssert(service.ctor)\n  );\n}\n\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\nexport function resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\nfunction isServiceRegistered(holder, id) {\n  const service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id];\n  // All registered services must have a constructor.\n  return !!(service && service.ctor);\n}\n\n/** @return {!ServiceHolderDef} */\nfunction emptyServiceHolderWithPromise() {\n  const deferred = new Deferred();\n  const {promise, reject, resolve} = deferred;\n  promise.catch(() => {}); // avoid uncaught exception when service gets rejected\n  return {\n    obj: null,\n    promise,\n    resolve,\n    reject,\n    context: null,\n    ctor: null,\n  };\n}\n", "import * as dom from '#core/dom';\n\nimport {extensionScriptInNode} from '#service/extension-script';\n\nimport {userAssert} from '#utils/log';\n\nimport {\n  getAmpdoc,\n  getService,\n  getServiceForDocOrNull,\n  getServicePromise,\n  getServicePromiseForDoc,\n  getServicePromiseOrNull,\n  getServicePromiseOrNullForDoc,\n} from './service-helpers';\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {string} version The extension version.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailable(\n  win,\n  id,\n  extension,\n  version,\n  opt_element\n) {\n  const s = getServicePromiseOrNull(win, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  return getElementServicePromiseOrNull(\n    win,\n    id,\n    extension,\n    version,\n    opt_element\n  );\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(\n    element,\n    id,\n    extension,\n    opt_element\n  ).then((service) => assertService(service, id, extension));\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDoc(\n  element,\n  id,\n  extension,\n  opt_element\n) {\n  const s = getServicePromiseOrNullForDoc(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  const ampdoc = getAmpdoc(element);\n  return ampdoc\n    .whenExtensionsKnown()\n    .then(() => {\n      const version = ampdoc.getExtensionVersion(extension);\n      if (!version) {\n        return null;\n      }\n      const extensions = getService(ampdoc.win, 'extensions');\n      return extensions.waitForExtension(extension, version);\n    })\n    .then((ext) => {\n      if (!ext) {\n        return null;\n      }\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNullForDoc(element, id);\n      }\n      return getServicePromiseForDoc(element, id);\n    });\n}\n\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDocInEmbedScope(\n  element,\n  id,\n  extension\n) {\n  const s = getServiceForDocOrNull(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (Promise.resolve(s));\n  }\n  return getElementServiceIfAvailableForDoc(element, id, extension);\n}\n\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\nfunction assertService(service, id, extension) {\n  return /** @type {!Object} */ (\n    userAssert(\n      service,\n      'Service %s was requested to be provided through %s, ' +\n        'but %s is not loaded in the current page. To fix this ' +\n        'problem load the JavaScript file for %s in this page.',\n      id,\n      extension,\n      extension,\n      extension\n    )\n  );\n}\n\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {string} version\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\nfunction getElementServicePromiseOrNull(\n  win,\n  id,\n  extension,\n  version,\n  opt_element\n) {\n  return dom\n    .waitForBodyOpenPromise(win.document)\n    .then(() => {\n      // If there is an extension script wait for it to load before trying\n      // to get the service. Prevents a race condition when everything but\n      // the extensions is in cache. If there is no script then it's either\n      // not present, or the service was defined by a test. In those cases\n      // we don't wait around for an extension that does not exist.\n      const extensions = getService(win, 'extensions');\n\n      // TODO(jpettitt) investigate registerExtension to short circuit\n      // the dom call in extensionScriptsInNode()\n      if (!extensionScriptInNode(extensions.win, extension, version)) {\n        return null;\n      }\n      return extensions.waitForExtension(extension, version);\n    })\n    .then((ext) => {\n      if (!ext) {\n        return null;\n      }\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNull(win, id);\n      }\n      return getServicePromise(win, id);\n    });\n}\n", "import {\n  getElementServiceForDoc,\n  getElementServiceIfAvailable,\n  getElementServiceIfAvailableForDoc,\n  getElementServiceIfAvailableForDocInEmbedScope,\n} from '../element-service';\nimport {\n  getAmpdoc,\n  getExistingServiceOrNull,\n  getService,\n  getServiceForDoc,\n  getServiceForDocOrNull,\n  getServiceInEmbedWin,\n  getServicePromiseForDoc,\n} from '../service-helpers';\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nexport let SubscriptionService;\n\nexport class Services {\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */ (\n      getElementServiceForDoc(element, 'access', 'amp-access')\n    );\n  }\n\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */ (\n      getElementServiceIfAvailableForDoc(element, 'access', 'amp-access')\n    );\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  static subscriptionsServiceForDoc(element) {\n    return /** @type {!Promise<!SubscriptionService>} */ (\n      getElementServiceForDoc(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  static subscriptionsServiceForDocOrNull(element) {\n    return /** @type {!Promise<?SubscriptionService>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'subscriptions',\n        'amp-subscriptions'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  static actionServiceForDoc(element) {\n    return /** @type {!./service/action-impl.ActionService} */ (\n      getServiceForDocOrNull(element, 'action')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  static standardActionsForDoc(element) {\n    return /** @type {!./service/standard-actions-impl.StandardActions} */ (\n      getServiceForDocOrNull(element, 'standard-actions')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  static activityForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */ (\n      getElementServiceForDoc(element, 'activity', 'amp-analytics')\n    );\n  }\n\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  static ampdocServiceFor(window) {\n    return /** @type {!./service/ampdoc-impl.AmpDocService} */ (\n      getService(window, 'ampdoc')\n    );\n  }\n\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  static ampdoc(nodeOrAmpDoc) {\n    return getAmpdoc(nodeOrAmpDoc);\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDoc(element, loadAnalytics = false) {\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      const ampdoc = getAmpdoc(element);\n      Services.extensionsFor(ampdoc.win)./*OK*/ installExtensionForDoc(\n        ampdoc,\n        'amp-analytics'\n      );\n    }\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (\n      getElementServiceForDoc(\n        element,\n        'amp-analytics-instrumentation',\n        'amp-analytics'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'amp-analytics-instrumentation',\n        'amp-analytics'\n      )\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  static batchedXhrFor(window) {\n    return /** @type {!./service/batched-xhr-impl.BatchedXhr} */ (\n      getService(window, 'batched-xhr')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  static bindForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */ (\n      getElementServiceIfAvailableForDocInEmbedScope(\n        element,\n        'bind',\n        'amp-bind'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>}\n   */\n  static scriptForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>} */ (\n      getElementServiceIfAvailableForDocInEmbedScope(\n        element,\n        'amp-script',\n        'amp-script'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  static cidForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/cid-impl.CidDef>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'cid')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  static navigationForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/navigation.Navigation} */ (\n      getServiceForDoc(elementOrAmpDoc, 'navigation')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  static loaderServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */ (\n      getElementServiceForDoc(element, 'loader', 'amp-loader')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  static standaloneServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */ (\n      getElementServiceForDoc(element, 'standalone', 'amp-standalone')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  static cryptoFor(window) {\n    return /** @type {!./service/crypto-impl.Crypto} */ (\n      getService(window, 'crypto')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  static documentInfoForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/document-info-impl.DocInfo} */ (\n      getServiceForDoc(elementOrAmpDoc, 'documentInfo')\n    ).get();\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  static extensionsFor(window) {\n    return /** @type {!./service/extensions-impl.Extensions} */ (\n      getService(window, 'extensions')\n    );\n  }\n\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  static formSubmitForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'form-submit-service')\n    );\n  }\n\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  static hiddenObserverForDoc(element) {\n    return /** @type {!./service/hidden-observer-impl.HiddenObserver} */ (\n      getServiceForDocOrNull(element, 'hidden-observer')\n    );\n  }\n\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  static historyForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/history-impl.History} */ (\n      getServiceForDoc(elementOrAmpDoc, 'history')\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  static inputFor(win) {\n    return getService(win, 'input');\n  }\n\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  static inputmaskServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */ (\n      getElementServiceIfAvailableForDoc(element, 'inputmask', 'amp-inputmask')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {?./service/loading-indicator.LoadingIndicatorImpl}\n   */\n  static loadingIndicatorOrNull(elementOrAmpDoc) {\n    return /** @type {?./service/loading-indicator.LoadingIndicatorImpl} */ (\n      getServiceForDocOrNull(elementOrAmpDoc, 'loadingIndicator')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-next-page/1.0/service.NextPageService}\n   */\n  static nextPageServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-next-page/1.0/service.NextPageService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'next-page')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/mutator-interface.MutatorInterface}\n   */\n  static mutatorForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/mutator-interface.MutatorInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'mutator')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  static ownersForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/owners-interface.OwnersInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'owners')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceFor(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (\n      getService(window, 'performance')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceForOrNull(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (\n      getExistingServiceOrNull(window, 'performance')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  static platformFor(window) {\n    return /** @type {!./service/platform-impl.Platform} */ (\n      getService(window, 'platform')\n    );\n  }\n\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  static positionObserverForDoc(element) {\n    return /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */ (\n      getServiceForDoc(element, 'position-observer')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./preconnect.PreconnectService}\n   */\n  static preconnectFor(window) {\n    return getService(window, 'preconnect');\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  static resourcesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/resources-interface.ResourcesInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'resources')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  static resourcesPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'resources')\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>}\n   */\n  static storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>} */\n      (getElementServiceIfAvailable(win, 'story-variable', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  static storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (getExistingServiceOrNull(win, 'story-variable'))\n    );\n  }\n\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>}\n   */\n  static storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>} */\n      (getElementServiceIfAvailable(win, 'story-store', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (getExistingServiceOrNull(win, 'story-store'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  static storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (getExistingServiceOrNull(win, 'story-media-query'))\n    );\n  }\n\n  /**\n   * Get promise with story request service\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>}\n   */\n  static storyRequestServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>} */\n      (getElementServiceIfAvailable(win, 'story-request', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (getExistingServiceOrNull(win, 'story-request'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  static mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (getExistingServiceOrNull(win, 'media-performance-metrics'))\n    );\n  }\n\n  /**\n   * @param {!Element} el\n   * @return {!Promise<./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNull(el) {\n    return /** @type {!Promise<?./service/localization.LocalizationService>} */ (\n      getServicePromiseForDoc(el, 'localization')\n    );\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {?./service/localization.LocalizationService}\n   */\n  static localizationForDoc(element) {\n    return /** @type {?./service/localization.LocalizationService} */ (\n      getServiceForDocOrNull(element, 'localization')\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  static storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (\n        getElementServiceIfAvailable(\n          win,\n          'story-analytics',\n          'amp-story',\n          '1.0',\n          true\n        )\n      )\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  static storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (getExistingServiceOrNull(win, 'story-analytics'))\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  static webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (getElementServiceForDoc(element, 'web-animation', 'amp-animation'))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/real-time-config/real-time-config-impl.RealTimeConfigManager>}\n   */\n  static realTimeConfigForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/real-time-config/real-time-config-impl.RealTimeConfigManager>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'real-time-config')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  static storageForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'storage')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   * TODO(dmanek): Add tests for this method.\n   */\n  static storageForTopLevelDoc(elementOrAmpDoc) {\n    const thisAmpdoc = Services.ampdoc(elementOrAmpDoc);\n    const ampdocService = Services.ampdocServiceFor(thisAmpdoc.win);\n    const topAmpdoc = ampdocService.isSingleDoc()\n      ? ampdocService.getSingleDoc()\n      : null;\n    // We need to verify that ampdocs are on the same origin, therefore\n    // we compare the windows of both.\n    const ampdoc =\n      topAmpdoc && topAmpdoc.win == thisAmpdoc.win ? topAmpdoc : thisAmpdoc;\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (\n      getServicePromiseForDoc(ampdoc, 'storage')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/template-impl.Templates}\n   */\n  static templatesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/template-impl.Templates} */ (\n      getServiceForDoc(elementOrAmpDoc, 'templates')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  static timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return /** @type {!./service/timer-impl.Timer} */ (\n      getServiceInEmbedWin(window, 'timer')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  static urlReplacementsForDoc(element) {\n    return /** @type {!./service/url-replacements-impl.UrlReplacements} */ (\n      getServiceForDocOrNull(element, 'url-replace')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  static userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (\n        getElementServiceForDoc(\n          element,\n          'userNotificationManager',\n          'amp-user-notification'\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  static consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (\n        getElementServiceIfAvailableForDoc(\n          element,\n          'consentPolicyManager',\n          'amp-consent'\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  static geoForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */ (\n      getElementServiceIfAvailableForDoc(element, 'geo', 'amp-geo', true)\n    );\n  }\n\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  static urlForDoc(element) {\n    return /** @type {!./service/url-impl.Url} */ (\n      getServiceForDocOrNull(element, 'url')\n    );\n  }\n\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  static variantsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'variant',\n        'amp-experiment',\n        true\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  static videoManagerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/video-manager-impl.VideoManager} */ (\n      getServiceForDoc(elementOrAmpDoc, 'video-manager')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  static viewerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewer-interface.ViewerInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'viewer')\n    );\n  }\n\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  static viewerPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'viewer')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  static vsyncFor(window) {\n    return /** @type {!./service/vsync-impl.Vsync} */ (\n      getService(window, 'vsync')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  static viewportForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewport/viewport-interface.ViewportInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'viewport')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  static xhrFor(window) {\n    return /** @type {!./service/xhr-impl.Xhr} */ (getService(window, 'xhr'));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../amp-cache-url/amp-cache-url.AmpCacheUrlService>}\n   */\n  static cacheUrlServicePromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<?../amp-cache-url/amp-cache-url.AmpCacheUrlService>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'cache-url')\n    );\n  }\n}\n", "/** @typedef {{name: string, value: (string|number|null)}} */\nexport let QueryParameterDef;\n\n/**\n * Builds a URL from query parameters, truncating to a maximum length if\n * necessary.\n * @param {string} baseUrl scheme, domain, and path for the URL.\n * @param {!Object<string,string|number|null>} queryParams query parameters for\n *     the URL.\n * @param {number} maxLength length to truncate the URL to if necessary.\n * @param {?QueryParameterDef=} opt_truncationQueryParam query parameter to\n *     append to the URL iff any query parameters were truncated.\n * @return {string} the fully constructed URL.\n */\nexport function buildUrl(\n  baseUrl,\n  queryParams,\n  maxLength,\n  opt_truncationQueryParam\n) {\n  const encodedParams = [];\n  const encodedTruncationParam =\n    opt_truncationQueryParam &&\n    !(\n      opt_truncationQueryParam.value == null ||\n      opt_truncationQueryParam.value === ''\n    )\n      ? encodeURIComponent(opt_truncationQueryParam.name) +\n        '=' +\n        encodeURIComponent(String(opt_truncationQueryParam.value))\n      : null;\n  let capacity = maxLength - baseUrl.length;\n  if (encodedTruncationParam) {\n    capacity -= encodedTruncationParam.length + 1;\n  }\n  const keys = Object.keys(queryParams);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = queryParams[key];\n    if (value == null || value === '') {\n      continue;\n    }\n    const encodedNameAndSep = encodeURIComponent(key) + '=';\n    const encodedValue = encodeURIComponent(String(value));\n    const fullLength = encodedNameAndSep.length + encodedValue.length + 1;\n    if (fullLength > capacity) {\n      const truncatedValue = encodedValue\n        .substr(0, capacity - encodedNameAndSep.length - 1)\n        // Don't end with a partially truncated escape sequence\n        .replace(/%\\w?$/, '');\n      if (truncatedValue) {\n        encodedParams.push(encodedNameAndSep + truncatedValue);\n      }\n      if (encodedTruncationParam) {\n        encodedParams.push(encodedTruncationParam);\n      }\n      break;\n    }\n    encodedParams.push(encodedNameAndSep + encodedValue);\n    capacity -= fullLength;\n  }\n  if (!encodedParams.length) {\n    return baseUrl;\n  }\n  return baseUrl + '?' + encodedParams.join('&');\n}\n", "/**\n * @fileoverview Experiments system allows a developer to opt-in to test\n * features that are not yet fully tested.\n *\n * Experiments page: https://cdn.ampproject.org/experiments.html *\n */\n\nimport {isArray} from '#core/types';\nimport {hasOwn, map} from '#core/types/object';\nimport {parseJson} from '#core/types/object/json';\nimport {parseQueryString} from '#core/types/string/url';\n\nimport {dev, user} from '#utils/log';\n\nimport {ExperimentInfoDef} from './experiments.type';\n\nimport {getMode} from '../mode';\nimport {getTopWindow} from '../service-helpers';\n\n/** @const {string} */\nconst TAG = 'EXPERIMENTS';\n\n/** @const {string} */\nconst LOCAL_STORAGE_KEY = 'amp-experiment-toggles';\n\n/** @const {string} */\nconst TOGGLES_WINDOW_PROPERTY = '__AMP__EXPERIMENT_TOGGLES';\n\n/**\n * Whether we are in canary.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isCanary(win) {\n  return !!win.AMP_CONFIG?.canary;\n}\n\n/**\n * Returns binary type, e.g., canary, production, control, or rc.\n * @param {!Window} win\n * @return {string}\n */\nexport function getBinaryType(win) {\n  return win.AMP_CONFIG?.type || 'unknown';\n}\n\n/**\n * Whether the specified experiment is on or off.\n * @param {!Window} win\n * @param {string} experimentId\n * @return {boolean}\n */\nexport function isExperimentOn(win, experimentId) {\n  const toggles = experimentToggles(win);\n  return !!toggles[experimentId];\n}\n\n/**\n * Toggles the experiment on or off. Returns the actual value of the experiment\n * after toggling is done.\n * @param {!Window} win\n * @param {string} experimentId\n * @param {boolean=} opt_on\n * @param {boolean=} opt_transientExperiment  Whether to toggle the\n *     experiment state \"transiently\" (i.e., for this page load only) or\n *     durably (by saving the experiment IDs after toggling).\n *     Default: false (save durably).\n * @return {boolean} New state for experimentId.\n */\nexport function toggleExperiment(\n  win,\n  experimentId,\n  opt_on,\n  opt_transientExperiment\n) {\n  const currentlyOn = isExperimentOn(win, /*OK*/ experimentId);\n  const on = opt_on ?? !currentlyOn;\n  if (on != currentlyOn) {\n    const toggles = experimentToggles(win);\n    toggles[experimentId] = on;\n\n    if (!opt_transientExperiment) {\n      const storedToggles = getExperimentToggles(win);\n      storedToggles[experimentId] = on;\n      saveExperimentToggles(win, storedToggles);\n      // Avoid affecting tests that spy/stub warn().\n      if (!getMode().test) {\n        user().warn(\n          TAG,\n          '\"%s\" experiment %s for the domain \"%s\". See: https://amp.dev/documentation/guides-and-tutorials/learn/experimental',\n          experimentId,\n          on ? 'enabled' : 'disabled',\n          win.location.hostname\n        );\n      }\n    }\n  }\n  return on;\n}\n\n/**\n * Calculate whether the experiment is on or off based off of its default value,\n * stored overriden value, or the global config frequency given.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nexport function experimentToggles(win) {\n  if (win[TOGGLES_WINDOW_PROPERTY]) {\n    return win[TOGGLES_WINDOW_PROPERTY];\n  }\n  win[TOGGLES_WINDOW_PROPERTY] = map();\n  const toggles = win[TOGGLES_WINDOW_PROPERTY];\n\n  // Read default and injected configs of this build.\n  const buildExperimentConfigs = {\n    ...(win.AMP_CONFIG ?? {}),\n    ...(win.AMP_EXP ?? parseJson(win.__AMP_EXP?.textContent || '{}')),\n  };\n  for (const experimentId in buildExperimentConfigs) {\n    const frequency = buildExperimentConfigs[experimentId];\n    if (typeof frequency === 'number' && frequency >= 0 && frequency <= 1) {\n      toggles[experimentId] = Math.random() < frequency;\n    }\n  }\n  // Read document level override from meta tag.\n  const allowedDocOptIn = win.AMP_CONFIG?.['allow-doc-opt-in'];\n  if (isArray(allowedDocOptIn) && allowedDocOptIn.length) {\n    const meta = win.document.head.querySelector(\n      'meta[name=\"amp-experiments-opt-in\"]'\n    );\n    if (meta) {\n      const optedInExperiments = meta.getAttribute('content').split(',');\n      for (const experiment of optedInExperiments) {\n        if (dev().assertArray(allowedDocOptIn).includes(experiment)) {\n          toggles[experiment] = true;\n        }\n      }\n    }\n  }\n\n  Object.assign(toggles, getExperimentToggles(win));\n\n  const allowedUrlOptIn = win.AMP_CONFIG?.['allow-url-opt-in'];\n  if (isArray(allowedUrlOptIn) && allowedUrlOptIn.length) {\n    const hash = win.location['originalHash'] || win.location.hash;\n    const params = parseQueryString(hash);\n    for (const experiment of allowedUrlOptIn) {\n      const param = params[`e-${experiment}`];\n      if (param == '1') {\n        toggles[experiment] = true;\n      }\n      if (param == '0') {\n        toggles[experiment] = false;\n      }\n    }\n  }\n  return toggles;\n}\n\n/**\n * Returns the cached experiments toggles, or null if they have not been\n * computed yet.\n * @param {!Window} win\n * @return {?Object<string, boolean>}\n */\nexport function experimentTogglesOrNull(win) {\n  return win[TOGGLES_WINDOW_PROPERTY] || null;\n}\n\n/**\n * Returns a set of experiment IDs currently on.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nfunction getExperimentToggles(win) {\n  let experimentsString = '';\n  try {\n    if ('localStorage' in win) {\n      experimentsString = win.localStorage.getItem(LOCAL_STORAGE_KEY);\n    }\n  } catch {\n    dev().warn(TAG, 'Failed to retrieve experiments from localStorage.');\n  }\n  const tokens = experimentsString?.split(/\\s*,\\s*/g) || [];\n\n  const toggles = map();\n  for (const token of tokens) {\n    if (!token) {\n      continue;\n    }\n    if (token[0] == '-') {\n      toggles[token.substr(1)] = false;\n    } else {\n      toggles[token] = true;\n    }\n  }\n  return toggles;\n}\n\n/**\n * Saves a set of experiment IDs currently on.\n * @param {!Window} win\n * @param {!Object<string, boolean>} toggles\n */\nfunction saveExperimentToggles(win, toggles) {\n  const experimentIds = [];\n  for (const experiment in toggles) {\n    experimentIds.push((toggles[experiment] === false ? '-' : '') + experiment);\n  }\n  try {\n    win.localStorage?.setItem(LOCAL_STORAGE_KEY, experimentIds.join(','));\n  } catch (e) {\n    user().error(TAG, 'Failed to save experiments to localStorage.');\n  }\n}\n\n/**\n * See getExperimentToggles().\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n * @visibleForTesting\n */\nexport function getExperimentTogglesForTesting(win) {\n  return getExperimentToggles(win);\n}\n\n/**\n * Resets the experimentsToggle cache for testing purposes.\n * @param {!Window} win\n * @visibleForTesting\n */\nexport function resetExperimentTogglesForTesting(win) {\n  saveExperimentToggles(win, {});\n  win[TOGGLES_WINDOW_PROPERTY] = null;\n}\n\n/**\n * In some browser implementations of Math.random(), sequential calls of\n * Math.random() are correlated and can cause a bias.  In particular,\n * if the previous random() call was < 0.001 (as it will be if we select\n * into an experiment), the next value could be less than 0.5 more than\n * 50.7% of the time.  This provides an implementation that roots down into\n * the crypto API, when available, to produce less biased samples.\n *\n * @return {number} Pseudo-random floating-point value on the range [0, 1).\n */\nfunction slowButAccuratePrng() {\n  // TODO(tdrl): Implement.\n  return Math.random();\n}\n\n/**\n * Container for alternate random number generator implementations.  This\n * allows us to set an \"accurate\" PRNG for branch selection, but to mock it\n * out easily in tests.\n *\n * @visibleForTesting\n * @const {!{accuratePrng: function():number}}\n */\nexport const RANDOM_NUMBER_GENERATORS = {\n  accuratePrng: slowButAccuratePrng,\n};\n\n/**\n * Selects, uniformly at random, a single item from the array.\n * @param {!Array<string>} arr Object to select from.\n * @return {?string} Single item from arr or null if arr was empty.\n */\nfunction selectRandomItem(arr) {\n  const rn = RANDOM_NUMBER_GENERATORS.accuratePrng();\n  return dev().assertString(arr[Math.floor(rn * arr.length)]) || null;\n}\n\n/**\n * Selects which page-level experiment branches are enabled. If a given\n * experiment name is already set (including to the null / no branches selected\n * state), this won't alter its state.\n *\n * Check whether a given experiment is set using isExperimentOn(win,\n * experimentName) and, if it is on, look for which branch is selected in\n * win.__AMP_EXPERIMENT_BRANCHES[experimentName].\n *\n * @param {!Window} win Window context on which to save experiment\n *     selection state.\n * @param {!Array<!ExperimentInfoDef>} experiments  Set of experiments to\n *     configure for this page load.\n * @return {!Object<string, string>} Map of experiment names to selected\n *     branches.\n */\nexport function randomlySelectUnsetExperiments(win, experiments) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  const selectedExperiments = {};\n  for (const experiment of experiments) {\n    const experimentName = experiment.experimentId;\n    if (hasOwn(win.__AMP_EXPERIMENT_BRANCHES, experimentName)) {\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n      continue;\n    }\n\n    if (!experiment.isTrafficEligible?.(win)) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = null;\n      continue;\n    }\n\n    // If we're in the experiment, but we haven't already forced a specific\n    // experiment branch (e.g., via a test setup), then randomize the branch\n    // choice.\n    if (\n      !win.__AMP_EXPERIMENT_BRANCHES[experimentName] &&\n      isExperimentOn(win, /*OK*/ experimentName)\n    ) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = selectRandomItem(\n        experiment.branches\n      );\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n    }\n  }\n  return selectedExperiments;\n}\n\n/**\n * Returns the experiment branch enabled for the given experiment ID.\n * For example, 'control' or 'experiment'.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @return {?string} Active experiment branch ID for experimentName (possibly\n *     null if experimentName has been tested but no branch was enabled).\n */\nexport function getExperimentBranch(win, experimentName) {\n  return win.__AMP_EXPERIMENT_BRANCHES\n    ? win.__AMP_EXPERIMENT_BRANCHES[experimentName]\n    : null;\n}\n\n/**\n * Returns an object containing all active experiment branches on the\n * top Window.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @return {!Object} contains all experiment branches and their ids.\n */\nexport function getActiveExperimentBranches(win) {\n  const topWin = getTopWindow(win);\n  if (!topWin.__AMP_EXPERIMENT_BRANCHES) {\n    topWin.__AMP_EXPERIMENT_BRANCHES = {};\n  }\n  return {...topWin.__AMP_EXPERIMENT_BRANCHES};\n}\n\n/**\n * Force enable (or disable) a specific branch of a given experiment name.\n * Disables the experiment name altogether if branchId is falseish.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @param {?string} branchId ID of branch to force or null to disable\n *     altogether.\n * @visibleForTesting\n */\nexport function forceExperimentBranch(win, experimentName, branchId) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  toggleExperiment(win, experimentName, !!branchId, true);\n  win.__AMP_EXPERIMENT_BRANCHES[experimentName] = branchId;\n}\n", "import {\n  CONSENT_POLICY_STATE, // eslint-disable-line no-unused-vars\n} from '#core/constants/consent-state';\nimport {dict} from '#core/types/object';\n\nimport {Services} from '#service';\n\n/**\n * Returns a promise that resolve when all consent state the policy wait\n * for resolve. Or if consent service is not available.\n * @param {!Element|!ShadowRoot} element\n * @param {string=} policyId\n * @return {!Promise<?CONSENT_POLICY_STATE>}\n */\nexport function getConsentPolicyState(element, policyId = 'default') {\n  return Services.consentPolicyServiceForDocOrNull(element).then(\n    (consentPolicy) => {\n      if (!consentPolicy) {\n        return null;\n      }\n      return consentPolicy.whenPolicyResolved(/** @type {string} */ (policyId));\n    }\n  );\n}\n\n/**\n * Returns a promise that resolves to a sharedData retrieved from consent\n * remote endpoint.\n * @param {!Element|!ShadowRoot} element\n * @param {string} policyId\n * @return {!Promise<?Object>}\n */\nexport function getConsentPolicySharedData(element, policyId) {\n  return Services.consentPolicyServiceForDocOrNull(element).then(\n    (consentPolicy) => {\n      if (!consentPolicy) {\n        return null;\n      }\n      return consentPolicy.getMergedSharedData(\n        /** @type {string} */ (policyId)\n      );\n    }\n  );\n}\n\n/**\n * @param {!Element|!ShadowRoot} element\n * @param {string=} policyId\n * @return {!Promise<string>}\n */\nexport function getConsentPolicyInfo(element, policyId = 'default') {\n  // Return the stored consent string.\n  return Services.consentPolicyServiceForDocOrNull(element).then(\n    (consentPolicy) => {\n      if (!consentPolicy) {\n        return null;\n      }\n      return consentPolicy.getConsentStringInfo(\n        /** @type {string} */ (policyId)\n      );\n    }\n  );\n}\n\n/**\n * @param {!Element|!ShadowRoot} element\n * @param {string=} policyId\n * @return {!Promise<?Object|undefined>}\n */\nexport function getConsentMetadata(element, policyId = 'default') {\n  // Return the stored consent metadata.\n  return Services.consentPolicyServiceForDocOrNull(element).then(\n    (consentPolicy) => {\n      if (!consentPolicy) {\n        return null;\n      }\n      return consentPolicy.getConsentMetadataInfo(\n        /** @type {string} */ (policyId)\n      );\n    }\n  );\n}\n\n/**\n * Returns a set of consent values to forward to a 3rd party (like an iframe).\n * @param {!Element} element\n * @param {?string=} opt_policyId\n * @return {!Promise<!JsonObject>}\n *   See extensions/amp-consent/customizing-extension-behaviors-on-consent.md:\n *    - consentMetadata\n *    - consentString\n *    - consentPolicyState\n *    - consentPolicySharedData\n */\nexport function getConsentDataToForward(element, opt_policyId) {\n  return Services.consentPolicyServiceForDocOrNull(element).then((policy) => {\n    const gettersOrNull = dict({\n      'consentMetadata': policy && policy.getConsentMetadataInfo,\n      'consentString': policy && policy.getConsentStringInfo,\n      'consentPolicyState': policy && policy.whenPolicyResolved,\n      'consentPolicySharedData': policy && policy.getMergedSharedData,\n    });\n    if (!policy) {\n      return gettersOrNull;\n    }\n    return /** @type {!JsonObject} */ (\n      Promise.all(\n        Object.keys(gettersOrNull).map((key) =>\n          gettersOrNull[key]\n            .call(policy, opt_policyId || 'default')\n            .then((value) => ({[key]: value}))\n        )\n      ).then((objs) => Object.assign.apply({}, objs))\n    );\n  });\n}\n\n/**\n * Determine if an element needs to be blocked by consent based on meta tags.\n * @param {*} element\n * @return {boolean}\n */\nexport function shouldBlockOnConsentByMeta(element) {\n  const ampdoc = element.getAmpDoc();\n  let content = ampdoc.getMetaByName('amp-consent-blocking');\n  if (!content) {\n    return false;\n  }\n\n  // Handles whitespace\n  content = content.toUpperCase().replace(/\\s+/g, '');\n\n  const contents = /** @type {Array<string>} */ (content.split(','));\n  return contents.includes(element.tagName);\n}\n", "/** @const {string} */\nexport const READY_SCAN_SIGNAL = 'ready-scan';\n\n/**\n * The internal structure of a ChangeHeightRequest.\n * @typedef {{\n *   newMargins: !../layout-rect.LayoutMarginsChangeDef,\n *   currentMargins: !../layout-rect.LayoutMarginsDef\n * }}\n */\nexport let MarginChangeDef;\n\n/**\n * The internal structure of a ChangeHeightRequest.\n * @typedef {{\n *   resource: !./resource.Resource,\n *   newHeight: (number|undefined),\n *   newWidth: (number|undefined),\n *   marginChange: (!MarginChangeDef|undefined),\n *   event: (?Event|undefined),\n *   force: boolean,\n *   callback: (function(boolean)|undefined),\n * }}\n */\nexport let ChangeSizeRequestDef;\n\n/* eslint-disable no-unused-vars */\n/**\n * @interface\n */\nexport class ResourcesInterface {\n  /**\n   * Returns a list of resources.\n   * @return {!Array<!./resource.Resource>}\n   */\n  get() {}\n\n  /**\n   * @return {!./ampdoc-impl.AmpDoc}\n   */\n  getAmpdoc() {}\n\n  /**\n   * Returns the {@link Resource} instance corresponding to the specified AMP\n   * Element. If no Resource is found, the exception is thrown.\n   * @param {!AmpElement} element\n   * @return {!./resource.Resource}\n   */\n  getResourceForElement(element) {}\n\n  /**\n   * Returns the {@link Resource} instance corresponding to the specified AMP\n   * Element. Returns null if no resource is found.\n   * @param {!AmpElement} element\n   * @return {?./resource.Resource}\n   */\n  getResourceForElementOptional(element) {}\n\n  /**\n   * Returns the direction the user last scrolled.\n   *  - -1 for scrolling up\n   *  - 1 for scrolling down\n   *  - Defaults to 1\n   * TODO(lannka): this method should not belong to resources.\n   * @return {number}\n   */\n  getScrollDirection() {}\n\n  /**\n   * Signals that an element has been added to the DOM. Resources manager\n   * will start tracking it from this point on.\n   * @param {!AmpElement} element\n   */\n  add(element) {}\n\n  /**\n   * Signals that an element has been upgraded to the DOM. Resources manager\n   * will perform build and enable layout/viewport signals for this element.\n   * @param {!AmpElement} element\n   */\n  upgraded(element) {}\n\n  /**\n   * Signals that an element has been removed to the DOM. Resources manager\n   * will stop tracking it from this point on.\n   * @param {!AmpElement} element\n   */\n  remove(element) {}\n\n  /**\n   * Schedules layout or preload for the specified resource.\n   * @param {!./resource.Resource} resource\n   * @param {boolean} layout\n   * @param {number=} opt_parentPriority\n   * @param {boolean=} opt_forceOutsideViewport\n   */\n  scheduleLayoutOrPreload(\n    resource,\n    layout,\n    opt_parentPriority,\n    opt_forceOutsideViewport\n  ) {}\n\n  /**\n   * Schedules the work pass at the latest with the specified delay.\n   * @param {number=} opt_delay\n   * @param {boolean=} opt_relayoutAll\n   * @return {boolean}\n   */\n  schedulePass(opt_delay, opt_relayoutAll) {}\n\n  /**\n   * Enqueue, or update if already exists, a mutation task for a resource.\n   * @param {./resource.Resource} resource\n   * @param {ChangeSizeRequestDef} newRequest\n   * @package\n   */\n  updateOrEnqueueMutateTask(resource, newRequest) {}\n\n  /**\n   * Schedules the work pass at the latest with the specified delay.\n   * @package\n   */\n  schedulePassVsync() {}\n\n  /**\n   * Registers a callback to be called when the next pass happens.\n   * @param {function()} callback\n   */\n  onNextPass(callback) {}\n\n  /**\n   * @return {!Promise} when first pass executed.\n   */\n  whenFirstPass() {}\n\n  /**\n   * Called when main AMP binary is fully initialized.\n   * May never be called in Shadow Mode.\n   */\n  ampInitComplete() {}\n\n  /**\n   * @param {number} relayoutTop\n   * @package\n   */\n  setRelayoutTop(relayoutTop) {}\n\n  /**\n   * Flag that the height could have been changed.\n   * @package\n   */\n  maybeHeightChanged() {}\n\n  /**\n   * Updates the priority of the resource. If there are tasks currently\n   * scheduled, their priority is updated as well.\n   * @param {!Element} element\n   * @param {number} newLayoutPriority\n   */\n  updateLayoutPriority(element, newLayoutPriority) {}\n}\n/* eslint-enable no-unused-vars */\n", "import {isIframed} from '#core/dom';\n\nimport {Services} from '#service';\nimport {READY_SCAN_SIGNAL} from '#service/resources-interface';\n\n/** @const {!Array<string>} */\nconst EXCLUDE_INI_LOAD = [\n  'AMP-AD',\n  'AMP-ANALYTICS',\n  'AMP-PIXEL',\n  'AMP-AD-EXIT',\n];\n\n/**\n * Returns the promise that will be resolved when all content elements\n * have been loaded in the initially visible set.\n * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {!Window} hostWin\n * @param {!./layout-rect.LayoutRectDef} rect\n * @param {boolean=} opt_prerenderableOnly signifies if we are in prerender mode.\n * @return {!Promise}\n */\nexport function whenContentIniLoad(\n  elementOrAmpDoc,\n  hostWin,\n  rect,\n  opt_prerenderableOnly\n) {\n  if (INI_LOAD_INOB) {\n    return whenContentIniLoadInOb(elementOrAmpDoc, opt_prerenderableOnly);\n  }\n  return whenContentIniLoadMeasure(\n    elementOrAmpDoc,\n    hostWin,\n    rect,\n    opt_prerenderableOnly\n  );\n}\n\n/**\n * A legacy way using direct measurement.\n * Used by inabox runtime, and will be moved there after #31915.\n *\n * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {!Window} hostWin\n * @param {!./layout-rect.LayoutRectDef} rect\n * @param {boolean=} opt_prerenderableOnly signifies if we are in prerender mode.\n * @return {!Promise}\n */\nexport function whenContentIniLoadMeasure(\n  elementOrAmpDoc,\n  hostWin,\n  rect,\n  opt_prerenderableOnly\n) {\n  const ampdoc = Services.ampdoc(elementOrAmpDoc);\n  return getMeasuredResources(ampdoc, hostWin, (r) => {\n    // TODO(jridgewell): Remove isFixed check here once the position\n    // is calculted correctly in a separate layer for embeds.\n    if (\n      !r.isDisplayed() ||\n      (!r.overlaps(rect) && !r.isFixed()) ||\n      (opt_prerenderableOnly && !r.prerenderAllowed())\n    ) {\n      return false;\n    }\n    return true;\n  }).then((resources) => {\n    const promises = [];\n    resources.forEach((r) => {\n      if (!EXCLUDE_INI_LOAD.includes(r.element.tagName)) {\n        promises.push(r.loadedOnce());\n      }\n    });\n    return Promise.all(promises);\n  });\n}\n\n/**\n * A new way using direct measurement.\n *\n * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {boolean=} opt_prerenderableOnly signifies if we are in prerender mode.\n * @return {!Promise}\n * @visibleForTesting\n * TODO(#31915): remove visibility\n */\nexport function whenContentIniLoadInOb(elementOrAmpDoc, opt_prerenderableOnly) {\n  const ampdoc = Services.ampdoc(elementOrAmpDoc);\n  // First, wait for the `ready-scan` signal. Waiting for each element\n  // individually is too expensive and `ready-scan` will cover most of\n  // the initially parsed elements.\n  const whenReady = ampdoc.signals().whenSignal(READY_SCAN_SIGNAL);\n  return whenReady.then(() => {\n    // Filter elements.\n    const resources = Services.resourcesForDoc(ampdoc);\n    const elements = resources\n      .get()\n      .filter((r) => {\n        if (opt_prerenderableOnly && !r.prerenderAllowed()) {\n          return false;\n        }\n        return !EXCLUDE_INI_LOAD.includes(r.element.tagName);\n      })\n      .map((r) => r.element);\n\n    if (elements.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    // Find intersecting elements.\n    return new Promise((resolve) => {\n      const {win} = ampdoc;\n      const io = new win.IntersectionObserver(\n        (entries) => {\n          io.disconnect();\n          const intersecting = [];\n          for (let i = 0; i < entries.length; i++) {\n            const {isIntersecting, target} = entries[i];\n            if (isIntersecting) {\n              intersecting.push(target);\n            }\n          }\n          resolve(intersecting);\n        },\n        {\n          // We generally always want `root: document` here. However, in\n          // many browsers this is still polyfilled and `{root: null}` is\n          // a lot faster.\n          root: isIframed(win) ? /** @type {?} */ (win.document) : null,\n          threshold: 0.01,\n        }\n      );\n      // Limit check to the first 100 elements.\n      for (let i = 0; i < Math.min(elements.length, 100); i++) {\n        io.observe(elements[i]);\n      }\n    }).then((elements) => {\n      return Promise.all(elements.map((element) => element.whenLoaded()));\n    });\n  });\n}\n\n/**\n * Returns a subset of resources which are (1) belong to the specified host\n * window, and (2) meet the filterFn given.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {!Window} hostWin\n * @param {function(!./service/resource.Resource):boolean} filterFn\n * @return {!Promise<!Array<!./service/resource.Resource>>}\n */\nexport function getMeasuredResources(ampdoc, hostWin, filterFn) {\n  // First, wait for the `ready-scan` signal. Waiting for each element\n  // individually is too expensive and `ready-scan` will cover most of\n  // the initially parsed elements.\n  return ampdoc\n    .signals()\n    .whenSignal(READY_SCAN_SIGNAL)\n    .then(() => {\n      // Second, wait for any left-over elements to complete measuring.\n      const measurePromiseArray = [];\n      const resources = Services.resourcesForDoc(ampdoc);\n      resources.get().forEach((r) => {\n        if (!r.hasBeenMeasured() && r.hostWin == hostWin && !r.hasOwner()) {\n          measurePromiseArray.push(r.ensureMeasured());\n        }\n      });\n      return Promise.all(measurePromiseArray);\n    })\n    .then(() => {\n      const resources = Services.resourcesForDoc(ampdoc);\n      return resources.get().filter((r) => {\n        return (\n          r.hostWin == hostWin &&\n          !r.hasOwner() &&\n          r.hasBeenMeasured() &&\n          filterFn(r)\n        );\n      });\n    });\n}\n", "import {jsonConfiguration} from '#core/types/object/json';\n\n/**\n * @typedef {{\n *   prefetch: (string|undefined),\n *   preconnect: (string|undefined),\n *   renderStartImplemented: (boolean|undefined),\n *   clientIdScope: (string|undefined),\n *   clientIdCookieName: (string|undefined),\n *   consentHandlingOverride: (boolean|undefined),\n *   fullWidthHeightRatio: (number|undefined),\n * }}\n */\nlet AdNetworkConfigDef;\n\n/**\n * The config of each ad network.\n * Please keep the list alphabetic order.\n *\n * yourNetworkName: {  // This is the \"type\" attribute of <amp-ad>\n *\n *   // List of URLs for prefetch\n *   prefetch: string|array\n *\n *   // List of hosts for preconnect\n *   preconnect: string|array\n *\n *   // The scope used to provide CIDs to ads\n *   clientIdScope: string\n *\n *   // The cookie name to store the CID. In absence, `clientIdScope` is used.\n *   clientIdCookieName: string\n *\n *   // If the ad network is willing to override the consent handling, which\n *   // by default is blocking ad load until the consent is accepted.\n *   consentHandlingOverride: boolean\n *\n *   // Whether render-start API has been implemented\n *   // We highly recommend all networks to implement the API,\n *   // see details in the README.md\n *   renderStartImplemented: boolean\n *\n *   // The width / height ratio for full width ad units.\n *   // If absent, it means the network does not support full width ad units.\n *   // Example value: 1.2\n *   fullWidthHeightRatio: number\n * }\n *\n * @const {!Object<string, !JsonObject>}\n */\nconst adConfig = jsonConfiguration({\n  '_ping_': {\n    renderStartImplemented: true,\n    clientIdScope: '_PING_',\n    consentHandlingOverride: true,\n  },\n\n  '1wo': {},\n\n  '24smi': {\n    prefetch: 'https://jsn.24smi.net/smi.js',\n    preconnect: 'https://data.24smi.net',\n  },\n\n  'a8': {\n    prefetch: 'https://statics.a8.net/amp/ad.js',\n    renderStartImplemented: true,\n  },\n\n  'a9': {\n    prefetch: 'https://z-na.amazon-adsystem.com/widgets/onejs?MarketPlace=US',\n  },\n\n  'accesstrade': {\n    prefetch: 'https://h.accesstrade.net/js/amp/amp.js',\n  },\n\n  'adagio': {\n    prefetch: 'https://js-ssl.neodatagroup.com/adagio_amp.js',\n    preconnect: [\n      'https://ad-aws-it.neodatagroup.com',\n      'https://tracker.neodatagroup.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'adblade': {\n    prefetch: 'https://web.adblade.com/js/ads/async/show.js',\n    preconnect: [\n      'https://staticd.cdn.adblade.com',\n      'https://static.adblade.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'adbutler': {\n    prefetch: 'https://servedbyadbutler.com/app.js',\n  },\n\n  'adform': {},\n\n  'adfox': {\n    prefetch: 'https://yandex.ru/ads/system/context.js',\n    preconnect: ['https://yastatic.net/'],\n    renderStartImplemented: true,\n  },\n\n  'adgeneration': {\n    prefetch: 'https://i.socdm.com/sdk/js/adg-script-loader.js',\n  },\n\n  'adglare': {\n    renderStartImplemented: true,\n  },\n\n  'adhese': {\n    renderStartImplemented: true,\n  },\n\n  'adincube': {\n    renderStartImplemented: true,\n  },\n\n  'adition': {},\n\n  'adman': {},\n\n  'admanmedia': {\n    renderStartImplemented: true,\n  },\n\n  'admixer': {\n    renderStartImplemented: true,\n    preconnect: ['https://inv-nets.admixer.net', 'https://cdn.admixer.net'],\n  },\n\n  'adnuntius': {\n    prefetch: 'https://cdn.adnuntius.com/adn.js',\n    renderStartImplemented: true,\n  },\n\n  'adocean': {\n    consentHandlingOverride: true,\n  },\n\n  'adop': {},\n\n  'adpicker': {\n    renderStartImplemented: true,\n  },\n\n  'adplugg': {\n    prefetch: 'https://www.adplugg.com/serve/js/ad.js',\n    renderStartImplemented: true,\n  },\n\n  'adpon': {\n    prefetch: 'https://ad.adpon.jp/amp.js',\n    clientIdScope: 'AMP_ECID_ADPON',\n  },\n\n  'adpushup': {\n    prefetch: 'https://securepubads.g.doubleclick.net/tag/js/gpt.js',\n    preconnect: 'https://cdn.adpushup.com',\n  },\n\n  'adreactor': {},\n\n  'adsensor': {\n    prefetch: 'https://wfpscripts.webspectator.com/amp/adsensor-amp.js',\n    clientIdScope: 'amp_ecid_adensor',\n    renderStartImplemented: true,\n  },\n\n  'adservsolutions': {},\n\n  'adsloom': {\n    clientIdScope: 'AMP_ECID_ADSLOOM',\n  },\n  'adsnative': {\n    prefetch: 'https://static.adsnative.com/static/js/render.v1.js',\n    preconnect: 'https://api.adsnative.com',\n  },\n\n  'adspeed': {\n    preconnect: 'https://g.adspeed.net',\n    renderStartImplemented: true,\n  },\n\n  'adspirit': {},\n\n  'adstir': {\n    prefetch: 'https://js.ad-stir.com/js/adstir_async.js',\n    preconnect: 'https://ad.ad-stir.com',\n  },\n\n  'adstyle': {\n    prefetch: 'https://widgets.ad.style/amp.js',\n    preconnect: ['https://w.ad.style'],\n  },\n\n  'adtech': {\n    prefetch: 'https://s.aolcdn.com/os/ads/adsWrapper3.js',\n    preconnect: ['https://mads.at.atwola.com', 'https://aka-cdn.adtechus.com'],\n  },\n\n  'adtelligent': {\n    preconnect: ['https://s.adtelligent.com'],\n    renderStartImplemented: true,\n  },\n\n  'adthrive': {\n    prefetch: ['https://www.googletagservices.com/tag/js/gpt.js'],\n    preconnect: [\n      'https://partner.googleadservices.com',\n      'https://securepubads.g.doubleclick.net',\n      'https://tpc.googlesyndication.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'adunity': {\n    preconnect: ['https://content.adunity.com'],\n    renderStartImplemented: true,\n  },\n\n  'aduptech': {\n    prefetch: 'https://s.d.adup-tech.com/jsapi',\n    preconnect: [\n      'https://d.adup-tech.com',\n      'https://m.adup-tech.com',\n      'https://v.adup-tech.com',\n    ],\n    renderStartImplemented: true,\n    consentHandlingOverride: true,\n  },\n\n  'adventive': {\n    preconnect: ['https://ads.adventive.com', 'https://amp.adventivedev.com'],\n    renderStartImplemented: true,\n  },\n\n  'adverline': {\n    prefetch: 'https://ads.adverline.com/richmedias/amp.js',\n    preconnect: ['https://adnext.fr'],\n    renderStartImplemented: true,\n  },\n\n  'adverticum': {},\n\n  'advertserve': {\n    renderStartImplemented: true,\n  },\n\n  'adyoulike': {\n    consentHandlingOverride: true,\n    prefetch: 'https://fo-static.omnitagjs.com/amp.js',\n    renderStartImplemented: true,\n  },\n\n  'adzerk': {},\n\n  'affiliateb': {\n    prefetch: 'https://track.affiliate-b.com/amp/a.js',\n    renderStartImplemented: true,\n  },\n\n  'aja': {\n    prefetch: [\n      'https://cdn.as.amanad.adtdp.com/sdk/asot-amp.js',\n      'https://cdn.as.amanad.adtdp.com/sdk/asot-v2.js',\n    ],\n    preconnect: ['https://ad.as.amanad.adtdp.com'],\n  },\n\n  'appvador': {\n    prefetch: [\n      'https://cdn.apvdr.com/js/VastAdUnit.min.js',\n      'https://cdn.apvdr.com/js/VideoAd.min.js',\n      'https://cdn.apvdr.com/js/VideoAd3PAS.min.js',\n      'https://cdn.apvdr.com/js/VideoAdAutoPlay.min.js',\n      'https://cdn.apvdr.com/js/VideoAdNative.min.js',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'amoad': {\n    prefetch: ['https://j.amoad.com/js/a.js', 'https://j.amoad.com/js/n.js'],\n    preconnect: [\n      'https://d.amoad.com',\n      'https://i.amoad.com',\n      'https://m.amoad.com',\n      'https://v.amoad.com',\n    ],\n  },\n  'amplified': {\n    preconnect: 'https://srv.clickfuse.com',\n    renderStartImplemented: true,\n  },\n\n  'andbeyond': {\n    prefetch: 'https://securepubads.g.doubleclick.net/tag/js/gpt.js',\n    preconnect: 'https://cdn.andbeyond.media',\n  },\n\n  'aniview': {\n    renderStartImplemented: true,\n  },\n\n  'anyclip': {\n    prefetch:\n      'https://player.anyclip.com/anyclip-widget/lre-widget/prod/v1/src/lre.js',\n    preconnect: [\n      'https://trafficmanager.anyclip.com',\n      'https://lreprx-server.anyclip.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'appnexus': {\n    prefetch: 'https://acdn.adnxs.com/ast/ast.js',\n    preconnect: 'https://ib.adnxs.com',\n    renderStartImplemented: true,\n  },\n\n  'atomx': {\n    prefetch: 'https://s.ato.mx/p.js',\n  },\n\n  'avantisvideo': {\n    renderStartImplemented: true,\n  },\n\n  'beaverads': {\n    renderStartImplemented: true,\n  },\n\n  'beopinion': {\n    prefetch: 'https://widget.beop.io/sdk.js',\n    preconnect: [\n      'https://t.beop.io',\n      'https://s.beop.io',\n      'https://data.beop.io',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'bidtellect': {},\n\n  'blade': {\n    prefetch: 'https://sdk.streamrail.com/blade/sr.blade.js',\n    renderStartImplemented: true,\n  },\n\n  'brainy': {},\n\n  'bringhub': {\n    renderStartImplemented: true,\n    preconnect: ['https://static.bh-cdn.com', 'https://core-api.bringhub.io'],\n  },\n\n  'broadbandy': {\n    renderStartImplemented: true,\n  },\n\n  'broadstreetads': {\n    prefetch: 'https://cdn.broadstreetads.com/init-2.min.js',\n    renderStartImplemented: true,\n  },\n\n  'byplay': {},\n\n  'caajainfeed': {\n    prefetch: ['https://cdn.amanad.adtdp.com/sdk/ajaamp.js'],\n    preconnect: ['https://ad.amanad.adtdp.com'],\n  },\n\n  'capirs': {\n    renderStartImplemented: true,\n  },\n\n  'caprofitx': {\n    prefetch: [\n      'https://cdn.caprofitx.com/pfx.min.js',\n      'https://cdn.caprofitx.com/tags/amp/profitx_amp.js',\n    ],\n    preconnect: 'https://ad.caprofitx.adtdp.com',\n  },\n\n  'cedato': {\n    renderStartImplemented: true,\n  },\n\n  'chargeads': {}, // Deprecated, to be removed on 2019-05-23\n\n  'colombia': {\n    prefetch: 'https://static.clmbtech.com/ad/commons/js/colombia-amp.js',\n  },\n\n  'conative': {\n    renderStartImplemented: true,\n  },\n\n  'connatix': {\n    renderStartImplemented: true,\n  },\n\n  'contentad': {},\n\n  'criteo': {\n    prefetch: 'https://static.criteo.net/js/ld/publishertag.js',\n    preconnect: 'https://cas.criteo.com',\n  },\n\n  'csa': {\n    prefetch: 'https://www.google.com/adsense/search/ads.js',\n  },\n\n  'dable': {\n    preconnect: [\n      'https://static.dable.io',\n      'https://api.dable.io',\n      'https://images.dable.io',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'digiteka': {\n    renderStartImplemented: true,\n  },\n\n  'directadvert': {\n    renderStartImplemented: true,\n  },\n\n  'distroscale': {\n    preconnect: [\n      'https://c.jsrdn.com',\n      'https://s.jsrdn.com',\n      'https://i.jsrdn.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'dotandads': {\n    prefetch: 'https://amp.ad.dotandad.com/dotandadsAmp.js',\n    preconnect: 'https://bal.ad.dotandad.com',\n  },\n  'dynad': {\n    preconnect: ['https://t.dynad.net', 'https://tm.jsuol.com.br'],\n  },\n  'eadv': {\n    renderStartImplemented: true,\n    clientIdScope: 'AMP_ECID_EADV',\n    prefetch: [\n      'https://www.eadv.it/track/esr.min.js',\n      'https://www.eadv.it/track/ead.min.js',\n    ],\n  },\n\n  'empower': {\n    prefetch: 'https://cdn.empower.net/sdk/amp-ad.min.js',\n    renderStartImplemented: true,\n  },\n\n  'engageya': {},\n\n  'epeex': {},\n\n  'eplanning': {\n    prefetch: 'https://us.img.e-planning.net/layers/epl-amp.js',\n  },\n\n  'exco': {\n    renderStartImplemented: true,\n  },\n\n  'ezoic': {\n    prefetch: [\n      'https://www.googletagservices.com/tag/js/gpt.js',\n      'https://g.ezoic.net/ezoic/ampad.js',\n    ],\n    clientIdScope: 'AMP_ECID_EZOIC',\n    consentHandlingOverride: true,\n    renderStartImplemented: true,\n  },\n\n  'f1e': {\n    prefetch: 'https://img.ak.impact-ad.jp/util/f1e_amp.min.js',\n  },\n\n  'f1h': {\n    preconnect: 'https://img.ak.impact-ad.jp',\n    renderStartImplemented: true,\n  },\n\n  'fake': {},\n\n  'fake-delayed': {\n    renderStartImplemented: true,\n  },\n\n  'feedad': {\n    clientIdScope: '__fa_amp',\n    prefetch: 'https://web.feedad.com/sdk/feedad-async.js',\n    renderStartImplemented: true,\n    fullWidthHeightRatio: 16 / 9,\n    consentHandlingOverride: true,\n  },\n\n  'felmat': {\n    prefetch: 'https://t.felmat.net/js/fmamp.js',\n    renderStartImplemented: true,\n  },\n\n  'finative': {},\n\n  'firstimpression': {\n    prefetch: 'https://ecdn.firstimpression.io/static/js/fiamp.js',\n    preconnect: 'https://cdn.firstimpression.io',\n    renderStartImplemented: true,\n    consentHandlingOverride: true,\n  },\n\n  'flite': {},\n\n  'fluct': {\n    prefetch: ['https://pdn.adingo.jp/p.js'],\n    preconnect: [\n      'https://cdn-fluct.sh.adingo.jp',\n      'https://sh.adingo.jp',\n      'https://i.adingo.jp',\n    ],\n  },\n\n  'forkmedia': {\n    renderStartImplemented: true,\n  },\n\n  'freewheel': {\n    prefetch: 'https://cdn.stickyadstv.com/prime-time/fw-amp.min.js',\n    renderStartImplemented: true,\n  },\n\n  'fusion': {\n    prefetch: 'https://assets.adtomafusion.net/fusion/latest/fusion-amp.min.js',\n  },\n\n  'gecko': {},\n\n  'genieessp': {\n    prefetch: 'https://js.gsspcln.jp/l/amp.js',\n  },\n\n  'giraff': {\n    renderStartImplemented: true,\n  },\n\n  'glomex': {\n    prefetch: 'https://player.glomex.com/integration/1/amp-embed.js',\n  },\n\n  'gmossp': {\n    prefetch: 'https://cdn.gmossp-sp.jp/ads/amp.js',\n  },\n\n  'gumgum': {\n    prefetch: 'https://js.gumgum.com/slot.js',\n    renderStartImplemented: true,\n  },\n\n  'holder': {\n    prefetch: 'https://i.holder.com.ua/js2/holder/ajax/ampv1.js',\n    preconnect: 'https://h.holder.com.ua',\n    renderStartImplemented: true,\n  },\n\n  'ibillboard': {},\n\n  'idealmedia': {\n    renderStartImplemented: true,\n    preconnect: [\n      'https://jsc.idealmedia.io',\n      'https://servicer.idealmedia.io',\n      'https://s-img.idealmedia.io/',\n    ],\n  },\n\n  'imedia': {\n    prefetch: 'https://i.imedia.cz/js/im3.js',\n    renderStartImplemented: true,\n  },\n\n  'imobile': {\n    prefetch: 'https://spamp.i-mobile.co.jp/script/amp.js',\n    preconnect: 'https://spad.i-mobile.co.jp',\n  },\n  'imonomy': {\n    renderStartImplemented: true,\n  },\n  'improvedigital': {},\n\n  'industrybrains': {\n    prefetch: 'https://web.industrybrains.com/js/ads/async/show.js',\n    preconnect: [\n      'https://staticd.cdn.industrybrains.com',\n      'https://static.industrybrains.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'inmobi': {\n    prefetch: 'https://cf.cdn.inmobi.com/ad/inmobi.secure.js',\n    renderStartImplemented: true,\n  },\n\n  'innity': {\n    prefetch: 'https://cdn.innity.net/admanager.js',\n    preconnect: 'https://as.innity.com',\n    renderStartImplemented: true,\n  },\n\n  'insticator': {\n    preconnect: 'https://d3lcz8vpax4lo2.cloudfront.net', // can also be array if more than one URL needed\n    renderStartImplemented: true,\n  },\n\n  'invibes': {\n    prefetch: 'https://k.r66net.com/GetAmpLink',\n    renderStartImplemented: true,\n    consentHandlingOverride: true,\n  },\n\n  'iprom': {\n    prefetch: 'https://cdn.ipromcloud.com/ipromNS.js',\n  },\n\n  'ix': {\n    prefetch: ['https://js-sec.indexww.com/apl/amp.js'],\n    preconnect: 'https://as-sec.casalemedia.com',\n    renderStartImplemented: true,\n  },\n\n  'jubna': {},\n\n  'kargo': {},\n\n  'ketshwa': {},\n\n  'kiosked': {\n    renderStartImplemented: true,\n  },\n\n  'jixie': {\n    prefetch: ['https://scripts.jixie.io/jxamp.min.js'],\n    clientIdScope: '__jxamp',\n    clientIdCookieName: '_jx',\n    renderStartImplemented: true,\n  },\n\n  'kixer': {\n    prefetch: 'https://cdn.kixer.com/ad/load.js',\n    renderStartImplemented: true,\n  },\n\n  'kuadio': {},\n\n  'lentainform': {\n    renderStartImplemented: true,\n    preconnect: [\n      'https://jsc.lentainform.com',\n      'https://servicer.lentainform.com',\n      'https://s-img.lentainform.com',\n    ],\n  },\n\n  'ligatus': {\n    prefetch: 'https://ssl.ligatus.com/render/ligrend.js',\n    renderStartImplemented: true,\n  },\n\n  'lockerdome': {\n    prefetch: 'https://cdn2.lockerdomecdn.com/_js/amp.js',\n    renderStartImplemented: true,\n  },\n\n  'logly': {\n    preconnect: ['https://l.logly.co.jp', 'https://cdn.logly.co.jp'],\n    renderStartImplemented: true,\n  },\n\n  'loka': {\n    prefetch: 'https://loka-cdn.akamaized.net/scene/amp.js',\n    preconnect: [\n      'https://scene-front.lokaplatform.com',\n      'https://loka-materials.akamaized.net',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'luckyads': {\n    renderStartImplemented: true,\n  },\n\n  'macaw': {\n    renderStartImplemented: true,\n  },\n\n  'mads': {\n    prefetch: 'https://eu2.madsone.com/js/tags.js',\n  },\n\n  'mantis-display': {\n    prefetch: 'https://assets.mantisadnetwork.com/mantodea.min.js',\n    preconnect: [\n      'https://mantodea.mantisadnetwork.com',\n      'https://res.cloudinary.com',\n      'https://resize.mantisadnetwork.com',\n    ],\n  },\n\n  'marfeel': {\n    prefetch: 'https://securepubads.g.doubleclick.net/tag/js/gpt.js',\n    preconnect: [\n      'https://live.mrf.io',\n      'https://tpc.googlesyndication.com',\n      'https://fastlane.rubiconproject.com',\n      'https://htlb.casalemedia.com',\n      'https://prg.smartadserver.com',\n      'https://ib.adnxs.com',\n      'https://bidder.criteo.com',\n      'https://marfeel-d.openx.net',\n      'https://ice.360yield.com',\n      'https://mbid.marfeelrev.com',\n      'https://adservice.google.com',\n    ],\n    consentHandlingOverride: true,\n  },\n\n  'mantis-recommend': {\n    prefetch: 'https://assets.mantisadnetwork.com/recommend.min.js',\n    preconnect: [\n      'https://mantodea.mantisadnetwork.com',\n      'https://resize.mantisadnetwork.com',\n    ],\n  },\n\n  'mediaad': {},\n\n  'medianet': {\n    preconnect: 'https://contextual.media.net',\n    renderStartImplemented: true,\n  },\n\n  'mediavine': {\n    prefetch: 'https://amp.mediavine.com/wrapper.min.js',\n    preconnect: [\n      'https://partner.googleadservices.com',\n      'https://securepubads.g.doubleclick.net',\n      'https://tpc.googlesyndication.com',\n    ],\n    renderStartImplemented: true,\n    consentHandlingOverride: true,\n  },\n\n  'medyanet': {\n    renderStartImplemented: true,\n  },\n\n  'meg': {\n    renderStartImplemented: true,\n  },\n\n  'mgid': {\n    renderStartImplemented: true,\n    preconnect: [\n      'https://jsc.mgid.com',\n      'https://servicer.mgid.com',\n      'https://s-img.mgid.com',\n    ],\n  },\n\n  'microad': {\n    prefetch: 'https://j.microad.net/js/camp.js',\n    preconnect: [\n      'https://s-rtb.send.microad.jp',\n      'https://s-rtb.send.microadinc.com',\n      'https://cache.send.microad.jp',\n      'https://cache.send.microadinc.com',\n      'https://deb.send.microad.jp',\n    ],\n  },\n\n  'miximedia': {\n    renderStartImplemented: true,\n  },\n\n  'mixpo': {\n    prefetch: 'https://cdn.mixpo.com/js/loader.js',\n    preconnect: ['https://player1.mixpo.com', 'https://player2.mixpo.com'],\n  },\n\n  'monetizer101': {\n    renderStartImplemented: true,\n  },\n\n  'mox': {\n    prefetch: [\n      'https://ad.mox.tv/js/amp.min.js',\n      'https://ad.mox.tv/mox/mwayss_invocation.min.js',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'my6sense': {\n    renderStartImplemented: true,\n  },\n\n  'myfinance': {\n    preconnect: [\n      'https://a.myfidevs.io',\n      'https://static.myfinance.com',\n      'https://www.myfinance.com',\n    ],\n    renderStartImplemented: true,\n    clientIdScope: 'AMP_ECID_GOOGLE',\n  },\n\n  'myoffrz': {\n    renderStartImplemented: true,\n  },\n\n  'mytarget': {\n    prefetch: 'https://ad.mail.ru/static/ads-async.js',\n    renderStartImplemented: true,\n  },\n\n  'myua': {\n    renderStartImplemented: true,\n  },\n\n  'mywidget': {\n    preconnect: 'https://likemore-fe.go.mail.ru',\n    prefetch: 'https://likemore-go.imgsmail.ru/widget_amp.js',\n    renderStartImplemented: true,\n  },\n\n  'nativeroll': {\n    prefetch: 'https://cdn01.nativeroll.tv/js/seedr-player.min.js',\n  },\n\n  'nativery': {\n    preconnect: 'https://cdn.nativery.com',\n  },\n\n  'nativo': {\n    prefetch: 'https://s.ntv.io/serve/load.js',\n  },\n\n  'navegg': {\n    renderStartImplemented: true,\n  },\n\n  'nend': {\n    prefetch: 'https://js1.nend.net/js/amp.js',\n    preconnect: ['https://output.nend.net', 'https://img1.nend.net'],\n  },\n\n  'netletix': {\n    preconnect: ['https://call.netzathleten-media.de'],\n    renderStartImplemented: true,\n  },\n\n  'noddus': {\n    prefetch: 'https://noddus.com/amp_loader.js',\n    renderStartImplemented: true,\n  },\n\n  'nokta': {\n    prefetch: 'https://static.virgul.com/theme/mockups/noktaamp/ampjs.js',\n    renderStartImplemented: true,\n  },\n\n  'nws': {},\n\n  'oblivki': {\n    renderStartImplemented: true,\n  },\n\n  'onead': {\n    prefetch: 'https://ad-specs.guoshipartners.com/static/js/onead-amp.min.js',\n    renderStartImplemented: true,\n  },\n\n  'onnetwork': {\n    renderStartImplemented: true,\n  },\n\n  'openadstream': {},\n\n  'openx': {\n    prefetch: 'https://www.googletagservices.com/tag/js/gpt.js',\n    preconnect: [\n      'https://partner.googleadservices.com',\n      'https://securepubads.g.doubleclick.net',\n      'https://tpc.googlesyndication.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'opinary': {\n    renderStartImplemented: true,\n  },\n\n  'outbrain': {\n    renderStartImplemented: true,\n    prefetch: 'https://widgets.outbrain.com/widgetAMP/outbrainAMP.min.js',\n    preconnect: ['https://odb.outbrain.com'],\n    consentHandlingOverride: true,\n  },\n\n  'pixels': {\n    prefetch: 'https://cdn.adsfactor.net/amp/pixels-amp.min.js',\n    clientIdCookieName: '__AF',\n    renderStartImplemented: true,\n  },\n\n  'playstream': {\n    prefetch: 'https://app.playstream.media/js/amp.js',\n    renderStartImplemented: true,\n  },\n\n  'plista': {},\n\n  'polymorphicads': {\n    prefetch: 'https://www.polymorphicads.jp/js/amp.js',\n    preconnect: [\n      'https://img.polymorphicads.jp',\n      'https://ad.polymorphicads.jp',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'popin': {\n    renderStartImplemented: true,\n  },\n\n  'postquare': {},\n\n  'ppstudio': {\n    renderStartImplemented: true,\n  },\n\n  'pressboard': {\n    renderStartImplemented: true,\n  },\n\n  'promoteiq': {},\n\n  'pubexchange': {},\n\n  'pubguru': {\n    renderStartImplemented: true,\n  },\n\n  'pubmatic': {\n    prefetch: 'https://ads.pubmatic.com/AdServer/js/amp.js',\n  },\n\n  'pubmine': {\n    prefetch: ['https://s.pubmine.com/head.js'],\n    preconnect: 'https://delivery.g.switchadhub.com',\n    renderStartImplemented: true,\n  },\n\n  'puffnetwork': {\n    prefetch: 'https://static.puffnetwork.com/amp_ad.js',\n    renderStartImplemented: true,\n  },\n\n  'pulse': {\n    prefetch: 'https://static.pulse.mail.ru/pulse-widget-amp.js',\n    renderStartImplemented: true,\n  },\n\n  'pulsepoint': {\n    prefetch: 'https://ads.contextweb.com/TagPublish/getjs.static.js',\n    preconnect: 'https://tag.contextweb.com',\n  },\n\n  'purch': {\n    prefetch: 'https://ramp.purch.com/serve/creative_amp.js',\n    renderStartImplemented: true,\n  },\n\n  'quoraad': {\n    prefetch: 'https://a.quora.com/amp_ad.js',\n    preconnect: 'https://ampad.quora.com',\n    renderStartImplemented: true,\n  },\n\n  'rakutenunifiedads': {\n    prefetch: 'https://s-cdn.rmp.rakuten.co.jp/js/amp.js',\n    renderStartImplemented: true,\n  },\n\n  'rbinfox': {\n    renderStartImplemented: true,\n  },\n\n  'rcmwidget': {\n    prefetch: 'https://rcmjs.rambler.ru/static/rcmw/rcmw-amp.js',\n    renderStartImplemented: true,\n  },\n\n  'readmo': {\n    renderStartImplemented: true,\n  },\n\n  'realclick': {\n    renderStartImplemented: true,\n  },\n\n  'recomad': {\n    renderStartImplemented: true,\n  },\n\n  'recreativ': {\n    prefetch: 'https://go.rcvlink.com/static/amp.js',\n    renderStartImplemented: true,\n  },\n\n  'relap': {\n    renderStartImplemented: true,\n  },\n\n  'relappro': {\n    prefetch: 'https://cdn.relappro.com/adservices/amp/relappro.amp.min.js',\n    preconnect: 'https://tags.relappro.com',\n    renderStartImplemented: true,\n  },\n\n  'remixd': {\n    preconnect: 'https://tags.remixd.com',\n    renderStartImplemented: true,\n  },\n\n  'revcontent': {\n    prefetch:\n      'https://labs-cdn.revcontent.com/build/amphtml/revcontent.amp.min.js',\n    preconnect: [\n      'https://trends.revcontent.com',\n      'https://cdn.revcontent.com',\n      'https://img.revcontent.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'revjet': {\n    prefetch: 'https://cdn.revjet.com/~cdn/JS/03/amp.js',\n    renderStartImplemented: true,\n  },\n\n  'rfp': {\n    prefetch: 'https://js.rfp.fout.jp/rfp-amp.js',\n    preconnect: 'https://ad.rfp.fout.jp',\n    renderStartImplemented: true,\n  },\n\n  'rnetplus': {},\n\n  'rubicon': {},\n\n  'runative': {\n    prefetch: 'https://cdn.run-syndicate.com/sdk/v1/n.js',\n    renderStartImplemented: true,\n  },\n\n  'sabavision': {\n    renderStartImplemented: true,\n  },\n\n  'sas': {\n    renderStartImplemented: true,\n  },\n\n  'seedingalliance': {},\n\n  'seedtag': {\n    prefetch: 'https://config.seedtag.com/omid/bridge/bridge.js',\n    preconnect: ['https://s.seedtag.com'],\n    consentHandlingOverride: true,\n    renderStartImplemented: true,\n  },\n\n  'sekindo': {\n    renderStartImplemented: true,\n  },\n\n  'sharethrough': {\n    renderStartImplemented: true,\n  },\n\n  'shemedia': {\n    prefetch: [\n      'https://securepubads.g.doubleclick.net/tag/js/gpt.js',\n      'https://ads.shemedia.com/static/amp.js',\n    ],\n    preconnect: [\n      'https://partner.googleadservices.com',\n      'https://tpc.googlesyndication.com',\n      'https://ads.blogherads.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'sklik': {\n    prefetch: 'https://c.imedia.cz/js/amp.js',\n  },\n\n  'slimcutmedia': {\n    preconnect: [\n      'https://sb.freeskreen.com',\n      'https://static.freeskreen.com',\n      'https://video.freeskreen.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'smartads': {\n    prefetch: 'https://smart-ads.biz/amp.js',\n  },\n\n  'smartadserver': {\n    prefetch: 'https://ec-ns.sascdn.com/diff/js/amp.v0.js',\n    preconnect: 'https://static.sascdn.com',\n    renderStartImplemented: true,\n  },\n\n  'smartclip': {\n    prefetch: 'https://cdn.smartclip.net/amp/amp.v0.js',\n    preconnect: 'https://des.smartclip.net',\n    renderStartImplemented: true,\n  },\n\n  'smi2': {\n    renderStartImplemented: true,\n  },\n\n  'smilewanted': {\n    prefetch: 'https://prebid.smilewanted.com/amp/amp.js',\n    preconnect: 'https://static.smilewanted.com',\n    renderStartImplemented: true,\n  },\n\n  'sogouad': {\n    prefetch: 'https://theta.sogoucdn.com/wap/js/aw.js',\n    renderStartImplemented: true,\n  },\n\n  'sortable': {\n    prefetch: 'https://www.googletagservices.com/tag/js/gpt.js',\n    preconnect: [\n      'https://tags-cdn.deployads.com',\n      'https://partner.googleadservices.com',\n      'https://securepubads.g.doubleclick.net',\n      'https://tpc.googlesyndication.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'sona': {\n    renderStartImplemented: true,\n  },\n\n  'sovrn': {\n    prefetch: 'https://ap.lijit.com/www/sovrn_amp/sovrn_ads.js',\n  },\n\n  'speakol': {\n    renderStartImplemented: true,\n  },\n\n  'spotx': {\n    preconnect: 'https://js.spotx.tv',\n    renderStartImplemented: true,\n  },\n\n  'springAds': {\n    preconnect: ['https://ib.adnxs.com'],\n    renderStartImplemented: true,\n  },\n\n  'ssp': {\n    prefetch: 'https://ssp.imedia.cz/static/js/ssp.js',\n    renderStartImplemented: true,\n    consentHandlingOverride: true,\n  },\n\n  'strossle': {\n    preconnect: [\n      'https://amp.spklw.com',\n      'https://widgets.sprinklecontent.com',\n      'https://images.sprinklecontent.com',\n    ],\n  },\n\n  'sunmedia': {\n    prefetch: 'https://vod.addevweb.com/sunmedia/amp/ads/sunmedia.js',\n    preconnect: 'https://static.addevweb.com',\n    renderStartImplemented: true,\n  },\n\n  'svknative': {\n    renderStartImplemented: true,\n    prefetch: 'https://widget.svk-native.ru/js/embed.js',\n  },\n\n  'swoop': {\n    prefetch: 'https://www.swoop-amp.com/amp.js',\n    preconnect: ['https://www.swpsvc.com', 'https://client.swpcld.com'],\n    renderStartImplemented: true,\n  },\n\n  'taboola': {},\n\n  'tagon': {\n    prefetch: 'https://js.tagon.co/tagon-amp.min.js',\n  },\n\n  'tail': {\n    renderStartImplemented: true,\n  },\n\n  'tcsemotion': {\n    prefetch: 'https://ads.tcsemotion.com/www/delivery/amphb.js',\n    renderStartImplemented: true,\n  },\n\n  'teads': {\n    prefetch: 'https://s8t.teads.tv/media/format/v3/teads-format.min.js',\n    preconnect: [\n      'https://cdn2.teads.tv',\n      'https://a.teads.tv',\n      'https://t.teads.tv',\n      'https://r.teads.tv',\n    ],\n    consentHandlingOverride: true,\n  },\n\n  'temedya': {\n    prefetch: [\n      'https://widget.cdn.vidyome.com/builds/loader-amp.js',\n      'https://vidyome-com.cdn.vidyome.com/vidyome/builds/widgets.js',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'torimochi': {\n    renderStartImplemented: true,\n  },\n\n  'tracdelight': {\n    prefetch: 'https://scripts.tracdelight.io/amp.js',\n    renderStartImplemented: true,\n  },\n\n  'trafficstars': {\n    prefetch: 'https://cdn.tsyndicate.com/sdk/v1/master.spot.js',\n    renderStartImplemented: true,\n  },\n\n  'triplelift': {},\n\n  'trugaze': {\n    clientIdScope: '__tg_amp',\n    renderStartImplemented: true,\n  },\n\n  'uas': {\n    prefetch: 'https://ads.pubmatic.com/AdServer/js/phoenix.js',\n  },\n\n  'ucfunnel': {\n    renderStartImplemented: true,\n  },\n\n  'uzou': {\n    preconnect: ['https://speee-ad.akamaized.net'],\n    renderStartImplemented: true,\n  },\n\n  'unruly': {\n    prefetch: 'https://video.unrulymedia.com/native/native-loader.js',\n    renderStartImplemented: true,\n  },\n\n  'valuecommerce': {\n    prefetch: 'https://amp.valuecommerce.com/amp_bridge.js',\n    preconnect: ['https://ad.jp.ap.valuecommerce.com'],\n    renderStartImplemented: true,\n  },\n\n  'vdoai': {\n    prefetch: 'https://a.vdo.ai/core/dependencies_amp/vdo.min.js',\n    renderStartImplemented: true,\n  },\n\n  'videointelligence': {\n    preconnect: 'https://s.vi-serve.com',\n    renderStartImplemented: true,\n  },\n\n  'videonow': {\n    renderStartImplemented: true,\n  },\n\n  'viralize': {\n    renderStartImplemented: true,\n  },\n\n  'vlyby': {\n    prefetch: 'https://cdn.vlyby.com/amp/qad/qad-outer2.js',\n  },\n\n  'vmfive': {\n    prefetch: 'https://man.vm5apis.com/dist/adn-web-sdk.js',\n    preconnect: ['https://vawpro.vm5apis.com', 'https://vahfront.vm5apis.com'],\n    renderStartImplemented: true,\n  },\n\n  'webediads': {\n    prefetch: 'https://eu1.wbdds.com/amp.min.js',\n    preconnect: ['https://goutee.top', 'https://mediaathay.org.uk'],\n    renderStartImplemented: true,\n  },\n\n  'weborama-display': {\n    prefetch: [\n      'https://cstatic.weborama.fr/js/advertiserv2/adperf_launch_1.0.0_scrambled.js',\n      'https://cstatic.weborama.fr/js/advertiserv2/adperf_core_1.0.0_scrambled.js',\n    ],\n  },\n\n  'whopainfeed': {\n    prefetch: 'https://widget.infeed.com.ar/widget/widget-amp.js',\n  },\n\n  'widespace': {},\n\n  'wisteria': {\n    renderStartImplemented: true,\n  },\n\n  'wpmedia': {\n    prefetch: 'https://std.wpcdn.pl/wpjslib/wpjslib-amp.js',\n    preconnect: ['https://www.wp.pl', 'https://v.wpimg.pl'],\n    renderStartImplemented: true,\n  },\n\n  'wunderkind': {\n    preconnect: ['https://tag.wknd.ai', 'https://api.bounceexchange.com'],\n    renderStartImplemented: true,\n  },\n\n  'xlift': {\n    prefetch: 'https://cdn.x-lift.jp/resources/common/xlift_amp.js',\n    renderStartImplemented: true,\n  },\n\n  'yahoo': {\n    prefetch: 'https://s.yimg.com/aaq/ampad/display.js',\n    preconnect: 'https://us.adserver.yahoo.com',\n  },\n\n  'yahoofedads': {\n    renderStartImplemented: true,\n  },\n\n  'yahoojp': {\n    prefetch: [\n      'https://s.yimg.jp/images/listing/tool/yads/ydn/amp/amp.js',\n      'https://yads.c.yimg.jp/js/yads.js',\n    ],\n    preconnect: 'https://yads.yahoo.co.jp',\n  },\n\n  'yahoonativeads': {\n    renderStartImplemented: true,\n  },\n\n  'yandex': {\n    prefetch: 'https://yandex.ru/ads/system/context.js',\n    preconnect: ['https://yastatic.net/'],\n    renderStartImplemented: true,\n  },\n\n  'yektanet': {\n    preconnect: [\n      'https://cdn.yektanet.com',\n      'https://cg-sc.yektanet.com',\n      'https://native.yektanet.com',\n      'https://nfetch.yektanet.net',\n      'https://rfetch.yektanet.net',\n      'https://scrapper.yektanet.com',\n      'https://ua.yektanet.com',\n      'https://bfetch.yektanet.com',\n      'https://mostatil.cdn.yektanet.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'yengo': {\n    renderStartImplemented: true,\n  },\n\n  'yieldbot': {\n    prefetch: [\n      'https://cdn.yldbt.com/js/yieldbot.intent.amp.js',\n      'https://msg.yldbt.com/js/ybmsg.html',\n    ],\n    preconnect: 'https://i.yldbt.com',\n  },\n\n  'yieldmo': {\n    prefetch: 'https://static.yieldmo.com/ym.1.js',\n    preconnect: ['https://s.yieldmo.com', 'https://ads.yieldmo.com'],\n    renderStartImplemented: true,\n  },\n\n  'yieldone': {\n    prefetch: 'https://img.ak.impact-ad.jp/ic/pone/commonjs/yone-amp.js',\n  },\n\n  'yieldpro': {\n    preconnect: 'https://creatives.yieldpro.eu',\n    renderStartImplemented: true,\n  },\n\n  'zedo': {\n    prefetch: 'https://ss3.zedo.com/gecko/tag/Gecko.amp.min.js',\n    renderStartImplemented: true,\n  },\n\n  'zen': {\n    prefetch: 'https://zen.yandex.ru/widget-loader',\n    preconnect: ['https://yastatic.net/'],\n    renderStartImplemented: true,\n  },\n\n  'zergnet': {},\n\n  'zucks': {\n    preconnect: [\n      'https://j.zucks.net.zimg.jp',\n      'https://sh.zucks.net',\n      'https://k.zucks.net',\n      'https://static.zucks.net.zimg.jp',\n    ],\n  },\n\n  'baidu': {\n    prefetch: 'https://dup.baidustatic.com/js/dm.js',\n    renderStartImplemented: true,\n  },\n\n  'sulvo': {},\n});\n\nexport {adConfig};\n", "import {adConfig} from '#ads/_config';\n\nimport {Services} from '#service';\n\nimport {dev} from '#utils/log';\n\n/**\n * @param {AMP.BaseElement} adElement\n * @return {!Promise<string|undefined>} A promise for a CID or undefined if\n *     - the ad network does not request one or\n *     - `amp-analytics` which provides the CID service was not installed.\n */\nexport function getAdCid(adElement) {\n  const config = adConfig[adElement.element.getAttribute('type')];\n  if (!config || !config['clientIdScope']) {\n    return Promise.resolve();\n  }\n  return getOrCreateAdCid(\n    adElement.getAmpDoc(),\n    config['clientIdScope'],\n    config['clientIdCookieName']\n  );\n}\n\n/**\n * @param {!./service/ampdoc-impl.AmpDoc} ampDoc\n * @param {string} clientIdScope\n * @param {string=} opt_clientIdCookieName\n * @param {number=} opt_timeout\n * @return {!Promise<string|undefined>} A promise for a CID or undefined.\n */\nexport function getOrCreateAdCid(\n  ampDoc,\n  clientIdScope,\n  opt_clientIdCookieName,\n  opt_timeout\n) {\n  const timeout =\n    isNaN(opt_timeout) || opt_timeout == null ? 1000 : opt_timeout;\n  const cidPromise = Services.cidForDoc(ampDoc).then((cidService) => {\n    if (!cidService) {\n      return;\n    }\n    return cidService\n      .get(\n        {\n          scope: dev().assertString(clientIdScope),\n          createCookieIfNotPresent: true,\n          cookieName: opt_clientIdCookieName,\n        },\n        Promise.resolve(undefined)\n      )\n      .catch((error) => {\n        // Not getting a CID is not fatal.\n        dev().error('AD-CID', error);\n        return undefined;\n      });\n  });\n  // The CID should never be crucial for an ad. If it does not come within\n  // 1 second, assume it will never arrive.\n  return Services.timerFor(ampDoc.win)\n    .timeoutPromise(timeout, cidPromise, 'cid timeout')\n    .catch((error) => {\n      // Timeout is not fatal.\n      dev().warn('AD-CID', error);\n      return undefined;\n    });\n}\n", "/**\n * TODO(rcebulko): Migrate the actual ViewportInterface into core or an extern.\n * @typedef {{\n *   getHeight: function(this:ViewportInterfaceDef):number,\n *   getWidth: function(this:ViewportInterfaceDef):number,\n * }}\n */\nlet ViewportInterfaceDef;\n\n/**\n * The structure that combines position and size for an element. The exact\n * interpretation of position and size depends on the use case.\n *\n * @typedef {{\n *   top: number,\n *   bottom: number,\n *   left: number,\n *   right: number,\n *   width: number,\n *   height: number,\n *   x: number,\n *   y: number\n * }}\n */\nexport let LayoutRectDef;\n\n/**\n * The structure that contains the size for an element. The exact\n * interpretation of the size depends on the use case.\n *\n * @typedef {{\n *   width: number,\n *   height: number,\n * }}\n */\nexport let LayoutSizeDef;\n\n/**\n * The structure that represents the margins of an Element.\n *\n * @typedef {{\n *   top: number,\n *   right: number,\n *   bottom: number,\n *   left: number\n * }}\n */\nexport let LayoutMarginsDef;\n\n/**\n * The structure that represents a requested change to the margins of an\n * Element. Any new values specified will replace existing ones (rather than\n * being additive).\n *\n * @typedef {{\n *   top: (number|undefined),\n *   right: (number|undefined),\n *   bottom: (number|undefined),\n *   left: (number|undefined)\n * }}\n */\nexport let LayoutMarginsChangeDef;\n\n/**\n * RelativePositions\n *\n * Describes the relative position of an element to another (whether the\n * first is inside the second, on top of the second or on the bottom\n * @enum {string}\n */\nexport const RelativePositions = {\n  INSIDE: 'inside',\n  TOP: 'top',\n  BOTTOM: 'bottom',\n};\n\n/**\n * Creates a layout rect based on the left, top, width and height parameters\n * in that order.\n * @param {number} left\n * @param {number} top\n * @param {number} width\n * @param {number} height\n * @return {!LayoutRectDef}\n */\nexport function layoutRectLtwh(left, top, width, height) {\n  return {\n    left,\n    top,\n    width,\n    height,\n    bottom: top + height,\n    right: left + width,\n    x: left,\n    y: top,\n  };\n}\n\n/**\n * Creates a layout rect based on the DOMRect, e.g. obtained from calling\n * getBoundingClientRect.\n * @param {!ClientRect} rect\n * @return {!LayoutRectDef}\n */\nexport function layoutRectFromDomRect(rect) {\n  return layoutRectLtwh(\n    Number(rect.left),\n    Number(rect.top),\n    Number(rect.width),\n    Number(rect.height)\n  );\n}\n\n/**\n * Returns true if the specified two rects overlap by a single pixel.\n * @param {!LayoutRectDef|!ClientRect} r1\n * @param {!LayoutRectDef|!ClientRect} r2\n * @return {boolean}\n */\nexport function rectsOverlap(r1, r2) {\n  return (\n    r1.top <= r2.bottom &&\n    r2.top <= r1.bottom &&\n    r1.left <= r2.right &&\n    r2.left <= r1.right\n  );\n}\n\n/**\n * Returns the intersection between a, b or null if there is none.\n * @param {...?LayoutRectDef|undefined} var_args\n * @return {?LayoutRectDef}\n */\nexport function rectIntersection(var_args) {\n  let x0 = -Infinity;\n  let x1 = Infinity;\n  let y0 = -Infinity;\n  let y1 = Infinity;\n  for (let i = 0; i < arguments.length; i++) {\n    const current = arguments[i];\n    if (!current) {\n      continue;\n    }\n    x0 = Math.max(x0, current.left);\n    x1 = Math.min(x1, current.left + current.width);\n    y0 = Math.max(y0, current.top);\n    y1 = Math.min(y1, current.top + current.height);\n    if (x1 < x0 || y1 < y0) {\n      return null;\n    }\n  }\n  if (x1 == Infinity) {\n    return null;\n  }\n  return layoutRectLtwh(x0, y0, x1 - x0, y1 - y0);\n}\n\n/**\n * Returns the position of r2 relative to r1\n * @param {!LayoutRectDef} r1\n * @param {!LayoutRectDef} r2\n * @return {!RelativePositions}\n */\nexport function layoutRectsRelativePos(r1, r2) {\n  if (r1.top < r2.top) {\n    return RelativePositions.TOP;\n  } else if (r1.bottom > r2.bottom) {\n    return RelativePositions.BOTTOM;\n  } else {\n    return RelativePositions.INSIDE;\n  }\n}\n\n/**\n * Determines if any portion of a layoutBox would be onscreen in the given\n * viewport, when scrolled to the specified position.\n * @param {!LayoutRectDef} layoutBox\n * @param {!ViewportInterfaceDef} viewport\n * @param {number} scrollPos\n * @return {!RelativePositions}\n */\nexport function layoutPositionRelativeToScrolledViewport(\n  layoutBox,\n  viewport,\n  scrollPos\n) {\n  const scrollLayoutBox = layoutRectFromDomRect(\n    /** @type {!ClientRect} */ ({\n      top: scrollPos,\n      bottom: scrollPos + viewport.getHeight(),\n      left: 0,\n      right: viewport.getWidth(),\n    })\n  );\n  if (rectsOverlap(layoutBox, scrollLayoutBox)) {\n    return RelativePositions.INSIDE;\n  } else {\n    return layoutRectsRelativePos(layoutBox, scrollLayoutBox);\n  }\n}\n\n/**\n * Expand the layout rect using multiples of width and height.\n * @param {!LayoutRectDef} rect Original rect.\n * @param {number} dw Expansion in width, specified as a multiple of width.\n * @param {number} dh Expansion in height, specified as a multiple of height.\n * @return {!LayoutRectDef}\n */\nexport function expandLayoutRect(rect, dw, dh) {\n  return layoutRectLtwh(\n    rect.left - rect.width * dw,\n    rect.top - rect.height * dh,\n    rect.width * (1 + dw * 2),\n    rect.height * (1 + dh * 2)\n  );\n}\n\n/**\n * Moves the layout rect using dx and dy.\n * @param {!LayoutRectDef} rect Original rect.\n * @param {number} dx Move horizontally with this value.\n * @param {number} dy Move vertically with this value.\n * @return {!LayoutRectDef}\n */\nexport function moveLayoutRect(rect, dx, dy) {\n  if ((dx == 0 && dy == 0) || (rect.width == 0 && rect.height == 0)) {\n    return rect;\n  }\n  return layoutRectLtwh(rect.left + dx, rect.top + dy, rect.width, rect.height);\n}\n\n/**\n * @param {!LayoutMarginsDef} margins\n * @param {!LayoutMarginsChangeDef} change\n * @return {boolean}\n */\nexport function areMarginsChanged(margins, change) {\n  return (\n    (change.top !== undefined && change.top != margins.top) ||\n    (change.right !== undefined && change.right != margins.right) ||\n    (change.bottom !== undefined && change.bottom != margins.bottom) ||\n    (change.left !== undefined && change.left != margins.left)\n  );\n}\n\n/**\n * @param {!LayoutRectDef} from\n * @param {!LayoutRectDef} to\n * @return {boolean}\n */\nexport function layoutRectSizeEquals(from, to) {\n  return from.width == to.width && from.height === to.height;\n}\n\n/**\n * @param {?LayoutRectDef} r1\n * @param {?LayoutRectDef} r2\n * @return {boolean}\n */\nexport function layoutRectEquals(r1, r2) {\n  if (!r1 || !r2) {\n    return false;\n  }\n  return (\n    r1.left == r2.left &&\n    r1.top == r2.top &&\n    r1.width == r2.width &&\n    r1.height == r2.height\n  );\n}\n\n/**\n * @param {LayoutMarginsChangeDef|undefined} marginsChange\n * @return {LayoutMarginsChangeDef|undefined}\n */\nexport function cloneLayoutMarginsChangeDef(marginsChange) {\n  if (!marginsChange) {\n    return marginsChange;\n  }\n  return {\n    top: marginsChange.top,\n    bottom: marginsChange.bottom,\n    left: marginsChange.left,\n    right: marginsChange.right,\n  };\n}\n\n/**\n * @param {!LayoutRectDef|!ClientRect|!DOMRect} rect\n * @return {!LayoutSizeDef}\n */\nexport function layoutSizeFromRect(rect) {\n  const {height, width} = rect;\n  return {width, height};\n}\n", "import {LayoutRectDef, layoutRectLtwh} from './rect';\n\n/**\n * @param {!Element} element\n * @return {!LayoutRectDef}\n */\nexport function getPageLayoutBoxBlocking(element) {\n  const stop = element.ownerDocument.body;\n  let left = 0;\n  let top = 0;\n  for (let n = element; n && n != stop; n = n./*OK*/ offsetParent) {\n    left += n./*OK*/ offsetLeft;\n    top += n./*OK*/ offsetTop;\n  }\n  const {offsetHeight, offsetWidth} = /** @type {!HTMLElement} */ (element);\n  return layoutRectLtwh(left, top, offsetWidth, offsetHeight);\n}\n", "/**\n * Checks that the document is of an AMP format type.\n * @param {!Array<string>} formats\n * @param {!Document} doc\n * @return {boolean}\n */\nfunction isAmpFormatType(formats, doc) {\n  const html = doc.documentElement;\n  const isFormatType = formats.some((format) => html.hasAttribute(format));\n  return isFormatType;\n}\n\n/**\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isAmp4Email(doc) {\n  return isAmpFormatType(['\u26A14email', 'amp4email'], doc);\n}\n\n/**\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isAmphtml(doc) {\n  return isAmpFormatType(['\u26A1', 'amp'], doc);\n}\n", "/**\n * Whether the document is ready.\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isDocumentReady(doc) {\n  return doc.readyState != 'loading' && doc.readyState != 'uninitialized';\n}\n\n/**\n * Whether the document has loaded all the css and sub-resources.\n * @param {!Document} doc\n * @return {boolean}\n */\nfunction isDocumentComplete(doc) {\n  return doc.readyState == 'complete';\n}\n\n/**\n * Calls the callback when document is ready.\n * @param {!Document} doc\n * @param {function(!Document)} callback\n */\nexport function onDocumentReady(doc, callback) {\n  onDocumentState(doc, isDocumentReady, callback);\n}\n\n/**\n * Calls the callback when document's state satisfies the stateFn.\n * @param {!Document} doc\n * @param {function(!Document):boolean} stateFn\n * @param {function(!Document)} callback\n */\nfunction onDocumentState(doc, stateFn, callback) {\n  let ready = stateFn(doc);\n  if (ready) {\n    callback(doc);\n  } else {\n    const readyListener = () => {\n      if (stateFn(doc)) {\n        if (!ready) {\n          ready = true;\n          callback(doc);\n        }\n        doc.removeEventListener('readystatechange', readyListener);\n      }\n    };\n    doc.addEventListener('readystatechange', readyListener);\n  }\n}\n\n/**\n * Returns a promise that is resolved when document is ready.\n * @param {!Document} doc\n * @return {!Promise<!Document>}\n */\nexport function whenDocumentReady(doc) {\n  return new Promise((resolve) => {\n    onDocumentReady(doc, resolve);\n  });\n}\n\n/**\n * Returns a promise that is resolved when document is complete.\n * @param {!Document} doc\n * @return {!Promise<!Document>}\n */\nexport function whenDocumentComplete(doc) {\n  return new Promise((resolve) => {\n    onDocumentState(doc, isDocumentComplete, resolve);\n  });\n}\n", "/**\n * Whether addEventListener supports options or only takes capture as a boolean\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nlet optsSupported;\n\n/**\n * Whether addEventListener supports options or only takes passive as a boolean\n * @type {boolean|undefined}\n */\nlet passiveSupported;\n\n/**\n * Options supported by addEventListener\n * @typedef AddEventListenerOptsDef\n * @property {undefined|boolean} [capture]\n * @property {undefined|boolean} [once]\n * @property {undefined|boolean} [passive]\n * @property {undefined|!AbortSignal} [signal]\n * }}\n */\nlet AddEventListenerOptsDef;\n\n/**\n * Listens for the specified event on the element.\n *\n * Do not use this directly. This method is implemented as a shared\n * dependency. Use `listen()` in either `event-helper` or\n * `#core/3p-frame-messaging`, depending on your use case.\n *\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {!AddEventListenerOptsDef=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function internalListenImplementation(\n  element,\n  eventType,\n  listener,\n  opt_evtListenerOpts\n) {\n  let localElement = element;\n  let localListener = listener;\n  /** @type {?function(!Event)} */\n  let wrapped = (event) => {\n    try {\n      return localListener(event);\n    } catch (e) {\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR?.(e);\n      throw e;\n    }\n  };\n  const optsSupported = detectEvtListenerOptsSupport();\n  const capture = !!opt_evtListenerOpts?.capture;\n\n  localElement.addEventListener(\n    eventType,\n    wrapped,\n    optsSupported ? opt_evtListenerOpts : capture\n  );\n  return () => {\n    localElement?.removeEventListener(\n      eventType,\n      wrapped,\n      optsSupported ? opt_evtListenerOpts : capture\n    );\n    // Ensure these are GC'd\n    localListener = null;\n    localElement = null;\n    wrapped = null;\n  };\n}\n\n/**\n * Tests whether the browser supports options as an argument of addEventListener\n * or not.\n *\n * @return {boolean}\n */\nexport function detectEvtListenerOptsSupport() {\n  // Only run the test once\n  if (optsSupported !== undefined) {\n    return optsSupported;\n  }\n\n  optsSupported = false;\n  try {\n    // Test whether browser supports EventListenerOptions or not\n    const options = {\n      get capture() {\n        optsSupported = true;\n      },\n    };\n    self.addEventListener('test-options', null, options);\n    self.removeEventListener('test-options', null, options);\n  } catch (err) {\n    // EventListenerOptions are not supported\n  }\n  return optsSupported;\n}\n\n/**\n * Resets the test for whether addEventListener supports options or not.\n */\nexport function resetEvtListenerOptsSupportForTesting() {\n  optsSupported = undefined;\n}\n\n/**\n * Return boolean. if listener option is supported, return `true`.\n * if not supported, return `false`\n * @param {!Window} win\n * @return {boolean}\n */\nexport function supportsPassiveEventListener(win) {\n  if (passiveSupported !== undefined) {\n    return passiveSupported;\n  }\n\n  passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        // This function will be called when the browser\n        // attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      },\n    };\n\n    win.addEventListener('test-options', null, options);\n    win.removeEventListener('test-options', null, options);\n  } catch (err) {\n    // EventListenerOptions are not supported\n  }\n  return passiveSupported;\n}\n\n/**\n * Resets the test for whether addEventListener supports passive options or not.\n */\nexport function resetPassiveSupportedForTesting() {\n  passiveSupported = undefined;\n}\n", "import {internalListenImplementation} from '#core/dom/event-helper-listen';\nimport {lastChildElement} from '#core/dom/query';\nimport * as mode from '#core/mode';\n\nimport {user} from '#utils/log';\n\n/** @const {string}  */\nconst LOAD_FAILURE_PREFIX = 'Failed to load:';\n\n/** @const {string} */\nexport const MEDIA_LOAD_FAILURE_SRC_PROPERTY = '__AMP_MEDIA_LOAD_FAILURE_SRC';\n\n/**\n * Returns a CustomEvent with a given type and detail; supports fallback for IE.\n * @param {!Window} win\n * @param {string} type\n * @param {!JsonObject|string|undefined|null} detail\n * @param {EventInit=} opt_eventInit\n * @return {!Event}\n */\nexport function createCustomEvent(win, type, detail, opt_eventInit) {\n  const eventInit = /** @type {!CustomEventInit} */ ({detail});\n  Object.assign(eventInit, opt_eventInit);\n  // win.CustomEvent is a function on Edge, Chrome, FF, Safari but\n  // is an object on IE 11.\n  if (mode.isEsm() || typeof win.CustomEvent == 'function') {\n    return new win.CustomEvent(type, eventInit);\n  } else {\n    // Deprecated fallback for IE.\n    const e = win.document.createEvent('CustomEvent');\n    e.initCustomEvent(\n      type,\n      !!eventInit.bubbles,\n      !!eventInit.cancelable,\n      detail\n    );\n    return e;\n  }\n}\n\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listen(element, eventType, listener, opt_evtListenerOpts) {\n  return internalListenImplementation(\n    element,\n    eventType,\n    listener,\n    opt_evtListenerOpts\n  );\n}\n\n/**\n * Returns the data property of an event with the correct type.\n * @param {!Event|{data: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getData(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.data);\n}\n\n/**\n * Returns the detail property of an event with the correct type.\n * @param {!Event|{detail: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getDetail(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.detail);\n}\n\n/**\n * Listens for the specified event on the element and removes the listener\n * as soon as event has been received.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listenOnce(element, eventType, listener, opt_evtListenerOpts) {\n  let localListener = listener;\n  const unlisten = internalListenImplementation(\n    element,\n    eventType,\n    (event) => {\n      try {\n        localListener(event);\n      } finally {\n        // Ensure listener is GC'd\n        localListener = null;\n        unlisten();\n      }\n    },\n    opt_evtListenerOpts\n  );\n  return unlisten;\n}\n\n/**\n * Returns  a promise that will resolve as soon as the specified event has\n * fired on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {Object=} opt_evtListenerOpts\n * @param {function(!UnlistenDef)=} opt_cancel An optional function that, when\n *     provided, will be called with the unlistener. This gives the caller\n *     access to the unlistener, so it may be called manually when necessary.\n * @return {!Promise<!Event>}\n */\nexport function listenOncePromise(\n  element,\n  eventType,\n  opt_evtListenerOpts,\n  opt_cancel\n) {\n  let unlisten;\n  const eventPromise = new Promise((resolve) => {\n    unlisten = listenOnce(element, eventType, resolve, opt_evtListenerOpts);\n  });\n  eventPromise.then(unlisten, unlisten);\n  if (opt_cancel) {\n    opt_cancel(unlisten);\n  }\n  return eventPromise;\n}\n\n/**\n * Whether the specified element/window has been loaded already.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nexport function isLoaded(eleOrWindow) {\n  return !!(\n    eleOrWindow.complete ||\n    eleOrWindow.readyState == 'complete' ||\n    (isHTMLMediaElement(eleOrWindow) && eleOrWindow.readyState > 0) ||\n    // If the passed in thing is a Window, infer loaded state from\n    //\n    (eleOrWindow.document && eleOrWindow.document.readyState == 'complete')\n  );\n}\n\n/**\n * Returns a promise that will resolve or fail based on the eleOrWindow's 'load'\n * and 'error' events. Optionally this method takes a timeout, which will reject\n * the promise if the resource has not loaded by then.\n * @param {T} eleOrWindow Supports both Elements and as a special case Windows.\n * @return {!Promise<T>}\n * @template T\n */\nexport function loadPromise(eleOrWindow) {\n  let unlistenLoad;\n  let unlistenError;\n  if (isLoaded(eleOrWindow)) {\n    return Promise.resolve(eleOrWindow);\n  }\n  const isMediaElement = isHTMLMediaElement(eleOrWindow);\n  if (\n    isMediaElement &&\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] === eleOrWindow.currentSrc\n  ) {\n    return Promise.reject(eleOrWindow);\n  }\n  const loadingPromise = new Promise((resolve, reject) => {\n    // Listen once since IE 5/6/7 fire the onload event continuously for\n    // animated GIFs.\n    if (isMediaElement) {\n      // The following event can be triggered by the media or one of its\n      // sources. Using capture is required as the media events do not bubble.\n      unlistenLoad = listenOnce(eleOrWindow, 'loadedmetadata', resolve, {\n        capture: true,\n      });\n    } else {\n      unlistenLoad = listenOnce(eleOrWindow, 'load', resolve);\n    }\n    // Don't unlisten on error for Windows.\n    if (!eleOrWindow.tagName) {\n      return;\n    }\n    let errorTarget = eleOrWindow;\n    // If the media element has no `src`, it will try to load the sources in\n    // document order. If the last source errors, then the media element\n    // loading errored.\n    if (isMediaElement && !eleOrWindow.hasAttribute('src')) {\n      errorTarget = lastChildElement(\n        eleOrWindow,\n        (child) => child.tagName === 'SOURCE'\n      );\n      if (!errorTarget) {\n        return reject(new Error('Media has no source.'));\n      }\n    }\n    unlistenError = listenOnce(errorTarget, 'error', reject);\n  });\n\n  return loadingPromise.then(\n    () => {\n      if (unlistenError) {\n        unlistenError();\n      }\n      return eleOrWindow;\n    },\n    () => {\n      if (unlistenLoad) {\n        unlistenLoad();\n      }\n      failedToLoad(eleOrWindow);\n    }\n  );\n}\n\n/**\n * Emit error on load failure.\n * @param {!Element|!Window} eleOrWindow Supports both Elements and as a special\n *     case Windows.\n */\nfunction failedToLoad(eleOrWindow) {\n  // Mark the element as errored since some elements - like HTMLMediaElement\n  // using HTMLSourceElement - do not provide any synchronous way to verify if\n  // they already errored, even though the error event was already dispatched.\n  if (isHTMLMediaElement(eleOrWindow)) {\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] =\n      eleOrWindow.currentSrc || true;\n  }\n\n  // Report failed loads as user errors so that they automatically go\n  // into the \"document error\" bucket.\n  let target = eleOrWindow;\n  if (target && target.src) {\n    target = target.src;\n  }\n  throw user().createError(LOAD_FAILURE_PREFIX, target);\n}\n\n/**\n * Returns true if the parameter is a HTMLMediaElement.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nfunction isHTMLMediaElement(eleOrWindow) {\n  return eleOrWindow.tagName === 'AUDIO' || eleOrWindow.tagName === 'VIDEO';\n}\n\n/**\n * Returns true if this error message is was created for a load error.\n * @param {string} message An error message\n * @return {boolean}\n */\nexport function isLoadErrorMessage(message) {\n  return message.indexOf(LOAD_FAILURE_PREFIX) != -1;\n}\n", "import {isAmp4Email} from '#core/document/format';\nimport {whenDocumentComplete} from '#core/document/ready';\nimport {isFiniteNumber} from '#core/types';\n\nimport {Services} from '#service';\n\nimport {loadPromise} from '#utils/event-helper';\nimport {devAssert} from '#utils/log';\n\n/** @typedef {string|number|boolean|undefined|null} */\nexport let ResolverReturnDef;\n\n/** @typedef {function(...string):ResolverReturnDef} */\nexport let SyncResolverDef;\n\n/** @typedef {function(...string):!Promise<ResolverReturnDef>} */\nexport let AsyncResolverDef;\n\n/** @typedef {{sync: SyncResolverDef, async: AsyncResolverDef}} */\nlet ReplacementDef;\n\n/**\n * A list of events that the navTiming needs to wait for.\n * Sort event in order\n * @enum {number}\n */\nconst WAITFOR_EVENTS = {\n  VIEWER_FIRST_VISIBLE: 1,\n  DOCUMENT_COMPLETE: 2,\n  LOAD: 3,\n  LOAD_END: 4,\n};\n\n/**\n * A list of events on which event they should wait\n * @const {!Object<string, WAITFOR_EVENTS>}\n */\nconst NAV_TIMING_WAITFOR_EVENTS = {\n  // ready on viewer first visible\n  'navigationStart': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'redirectStart': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'redirectEnd': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'fetchStart': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'domainLookupStart': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'domainLookupEnd': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'connectStart': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'secureConnectionStart': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'connectEnd': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'requestStart': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'responseStart': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'responseEnd': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  // ready on document complte\n  'domLoading': WAITFOR_EVENTS.DOCUMENT_COMPLETE,\n  'domInteractive': WAITFOR_EVENTS.DOCUMENT_COMPLETE,\n  'domContentLoaded': WAITFOR_EVENTS.DOCUMENT_COMPLETE,\n  'domComplete': WAITFOR_EVENTS.DOCUMENT_COMPLETE,\n  // ready on load\n  'loadEventStart': WAITFOR_EVENTS.LOAD,\n  // ready on load complete\n  'loadEventEnd': WAITFOR_EVENTS.LOAD_END,\n};\n\n/**\n * Returns navigation timing information based on the start and end events.\n * The data for the timing events is retrieved from performance.timing API.\n * If start and end events are both given, the result is the difference between\n * the two. If only start event is given, the result is the timing value at\n * start event.\n * @param {!Window} win\n * @param {string} startEvent\n * @param {string=} endEvent\n * @return {!Promise<ResolverReturnDef>}\n */\nexport function getTimingDataAsync(win, startEvent, endEvent) {\n  // Fallback to load event if we don't know what to wait for\n  const startWaitForEvent =\n    NAV_TIMING_WAITFOR_EVENTS[startEvent] || WAITFOR_EVENTS.LOAD;\n  const endWaitForEvent = endEvent\n    ? NAV_TIMING_WAITFOR_EVENTS[endEvent] || WAITFOR_EVENTS.LOAD\n    : startWaitForEvent;\n\n  const waitForEvent = Math.max(startWaitForEvent, endWaitForEvent);\n\n  // set wait for onload to be default\n  let readyPromise;\n  if (waitForEvent === WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE) {\n    readyPromise = Promise.resolve();\n  } else if (waitForEvent === WAITFOR_EVENTS.DOCUMENT_COMPLETE) {\n    readyPromise = whenDocumentComplete(win.document);\n  } else if (waitForEvent === WAITFOR_EVENTS.LOAD) {\n    readyPromise = loadPromise(win);\n  } else if (waitForEvent === WAITFOR_EVENTS.LOAD_END) {\n    // performance.timing.loadEventEnd returns 0 before the load event handler\n    // has terminated, that's when the load event is completed.\n    // To wait for the event handler to terminate, wait 1ms and defer to the\n    // event loop.\n    const timer = Services.timerFor(win);\n    readyPromise = loadPromise(win).then(() => timer.promise(1));\n  }\n\n  devAssert(readyPromise, 'waitForEvent not supported ' + waitForEvent);\n\n  return readyPromise.then(() => {\n    return getTimingDataSync(win, startEvent, endEvent);\n  });\n}\n\n/**\n * Returns navigation timing information based on the start and end events.\n * The data for the timing events is retrieved from performance.timing API.\n * If start and end events are both given, the result is the difference between\n * the two. If only start event is given, the result is the timing value at\n * start event. Enforces synchronous evaluation.\n * @param {!Window} win\n * @param {string} startEvent\n * @param {string=} endEvent\n * @return {ResolverReturnDef} undefined if API is not available, empty string\n *    if it is not yet available, or value as string\n */\nexport function getTimingDataSync(win, startEvent, endEvent) {\n  const timingInfo = win['performance'] && win['performance']['timing'];\n  if (!timingInfo || timingInfo['navigationStart'] == 0) {\n    // Navigation timing API is not supported.\n    return;\n  }\n\n  const metric =\n    endEvent === undefined\n      ? timingInfo[startEvent]\n      : timingInfo[endEvent] - timingInfo[startEvent];\n\n  if (!isFiniteNumber(metric) || metric < 0) {\n    // The metric is not supported.\n    return;\n  } else {\n    return metric;\n  }\n}\n\n/**\n * Returns navigation information from the current browsing context.\n * @param {!Window} win\n * @param {string} attribute\n * @return {ResolverReturnDef}\n */\nexport function getNavigationData(win, attribute) {\n  const navigationInfo = win['performance'] && win['performance']['navigation'];\n  if (!navigationInfo || navigationInfo[attribute] === undefined) {\n    // PerformanceNavigation interface is not supported or attribute is not\n    // implemented.\n    return;\n  }\n  return navigationInfo[attribute];\n}\n\n/**\n * A class to provide variable substitution related features. Extend this class\n * and override initialize() to add more supported variables.\n */\nexport class VariableSource {\n  /**\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @protected @const {!./ampdoc-impl.AmpDoc} */\n    this.ampdoc = ampdoc;\n\n    /** @private @const {!Object<string, !ReplacementDef>} */\n    this.replacements_ = Object.create(null);\n\n    /** @private {boolean} */\n    this.initialized_ = false;\n\n    this.getUrlMacroAllowlist_();\n  }\n\n  /**\n   * Lazily initialize the default replacements.\n   * @private\n   */\n  initialize_() {\n    this.initialize();\n    this.initialized_ = true;\n  }\n\n  /**\n   * Override this method to set all the variables supported by derived class.\n   */\n  initialize() {\n    // Needs to be implemented by derived classes.\n  }\n\n  /**\n   * Method exists to assist stubbing in tests.\n   * @param {string} name\n   * @return {!ReplacementDef}\n   */\n  get(name) {\n    if (!this.initialized_) {\n      this.initialize_();\n    }\n\n    return this.replacements_[name];\n  }\n\n  /**\n   * Sets a synchronous value resolver for the variable with the specified name.\n   * The value resolver may optionally take an extra parameter.\n   * Can be called in conjunction with setAsync to allow for additional\n   * asynchronous resolver where expand will use async and expandSync the sync\n   * version.\n   * @param {string} varName\n   * @param {!SyncResolverDef} syncResolver\n   * @return {!VariableSource}\n   */\n  set(varName, syncResolver) {\n    devAssert(varName.indexOf('RETURN') == -1);\n    this.replacements_[varName] = this.replacements_[varName] || {\n      sync: undefined,\n      async: undefined,\n    };\n    this.replacements_[varName].sync = syncResolver;\n    return this;\n  }\n\n  /**\n   * Sets an async value resolver for the variable with the specified name.\n   * The value resolver may optionally take an extra parameter.\n   * Can be called in conjuction with setAsync to allow for additional\n   * asynchronous resolver where expand will use async and expandSync the sync\n   * version.\n   * @param {string} varName\n   * @param {!AsyncResolverDef} asyncResolver\n   * @return {!VariableSource}\n   */\n  setAsync(varName, asyncResolver) {\n    devAssert(varName.indexOf('RETURN') == -1);\n    this.replacements_[varName] = this.replacements_[varName] || {\n      sync: undefined,\n      async: undefined,\n    };\n    this.replacements_[varName].async = asyncResolver;\n    return this;\n  }\n\n  /**\n   * Helper method to set both sync and async resolvers.\n   * @param {string} varName\n   * @param {!SyncResolverDef} syncResolver\n   * @param {!AsyncResolverDef} asyncResolver\n   * @return {!VariableSource}\n   */\n  setBoth(varName, syncResolver, asyncResolver) {\n    return this.set(varName, syncResolver).setAsync(varName, asyncResolver);\n  }\n\n  /**\n   * Returns a Regular expression that can be used to detect all the variables\n   * in a template.\n   * @param {!Object<string, *>=} opt_bindings\n   * @param {!Object<string, boolean>=} opt_allowlist Optional allowlist of names\n   *   that can be substituted.\n   * @return {!RegExp}\n   */\n  getExpr(opt_bindings, opt_allowlist) {\n    if (!this.initialized_) {\n      this.initialize_();\n    }\n    const all = {...this.replacements_, ...opt_bindings};\n    return this.buildExpr_(Object.keys(all), opt_allowlist);\n  }\n\n  /**\n   * @param {!Array<string>} keys\n   * @param {!Object<string, boolean>=} opt_allowlist Optional allowlist of names\n   *   that can be substituted.\n   * @return {!RegExp}\n   * @private\n   */\n  buildExpr_(keys, opt_allowlist) {\n    // If a allowlist is present, the keys must belong to the allowlist.\n    // We filter the keys one last time to ensure no unallowlisted key is\n    // allowed.\n    if (this.getUrlMacroAllowlist_()) {\n      keys = keys.filter((key) => this.getUrlMacroAllowlist_().includes(key));\n    }\n    // If a allowlist is passed into the call to GlobalVariableSource.expand_\n    // then we only resolve values contained in the allowlist.\n    if (opt_allowlist) {\n      keys = keys.filter((key) => opt_allowlist[key]);\n    }\n    if (keys.length === 0) {\n      const regexThatMatchesNothing = /_^/g; // lgtm [js/regex/unmatchable-caret]\n      return regexThatMatchesNothing;\n    }\n    // The keys must be sorted to ensure that the longest keys are considered\n    // first. This avoids a problem where a RANDOM conflicts with RANDOM_ONE.\n    keys.sort((s1, s2) => s2.length - s1.length);\n    // Keys that start with a `$` need to be escaped so that they do not\n    // interfere with the regex that is constructed.\n    const escaped = keys.map((key) => {\n      if (key[0] === '$') {\n        return '\\\\' + key;\n      }\n      return key;\n    });\n\n    const all = escaped.join('|');\n    // Match the given replacement patterns, as well as optionally\n    // arguments to the replacement behind it in parentheses.\n    // Example string that match\n    // FOO_BAR\n    // FOO_BAR(arg1)\n    // FOO_BAR(arg1,arg2)\n    // FOO_BAR(arg1, arg2)\n    const regexStr = '\\\\$?(' + all + ')';\n    return new RegExp(regexStr, 'g');\n  }\n\n  /**\n   * For email documents, all URL macros are disallowed by default.\n   * @return {Array<string>|undefined} The allowlist of substitutable AMP variables\n   * @private\n   */\n  getUrlMacroAllowlist_() {\n    if (this.variableAllowlist_) {\n      return this.variableAllowlist_;\n    }\n\n    // Disallow all URL macros for AMP4Email format documents.\n    if (this.ampdoc.isSingleDoc()) {\n      const doc = /** @type {!Document} */ (this.ampdoc.getRootNode());\n      if (isAmp4Email(doc)) {\n        /**\n         * The allowlist of variables allowed for variable substitution.\n         * @private {?Array<string>}\n         */\n        this.variableAllowlist_ = [''];\n        return this.variableAllowlist_;\n      }\n    }\n  }\n}\n", "import {CONSENT_POLICY_STATE} from '#core/constants/consent-state';\nimport {DomFingerprint} from '#core/dom/fingerprint';\nimport {GEO_IN_GROUP} from '../../../extensions/amp-geo/0.1/amp-geo-in-group';\nimport {Services} from '#service';\nimport {buildUrl} from './shared/url-builder';\nimport {dev, devAssert, user} from '#utils/log';\nimport {dict} from '#core/types/object';\nimport {getBinaryType, isExperimentOn, toggleExperiment} from '#experiments';\nimport {getConsentPolicyState} from '../../../src/consent';\nimport {getMeasuredResources} from '../../../src/ini-load';\nimport {getMode} from '../../../src/mode';\nimport {getOrCreateAdCid} from '../../../src/ad-cid';\nimport {getPageLayoutBoxBlocking} from '#core/dom/layout/page-layout-box';\nimport {getTimingDataSync} from '#service/variable-source';\nimport * as mode from '#core/mode';\nimport {parseJson} from '#core/types/object/json';\nimport {whenUpgradedToCustomElement} from '#core/dom/amp-element-helpers';\nimport {createElementWithAttributes} from '#core/dom';\n\n/** @type {string}  */\nconst AMP_ANALYTICS_HEADER = 'X-AmpAnalytics';\n\n/** @const {number} */\nconst MAX_URL_LENGTH = 15360;\n\n/** @enum {string} */\nconst AmpAdImplementation = {\n  AMP_AD_XHR_TO_IFRAME: '2',\n  AMP_AD_XHR_TO_IFRAME_OR_AMP: '3',\n  AMP_AD_IFRAME_GET: '5',\n};\n\n/** @const {!Object} */\nexport const ValidAdContainerTypes = {\n  'AMP-CAROUSEL': 'ac',\n  'AMP-FX-FLYING-CARPET': 'fc',\n  'AMP-LIGHTBOX': 'lb',\n  'AMP-STICKY-AD': 'sa',\n};\n\n/**\n * See `VisibilityState` enum.\n * @const {!Object<string, string>}\n */\nconst visibilityStateCodes = {\n  'visible': '1',\n  'hidden': '2',\n  'prerender': '3',\n  'unloaded': '5',\n};\n\n/** @const {string} */\nexport const QQID_HEADER = 'X-QQID';\n\n/** @type {string} */\nexport const SANDBOX_HEADER = 'amp-ff-sandbox';\n\n/**\n * Element attribute that stores Google ads experiment IDs.\n *\n * Note: This attribute should be used only for tracking experimental\n * implementations of AMP tags, e.g., by AMPHTML implementors.  It should not be\n * added by a publisher page.\n *\n * @const {string}\n * @visibleForTesting\n */\nexport const EXPERIMENT_ATTRIBUTE = 'data-experiment-id';\n\n/**\n * Element attribute that stores AMP experiment IDs.\n *\n * Note: This attribute should be used only for tracking experimental\n * implementations of AMP tags, e.g., by AMPHTML implementors.  It should not be\n * added by a publisher page.\n *\n * @const {string}\n * @visibleForTesting\n */\nexport const AMP_EXPERIMENT_ATTRIBUTE = 'data-amp-experiment-id';\n\n/** @typedef {{urls: !Array<string>}}\n */\nexport let AmpAnalyticsConfigDef;\n\n/**\n * @typedef {{instantLoad: boolean, writeInBody: boolean}}\n */\nexport let NameframeExperimentConfig;\n\n/**\n * @const {!./shared/url-builder.QueryParameterDef}\n * @visibleForTesting\n */\nexport const TRUNCATION_PARAM = {name: 'trunc', value: '1'};\n\n/** @const {Object} */\nconst CDN_PROXY_REGEXP =\n  /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org((\\/.*)|($))+/;\n\n/** @const {string} */\nexport const TOKEN_VALUE =\n  'A2dINGotLJuPqM6Wgp0s4V3te749O/VZEHqN0YsG4pfY+1pcjS5UaX1Bvcyz4aiShd8ZXPcT5spJazIzrbi5AwUAAACVeyJvcmlnaW4iOiJodHRwczovL2FtcHByb2plY3Qub3JnOjQ0MyIsImZlYXR1cmUiOiJDb252ZXJzaW9uTWVhc3VyZW1lbnQiLCJleHBpcnkiOjE2MzQwODMxOTksImlzU3ViZG9tYWluIjp0cnVlLCJpc1RoaXJkUGFydHkiOnRydWUsInVzYWdlIjoic3Vic2V0In0=';\n\n/**\n * Inserts origin-trial token for `attribution-reporting` if not already\n * present in the DOM.\n * @param {!Window} win\n */\nexport function maybeInsertOriginTrialToken(win) {\n  if (win.document.head.querySelector(`meta[content='${TOKEN_VALUE}']`)) {\n    return;\n  }\n  const metaEl = createElementWithAttributes(win.document, 'meta', {\n    'http-equiv': 'origin-trial',\n    content: TOKEN_VALUE,\n  });\n  win.document.head.appendChild(metaEl);\n}\n\n/**\n * Returns the value of some navigation timing parameter.\n * Feature detection is used for safety on browsers that do not support the\n * performance API.\n * @param {!Window} win\n * @param {string} timingEvent The name of the timing event, e.g.\n *     'navigationStart' or 'domContentLoadEventStart'.\n * @return {number}\n */\nfunction getNavigationTiming(win, timingEvent) {\n  return (\n    (win['performance'] &&\n      win['performance']['timing'] &&\n      win['performance']['timing'][timingEvent]) ||\n    0\n  );\n}\n\n/**\n * Check whether Google Ads supports the A4A rendering pathway is valid for the\n * environment by ensuring native crypto support and page originated in the\n * {@code cdn.ampproject.org} CDN <em>or</em> we must be running in local\n * dev mode.\n *\n * @param {!Window} win  Host window for the ad.\n * @return {boolean}  Whether Google Ads should attempt to render via the A4A\n *   pathway.\n */\nexport function isGoogleAdsA4AValidEnvironment(win) {\n  return (\n    supportsNativeCrypto(win) &&\n    (!!isCdnProxy(win) || getMode(win).localDev || getMode(win).test)\n  );\n}\n\n/**\n * Checks whether native crypto is supported for win.\n * @param {!Window} win  Host window for the ad.\n * @return {boolean} Whether native crypto is supported.\n */\nexport function supportsNativeCrypto(win) {\n  return win.crypto && (win.crypto.subtle || win.crypto.webkitSubtle);\n}\n\n/**\n * @param {!AMP.BaseElement} ampElement The element on whose lifecycle this\n *    reporter will be reporting.\n * @return {boolean} whether reporting is enabled for this element\n */\nexport function isReportingEnabled(ampElement) {\n  // Carve-outs: We only want to enable profiling pingbacks when:\n  //   - The ad is from one of the Google networks (AdSense or Doubleclick).\n  //   - The ad slot is in the A4A-vs-3p amp-ad control branch (either via\n  //     internal, client-side selection or via external, Google Search\n  //     selection).\n  //   - We haven't turned off profiling via the rate controls in\n  //     build-system/global-config/{canary,prod}-config.json\n  // If any of those fail, we use the `BaseLifecycleReporter`, which is a\n  // a no-op (sends no pings).\n  const type = ampElement.element.getAttribute('type');\n  const {win} = ampElement;\n  // In local dev mode, neither the canary nor prod config files is available,\n  // so manually set the profiling rate, for testing/dev.\n  if (getMode(ampElement.win).localDev && !getMode(ampElement.win).test) {\n    toggleExperiment(win, 'a4aProfilingRate', true, true);\n  }\n  return (\n    (type == 'doubleclick' || type == 'adsense') &&\n    isExperimentOn(win, 'a4aProfilingRate')\n  );\n}\n\n/**\n * Has side-effect of incrementing ifi counter on window.\n * @param {!../../../extensions/amp-a4a/0.1/amp-a4a.AmpA4A} a4a\n * @param {!Array<string>=} opt_experimentIds Any experiments IDs (in addition\n *     to those specified on the ad element) that should be included in the\n *     request.\n * @return {!Object<string,null|number|string>} block level parameters\n */\nexport function googleBlockParameters(a4a, opt_experimentIds) {\n  const {element: adElement, win} = a4a;\n  const slotRect = getPageLayoutBoxBlocking(adElement);\n  const iframeDepth = iframeNestingDepth(win);\n  const enclosingContainers = getEnclosingContainerTypes(adElement);\n  if (\n    a4a.uiHandler.isStickyAd() &&\n    !enclosingContainers.includes(ValidAdContainerTypes['AMP-STICKY-AD'])\n  ) {\n    enclosingContainers.push(ValidAdContainerTypes['AMP-STICKY-AD']);\n  }\n  let eids = adElement.getAttribute(EXPERIMENT_ATTRIBUTE);\n  if (opt_experimentIds) {\n    eids = mergeExperimentIds(opt_experimentIds, eids);\n  }\n  const aexp = adElement.getAttribute(AMP_EXPERIMENT_ATTRIBUTE);\n  return {\n    'adf': DomFingerprint.generate(adElement),\n    'nhd': iframeDepth,\n    'eid': eids,\n    'adx': Math.round(slotRect.left),\n    'ady': Math.round(slotRect.top),\n    'oid': '2',\n    'act': enclosingContainers.length ? enclosingContainers.join() : null,\n    // aexp URL param is separated by `!`, not `,`.\n    'aexp': aexp ? aexp.replace(/,/g, '!') : null,\n  };\n}\n\n/**\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} type matching typing attribute.\n * @param {function(!Element):string} groupFn\n * @return {!Promise<!Object<string,!Array<!Promise<!../../../src/base-element.BaseElement>>>>}\n */\nexport function groupAmpAdsByType(ampdoc, type, groupFn) {\n  // Look for amp-ad elements of correct type or those contained within\n  // standard container type.  Note that display none containers will not be\n  // included as they will never be measured.\n  // TODO(keithwrightbos): what about slots that become measured due to removal\n  // of display none (e.g. user resizes viewport and media selector makes\n  // visible).\n  const ampAdSelector = (r) =>\n    r.element./*OK*/ querySelector(`amp-ad[type=${type}]`);\n  return (\n    getMeasuredResources(ampdoc, ampdoc.win, (r) => {\n      const isAmpAdType =\n        r.element.tagName == 'AMP-AD' && r.element.getAttribute('type') == type;\n      if (isAmpAdType) {\n        return true;\n      }\n      const isAmpAdContainerElement =\n        Object.keys(ValidAdContainerTypes).includes(r.element.tagName) &&\n        !!ampAdSelector(r);\n      return isAmpAdContainerElement;\n    })\n      // Need to wait on any contained element resolution followed by build\n      // of child ad.\n      .then((resources) =>\n        Promise.all(\n          resources.map((resource) => {\n            if (resource.element.tagName == 'AMP-AD') {\n              return resource.element;\n            }\n            // Must be container element so need to wait for child amp-ad to\n            // be upgraded.\n            return whenUpgradedToCustomElement(\n              dev().assertElement(ampAdSelector(resource))\n            );\n          })\n        )\n      )\n      // Group by networkId.\n      .then((elements) =>\n        elements.reduce((result, element) => {\n          const groupId = groupFn(element);\n          (result[groupId] || (result[groupId] = [])).push(element.getImpl());\n          return result;\n        }, {})\n      )\n  );\n}\n\n/**\n * @param {! ../../../extensions/amp-a4a/0.1/amp-a4a.AmpA4A} a4a\n * @param {number} startTime\n * @return {!Promise<!Object<string,null|number|string>>}\n */\nexport function googlePageParameters(a4a, startTime) {\n  const {win} = a4a;\n  const ampDoc = a4a.getAmpDoc();\n  // Do not wait longer than 1 second to retrieve referrer to ensure\n  // viewer integration issues do not cause ad requests to hang indefinitely.\n  const referrerPromise = Services.timerFor(win)\n    .timeoutPromise(1000, Services.viewerForDoc(ampDoc).getReferrerUrl())\n    .catch(() => {\n      dev().expectedError('AMP-A4A', 'Referrer timeout!');\n      return '';\n    });\n  // Collect user agent hints info\n  const uaHintsPromise = Services.timerFor(win)\n    .timeoutPromise(1000, getUserAgentClientHintParameters(win))\n    .catch(() => {\n      dev().expectedError('AMP-A4A', 'UACH timeout!');\n      return {};\n    });\n  // Set dom loading time to first visible if page started in prerender state\n  // determined by truthy value for visibilityState param.\n  const domLoading = a4a.getAmpDoc().getParam('visibilityState')\n    ? a4a.getAmpDoc().getLastVisibleTime()\n    : getNavigationTiming(win, 'domLoading');\n  return Promise.all([\n    getOrCreateAdCid(ampDoc, 'AMP_ECID_GOOGLE', '_ga'),\n    referrerPromise,\n    uaHintsPromise,\n  ]).then((promiseResults) => {\n    const clientId = promiseResults[0];\n    const referrer = promiseResults[1];\n    const uaDataValues = promiseResults[2];\n    const {canonicalUrl, pageViewId} = Services.documentInfoForDoc(ampDoc);\n    // Read by GPT for GA/GPT integration.\n    win.gaGlobal = win.gaGlobal || {cid: clientId, hid: pageViewId};\n    const {screen} = win;\n    const viewport = Services.viewportForDoc(ampDoc);\n    const viewportRect = viewport.getRect();\n    const viewportSize = viewport.getSize();\n    const visibilityState = ampDoc.getVisibilityState();\n    return {\n      'is_amp': a4a.isXhrAllowed()\n        ? AmpAdImplementation.AMP_AD_XHR_TO_IFRAME_OR_AMP\n        : AmpAdImplementation.AMP_AD_IFRAME_GET,\n      'amp_v': mode.version(),\n      'd_imp': '1',\n      'c': getCorrelator(win, ampDoc, clientId),\n      'ga_cid': win.gaGlobal.cid || null,\n      'ga_hid': win.gaGlobal.hid || null,\n      'dt': startTime,\n      'biw': viewportRect.width,\n      'bih': viewportRect.height,\n      'u_aw': screen ? screen.availWidth : null,\n      'u_ah': screen ? screen.availHeight : null,\n      'u_cd': screen ? screen.colorDepth : null,\n      'u_w': screen ? screen.width : null,\n      'u_h': screen ? screen.height : null,\n      'u_tz': -new Date().getTimezoneOffset(),\n      'u_his': getHistoryLength(win),\n      'isw': win != win.top ? viewportSize.width : null,\n      'ish': win != win.top ? viewportSize.height : null,\n      'art': getAmpRuntimeTypeParameter(win),\n      'vis': visibilityStateCodes[visibilityState] || '0',\n      'scr_x': Math.round(viewport.getScrollLeft()),\n      'scr_y': Math.round(viewport.getScrollTop()),\n      'bc': getBrowserCapabilitiesBitmap(win) || null,\n      'debug_experiment_id':\n        (/(?:#|,)deid=([\\d,]+)/i.exec(win.location.hash) || [])[1] || null,\n      'url': canonicalUrl || null,\n      'top': win != win.top ? topWindowUrlOrDomain(win) : null,\n      'loc': win.location.href == canonicalUrl ? null : win.location.href,\n      'ref': referrer || null,\n      'bdt': domLoading ? startTime - domLoading : null,\n      'uap': uaDataValues?.platform,\n      'uapv': uaDataValues?.platformVersion,\n      'uaa': uaDataValues?.architecture,\n      'uam': uaDataValues?.model,\n      'uafv': uaDataValues?.uaFullVersion,\n      'uab': uaDataValues?.bitness,\n    };\n  });\n}\n\n/**\n * @param {!../../../extensions/amp-a4a/0.1/amp-a4a.AmpA4A} a4a\n * @param {string} baseUrl\n * @param {number} startTime\n * @param {!Object<string,null|number|string>} parameters\n * @param {!Array<string>=} opt_experimentIds Any experiments IDs (in addition\n *     to those specified on the ad element) that should be included in the\n *     request.\n * @return {!Promise<string>}\n */\nexport function googleAdUrl(\n  a4a,\n  baseUrl,\n  startTime,\n  parameters,\n  opt_experimentIds\n) {\n  // TODO: Maybe add checks in case these promises fail.\n  const blockLevelParameters = googleBlockParameters(a4a, opt_experimentIds);\n  return googlePageParameters(a4a, startTime).then((pageLevelParameters) => {\n    Object.assign(parameters, blockLevelParameters, pageLevelParameters);\n    return truncAndTimeUrl(baseUrl, parameters, startTime);\n  });\n}\n\n/**\n * @param {string} baseUrl\n * @param {!Object<string,null|number|string>} parameters\n * @param {number} startTime\n * @return {string}\n */\nexport function truncAndTimeUrl(baseUrl, parameters, startTime) {\n  return (\n    buildUrl(baseUrl, parameters, MAX_URL_LENGTH - 10, TRUNCATION_PARAM) +\n    '&dtd=' +\n    elapsedTimeWithCeiling(Date.now(), startTime)\n  );\n}\n\n/**\n * @param {!Window} win\n * @return {number}\n */\nfunction iframeNestingDepth(win) {\n  let w = win;\n  let depth = 0;\n  while (w != w.parent && depth < 100) {\n    w = w.parent;\n    depth++;\n  }\n  devAssert(w == win.top);\n  return depth;\n}\n\n/**\n * @param {!Window} win\n * @return {number}\n */\nfunction getHistoryLength(win) {\n  // We have seen cases where accessing history length causes errors.\n  try {\n    return win.history.length;\n  } catch (e) {\n    return 0;\n  }\n}\n\n/**\n * @param {string} url\n * @return {string} hostname portion of url\n * @visibleForTesting\n */\nexport function extractHost(url) {\n  return (/^(?:https?:\\/\\/)?([^\\/\\?:]+)/i.exec(url) || [])[1] || url;\n}\n\n/**\n * @param {!Window} win\n * @return {?string}\n */\nfunction topWindowUrlOrDomain(win) {\n  const {ancestorOrigins} = win.location;\n  if (ancestorOrigins) {\n    const {origin} = win.location;\n    const topOrigin = ancestorOrigins[ancestorOrigins.length - 1];\n    if (origin == topOrigin) {\n      return win.top.location.hostname;\n    }\n    const secondFromTop = secondWindowFromTop(win);\n    if (\n      secondFromTop == win ||\n      origin == ancestorOrigins[ancestorOrigins.length - 2]\n    ) {\n      return extractHost(secondFromTop./*OK*/ document.referrer);\n    }\n    return extractHost(topOrigin);\n  } else {\n    try {\n      return win.top.location.hostname;\n    } catch (e) {}\n    const secondFromTop = secondWindowFromTop(win);\n    try {\n      return extractHost(secondFromTop./*OK*/ document.referrer);\n    } catch (e) {}\n    return null;\n  }\n}\n\n/**\n * @param {!Window} win\n * @return {!Window}\n */\nfunction secondWindowFromTop(win) {\n  let secondFromTop = win;\n  let depth = 0;\n  while (secondFromTop.parent != secondFromTop.parent.parent && depth < 100) {\n    secondFromTop = secondFromTop.parent;\n    depth++;\n  }\n  devAssert(secondFromTop.parent == win.top);\n  return secondFromTop;\n}\n\n/**\n * @param {number} time\n * @param {number} start\n * @return {(number|string)}\n */\nfunction elapsedTimeWithCeiling(time, start) {\n  const duration = time - start;\n  if (duration >= 1e6) {\n    return 'M';\n  } else if (duration >= 0) {\n    return duration;\n  }\n  return '-M';\n}\n\n/**\n * `nodeOrDoc` must be passed for correct behavior in shadow AMP (PWA) case.\n * @param {!Window} win\n * @param {!Element|!../../../src/service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string=} opt_cid\n * @return {number} The correlator.\n */\nexport function getCorrelator(win, elementOrAmpDoc, opt_cid) {\n  if (!win.ampAdPageCorrelator) {\n    win.ampAdPageCorrelator = isExperimentOn(win, 'exp-new-correlator')\n      ? Math.floor(4503599627370496 * Math.random())\n      : makeCorrelator(\n          Services.documentInfoForDoc(elementOrAmpDoc).pageViewId,\n          opt_cid\n        );\n  }\n  return win.ampAdPageCorrelator;\n}\n\n/**\n * @param {string} pageViewId\n * @param {string=} opt_clientId\n * @return {number}\n */\nfunction makeCorrelator(pageViewId, opt_clientId) {\n  const pageViewIdNumeric = Number(pageViewId || 0);\n  if (opt_clientId) {\n    return pageViewIdNumeric + (opt_clientId.replace(/\\D/g, '') % 1e6) * 1e6;\n  } else {\n    // In this case, pageViewIdNumeric is only 4 digits => too low entropy\n    // to be useful as a page correlator.  So synthesize one from scratch.\n    // 4503599627370496 == 2^52.  The guaranteed range of JS Number is at least\n    // 2^53 - 1.\n    return Math.floor(4503599627370496 * Math.random());\n  }\n}\n\n/**\n * Collect additional dimensions for the brdim parameter.\n * @param {!Window} win The window for which we read the browser dimensions.\n * @param {?{width: number, height: number}} viewportSize\n * @return {string}\n * @visibleForTesting\n */\nexport function additionalDimensions(win, viewportSize) {\n  // Some browsers throw errors on some of these.\n  let screenX, screenY, outerWidth, outerHeight, innerWidth, innerHeight;\n  try {\n    screenX = win.screenX;\n    screenY = win.screenY;\n  } catch (e) {}\n  try {\n    outerWidth = win.outerWidth;\n    outerHeight = win.outerHeight;\n  } catch (e) {}\n  try {\n    innerWidth = viewportSize.width;\n    innerHeight = viewportSize.height;\n  } catch (e) {}\n  return [\n    win.screenLeft,\n    win.screenTop,\n    screenX,\n    screenY,\n    win.screen ? win.screen.availWidth : undefined,\n    win.screen ? win.screen.availTop : undefined,\n    outerWidth,\n    outerHeight,\n    innerWidth,\n    innerHeight,\n  ].join();\n}\n\n/**\n * Returns amp-analytics config for a new CSI trigger.\n * @param {string} on The name of the analytics trigger.\n * @param {!Object<string, string>} params Params to be included on the ping.\n * @return {!JsonObject}\n */\nfunction csiTrigger(on, params) {\n  return dict({\n    'on': on,\n    'request': 'csi',\n    'sampleSpec': {\n      // Pings are sampled on a per-pageview basis. A prefix is included in the\n      // sampleOn spec so that the hash is orthogonal to any other sampling in\n      // amp.\n      'sampleOn': 'a4a-csi-${pageViewId}',\n      'threshold': 1, // 1% sample\n    },\n    'selector': 'amp-ad',\n    'selectionMethod': 'closest',\n    'extraUrlParams': params,\n  });\n}\n\n/**\n * Returns amp-analytics config for Google ads network impls.\n * @return {!JsonObject}\n */\nexport function getCsiAmpAnalyticsConfig() {\n  return dict({\n    'requests': {\n      'csi': 'https://csi.gstatic.com/csi?',\n    },\n    'transport': {'xhrpost': false},\n    'triggers': {\n      'adRequestStart': csiTrigger('ad-request-start', {\n        // afs => ad fetch start\n        'met.a4a': 'afs_lvt.${viewerLastVisibleTime}~afs.${time}',\n      }),\n      'adResponseEnd': csiTrigger('ad-response-end', {\n        // afe => ad fetch end\n        'met.a4a': 'afe.${time}',\n      }),\n      'adRenderStart': csiTrigger('ad-render-start', {\n        // ast => ad schedule time\n        // ars => ad render start\n        'met.a4a':\n          'ast.${scheduleTime}~ars_lvt.${viewerLastVisibleTime}~ars.${time}',\n        'qqid': '${qqid}',\n      }),\n      'adIframeLoaded': csiTrigger('ad-iframe-loaded', {\n        // ail => ad iframe loaded\n        'met.a4a': 'ail.${time}',\n      }),\n    },\n    'extraUrlParams': {\n      's': 'ampad',\n      'ctx': '2',\n      'c': '${correlator}',\n      'slotId': '${slotId}',\n      // Time that the beacon was actually sent. Note that there can be delays\n      // between the time at which the event is fired and when ${nowMs} is\n      // evaluated when the URL is built by amp-analytics.\n      'puid': '${requestCount}~${timestamp}',\n    },\n  });\n}\n\n/**\n * Returns variables to be included in the amp-analytics event for A4A.\n * @param {string} analyticsTrigger The name of the analytics trigger.\n * @param {!AMP.BaseElement} a4a The A4A element.\n * @param {?string} qqid The query ID or null if the query ID has not been set\n *     yet.\n * @return {!JsonObject}\n */\nexport function getCsiAmpAnalyticsVariables(analyticsTrigger, a4a, qqid) {\n  const {win} = a4a;\n  const ampdoc = a4a.getAmpDoc();\n  const navStart = getNavigationTiming(win, 'navigationStart');\n  const vars = /** @type {!JsonObject} */ ({\n    'correlator': getCorrelator(win, ampdoc),\n    'slotId': a4a.element.getAttribute('data-amp-slot-index'),\n    'viewerLastVisibleTime': ampdoc.getLastVisibleTime() - navStart,\n  });\n  if (qqid) {\n    vars['qqid'] = qqid;\n  }\n  if (analyticsTrigger == 'ad-render-start') {\n    vars['scheduleTime'] = a4a.element.layoutScheduleTime - navStart;\n  }\n  return vars;\n}\n\n/**\n * Extracts configuration used to build amp-analytics element for active view\n * and begin to render.\n *\n * @param {!../../../extensions/amp-a4a/0.1/amp-a4a.AmpA4A} a4a\n * @param {!Headers} responseHeaders\n *   XHR service FetchResponseHeaders object containing the response\n *   headers.\n * @return {?JsonObject} config or null if invalid/missing.\n */\nexport function extractAmpAnalyticsConfig(a4a, responseHeaders) {\n  if (!responseHeaders.has(AMP_ANALYTICS_HEADER)) {\n    return null;\n  }\n  try {\n    const analyticsConfig = parseJson(\n      responseHeaders.get(AMP_ANALYTICS_HEADER)\n    );\n\n    const acUrls = analyticsConfig['url'];\n    const btrUrls = analyticsConfig['btrUrl'];\n    if (\n      (acUrls && !Array.isArray(acUrls)) ||\n      (btrUrls && !Array.isArray(btrUrls))\n    ) {\n      dev().error(\n        'AMP-A4A',\n        'Invalid analytics',\n        responseHeaders.get(AMP_ANALYTICS_HEADER)\n      );\n    }\n    const hasActiveViewRequests = Array.isArray(acUrls) && acUrls.length;\n    const hasBeginToRenderRequests = Array.isArray(btrUrls) && btrUrls.length;\n    if (!hasActiveViewRequests && !hasBeginToRenderRequests) {\n      return null;\n    }\n    const config = dict({\n      'transport': {'beacon': false, 'xhrpost': false},\n      'requests': {},\n      'triggers': {},\n    });\n    if (hasActiveViewRequests) {\n      generateActiveViewRequest(config, acUrls);\n    }\n    if (hasBeginToRenderRequests) {\n      generateBeginToRenderRequest(config, btrUrls);\n    }\n    return config;\n  } catch (err) {\n    dev().error(\n      'AMP-A4A',\n      'Invalid analytics',\n      err,\n      responseHeaders.get(AMP_ANALYTICS_HEADER)\n    );\n  }\n  return null;\n}\n\n/**\n * @param {!JsonObject} config\n * @param {!Array<string>} urls\n */\nfunction generateActiveViewRequest(config, urls) {\n  config['triggers']['continuousVisible'] = dict({\n    'request': [],\n    'on': 'visible',\n    'visibilitySpec': {\n      'selector': 'amp-ad',\n      'selectionMethod': 'closest',\n      'visiblePercentageMin': 50,\n      'continuousTimeMin': 1000,\n    },\n  });\n  for (let idx = 0; idx < urls.length; idx++) {\n    // TODO: Ensure url is valid and not freeform JS?\n    config['requests'][`visibility${idx + 1}`] = `${urls[idx]}`;\n    config['triggers']['continuousVisible']['request'].push(\n      `visibility${idx + 1}`\n    );\n  }\n}\n\n/**\n * @param {!JsonObject} config\n * @param {!Array<string>} urls\n */\nfunction generateBeginToRenderRequest(config, urls) {\n  config['triggers']['beginToRender'] = dict({\n    'request': [],\n    'on': 'ini-load',\n    'selector': 'amp-ad',\n    'selectionMethod': 'closest',\n  });\n\n  for (let idx = 0; idx < urls.length; idx++) {\n    // TODO: Ensure url is valid and not freeform JS?\n    config['requests'][`btr${idx + 1}`] = `${urls[idx]}`;\n    config['triggers']['beginToRender']['request'].push(`btr${idx + 1}`);\n  }\n}\n\n/**\n * Add new experiment IDs to a (possibly empty) existing set of experiment IDs.\n * The {@code currentIdString} may be {@code null} or {@code ''}, but if it is\n * populated, it must contain a comma-separated list of integer experiment IDs\n * (per {@code parseExperimentIds()}).  Returns the new set of IDs, encoded\n * as a comma-separated list.  Does not de-duplicate ID entries.\n *\n * @param {!Array<string>} newIds IDs to merge in. Should contain stringified\n *     integer (base 10) experiment IDs.\n * @param {?string} currentIdString  If present, a string containing a\n *   comma-separated list of integer experiment IDs.\n * @return {string}  New experiment list string, including newId iff it is\n *   a valid (integer) experiment ID.\n * @see parseExperimentIds, validateExperimentIds\n */\nexport function mergeExperimentIds(newIds, currentIdString) {\n  const newIdString = newIds.filter((newId) => Number(newId)).join(',');\n  currentIdString = currentIdString || '';\n  return (\n    currentIdString + (currentIdString && newIdString ? ',' : '') + newIdString\n  );\n}\n\n/**\n * Adds two CSI signals to the given amp-analytics configuration object, one\n * for render-start, and one for ini-load.\n *\n * @param {!Window} win\n * @param {!Element} element The ad slot.\n * @param {!JsonObject} config The original config object.\n * @param {?string} qqid\n * @param {boolean} isVerifiedAmpCreative\n * @return {?JsonObject} config or null if invalid/missing.\n */\nexport function addCsiSignalsToAmpAnalyticsConfig(\n  win,\n  element,\n  config,\n  qqid,\n  isVerifiedAmpCreative\n) {\n  // Add CSI pingbacks.\n  const correlator = getCorrelator(win, element);\n  const slotId = Number(element.getAttribute('data-amp-slot-index'));\n  const eids = encodeURIComponent(element.getAttribute(EXPERIMENT_ATTRIBUTE));\n  let aexp = element.getAttribute(AMP_EXPERIMENT_ATTRIBUTE);\n  if (aexp) {\n    // aexp URL param is separated by `!`, not `,`.\n    aexp = aexp.replace(/,/g, '!');\n  }\n  const adType = element.getAttribute('type');\n  const initTime = Number(\n    getTimingDataSync(win, 'navigationStart') || Date.now()\n  );\n  const deltaTime = Math.round(\n    win.performance && win.performance.now\n      ? win.performance.now()\n      : Date.now() - initTime\n  );\n  const baseCsiUrl =\n    'https://csi.gstatic.com/csi?s=a4a' +\n    `&c=${correlator}&slotId=${slotId}&qqid.${slotId}=${qqid}` +\n    `&dt=${initTime}` +\n    (eids != 'null' ? `&e.${slotId}=${eids}` : '') +\n    (aexp ? `&aexp=${aexp}` : '') +\n    `&rls=${mode.version()}&adt.${slotId}=${adType}`;\n  const isAmpSuffix = isVerifiedAmpCreative ? 'Friendly' : 'CrossDomain';\n  config['triggers']['continuousVisibleIniLoad'] = {\n    'on': 'ini-load',\n    'selector': 'amp-ad',\n    'selectionMethod': 'closest',\n    'request': 'iniLoadCsi',\n  };\n  config['triggers']['continuousVisibleRenderStart'] = {\n    'on': 'render-start',\n    'selector': 'amp-ad',\n    'selectionMethod': 'closest',\n    'request': 'renderStartCsi',\n  };\n  config['requests']['iniLoadCsi'] =\n    baseCsiUrl + `&met.a4a.${slotId}=iniLoadCsi${isAmpSuffix}.${deltaTime}`;\n  config['requests']['renderStartCsi'] =\n    baseCsiUrl + `&met.a4a.${slotId}=renderStartCsi${isAmpSuffix}.${deltaTime}`;\n\n  // Add CSI ping for visibility.\n  config['requests']['visibilityCsi'] =\n    baseCsiUrl + `&met.a4a.${slotId}=visibilityCsi.${deltaTime}`;\n  config['triggers']['continuousVisible']['request'].push('visibilityCsi');\n  return config;\n}\n\n/**\n * Returns an array of two-letter codes representing the amp-ad containers\n * enclosing the given ad element.\n *\n * @param {!Element} adElement\n * @return {!Array<string>}\n */\nexport function getEnclosingContainerTypes(adElement) {\n  const containerTypeSet = {};\n  for (\n    let el = adElement.parentElement, counter = 0;\n    el && counter < 20;\n    el = el.parentElement, counter++\n  ) {\n    const tagName = el.tagName.toUpperCase();\n    if (ValidAdContainerTypes[tagName]) {\n      containerTypeSet[ValidAdContainerTypes[tagName]] = true;\n    }\n  }\n  return Object.keys(containerTypeSet);\n}\n\n/**\n * Appends parameter to ad request indicating error state so long as error\n * parameter is not already present or url has been truncated.\n * @param {string} adUrl used for network request\n * @param {string} parameterValue to be appended\n * @return {string|undefined} potentially modified url, undefined\n */\nexport function maybeAppendErrorParameter(adUrl, parameterValue) {\n  devAssert(!!adUrl && !!parameterValue);\n  // Add parameter indicating error so long as the url has not already been\n  // truncated and error parameter is not already present.  Note that we assume\n  // that added, error parameter length will be less than truncation parameter\n  // so adding will not cause length to exceed maximum.\n  if (\n    new RegExp(\n      `[?|&](${encodeURIComponent(TRUNCATION_PARAM.name)}=` +\n        `${encodeURIComponent(String(TRUNCATION_PARAM.value))}|aet=[^&]*)$`\n    ).test(adUrl)\n  ) {\n    return;\n  }\n  const modifiedAdUrl = adUrl + `&aet=${parameterValue}`;\n  devAssert(modifiedAdUrl.length <= MAX_URL_LENGTH);\n  return modifiedAdUrl;\n}\n\n/**\n * Returns a numerical code representing the binary type.\n * @param {string} type\n * @return {?string}\n */\nexport function getBinaryTypeNumericalCode(type) {\n  return (\n    {\n      'production': '0',\n      'control': '1',\n      'experimental': '2',\n      'rc': '3',\n      'nightly': '4',\n      'nightly-control': '5',\n      'experimentA': '10',\n      'experimentB': '11',\n      'experimentC': '12',\n      'nomod': '42',\n      'mod': '43',\n    }[type] || null\n  );\n}\n\n/** @const {!RegExp} */\nconst IDENTITY_DOMAIN_REGEXP_ = /\\.google\\.(?:com?\\.)?[a-z]{2,3}$/;\n\n/** @typedef {{\n      token: (string|undefined),\n      jar: (string|undefined),\n      pucrd: (string|undefined),\n      freshLifetimeSecs: (number|undefined),\n      validLifetimeSecs: (number|undefined),\n      fetchTimeMs: (number|undefined)\n   }} */\nexport let IdentityToken;\n\n/**\n * @param {!Window} win\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampDoc\n * @param {?string} consentPolicyId\n * @return {!Promise<!IdentityToken>}\n */\nexport function getIdentityToken(win, ampDoc, consentPolicyId) {\n  // If configured to use amp-consent, delay request until consent state is\n  // resolved.\n  win['goog_identity_prom'] =\n    win['goog_identity_prom'] ||\n    (consentPolicyId\n      ? getConsentPolicyState(ampDoc.getHeadNode(), consentPolicyId)\n      : Promise.resolve(CONSENT_POLICY_STATE.UNKNOWN_NOT_REQUIRED)\n    ).then((consentState) =>\n      consentState == CONSENT_POLICY_STATE.INSUFFICIENT ||\n      consentState == CONSENT_POLICY_STATE.UNKNOWN\n        ? /** @type {!IdentityToken} */ ({})\n        : executeIdentityTokenFetch(win, ampDoc)\n    );\n  return /** @type {!Promise<!IdentityToken>} */ (win['goog_identity_prom']);\n}\n\n/**\n * @param {!Window} win\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampDoc\n * @param {number=} redirectsRemaining (default 1)\n * @param {string=} domain\n * @param {number=} startTime\n * @return {!Promise<!IdentityToken>}\n */\nfunction executeIdentityTokenFetch(\n  win,\n  ampDoc,\n  redirectsRemaining = 1,\n  domain = undefined,\n  startTime = Date.now()\n) {\n  const url = getIdentityTokenRequestUrl(win, ampDoc, domain);\n  return Services.xhrFor(win)\n    .fetchJson(url, {\n      mode: 'cors',\n      method: 'GET',\n      ampCors: false,\n      credentials: 'include',\n    })\n    .then((res) => res.json())\n    .then((obj) => {\n      const token = obj['newToken'];\n      const jar = obj['1p_jar'] || '';\n      const pucrd = obj['pucrd'] || '';\n      const freshLifetimeSecs = parseInt(obj['freshLifetimeSecs'] || '', 10);\n      const validLifetimeSecs = parseInt(obj['validLifetimeSecs'] || '', 10);\n      const altDomain = obj['altDomain'];\n      const fetchTimeMs = Date.now() - startTime;\n      if (IDENTITY_DOMAIN_REGEXP_.test(altDomain)) {\n        if (!redirectsRemaining--) {\n          // Max redirects, log?\n          return {fetchTimeMs};\n        }\n        return executeIdentityTokenFetch(\n          win,\n          ampDoc,\n          redirectsRemaining,\n          altDomain,\n          startTime\n        );\n      } else if (\n        freshLifetimeSecs > 0 &&\n        validLifetimeSecs > 0 &&\n        typeof token == 'string'\n      ) {\n        return {\n          token,\n          jar,\n          pucrd,\n          freshLifetimeSecs,\n          validLifetimeSecs,\n          fetchTimeMs,\n        };\n      }\n      // returning empty\n      return {fetchTimeMs};\n    })\n    .catch((unusedErr) => {\n      // TODO log?\n      return {};\n    });\n}\n\n/**\n * @param {!Window} win\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampDoc\n * @param {string=} domain\n * @return {string} url\n * @visibleForTesting\n */\nexport function getIdentityTokenRequestUrl(win, ampDoc, domain = undefined) {\n  if (!domain && win != win.top && win.location.ancestorOrigins) {\n    const matches = IDENTITY_DOMAIN_REGEXP_.exec(\n      win.location.ancestorOrigins[win.location.ancestorOrigins.length - 1]\n    );\n    domain = (matches && matches[0]) || undefined;\n  }\n  domain = domain || '.google.com';\n  const canonical = extractHost(\n    Services.documentInfoForDoc(ampDoc).canonicalUrl\n  );\n  return `https://adservice${domain}/adsid/integrator.json?domain=${canonical}`;\n}\n\n/**\n * Returns whether we are running on the AMP CDN.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isCdnProxy(win) {\n  return CDN_PROXY_REGEXP.test(win.location.origin);\n}\n\n/**\n * Populates the fields of the given Nameframe experiment config object.\n * @param {!Headers} headers\n * @param {!NameframeExperimentConfig} nameframeConfig\n */\nexport function setNameframeExperimentConfigs(headers, nameframeConfig) {\n  const nameframeExperimentHeader = headers.get('amp-nameframe-exp');\n  if (nameframeExperimentHeader) {\n    nameframeExperimentHeader.split(';').forEach((config) => {\n      if (config == 'instantLoad' || config == 'writeInBody') {\n        nameframeConfig[config] = true;\n      }\n    });\n  }\n}\n\n/**\n * Enum for browser capabilities. NOTE: Since JS is 32-bit, do not add anymore\n * than 32 capabilities to this enum.\n * @enum {number}\n */\nconst Capability = {\n  SVG_SUPPORTED: 1 << 0,\n  SANDBOXING_ALLOW_TOP_NAVIGATION_BY_USER_ACTIVATION_SUPPORTED: 1 << 1,\n  SANDBOXING_ALLOW_POPUPS_TO_ESCAPE_SANDBOX_SUPPORTED: 1 << 2,\n};\n\n/**\n * Returns a bitmap representing what features are supported by this browser.\n * @param {!Window} win\n * @return {number}\n */\nfunction getBrowserCapabilitiesBitmap(win) {\n  let browserCapabilities = 0;\n  const doc = win.document;\n  if (win.SVGElement && doc.createElementNS) {\n    browserCapabilities |= Capability.SVG_SUPPORTED;\n  }\n  const iframeEl = doc.createElement('iframe');\n  if (iframeEl.sandbox && iframeEl.sandbox.supports) {\n    if (iframeEl.sandbox.supports('allow-top-navigation-by-user-activation')) {\n      browserCapabilities |=\n        Capability.SANDBOXING_ALLOW_TOP_NAVIGATION_BY_USER_ACTIVATION_SUPPORTED;\n    }\n    if (iframeEl.sandbox.supports('allow-popups-to-escape-sandbox')) {\n      browserCapabilities |=\n        Capability.SANDBOXING_ALLOW_POPUPS_TO_ESCAPE_SANDBOX_SUPPORTED;\n    }\n  }\n  return browserCapabilities;\n}\n\n/**\n * Returns an enum value representing the AMP binary type, or null if this is a\n * canonical page.\n * @param {!Window} win\n * @return {?string} The binary type enum.\n * @visibleForTesting\n */\nexport function getAmpRuntimeTypeParameter(win) {\n  const art = getBinaryTypeNumericalCode(getBinaryType(win));\n  return isCdnProxy(win) && art != '0' ? art : null;\n}\n\n/**\n * Checks if the `always-serve-npa` attribute is present and valid\n * based on the geolocation.\n * @param {!Element} element\n * @return {!Promise<boolean>}\n * @visibleForTesting\n */\nexport function getServeNpaPromise(element) {\n  if (!element.hasAttribute('always-serve-npa')) {\n    return Promise.resolve(false);\n  }\n  const npaSignal = element.getAttribute('always-serve-npa');\n  if (npaSignal == '') {\n    return Promise.resolve(true);\n  }\n  return Services.geoForDocOrNull(element).then((geoService) => {\n    if (!geoService) {\n      // Err on safe side and signal for NPA.\n      return true;\n    }\n    const locations = npaSignal.split(',');\n    for (let i = 0; i < locations.length; i++) {\n      const geoGroup = geoService.isInCountryGroup(locations[i]);\n      if (geoGroup === GEO_IN_GROUP.IN) {\n        return true;\n      } else if (geoGroup === GEO_IN_GROUP.NOT_DEFINED) {\n        user().warn('AMP-AD', `Geo group \"${locations[i]}\" was not defined.`);\n      }\n    }\n    // Not in any of the defined geo groups.\n    return false;\n  });\n}\n\n/**\n * This method retrieves the high-entropy portions of the user agent\n * information.\n * See https://wicg.github.io/ua-client-hints/#getHighEntropyValues\n * @param {!Window} win\n * @return {!Promise<!UADataValues|undefined>}\n */\nfunction getUserAgentClientHintParameters(win) {\n  if (\n    !win.navigator ||\n    !win.navigator.userAgentData ||\n    typeof win.navigator.userAgentData.getHighEntropyValues !== 'function'\n  ) {\n    return Promise.resolve();\n  }\n\n  return win.navigator.userAgentData.getHighEntropyValues([\n    'platform',\n    'platformVersion',\n    'architecture',\n    'model',\n    'uaFullVersion',\n    'bitness',\n  ]);\n}\n", "/**\n * Machinery for doing \"traffic-level\" experiments.  That is, rather than\n * a single user choosing to opt-in to an experimental version of a module,\n * this framework allows you to do randomized, controlled experiments on all\n * AMP page loads to, for example, test relative performance or look for\n * impacts on click-throughs.\n */\n\nimport {\n  AMP_EXPERIMENT_ATTRIBUTE,\n  EXPERIMENT_ATTRIBUTE,\n  mergeExperimentIds,\n} from './utils';\nimport {Services} from '#service';\nimport {parseQueryString} from '#core/types/string/url';\n\n/** @typedef {{\n *    control: string,\n *    experiment: string\n *  }} */\nexport let A4aExperimentBranches;\n\n/** @type {string} @private */\nexport const MANUAL_EXPERIMENT_ID = '117152632';\n\n/**\n * @param {!Window} win\n * @param {!Element} element Ad tag Element.\n * @return {?string} experiment extracted from page url.\n */\nexport function extractUrlExperimentId(win, element) {\n  const expParam =\n    Services.ampdoc(element).getParam('exp') ||\n    parseQueryString(win.location.search)['exp'];\n  if (!expParam) {\n    return null;\n  }\n  // Allow for per type experiment control with Doubleclick key set for 'da'\n  // and AdSense using 'aa'.  Fallback to 'a4a' if type specific is missing.\n  const expKeys = [\n    (element.getAttribute('type') || '').toLowerCase() == 'doubleclick'\n      ? 'da'\n      : 'aa',\n    'a4a',\n  ];\n  let arg;\n  let match;\n  expKeys.forEach(\n    (key) =>\n      (arg =\n        arg ||\n        ((match = new RegExp(`(?:^|,)${key}:(-?\\\\d+)`).exec(expParam)) &&\n          match[1]))\n  );\n  return arg || null;\n}\n\n/**\n * Sets of experiment IDs can be attached to Elements via attributes.  In\n * that case, we encode them as a string containing a comma-separated list\n * of experiment IDs.  This parses a comma-separated list from a string into\n * a list of ID strings.  If the input string is empty or null, this returns\n * the empty list.  This does no validity checking on the ID formats -- for\n * that, use validateExperimentIds.\n *\n * @param {?string} idString  String to parse.\n * @return {!Array<string>}  List of experiment IDs (possibly empty).\n * @see validateExperimentIds\n */\nexport function parseExperimentIds(idString) {\n  if (idString) {\n    return idString.split(',');\n  }\n  return [];\n}\n\n/**\n * Checks whether the given element is a member of the given experiment branch.\n * I.e., whether the element's data-experiment-id attribute contains the id\n * value (possibly because the host page URL contains a 'exp=a4a:X' parameter\n * and #maybeSetExperimentFromUrl has added the appropriate EID).\n *\n * @param {!Element} element Element to check for membership in a specific\n *   experiment.\n * @param {?string} id Experiment ID to check for on `element`.\n * @return {boolean}\n */\nexport function isInExperiment(element, id) {\n  return parseExperimentIds(element.getAttribute(EXPERIMENT_ATTRIBUTE)).some(\n    (x) => {\n      return x === id;\n    }\n  );\n}\n\n/**\n * Checks whether the given element is a member of the 'manually triggered\n * \"experiment\" branch'.  I.e., whether the element's data-experiment-id\n * attribute contains the MANUAL_EXPERIMENT_ID value (hopefully because the\n * user has manually specified 'exp=a4a:-1' in the host page URL and\n * #maybeSetExperimentFromUrl has added it).\n *\n * @param {!Element} element  Element to check for manual experiment membership.\n * @return {boolean}\n */\nexport function isInManualExperiment(element) {\n  return isInExperiment(element, MANUAL_EXPERIMENT_ID);\n}\n\n/**\n * Checks that all string experiment IDs in a list are syntactically valid\n * (integer base 10).\n *\n * @param {!Array<string>} idList  List of experiment IDs.  Can be empty.\n * @return {boolean} Whether all list elements are valid experiment IDs.\n */\nexport function validateExperimentIds(idList) {\n  return idList.every((id) => {\n    return !isNaN(parseInt(id, 10));\n  });\n}\n\n/**\n * Adds a single experimentID to an element iff it's a valid experiment ID.\n * No-ops if the experimentId is undefined.\n *\n * @param {string|undefined} experimentId  ID to add to the element.\n * @param {Element} element to add the experiment ID to.\n * @param {string} attr the attribute name that holds the experiments\n */\nfunction addExpIdToElement(experimentId, element, attr) {\n  if (!experimentId) {\n    return;\n  }\n  const currentEids = element.getAttribute(attr);\n  if (currentEids && validateExperimentIds(parseExperimentIds(currentEids))) {\n    element.setAttribute(attr, mergeExperimentIds([experimentId], currentEids));\n  } else {\n    element.setAttribute(attr, experimentId);\n  }\n}\n\n/**\n * Adds a single experimentID to an element iff it's a valid experiment ID.\n * No-ops if the experimentId is undefined.\n *\n * @param {string|undefined} experimentId  ID to add to the element.\n * @param {Element} element to add the experiment ID to.\n */\nexport function addExperimentIdToElement(experimentId, element) {\n  addExpIdToElement(experimentId, element, EXPERIMENT_ATTRIBUTE);\n}\n\n/**\n * Adds a single AMP experimentID to an element iff it's a valid experiment ID.\n * No-ops if the experimentId is undefined.\n *\n * Note that AMP experiment brances do not have their own unique IDs. Instead,\n * we generate a pseudo ID for them by concatenating the id with the\n * experiment's value.\n *\n * @param {string|undefined} experimentId  ID to add to the element.\n * @param {Element} element to add the experiment ID to.\n */\nexport function addAmpExperimentIdToElement(experimentId, element) {\n  addExpIdToElement(experimentId, element, AMP_EXPERIMENT_ATTRIBUTE);\n}\n", "// Note: loaded by 3p system. Cannot rely on babel polyfills.\nimport {devAssert} from '#core/assert';\nimport {devError} from '#core/error';\nimport {map} from '#core/types/object';\n\n/** @type {Object<string, string>} */\nlet propertyNameCache;\n\n/** @const {!Array<string>} */\nconst vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n\nconst DISPLAY_STYLE_MESSAGE =\n  '`display` style detected. You must use toggle instead.';\n\nconst EMPTY_CSS_DECLARATION = /** @type {!CSSStyleDeclaration} */ ({\n  'getPropertyPriority': () => '',\n  'getPropertyValue': () => '',\n});\n\n/**\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\nexport function camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (let i = 0; i < vendorPrefixes.length; i++) {\n    const propertyName = vendorPrefixes[i] + titleCase;\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n  return '';\n}\n\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\nexport function getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if (isVar(camelCase)) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n  if (!propertyNameCache) {\n    propertyNameCache = map();\n  }\n  let propertyName = propertyNameCache[camelCase];\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n    if (style[camelCase] === undefined) {\n      const titleCase = camelCaseToTitleCase(camelCase);\n      const prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n  return propertyName;\n}\n\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setImportantStyles(element, styles) {\n  const {style} = element;\n  for (const k in styles) {\n    style.setProperty(\n      getVendorJsPropertyName(style, k),\n      String(styles[k]),\n      'important'\n    );\n  }\n}\n\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\nexport function setStyle(element, property, value, opt_units, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return;\n  }\n  const styleValue = /** @type {string} */ (\n    opt_units ? value + opt_units : value\n  );\n  if (isVar(propertyName)) {\n    element.style.setProperty(propertyName, styleValue);\n  } else {\n    element.style[propertyName] = styleValue;\n  }\n}\n\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\nexport function getStyle(element, property, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return undefined;\n  }\n  if (isVar(propertyName)) {\n    return element.style.getPropertyValue(propertyName);\n  }\n  return element.style[propertyName];\n}\n\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setStyles(element, styles) {\n  for (const k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\nexport function setInitialDisplay(el, value) {\n  const {style} = el;\n  devAssert(\n    value !== '' && value !== 'none',\n    'Initial display value must not be \"none\". Use toggle instead.'\n  );\n  devAssert(\n    !style['display'],\n    'setInitialDisplay MUST NOT be used for ' +\n      'resetting the display style. If you are looking for display:none ' +\n      'toggling, use toggle instead.'\n  );\n  style['display'] = value;\n}\n\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\nexport function toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\nexport function px(value) {\n  return `${value}px`;\n}\n\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\nexport function deg(value) {\n  return `${value}deg`;\n}\n\n/**\n * Coerces a number into a string with units.\n * @param {number|string} value\n * @param {function(number):string} fn\n * @return {string}\n */\nfunction units(value, fn) {\n  return typeof value == 'number' ? fn(value) : value;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function translateX(value) {\n  return `translateX(${units(value, px)})`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string|null)=} opt_y\n * @return {string}\n */\nexport function translate(x, opt_y) {\n  return opt_y === undefined || opt_y === null\n    ? `translate(${units(x, px)})`\n    : `translate(${units(x, px)}, ${units(opt_y, px)})`;\n}\n\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function scale(value) {\n  return `scale(${value})`;\n}\n\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function rotate(value) {\n  return `rotate(${units(value, deg)})`;\n}\n\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\nexport function removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(\n    /\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g,\n    '($1,$2,$3, 1)'\n  );\n}\n\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!CSSStyleDeclaration}\n */\nexport function computedStyle(win, el) {\n  const style = /** @type {?CSSStyleDeclaration} */ (win.getComputedStyle(el));\n  return style || EMPTY_CSS_DECLARATION;\n}\n\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\nexport function resetStyles(element, properties) {\n  for (let i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\nexport function propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n\n/**\n * @param {string} property\n * @return {boolean}\n */\nfunction isVar(property) {\n  return property.startsWith('--');\n}\n\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\nexport function assertNotDisplay(style) {\n  // TODO(rcebulko): This calls itself an assert, but doesn't throw an error.\n  // Should it throw sync? If so, this/below can reduce to\n  // `return devAssert(style == 'display', DISPLAY_STYLE_MESSAGE);`\n  if (style === 'display') {\n    devError('STYLE', DISPLAY_STYLE_MESSAGE);\n  }\n  return style;\n}\n\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\nexport function assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    devError('STYLE', DISPLAY_STYLE_MESSAGE);\n  }\n  return styles;\n}\n", "import {devAssert} from '#core/assert';\nimport * as mode from '#core/mode';\n\n/**\n * Interpret a byte array as a UTF-8 string.\n * @param {!BufferSource} bytes\n * @return {string}\n */\nexport function utf8Decode(bytes) {\n  if (typeof TextDecoder !== 'undefined') {\n    return new TextDecoder('utf-8').decode(bytes);\n  }\n  const asciiString = bytesToString(new Uint8Array(bytes.buffer || bytes));\n  return decodeURIComponent(escape(asciiString));\n}\n\n/**\n * Turn a string into UTF-8 bytes.\n * @param {string} string\n * @return {!Uint8Array}\n */\nexport function utf8Encode(string) {\n  if (typeof TextEncoder !== 'undefined') {\n    return new TextEncoder('utf-8').encode(string);\n  }\n  return stringToBytes(unescape(encodeURIComponent(string)));\n}\n\n/**\n * Converts a string which holds 8-bit code points, such as the result of atob,\n * into a Uint8Array with the corresponding bytes.\n * If you have a string of characters, you probably want to be using utf8Encode.\n * @param {string} str\n * @return {!Uint8Array}\n */\nexport function stringToBytes(str) {\n  const bytes = new Uint8Array(str.length);\n  for (let i = 0; i < str.length; i++) {\n    const charCode = str.charCodeAt(i);\n    devAssert(charCode <= 255, 'Characters must be in range [0,255]');\n    bytes[i] = charCode;\n  }\n  return bytes;\n}\n\n/**\n * Converts a 8-bit bytes array into a string\n * @param {!Uint8Array} bytes\n * @return {string}\n */\nexport function bytesToString(bytes) {\n  // Intentionally avoids String.fromCharCode.apply so we don't suffer a\n  // stack overflow. #10495, https://jsperf.com/bytesToString-2\n  const array = new Array(bytes.length);\n  for (let i = 0; i < bytes.length; i++) {\n    array[i] = String.fromCharCode(bytes[i]);\n  }\n  return array.join('');\n}\n\n/**\n * Converts a 4-item byte array to an unsigned integer.\n * Assumes bytes are big endian.\n * @param {!Uint8Array} bytes\n * @return {number}\n */\nexport function bytesToUInt32(bytes) {\n  if (bytes.length != 4) {\n    throw new Error('Received byte array with length != 4');\n  }\n  const val =\n    ((bytes[0] & 0xff) << 24) |\n    ((bytes[1] & 0xff) << 16) |\n    ((bytes[2] & 0xff) << 8) |\n    (bytes[3] & 0xff);\n  // Convert to unsigned.\n  return val >>> 0;\n}\n\n/**\n * Generate a random bytes array with specific length using\n * win.crypto.getRandomValues. Return null if it is not available.\n * @param {!Window} win\n * @param {number} length\n * @return {?Uint8Array}\n */\nexport function getCryptoRandomBytesArray(win, length) {\n  let {crypto} = win;\n\n  // Support IE 11\n  if (!mode.isEsm()) {\n    crypto = /** @type {!webCrypto.Crypto|undefined} */ (\n      crypto || win.msCrypto\n    );\n    if (!crypto || !crypto.getRandomValues) {\n      return null;\n    }\n  }\n\n  // Widely available in browsers we support:\n  // http://caniuse.com/#search=getRandomValues\n  const uint8array = new Uint8Array(length);\n  crypto.getRandomValues(uint8array);\n  return uint8array;\n}\n", "import {randomlySelectUnsetExperiments} from '#experiments';\n\nimport {ExperimentInfoDef} from './experiments.type';\n\n/** @const {!Object<string, string>} */\nexport const AdvanceExpToTime = {\n  '31060905': '6s',\n  '31060906': '8s',\n  '31060907': '10s',\n};\n\n/** @const */\nexport const StoryAdAutoAdvance = {\n  ID: 'story-ad-auto-advance',\n  CONTROL: '31060904',\n  SIX_SECONDS: '31060905',\n  EIGHT_SECONDS: '31060906',\n  TEN_SECONDS: '31060907',\n};\n\n/**\n * Choose what time value to auto advance story ads.\n * @param {!Window} win\n */\nexport function divertStoryAdAutoAdvance(win) {\n  /** @type {!ExperimentInfoDef} */\n  const experimentInfo = {\n    experimentId: StoryAdAutoAdvance.ID,\n    isTrafficEligible: () => true,\n    branches: [\n      StoryAdAutoAdvance.CONTROL,\n      StoryAdAutoAdvance.SIX_SECONDS,\n      StoryAdAutoAdvance.EIGHT_SECONDS,\n      StoryAdAutoAdvance.TEN_SECONDS,\n    ],\n  };\n  randomlySelectUnsetExperiments(win, [experimentInfo]);\n}\n", "import {randomlySelectUnsetExperiments} from '#experiments';\n\nimport {ExperimentInfoDef} from './experiments.type';\n\n/** @const */\nexport const StoryAdPageOutlink = {\n  ID: 'story-ad-page-outlink',\n  CONTROL: '20212524',\n  EXPERIMENT: '20212523',\n};\n\n/**\n * Page outlink experiment and control ID branch setup\n * @param {!Window} win\n */\nexport function divertStoryAdPageOutlink(win) {\n  /** @type {!ExperimentInfoDef} */\n  const experimentInfo = {\n    experimentId: StoryAdPageOutlink.ID,\n    isTrafficEligible: () => true,\n    branches: [StoryAdPageOutlink.CONTROL, StoryAdPageOutlink.EXPERIMENT],\n  };\n  randomlySelectUnsetExperiments(win, [experimentInfo]);\n}\n", "import {randomlySelectUnsetExperiments} from '#experiments';\n\nimport {ExperimentInfoDef} from './experiments.type';\n\n/** @const */\nexport const StoryAdPlacements = {\n  ID: 'story-ad-placements',\n  CONTROL: '31060567',\n  PREDETERMINED_EIGHT: '31060568',\n  PREDETERMINED_TEN: '31060817',\n  PREDETERMINED_TWELVE: '31060569',\n};\n\n/**\n * Choose which placement algorithm and density for given win.\n * @param {!Window} win\n */\nexport function divertStoryAdPlacements(win) {\n  /** @type {!ExperimentInfoDef} */\n  const experimentInfo = {\n    experimentId: StoryAdPlacements.ID,\n    isTrafficEligible: () => true,\n    branches: [\n      StoryAdPlacements.CONTROL,\n      StoryAdPlacements.PREDETERMINED_EIGHT,\n      StoryAdPlacements.PREDETERMINED_TEN,\n      StoryAdPlacements.PREDETERMINED_TWELVE,\n    ],\n  };\n  randomlySelectUnsetExperiments(win, [experimentInfo]);\n}\n", "/** @const */\nexport const StoryAdSegmentExp = {\n  ID: 'story-ad-progress-segment',\n  CONTROL: '31061402',\n  SIX_SECONDS: '31061403',\n  EIGHT_SECONDS: '31061404',\n  TEN_SECONDS: '31061405',\n};\n\n/** @const */\nexport const StoryAdSegmentTimes = {\n  SENTINEL: '999999ms',\n  SIX_SECONDS: '6000ms',\n  EIGHT_SECONDS: '8000ms',\n  TEN_SECONDS: '10000ms',\n};\n\n/** @const */\nexport const ViewerSetTimeToBranch = {\n  [StoryAdSegmentTimes.SIX_SECONDS]: StoryAdSegmentExp.SIX_SECONDS,\n  [StoryAdSegmentTimes.EIGHT_SECONDS]: StoryAdSegmentExp.EIGHT_SECONDS,\n  [StoryAdSegmentTimes.TEN_SECONDS]: StoryAdSegmentExp.TEN_SECONDS,\n  [StoryAdSegmentTimes.SENTINEL]: StoryAdSegmentExp.CONTROL,\n};\n\n/** @const */\nexport const BranchToTimeValues = {\n  [StoryAdSegmentExp.SIX_SECONDS]: StoryAdSegmentTimes.SIX_SECONDS,\n  [StoryAdSegmentExp.EIGHT_SECONDS]: StoryAdSegmentTimes.EIGHT_SECONDS,\n  [StoryAdSegmentExp.TEN_SECONDS]: StoryAdSegmentTimes.TEN_SECONDS,\n};\n", "/**\n * A priority queue backed with sorted array.\n * @template T\n */\nexport class PriorityQueue {\n  /**\n   * Creates an instance of PriorityQueue.\n   */\n  constructor() {\n    /** @private @const {Array<{item: T, priority: number}>} */\n    this.queue_ = [];\n  }\n\n  /**\n   * Returns the max priority item without dequeueing it.\n   * @return {T}\n   */\n  peek() {\n    const l = this.length;\n    if (!l) {\n      return null;\n    }\n    return this.queue_[l - 1].item;\n  }\n\n  /**\n   * Enqueues an item with the given priority.\n   * @param {T} item\n   * @param {number} priority\n   */\n  enqueue(item, priority) {\n    if (isNaN(priority)) {\n      throw new Error('Priority must not be NaN.');\n    }\n    const i = this.binarySearch_(priority);\n    this.queue_.splice(i, 0, {item, priority});\n  }\n\n  /**\n   * Returns index at which item with `target` priority should be inserted.\n   * @param {number} target\n   * @return {number}\n   * @private\n   */\n  binarySearch_(target) {\n    let i = -1;\n    let lo = 0;\n    let hi = this.length;\n    while (lo <= hi) {\n      i = Math.floor((lo + hi) / 2);\n      // This means `target` is the new max priority in the queue.\n      if (i === this.length) {\n        break;\n      }\n      // Stop searching once p[i] >= target AND p[i-1] < target.\n      // This way, we'll return the index of the first occurence of `target`\n      // priority (if any), which preserves FIFO order of same-priority items.\n      if (this.queue_[i].priority < target) {\n        lo = i + 1;\n      } else if (i > 0 && this.queue_[i - 1].priority >= target) {\n        hi = i - 1;\n      } else {\n        break;\n      }\n    }\n    return i;\n  }\n\n  /**\n   * @param {function(T)} callback\n   */\n  forEach(callback) {\n    let index = this.length;\n    while (index--) {\n      callback(this.queue_[index].item);\n    }\n  }\n\n  /**\n   * Dequeues the max priority item.\n   * Items with the same priority are dequeued in FIFO order.\n   * @return {T}\n   */\n  dequeue() {\n    if (!this.length) {\n      return null;\n    }\n    return this.queue_.pop().item;\n  }\n\n  /**\n   * The number of items in the queue.\n   * @return {number}\n   */\n  get length() {\n    return this.queue_.length;\n  }\n}\n", "/**\n * An interface to interact with browser window object.\n * Mainly used to mock out read only APIs in test.\n * See test-helper.js#mockWindowInterface\n */\nexport class WindowInterface {\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {!Window}\n   */\n  static getTop(win) {\n    return win.top;\n  }\n\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {!Location}\n   */\n  static getLocation(win) {\n    return win.location;\n  }\n\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {string}\n   */\n  static getDocumentReferrer(win) {\n    return win.document.referrer;\n  }\n\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {string}\n   */\n  static getHostname(win) {\n    return win.location.hostname;\n  }\n\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {string}\n   */\n  static getUserAgent(win) {\n    return win.navigator.userAgent;\n  }\n\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {string}\n   */\n  static getUserLanguage(win) {\n    // The `navigator.userLanguage` is only supported by IE. The standard is\n    // the `navigator.language`.\n    return win.navigator['userLanguage'] || win.navigator.language;\n  }\n\n  /**\n   * @static\n   * @return {number}\n   */\n  static getDevicePixelRatio() {\n    // No matter the window, the device-pixel-ratio is always one.\n    return self.devicePixelRatio || 1;\n  }\n\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {function(string,(ArrayBufferView|Blob|FormData|null|string)=):boolean|undefined}\n   */\n  static getSendBeacon(win) {\n    if (!win.navigator.sendBeacon) {\n      return undefined;\n    }\n    return win.navigator.sendBeacon.bind(win.navigator);\n  }\n\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {typeof XMLHttpRequest}\n   */\n  static getXMLHttpRequest(win) {\n    return win.XMLHttpRequest;\n  }\n\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {typeof Image}\n   */\n  static getImage(win) {\n    return win.Image;\n  }\n}\n", "import {map} from '#core/types/object';\n\n/**\n * @template T\n */\nexport class LruCache {\n  /**\n   * @param {number} capacity\n   */\n  constructor(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n\n    /** @private {number} */\n    this.size_ = 0;\n\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n    this.access_ = 0;\n\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n    this.cache_ = map();\n  }\n\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n  has(key) {\n    return !!this.cache_[key];\n  }\n\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  get(key) {\n    const cacheable = this.cache_[key];\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n    this.cache_[key] = {payload, access: this.access_};\n    this.evict_();\n  }\n\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    const cache = this.cache_;\n    let oldest = this.access_ + 1;\n    let oldestKey;\n    for (const key in cache) {\n      const {access} = cache[key];\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  }\n}\n", "import {LruCache} from '#core/data-structures/lru-cache';\nimport * as mode from '#core/mode';\nimport {arrayOrSingleItemToArray} from '#core/types/array';\nimport {dict, hasOwn} from '#core/types/object';\nimport {endsWith} from '#core/types/string';\nimport {parseQueryString} from '#core/types/string/url';\n\nimport {userAssert} from '#utils/log';\n\nimport {urls} from './config';\n\nconst SERVING_TYPE_PREFIX = new Set([\n  // No viewer\n  'c',\n  // In viewer\n  'v',\n  // Ad landing page\n  'a',\n  // Ad\n  'ad',\n]);\n\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\nlet cachedAnchorEl;\n\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\nlet urlCache;\n\n// eslint-disable-next-line no-script-url\nconst INVALID_PROTOCOLS = ['javascript:', 'data:', 'vbscript:'];\n\n/** @const {string} */\nexport const SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n\n/**\n * Coerces a url into a location;\n * @function\n * @param {string|!Location} url\n * @return {!Location}\n */\nconst urlAsLocation = (url) =>\n  typeof url == 'string' ? parseUrlDeprecated(url) : url;\n\n/**\n * Returns the correct origin for a given window.\n * TODO(rcebulko): This really belongs under #core/window somewhere, not in url\n * @param {!Window} win\n * @return {string} origin\n */\nexport function getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * TODO(#34453): The URL constructor isn't supported in IE11, but is supported\n * everywhere else. There's a lot of code paths (and all uses of the LruCache)\n * that are built around this polyfill. Once we can drop IE11 support and just\n * use the URL constructor, we can clear out all of parseWithA, all the URL\n * cache logic (incl. additional caches in other call-sites). Most is guarded by\n * isEsm() and is only included in nomodule builds, but still.\n * @param {string} url\n * @param {boolean=} opt_nocache\n *   Cache is always ignored on ESM builds, see https://go.amp.dev/pr/31594\n * @return {!Location}\n */\nexport function parseUrlDeprecated(url, opt_nocache) {\n  if (!cachedAnchorEl) {\n    cachedAnchorEl = /** @type {!HTMLAnchorElement} */ (\n      self.document.createElement('a')\n    );\n    urlCache = mode.isEsm()\n      ? null\n      : self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new LruCache(100));\n  }\n\n  return parseUrlWithA(\n    cachedAnchorEl,\n    url,\n    mode.isEsm() || opt_nocache ? null : urlCache\n  );\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} anchorEl\n * @param {string} url\n * @param {LruCache=} opt_cache\n *   Cache is always ignored on ESM builds, see https://go.amp.dev/pr/31594\n * @return {!Location}\n * @restricted\n */\nexport function parseUrlWithA(anchorEl, url, opt_cache) {\n  if (mode.isEsm()) {\n    // Doing this causes the <a> to auto-set its own href to the resolved path,\n    // which would be the baseUrl for the URL constructor.\n    anchorEl.href = '';\n    return /** @type {?} */ (new URL(url, anchorEl.href));\n  }\n\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  anchorEl.href = url;\n\n  // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n  if (!anchorEl.protocol) {\n    anchorEl.href = anchorEl.href;\n  }\n\n  const info = /** @type {!Location} */ ({\n    href: anchorEl.href,\n    protocol: anchorEl.protocol,\n    host: anchorEl.host,\n    hostname: anchorEl.hostname,\n    port: anchorEl.port == '0' ? '' : anchorEl.port,\n    pathname: anchorEl.pathname,\n    search: anchorEl.search,\n    hash: anchorEl.hash,\n    origin: null, // Set below.\n  });\n\n  // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  }\n\n  // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n  if (\n    (info.protocol == 'http:' && info.port == 80) ||\n    (info.protocol == 'https:' && info.port == 443)\n  ) {\n    info.port = '';\n    info.host = info.hostname;\n  }\n\n  // For data URI anchorEl.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n  let origin;\n  if (anchorEl.origin && anchorEl.origin != 'null') {\n    origin = anchorEl.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n  info.origin = origin;\n\n  // Freeze during testing to avoid accidental mutation.\n  const frozen = mode.isTest() && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function appendEncodedParamStringToUrl(\n  url,\n  paramString,\n  opt_addToFront\n) {\n  if (!paramString) {\n    return url;\n  }\n  const mainAndFragment = url.split('#', 2);\n  const mainAndQuery = mainAndFragment[0].split('?', 2);\n\n  let newUrl =\n    mainAndQuery[0] +\n    (mainAndQuery[1]\n      ? opt_addToFront\n        ? `?${paramString}&${mainAndQuery[1]}`\n        : `?${mainAndQuery[1]}&${paramString}`\n      : `?${paramString}`);\n  newUrl += mainAndFragment[1] ? `#${mainAndFragment[1]}` : '';\n  return newUrl;\n}\n\n/**\n * @param {string} key\n * @param {string} value\n * @return {string}\n */\nfunction urlEncodeKeyValue(key, value) {\n  return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n}\n\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function addParamToUrl(url, key, value, opt_addToFront) {\n  return appendEncodedParamStringToUrl(\n    url,\n    urlEncodeKeyValue(key, value),\n    opt_addToFront\n  );\n}\n\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addMissingParamsToUrl(url, params) {\n  const location = parseUrlDeprecated(url);\n  const existingParams = parseQueryString(location.search);\n  const paramsToAdd = dict({});\n  const keys = Object.keys(params);\n  for (let i = 0; i < keys.length; i++) {\n    if (!hasOwn(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n  return addParamsToUrl(url, paramsToAdd);\n}\n\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function serializeQueryString(params) {\n  const s = [];\n  for (const k in params) {\n    let v = params[k];\n    if (v == null) {\n      continue;\n    }\n\n    v = arrayOrSingleItemToArray(v);\n    for (let i = 0; i < v.length; i++) {\n      s.push(urlEncodeKeyValue(k, v[i]));\n    }\n  }\n  return s.join('&');\n}\n\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isSecureUrlDeprecated(url) {\n  url = urlAsLocation(url);\n  return (\n    url.protocol == 'https:' ||\n    url.hostname == 'localhost' ||\n    url.hostname == '127.0.0.1' ||\n    endsWith(url.hostname, '.localhost')\n  );\n}\n\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\nexport function assertHttpsUrl(\n  urlString,\n  elementContext,\n  sourceName = 'source'\n) {\n  userAssert(\n    urlString != null,\n    '%s %s must be available',\n    elementContext,\n    sourceName\n  );\n  userAssert(\n    isSecureUrlDeprecated(urlString) || /^\\/\\//.test(urlString),\n    '%s %s must start with ' +\n      '\"https://\" or \"//\" or be relative and served from ' +\n      'either https or from localhost. Invalid value: %s',\n    elementContext,\n    sourceName,\n    urlString\n  );\n  return urlString;\n}\n\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\nexport function assertAbsoluteHttpOrHttpsUrl(urlString) {\n  userAssert(\n    /^https?\\:/i.test(urlString),\n    'URL must start with \"http://\" or \"https://\". Invalid value: %s',\n    urlString\n  );\n  return parseUrlDeprecated(urlString).href;\n}\n\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function removeFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return url;\n  }\n  return url.substring(0, index);\n}\n\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function getFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return '';\n  }\n  return url.substring(index);\n}\n\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isProxyOrigin(url) {\n  return urls.cdnProxyRegex.test(urlAsLocation(url).origin);\n}\n\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isLocalhostOrigin(url) {\n  return urls.localhostRegex.test(urlAsLocation(url).origin);\n}\n\n/**\n * @param {string} uri\n * @return {boolean}\n */\nexport function isAmpScriptUri(uri) {\n  return uri.startsWith('amp-script:');\n}\n\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\nexport function getProxyServingType(url) {\n  url = urlAsLocation(url);\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n  const path = url.pathname.split('/', 2);\n  return path[1];\n}\n\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isProtocolValid(url) {\n  return !(url && INVALID_PROTOCOLS.includes(urlAsLocation(url).protocol));\n}\n\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\nexport function removeAmpJsParamsFromUrl(url) {\n  const {hash, origin, pathname, search} = parseUrlDeprecated(url);\n  const searchRemoved = removeAmpJsParamsFromSearch(search);\n  return origin + pathname + searchRemoved + hash;\n}\n\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\nexport function removeSearch(url) {\n  const index = url.indexOf('?');\n  if (index == -1) {\n    return url;\n  }\n  const fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  // The below regex is a combo of these original patterns. Combining these,\n  // removing the corresponding `.replace` calls, and reusing\n  // removeParamsFromSearch saves ~175B. Matches params in query string:\n  // - /[?&]amp_js[^&]*/   amp_js_*\n  // - /[?&]amp_gsa[^&]*/  amp_gsa\n  // - /[?&]amp_r[^&]*/    amp_r\n  // - /[?&]amp_kit[^&]*/  amp_kit\n  // - /[?&]usqp[^&]*/     usqp (from goog experiment)\n  return removeParamsFromSearch(urlSearch, '(amp_(js[^&=]*|gsa|r|kit)|usqp)');\n}\n\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\nexport function removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: Accept paramNames as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const paramRegex = new RegExp(`[?&]${paramName}\\\\b[^&]*`, 'g');\n  const search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\nexport function getSourceUrl(url) {\n  url = urlAsLocation(url);\n\n  // Not a proxy URL - return the URL itself.\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  }\n\n  // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n  const path = url.pathname.split('/');\n  const prefix = path[1];\n  userAssert(\n    SERVING_TYPE_PREFIX.has(prefix),\n    'Unknown path prefix in url %s',\n    url.href\n  );\n  const domainOrHttpsSignal = path[2];\n  const origin =\n    domainOrHttpsSignal == 's'\n      ? 'https://' + decodeURIComponent(path[3])\n      : 'http://' + decodeURIComponent(domainOrHttpsSignal);\n  // Sanity test that what we found looks like a domain.\n  userAssert(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return (\n    origin +\n    path.join('/') +\n    removeAmpJsParamsFromSearch(url.search) +\n    (url.hash || '')\n  );\n}\n\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\nexport function getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\nexport function resolveRelativeUrl(relativeUrlString, baseUrl) {\n  baseUrl = urlAsLocation(baseUrl);\n  if (mode.isEsm() || typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private @visibleForTesting\n */\nexport function resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  baseUrl = urlAsLocation(baseUrl);\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  const relativeUrl = parseUrlDeprecated(relativeUrlString);\n\n  // Absolute URL.\n  if (relativeUrlString.toLowerCase().startsWith(relativeUrl.protocol)) {\n    return relativeUrl.href;\n  }\n\n  // Protocol-relative URL.\n  if (relativeUrlString.startsWith('//')) {\n    return baseUrl.protocol + relativeUrlString;\n  }\n\n  // Absolute path.\n  if (relativeUrlString.startsWith('/')) {\n    return baseUrl.origin + relativeUrlString;\n  }\n\n  // Relative path.\n  return (\n    baseUrl.origin +\n    baseUrl.pathname.replace(/\\/[^/]*$/, '/') +\n    relativeUrlString\n  );\n}\n\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\nexport function getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  const sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\nexport function checkCorsUrl(url) {\n  const parsedUrl = parseUrlDeprecated(url);\n  const query = parseQueryString(parsedUrl.search);\n  userAssert(\n    !(SOURCE_ORIGIN_PARAM in query),\n    'Source origin is not allowed in %s',\n    url\n  );\n}\n\n/**\n * Adds the path to the given url.\n *\n * @param {!Location} url\n * @param {string} path\n * @return {string}\n */\nexport function appendPathToUrl(url, path) {\n  const pathname = url.pathname.replace(/\\/?$/, '/') + path.replace(/^\\//, '');\n  return url.origin + pathname + url.search + url.hash;\n}\n", "import {Deferred} from '#core/data-structures/promise';\nimport {parseQueryString} from '#core/types/string/url';\nimport {WindowInterface} from '#core/window/interface';\n\nimport {isExperimentOn} from '#experiments';\n\nimport {Services} from '#service';\n\nimport {dev, user, userAssert} from '#utils/log';\n\nimport {getMode} from './mode';\nimport {addParamsToUrl, isProxyOrigin, parseUrlDeprecated} from './url';\n\nconst TIMEOUT_VALUE = 8000;\n\nlet trackImpressionPromise = null;\n\nconst DEFAULT_APPEND_URL_PARAM = ['gclid', 'gclsrc'];\n\n/**\n * These domains are trusted with more sensitive viewer operations such as\n * sending impression requests. If you believe your domain should be here,\n * file the issue on GitHub to discuss. The process will be similar\n * (but somewhat more stringent) to the one described in the [3p/README.md](\n * https://github.com/ampproject/amphtml/blob/main/3p/README.md)\n *\n * @type {!Array<!RegExp>}\n */\nconst TRUSTED_REFERRER_HOSTS = [\n  /**\n   * Twitter's link wrapper domains:\n   * - t.co\n   */\n  /^t.co$/,\n];\n\n/**\n * A function to get the trackImpressionPromise;\n * @return {!Promise}\n */\nexport function getTrackImpressionPromise() {\n  return userAssert(trackImpressionPromise, 'E#19457 trackImpressionPromise');\n}\n\n/**\n * Function that reset the trackImpressionPromise only for testing\n * @visibleForTesting\n */\nexport function resetTrackImpressionPromiseForTesting() {\n  trackImpressionPromise = null;\n}\n\n/**\n * Emit a HTTP request to a destination defined on the incoming URL.\n * Launched for trusted viewer. Otherwise guarded by experiment.\n * @param {!Window} win\n */\nexport function maybeTrackImpression(win) {\n  const deferred = new Deferred();\n  const {promise, resolve: resolveImpression} = deferred;\n\n  trackImpressionPromise = Services.timerFor(win)\n    .timeoutPromise(TIMEOUT_VALUE, promise, 'TrackImpressionPromise timeout')\n    .catch((error) => {\n      dev().warn('IMPRESSION', error);\n    });\n\n  const viewer = Services.viewerForDoc(win.document.documentElement);\n  const isTrustedViewerPromise = viewer.isTrustedViewer();\n  const isTrustedReferrerPromise = viewer\n    .getReferrerUrl()\n    .then((referrer) => isTrustedReferrer(referrer));\n  Promise.all([isTrustedViewerPromise, isTrustedReferrerPromise]).then(\n    (results) => {\n      const isTrustedViewer = results[0];\n      const isTrustedReferrer = results[1];\n      // Enable the feature in the case of trusted viewer,\n      // or trusted referrer\n      // or with experiment turned on\n      if (\n        !isTrustedViewer &&\n        !isTrustedReferrer &&\n        !isExperimentOn(win, 'alp')\n      ) {\n        resolveImpression();\n        return;\n      }\n\n      const replaceUrlPromise = handleReplaceUrl(win);\n      const clickUrlPromise = handleClickUrl(win);\n\n      Promise.all([replaceUrlPromise, clickUrlPromise]).then(\n        () => {\n          resolveImpression();\n        },\n        () => {}\n      );\n    }\n  );\n}\n\n/**\n * Signal that impression tracking is not relevant in this environment.\n */\nexport function doNotTrackImpression() {\n  trackImpressionPromise = Promise.resolve();\n}\n\n/**\n * Handle the getReplaceUrl and return a promise when url is replaced Only\n * handles replaceUrl when viewer indicates AMP to do so. Viewer should indicate\n * by setting the legacy replaceUrl init param and add `replaceUrl` to its\n * capability param. Future plan is to change the type of legacy init replaceUrl\n * param from url string to boolean value. Please NOTE replaceUrl and adLocation\n * will never arrive at same time, so there is no race condition on the order of\n * handling url replacement.\n * @param {!Window} win\n * @return {!Promise}\n */\nfunction handleReplaceUrl(win) {\n  const viewer = Services.viewerForDoc(win.document.documentElement);\n\n  // ReplaceUrl substitution doesn't have to wait until the document is visible\n  if (!viewer.getParam('replaceUrl')) {\n    // The init replaceUrl param serve as a signal on whether replaceUrl is\n    // required for this doc.\n    return Promise.resolve();\n  }\n\n  if (!viewer.hasCapability('replaceUrl')) {\n    // If Viewer is not capability of providing async replaceUrl, use the legacy\n    // init replaceUrl param.\n    viewer.replaceUrl(viewer.getParam('replaceUrl') || null);\n    return Promise.resolve();\n  }\n\n  // request async replaceUrl is viewer support getReplaceUrl.\n  return viewer\n    .sendMessageAwaitResponse('getReplaceUrl', /* data */ undefined)\n    .then(\n      (response) => {\n        if (!response || typeof response != 'object') {\n          dev().warn('IMPRESSION', 'get invalid replaceUrl response');\n          return;\n        }\n        viewer.replaceUrl(response['replaceUrl'] || null);\n      },\n      (err) => {\n        dev().warn('IMPRESSION', 'Error request replaceUrl from viewer', err);\n      }\n    );\n}\n\n/**\n * @param {string} referrer\n * @return {boolean}\n * @visibleForTesting\n */\nexport function isTrustedReferrer(referrer) {\n  const url = parseUrlDeprecated(referrer);\n  if (url.protocol != 'https:') {\n    return false;\n  }\n  return TRUSTED_REFERRER_HOSTS.some((th) => th.test(url.hostname));\n}\n\n/**\n * Perform the impression request if it has been provided via\n * the click param in the viewer arguments. Returns a promise.\n * @param {!Window} win\n * @return {!Promise}\n */\nfunction handleClickUrl(win) {\n  const ampdoc = Services.ampdoc(win.document.documentElement);\n  const viewer = Services.viewerForDoc(ampdoc);\n\n  /** @const {?string} */\n  const clickUrl = viewer.getParam('click');\n  if (!clickUrl) {\n    return Promise.resolve();\n  }\n\n  if (clickUrl.indexOf('https://') != 0) {\n    user().warn(\n      'IMPRESSION',\n      'click fragment param should start with https://. Found ',\n      clickUrl\n    );\n    return Promise.resolve();\n  }\n\n  if (WindowInterface.getLocation(win).hash) {\n    // This is typically done using replaceState inside the viewer.\n    // If for some reason it failed, get rid of the fragment here to\n    // avoid duplicate tracking.\n    WindowInterface.getLocation(win).hash = '';\n  }\n\n  // TODO(@zhouyx) need test with a real response.\n  return ampdoc\n    .whenFirstVisible()\n    .then(() => {\n      return invoke(win, dev().assertString(clickUrl));\n    })\n    .then((response) => {\n      applyResponse(win, response);\n    })\n    .catch((err) => {\n      user().warn('IMPRESSION', 'Error on request clickUrl: ', err);\n    });\n}\n\n/**\n * Send the url to ad server and wait for its response\n * @param {!Window} win\n * @param {string} clickUrl\n * @return {!Promise<?JsonObject>}\n */\nfunction invoke(win, clickUrl) {\n  if (getMode().localDev && !getMode().test) {\n    clickUrl = 'http://localhost:8000/impression-proxy?url=' + clickUrl;\n  }\n  return Services.xhrFor(win)\n    .fetchJson(clickUrl, {\n      credentials: 'include',\n    })\n    .then((res) => {\n      // Treat 204 no content response specially\n      if (res.status == 204) {\n        return null;\n      }\n      return res.json();\n    });\n}\n\n/**\n * parse the response back from ad server\n * Set for analytics purposes\n * @param {!Window} win\n * @param {?JsonObject} response\n */\nfunction applyResponse(win, response) {\n  if (!response) {\n    return;\n  }\n\n  const adLocation = response['location'];\n  const adTracking = response['tracking_url'];\n\n  // If there is a tracking_url, need to track it\n  // Otherwise track the location\n  const trackUrl = adTracking || adLocation;\n\n  if (trackUrl && !isProxyOrigin(trackUrl)) {\n    // To request the provided trackUrl for tracking purposes.\n    new Image().src = trackUrl;\n  }\n\n  // Replace the location href params with new location params we get (if any).\n  if (adLocation) {\n    if (!win.history.replaceState) {\n      return;\n    }\n\n    const viewer = Services.viewerForDoc(win.document.documentElement);\n    const currentHref = WindowInterface.getLocation(win).href;\n    const url = parseUrlDeprecated(adLocation);\n    const params = parseQueryString(url.search);\n    const newHref = addParamsToUrl(currentHref, params);\n    // TODO: Avoid overwriting the fragment parameter.\n    win.history.replaceState(null, '', newHref);\n    viewer.maybeUpdateFragmentForCct();\n  }\n}\n\n/**\n * Return a promise that whether appending extra url params to outgoing link is\n * required.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @return {!Promise<boolean>}\n */\nexport function shouldAppendExtraParams(ampdoc) {\n  return ampdoc.whenReady().then(() => {\n    return !!ampdoc\n      .getBody()\n      .querySelector('amp-analytics[type=googleanalytics]');\n  });\n}\n\n/**\n * Return the extra url params string that should be appended to outgoing link\n * @param {!Window} win\n * @param {!Element} target\n * @return {string}\n */\nexport function getExtraParamsUrl(win, target) {\n  // Get an array with extra params that needs to append.\n  const url = parseUrlDeprecated(WindowInterface.getLocation(win).href);\n  const params = parseQueryString(url.search);\n  const appendParams = [];\n  for (let i = 0; i < DEFAULT_APPEND_URL_PARAM.length; i++) {\n    const param = DEFAULT_APPEND_URL_PARAM[i];\n    if (typeof params[param] !== 'undefined') {\n      appendParams.push(param);\n    }\n  }\n\n  // Check if the param already exists\n  const additionalUrlParams = target.getAttribute('data-amp-addparams');\n  let {href} = target;\n  if (additionalUrlParams) {\n    href = addParamsToUrl(href, parseQueryString(additionalUrlParams));\n  }\n  const loc = parseUrlDeprecated(href);\n  const existParams = parseQueryString(loc.search);\n  for (let i = appendParams.length - 1; i >= 0; i--) {\n    const param = appendParams[i];\n    if (typeof existParams[param] !== 'undefined') {\n      appendParams.splice(i, 1);\n    }\n  }\n  return getQueryParamUrl(appendParams);\n}\n\n/**\n * Helper method to convert an query param array to string\n * @param {!Array<string>} params\n * @return {string}\n */\nfunction getQueryParamUrl(params) {\n  let url = '';\n  for (let i = 0; i < params.length; i++) {\n    const param = params[i];\n    url +=\n      i == 0\n        ? `${param}=QUERY_PARAM(${param})`\n        : `&${param}=QUERY_PARAM(${param})`;\n  }\n  return url;\n}\n", "import {includes} from '#core/types/string';\n\nimport {dev} from '#utils/log';\n\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\nexport function openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  let res;\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    dev().error('DOM', 'Failed to open url on target: ', target, e);\n  }\n\n  // Then try with `_top` target.\n  if (!res && target != '_top' && !includes(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n  return res;\n}\n", "import {PriorityQueue} from '#core/data-structures/priority-queue';\nimport {isIframed} from '#core/dom';\nimport {escapeCssSelectorIdent} from '#core/dom/css-selectors';\nimport {closestAncestorElementBySelector} from '#core/dom/query';\nimport {dict} from '#core/types/object';\nimport {getWin} from '#core/window';\n\nimport {Services} from '#service';\n\nimport {dev, user, userAssert} from '#utils/log';\n\nimport {getExtraParamsUrl, shouldAppendExtraParams} from '../impression';\nimport {getMode} from '../mode';\nimport {openWindowDialog} from '../open-window-dialog';\nimport {registerServiceBuilderForDoc} from '../service-helpers';\nimport {isLocalhostOrigin} from '../url';\n\nconst TAG = 'navigation';\n\n/** @private @const {string} */\nconst EVENT_TYPE_CLICK = 'click';\n\n/** @private @const {string} */\nconst EVENT_TYPE_CONTEXT_MENU = 'contextmenu';\n\nconst VALID_TARGETS = ['_top', '_blank'];\n\n/** @private @const {string} */\nconst ORIG_HREF_ATTRIBUTE = 'data-a4a-orig-href';\n\n/**\n * Key used for retargeting event target originating from shadow DOM.\n * @const {string}\n */\nconst AMP_CUSTOM_LINKER_TARGET = '__AMP_CUSTOM_LINKER_TARGET__';\n\n/**\n * @enum {number} Priority reserved for extensions in anchor mutations.\n * The higher the priority, the sooner it's invoked.\n */\nexport const Priority = {\n  LINK_REWRITER_MANAGER: 0,\n  ANALYTICS_LINKER: 2,\n};\n\n/**\n * Install navigation service for ampdoc, which handles navigations from anchor\n * tag clicks and other runtime features like AMP.navigateTo().\n *\n * Immediately instantiates the service.\n *\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n */\nexport function installGlobalNavigationHandlerForDoc(ampdoc) {\n  registerServiceBuilderForDoc(\n    ampdoc,\n    TAG,\n    Navigation,\n    /* opt_instantiate */ true\n  );\n}\n\n/**\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @param {!Event} e\n * @visibleForTesting\n */\nexport function maybeExpandUrlParamsForTesting(ampdoc, e) {\n  maybeExpandUrlParams(ampdoc, e);\n}\n\n/**\n * Intercept any click on the current document and prevent any\n * linking to an identifier from pushing into the history stack.\n * @visibleForTesting\n */\nexport class Navigation {\n  /**\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @const {!./ampdoc-impl.AmpDoc} */\n    this.ampdoc = ampdoc;\n\n    /** @private @const {!Document|!ShadowRoot} */\n    this.rootNode_ = ampdoc.getRootNode();\n\n    /** @private @const {!./viewport/viewport-interface.ViewportInterface} */\n    this.viewport_ = Services.viewportForDoc(this.ampdoc);\n\n    /** @private @const {!./viewer-interface.ViewerInterface} */\n    this.viewer_ = Services.viewerForDoc(this.ampdoc);\n\n    /** @private @const {!./history-impl.History} */\n    this.history_ = Services.historyForDoc(this.ampdoc);\n\n    /** @private @const {!./platform-impl.Platform} */\n    this.platform_ = Services.platformFor(this.ampdoc.win);\n\n    /** @private @const {boolean} */\n    this.isIosSafari_ = this.platform_.isIos() && this.platform_.isSafari();\n\n    /** @private @const {boolean} */\n    this.isIframed_ =\n      isIframed(this.ampdoc.win) && this.viewer_.isOvertakeHistory();\n\n    /** @private @const {boolean} */\n    this.isEmbed_ =\n      this.rootNode_ != this.ampdoc.getRootNode() || !!this.ampdoc.getParent();\n\n    /** @private @const {boolean} */\n    this.isInABox_ = getMode(this.ampdoc.win).runtime == 'inabox';\n\n    /**\n     * Must use URL parsing scoped to `rootNode_` for correct FIE behavior.\n     * @private @const {!Element|!ShadowRoot}\n     */\n    this.serviceContext_ = /** @type {!Element|!ShadowRoot} */ (\n      this.rootNode_.nodeType == Node.DOCUMENT_NODE\n        ? this.rootNode_.documentElement\n        : this.rootNode_\n    );\n\n    /** @private @const {!function(!Event)|undefined} */\n    this.boundHandle_ = this.handle_.bind(this);\n    this.rootNode_.addEventListener(EVENT_TYPE_CLICK, this.boundHandle_);\n    this.rootNode_.addEventListener(EVENT_TYPE_CONTEXT_MENU, this.boundHandle_);\n    /** @private {boolean} */\n    this.appendExtraParams_ = false;\n    shouldAppendExtraParams(this.ampdoc).then((res) => {\n      this.appendExtraParams_ = res;\n    });\n\n    /** @private {boolean} */\n    this.isTrustedViewer_ = false;\n    /** @private {boolean} */\n    this.isLocalViewer_ = false;\n    Promise.all([\n      this.viewer_.isTrustedViewer(),\n      this.viewer_.getViewerOrigin(),\n    ]).then((values) => {\n      this.isTrustedViewer_ = values[0];\n      this.isLocalViewer_ = isLocalhostOrigin(values[1]);\n    });\n\n    /**\n     * Lazy-generated list of A2A-enabled navigation features.\n     * @private {?Array<string>}\n     */\n    this.a2aFeatures_ = null;\n\n    /**\n     * @type {!PriorityQueue<function(!Element, !Event)>}\n     * @private\n     * @const\n     */\n    this.anchorMutators_ = new PriorityQueue();\n\n    /**\n     * @type {!PriorityQueue<function(string)>}\n     * @private\n     * @const\n     */\n    this.navigateToMutators_ = new PriorityQueue();\n  }\n\n  /**\n   * Registers a handler that performs URL replacement on the href\n   * of an ad click.\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   * @param {!Window} win\n   */\n  static installAnchorClickInterceptor(ampdoc, win) {\n    win.document.documentElement.addEventListener(\n      'click',\n      maybeExpandUrlParams.bind(null, ampdoc),\n      /* capture */ true\n    );\n  }\n\n  /**\n   * Removes all event listeners.\n   */\n  cleanup() {\n    if (this.boundHandle_) {\n      this.rootNode_.removeEventListener(EVENT_TYPE_CLICK, this.boundHandle_);\n      this.rootNode_.removeEventListener(\n        EVENT_TYPE_CONTEXT_MENU,\n        this.boundHandle_\n      );\n    }\n  }\n\n  /**\n   * Opens a new window with the specified target.\n   *\n   * @param {!Window} win A window to use to open a new window.\n   * @param {string} url THe URL to open.\n   * @param {string} target The target for the newly opened window.\n   * @param {boolean} opener Whether or not the new window should have acccess\n   *   to the opener (win).\n   */\n  openWindow(win, url, target, opener) {\n    let options = '';\n    // We don't pass noopener for Chrome since it opens a new window without\n    // tabs. Instead, we remove the opener property from the newly opened\n    // window.\n    // Note: for Safari, we need to use noopener instead of clearing the opener\n    // property.\n    if ((this.platform_.isIos() || !this.platform_.isChrome()) && !opener) {\n      options += 'noopener';\n    }\n\n    const newWin = openWindowDialog(win, url, target, options);\n    // For Chrome, since we cannot use noopener.\n    if (newWin && !opener) {\n      newWin.opener = null;\n    }\n  }\n\n  /**\n   * Navigates a window to a URL.\n   *\n   * If opt_requestedBy matches a feature name in a <meta> tag with attribute\n   * name=\"amp-to-amp-navigation\", then treats the URL as an AMP URL (A2A).\n   *\n   * @param {!Window} win\n   * @param {string} url\n   * @param {string=} opt_requestedBy\n   * @param {!{\n   *   target: (string|undefined),\n   *   opener: (boolean|undefined),\n   * }=} options\n   */\n  navigateTo(win, url, opt_requestedBy, options = {}) {\n    const {opener = false, target = '_top'} = options;\n    url = this.applyNavigateToMutators_(url);\n    const urlService = Services.urlForDoc(this.serviceContext_);\n    if (!urlService.isProtocolValid(url)) {\n      user().error(TAG, 'Cannot navigate to invalid protocol: ' + url);\n      return;\n    }\n\n    userAssert(\n      VALID_TARGETS.includes(target),\n      `Target '${target}' not supported.`\n    );\n\n    // If we're on cache, resolve relative URLs to the publisher (non-cache) origin.\n    const sourceUrl = urlService.getSourceUrl(win.location);\n    url = urlService.resolveRelativeUrl(url, sourceUrl);\n\n    // If we have a target of \"_blank\", we will want to open a new window. A\n    // target of \"_top\" should behave like it would on an anchor tag and\n    // update the URL.\n    if (target == '_blank') {\n      this.openWindow(win, url, target, opener);\n      return;\n    }\n\n    // If this redirect was requested by a feature that opted into A2A,\n    // try to ask the viewer to navigate this AMP URL.\n    if (opt_requestedBy) {\n      if (!this.a2aFeatures_) {\n        this.a2aFeatures_ = this.queryA2AFeatures_();\n      }\n      if (this.a2aFeatures_.includes(opt_requestedBy)) {\n        if (this.navigateToAmpUrl(url, opt_requestedBy)) {\n          return;\n        }\n      }\n    }\n\n    // Otherwise, perform normal behavior of navigating the top frame.\n    win.top.location.href = url;\n  }\n\n  /**\n   * Requests A2A navigation to the given destination. If the viewer does\n   * not support this operation, does nothing.\n   * The URL is assumed to be in AMP Cache format already.\n   * @param {string} url An AMP article URL.\n   * @param {string} requestedBy Informational string about the entity that\n   *     requested the navigation.\n   * @return {boolean} Returns true if navigation message was sent to viewer.\n   *     Otherwise, returns false.\n   */\n  navigateToAmpUrl(url, requestedBy) {\n    if (this.viewer_.hasCapability('a2a')) {\n      this.viewer_.sendMessage(\n        'a2aNavigate',\n        dict({\n          'url': url,\n          'requestedBy': requestedBy,\n        })\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {!Array<string>}\n   * @private\n   */\n  queryA2AFeatures_() {\n    const meta = this.rootNode_.querySelector(\n      'meta[name=\"amp-to-amp-navigation\"]'\n    );\n    if (meta && meta.hasAttribute('content')) {\n      return meta\n        .getAttribute('content')\n        .split(',')\n        .map((s) => s.trim());\n    }\n    return [];\n  }\n\n  /**\n   * Intercept any click on the current document and prevent any\n   * linking to an identifier from pushing into the history stack.\n   *\n   * This also handles custom protocols (e.g. whatsapp://) when iframed\n   * on iOS Safari.\n   *\n   * @param {!Event} e\n   * @private\n   */\n  handle_(e) {\n    if (e.defaultPrevented) {\n      return;\n    }\n    const element = dev().assertElement(\n      e[AMP_CUSTOM_LINKER_TARGET] || e.target\n    );\n    const target = closestAncestorElementBySelector(element, 'A');\n    if (!target || !target.href) {\n      return;\n    }\n    if (e.type == EVENT_TYPE_CLICK) {\n      this.handleClick_(target, e);\n    } else if (e.type == EVENT_TYPE_CONTEXT_MENU) {\n      this.handleContextMenuClick_(target, e);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {!Event} e\n   * @private\n   */\n  handleClick_(element, e) {\n    this.expandVarsForAnchor_(element);\n\n    let toLocation = this.parseUrl_(element.href);\n\n    // Handle AMP-to-AMP navigation and early-outs, if rel=amphtml.\n    if (this.handleA2AClick_(e, element, toLocation)) {\n      return;\n    }\n\n    // Handle navigating to custom protocol and early-outs, if applicable.\n    if (this.handleCustomProtocolClick_(e, element, toLocation)) {\n      return;\n    }\n\n    const fromLocation = this.getLocation_();\n    // Only apply anchor mutator if this is an external navigation.\n    // Note that anchor mutators may theoretically change the navigation\n    // from external to internal, so we re-parse the new targetLocation\n    // in handleNavigation_().\n    if (getHrefMinusHash(toLocation) != getHrefMinusHash(fromLocation)) {\n      this.applyAnchorMutators_(element, e);\n      toLocation = this.parseUrl_(element.href);\n    }\n\n    // Finally, handle normal click-navigation behavior.\n    this.handleNavigation_(e, element, toLocation, fromLocation);\n  }\n\n  /**\n   * Handles \"contextmenu\" event e.g. right mouse button click.\n   * @param {!Element} element\n   * @param {!Event} e\n   * @private\n   */\n  handleContextMenuClick_(element, e) {\n    // TODO(wg-performance): Handle A2A, custom link protocols, and ITP 2.3 mitigation.\n    this.expandVarsForAnchor_(element);\n    this.applyAnchorMutators_(element, e);\n  }\n\n  /**\n   * Apply anchor transformations.\n   * @param {!Element} element\n   * @param {!Event} e\n   */\n  applyAnchorMutators_(element, e) {\n    this.anchorMutators_.forEach((anchorMutator) => {\n      anchorMutator(element, e);\n    });\n  }\n\n  /**\n   * Apply URL transformations for AMP.navigateTo.\n   * @param {string} url\n   * @return {string}\n   */\n  applyNavigateToMutators_(url) {\n    this.navigateToMutators_.forEach((mutator) => {\n      url = mutator(url);\n    });\n    return url;\n  }\n\n  /**\n   * @param {!Element} el\n   * @private\n   */\n  expandVarsForAnchor_(el) {\n    // First check if need to handle external link decoration.\n    let defaultExpandParamsUrl = null;\n    if (this.appendExtraParams_ && !this.isEmbed_) {\n      // Only decorate outgoing link when needed to and is not in FIE.\n      defaultExpandParamsUrl = getExtraParamsUrl(this.ampdoc.win, el);\n    }\n\n    const urlReplacements = Services.urlReplacementsForDoc(el);\n    urlReplacements.maybeExpandLink(el, defaultExpandParamsUrl);\n  }\n\n  /**\n   * Handles clicking on a custom protocol link.\n   * Returns true if the navigation was handled. Otherwise, returns false.\n   * @param {!Event} e\n   * @param {!Element} element\n   * @param {!Location} location\n   * @return {boolean}\n   * @private\n   */\n  handleCustomProtocolClick_(e, element, location) {\n    // Handle custom protocols only if the document is iframed.\n    if (!this.isIframed_) {\n      return false;\n    }\n\n    /** @const {!Window} */\n    const win = getWin(element);\n    const url = element.href;\n    const {protocol} = location;\n\n    // On Safari iOS, custom protocol links will fail to open apps when the\n    // document is iframed - in order to go around this, we set the top.location\n    // to the custom protocol href.\n    const isFTP = protocol == 'ftp:';\n\n    // In case of FTP Links in embedded documents always open then in _blank.\n    if (isFTP) {\n      openWindowDialog(win, url, '_blank');\n      e.preventDefault();\n      return true;\n    }\n\n    const isNormalProtocol = /^(https?|mailto):$/.test(protocol);\n    if (this.isIosSafari_ && !isNormalProtocol) {\n      openWindowDialog(win, url, '_top');\n      // Without preventing default the page would should an alert error twice\n      // in the case where there's no app to handle the custom protocol.\n      e.preventDefault();\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Handles clicking on an AMP link.\n   * Returns true if the navigation was handled. Otherwise, returns false.\n   * @param {!Event} e\n   * @param {!Element} element\n   * @param {!Location} location\n   * @return {boolean}\n   * @private\n   */\n  handleA2AClick_(e, element, location) {\n    if (!element.hasAttribute('rel')) {\n      return false;\n    }\n    const relations = element\n      .getAttribute('rel')\n      .split(' ')\n      .map((s) => s.trim());\n    if (!relations.includes('amphtml')) {\n      return false;\n    }\n    // The viewer may not support the capability for navigating AMP links.\n    if (this.navigateToAmpUrl(location.href, '<a rel=amphtml>')) {\n      e.preventDefault();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handles click-navigation on a non-A2A, standard-protocol link.\n   * @param {!Event} e\n   * @param {!Element} element\n   * @param {!Location} toLocation\n   * @param {!Location} fromLocation\n   * @private\n   */\n  handleNavigation_(e, element, toLocation, fromLocation) {\n    const to = getHrefMinusHash(toLocation);\n    const from = getHrefMinusHash(fromLocation);\n\n    // Handle same-page (hash) navigation separately.\n    if (toLocation.hash && to == from) {\n      this.handleHashNavigation_(e, toLocation, fromLocation);\n    } else {\n      // Otherwise, this is an other-page (external) navigation.\n      let target = (element.getAttribute('target') || '').toLowerCase();\n\n      if (this.isEmbed_ || this.isInABox_) {\n        // Target in the embed must be either _top or _blank (default).\n        if (target != '_top' && target != '_blank') {\n          target = '_blank';\n          element.setAttribute('target', target);\n        }\n      }\n\n      // ITP 2.3 mitigation. See https://github.com/ampproject/amphtml/issues/25179.\n      const {win} = this.ampdoc;\n      const platform = Services.platformFor(win);\n      const viewer = Services.viewerForDoc(element);\n      if (\n        fromLocation.search &&\n        platform.isSafari() &&\n        platform.getMajorVersion() >= 13 &&\n        viewer.isProxyOrigin() &&\n        viewer.isEmbedded()\n      ) {\n        this.removeViewerQueryBeforeNavigation_(win, fromLocation, target);\n      }\n\n      if (this.viewerInterceptsNavigation(to, 'intercept_click')) {\n        e.preventDefault();\n      }\n    }\n  }\n\n  /**\n   * Temporarily remove viewer query params from iframe (e.g. amp_js_v, usqp)\n   * to prevent document.referrer from being reduced to eTLD+1 (e.g. ampproject.org).\n   * @param {!Window} win\n   * @param {!Location} fromLocation\n   * @param {string} target\n   * @private\n   */\n  removeViewerQueryBeforeNavigation_(win, fromLocation, target) {\n    dev().info(\n      TAG,\n      'Removing iframe query string before navigation:',\n      fromLocation.search\n    );\n    const original = fromLocation.href;\n    const noQuery = `${fromLocation.origin}${fromLocation.pathname}${fromLocation.hash}`;\n    win.history.replaceState(null, '', noQuery);\n\n    const restoreQuery = () => {\n      const currentHref = win.location.href;\n      if (currentHref == noQuery) {\n        dev().info(TAG, 'Restored iframe URL with query string:', original);\n        win.history.replaceState(null, '', original);\n      } else {\n        dev().error(TAG, 'Unexpected iframe URL change:', currentHref, noQuery);\n      }\n    };\n\n    // For blank_, restore query params after the new page opens.\n    if (target === '_blank') {\n      win.setTimeout(restoreQuery, 0);\n    } else {\n      // For _top etc., wait until page is restored from page cache (bfcache).\n      // https://webkit.org/blog/516/webkit-page-cache-ii-the-unload-event/\n      win.addEventListener('pageshow', function onPageShow(e) {\n        if (e.persisted) {\n          restoreQuery();\n          win.removeEventListener('pageshow', onPageShow);\n        }\n      });\n    }\n  }\n\n  /**\n   * Handles clicking on an internal link\n   * @param {!Event} e\n   * @param {!Location} toLocation\n   * @param {!Location} fromLocation\n   * @private\n   */\n  handleHashNavigation_(e, toLocation, fromLocation) {\n    // We prevent default so that the current click does not push\n    // into the history stack as this messes up the external documents\n    // history which contains the amp document.\n    e.preventDefault();\n\n    // For an embed, do not perform scrolling or global history push - both have\n    // significant UX and browser problems.\n    if (this.isEmbed_) {\n      return;\n    }\n\n    // Look for the referenced element.\n    const hash = toLocation.hash.slice(1);\n    let el = null;\n    if (hash) {\n      const escapedHash = escapeCssSelectorIdent(hash);\n      el =\n        this.rootNode_.getElementById(hash) ||\n        // Fallback to anchor[name] if element with id is not found.\n        // Linking to an anchor element with name is obsolete in html5.\n        this.rootNode_./*OK*/ querySelector(`a[name=\"${escapedHash}\"]`);\n    }\n\n    // If possible do update the URL with the hash. As explained above\n    // we do `replace` to avoid messing with the container's history.\n    if (toLocation.hash != fromLocation.hash) {\n      this.history_.replaceStateForTarget(toLocation.hash).then(() => {\n        this.scrollToElement_(el, hash);\n      });\n    } else {\n      // If the hash did not update just scroll to the element.\n      this.scrollToElement_(el, hash);\n    }\n  }\n\n  /**\n   * @param {function(!Element, !Event)} callback\n   * @param {number} priority\n   */\n  registerAnchorMutator(callback, priority) {\n    this.anchorMutators_.enqueue(callback, priority);\n  }\n\n  /**\n   * @param {function(string)} callback\n   * @param {number} priority\n   */\n  registerNavigateToMutator(callback, priority) {\n    this.navigateToMutators_.enqueue(callback, priority);\n  }\n\n  /**\n   * Scrolls the page to the given element.\n   * @param {?Element} elem\n   * @param {string} hash\n   * @private\n   */\n  scrollToElement_(elem, hash) {\n    // Scroll to the element if found.\n    if (elem) {\n      // The first call to scrollIntoView overrides browsers' default scrolling\n      // behavior. The second call insides setTimeout allows us to scroll to\n      // that element properly. Without doing this, the viewport will not catch\n      // the updated scroll position on iOS Safari and hence calculate the wrong\n      // scrollTop for the scrollbar jumping the user back to the top for\n      // failing to calculate the new jumped offset. Without the first call\n      // there will be a visual jump due to browser scroll. See\n      // https://github.com/ampproject/amphtml/issues/5334 for more details.\n      this.viewport_./*OK*/ scrollIntoView(elem);\n      Services.timerFor(this.ampdoc.win).delay(\n        () => this.viewport_./*OK*/ scrollIntoView(dev().assertElement(elem)),\n        1\n      );\n    } else {\n      dev().warn(\n        TAG,\n        `failed to find element with id=${hash} or a[name=${hash}]`\n      );\n    }\n  }\n\n  /**\n   * @param {string} url\n   * @return {!Location}\n   * @private\n   */\n  parseUrl_(url) {\n    return Services.urlForDoc(this.serviceContext_).parse(url);\n  }\n\n  /**\n   * @return {!Location}\n   * @private\n   */\n  getLocation_() {\n    // In test mode, we're not able to properly fix the anchor tag's base URL.\n    // So, we have to use the (mocked) window's location instead.\n    const baseHref =\n      getMode().test && !this.isEmbed_ ? this.ampdoc.win.location.href : '';\n    return this.parseUrl_(baseHref);\n  }\n\n  /**\n   * Requests navigation through a Viewer to the given destination.\n   *\n   * This function only proceeds if:\n   * 1. The viewer supports the 'interceptNavigation' capability.\n   * 2. The contained AMP doc has 'opted in' via including the 'allow-navigation-interception'\n   * attribute on the <html> tag.\n   * 3. The viewer is trusted or from localhost.\n   *\n   * @param {string} url A URL.\n   * @param {string} requestedBy Informational string about the entity that\n   *     requested the navigation.\n   * @return {boolean} Returns true if navigation message was sent to viewer.\n   *     Otherwise, returns false.\n   */\n  viewerInterceptsNavigation(url, requestedBy) {\n    const viewerHasCapability = this.viewer_.hasCapability(\n      'interceptNavigation'\n    );\n    const docOptedIn =\n      this.ampdoc.isSingleDoc() &&\n      this.ampdoc\n        .getRootNode()\n        .documentElement.hasAttribute('allow-navigation-interception');\n\n    if (\n      !viewerHasCapability ||\n      !docOptedIn ||\n      !(this.isTrustedViewer_ || this.isLocalViewer_)\n    ) {\n      return false;\n    }\n\n    this.viewer_.sendMessage(\n      'navigateTo',\n      dict({\n        'url': url,\n        'requestedBy': requestedBy,\n      })\n    );\n    return true;\n  }\n}\n\n/**\n * Handle click on links and replace variables in the click URL.\n * The function changes the actual href value and stores the\n * template in the ORIGINAL_HREF_ATTRIBUTE attribute\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @param {!Event} e\n */\nfunction maybeExpandUrlParams(ampdoc, e) {\n  const target = closestAncestorElementBySelector(\n    dev().assertElement(e.target),\n    'A'\n  );\n  if (!target || !target.href) {\n    // Not a click on a link.\n    return;\n  }\n  const hrefToExpand =\n    target.getAttribute(ORIG_HREF_ATTRIBUTE) || target.getAttribute('href');\n  if (!hrefToExpand) {\n    return;\n  }\n  const vars = {\n    'CLICK_X': () => {\n      return e.pageX;\n    },\n    'CLICK_Y': () => {\n      return e.pageY;\n    },\n  };\n  const newHref = Services.urlReplacementsForDoc(target).expandUrlSync(\n    hrefToExpand,\n    vars,\n    /* opt_allowlist */ {\n      // For now we only allow to replace the click location vars\n      // and nothing else.\n      // NOTE: Addition to this allowlist requires additional review.\n      'CLICK_X': true,\n      'CLICK_Y': true,\n    }\n  );\n  if (newHref != hrefToExpand) {\n    // Store original value so that later clicks can be processed with\n    // freshest values.\n    if (!target.getAttribute(ORIG_HREF_ATTRIBUTE)) {\n      target.setAttribute(ORIG_HREF_ATTRIBUTE, hrefToExpand);\n    }\n    target.setAttribute('href', newHref);\n  }\n}\n\n/**\n * Returns href without hash.\n * @param {!Location} location\n * @return {string}\n */\nfunction getHrefMinusHash(location) {\n  return `${location.origin}${location.pathname}${location.search}`;\n}\n", "import {devAssert} from '#utils/log';\n\n/**\n * Maintains state in between different AdSense slots on the same page. This\n * class is used primarily to generate state-dependent ad request URL\n * parameters.\n */\nexport class AdsenseSharedState {\n  /**\n   * Creates an instance of AdsenseSharedState.\n   */\n  constructor() {\n    /** @private {!Array<!{id: string, format: string, client: string, slotname: (string|undefined)}>} */\n    this.previousSlots_ = [];\n  }\n\n  /**\n   * Registers a new slot with the given format and client, and identified by\n   * the given id.\n   * Returns an object containing the state-dependent ad request URL parameters\n   * relevant for this slot.\n   * @param {string} format Format of the slot of form WxH.\n   * @param {string} id A unique identifier for the slot.\n   * @param {string} client The slot's ad client ID.\n   * @param {string|undefined} slotname The slot's name if provided.\n   * @return {!{prevFmts: string, prevSlotnames: string, pv: number}}\n   * */\n  addNewSlot(format, id, client, slotname) {\n    const result = {pv: 2, prevFmts: '', prevSlotnames: ''};\n    this.previousSlots_.forEach((slot) => {\n      devAssert(slot.id != id);\n      result.prevFmts += (result.prevFmts ? ',' : '') + slot.format;\n      if (slot.slotname) {\n        result.prevSlotnames +=\n          (result.prevSlotnames ? ',' : '') + slot.slotname;\n      }\n      if (slot.client == client) {\n        result.pv = 1;\n      }\n    });\n    this.previousSlots_.push({id, format, client, slotname});\n    return result;\n  }\n\n  /**\n   * Removes the slot with the given ID.\n   * @param {string} id The ID of the slot to be removed.\n   */\n  removeSlot(id) {\n    this.previousSlots_ = this.previousSlots_.filter((slot) => {\n      return slot.id != id;\n    });\n  }\n\n  /**\n   * Resets to initial state. Currently used only in testing.\n   * @visibleForTesting\n   */\n  reset() {\n    this.previousSlots_ = [];\n  }\n}\n", "/**\n * @fileoverview CoRe responsive functions that are shared with Google tag code.\n * This file must not depend on any AMP-specific libraries, e.g. log. If\n * there is a need to pass any things for logging/reporting - the values\n * must be returned from exported functions.\n */\n\n/**\n * Layout types for Content Recommendation responsive.\n * @enum {string}\n */\nexport const LayoutType = {\n  IMAGE_STACKED: 'image_stacked',\n  IMAGE_SIDEBYSIDE: 'image_sidebyside',\n  MOBILE_BANNER_IMAGE_SIDEBYSIDE: 'mobile_banner_image_sidebyside',\n  PUB_CONTROL_IMAGE_STACKED: 'pub_control_image_stacked',\n  PUB_CONTROL_IMAGE_SIDEBYSIDE: 'pub_control_image_sidebyside',\n  PUB_CONTROL_IMAGE_CARD_STACKED: 'pub_control_image_card_stacked',\n  PUB_CONTROL_IMAGE_CARD_SIDEBYSIDE: 'pub_control_image_card_sidebyside',\n  PUB_CONTROL_TEXT: 'pub_control_text',\n  PUB_CONTROL_TEXT_CARD: 'pub_control_text_card',\n  PEDESTAL: 'pedestal',\n};\n\n/**\n * The external name of Core Pub Control UI pub vars, which are used by\n * publishers directly.\n * @enum {string}\n */\nexport const ExternalCorePubVars = {\n  UI_TYPE: 'data-matched-content-ui-type',\n  COLUMNS_NUM: 'data-matched-content-columns-num',\n  ROWS_NUM: 'data-matched-content-rows-num',\n};\n\n/**\n * Minimum width of desktop responsive slot in CoRe responsive. We have\n * different logic for desktop and mobile slots. Any slot width equal or larger\n * than this will be adapted to the desktop logic while any slot width smaller\n * than this will be adapted to the mobile logic.\n * @const {number}\n */\nexport const MIN_PUB_CONTROL_WIDTH_OF_DESKTOP = 468;\n\n/**\n * The px padding.\n * @const {number}\n */\nconst PADDING = 8;\n\n/**\n * The maximum dimension for CoRe Pub Control UI layout.\n * @const {number}\n */\nconst MAX_PUB_CONTROL_DIMENSION = 1500;\n\n/**\n * The layout - aspect ratio map to calculate the size of each content\n * recommendation.\n * image_stacked: https://screenshot.googleplex.com/74S09gFO82b\n * image_sidebyside: https://screenshot.googleplex.com/FUgDSDvwcVo\n * image_card_stacked: https://screenshot.googleplex.com/vedjTonVaDT\n * image_card_sidebyside: https://screenshot.googleplex.com/v3qOZY61tFm\n * text: https://screenshot.googleplex.com/taeRQn7DUhq\n * text_card: https://screenshot.googleplex.com/ur45m96Tv0D\n * @const {!Object<!LayoutType, number>}\n */\nconst LAYOUT_ASPECT_RATIO_MAP = {\n  [LayoutType.IMAGE_STACKED]: 1 / 1.91,\n  [LayoutType.IMAGE_SIDEBYSIDE]: 1 / 3.82,\n  [LayoutType.MOBILE_BANNER_IMAGE_SIDEBYSIDE]: 1 / 3.82,\n  [LayoutType.PUB_CONTROL_IMAGE_STACKED]: 1 / 1.91,\n  [LayoutType.PUB_CONTROL_IMAGE_SIDEBYSIDE]: 1 / 3.82,\n  [LayoutType.PUB_CONTROL_IMAGE_CARD_STACKED]: 1 / 1.91,\n  [LayoutType.PUB_CONTROL_IMAGE_CARD_SIDEBYSIDE]: 1 / 3.74,\n  [LayoutType.PUB_CONTROL_TEXT]: 0,\n  [LayoutType.PUB_CONTROL_TEXT_CARD]: 0,\n};\n\n/**\n * The layout - height map to evaluate the height of title + url. Notice, this\n * mainly works only for stacked mode. In sidebyside mode, this height is\n * decided by the height of image. It equals to:\n * FontSize * LineHeight * NumTitle + Padding * 2 + UrlBoxHeight.\n * image_stacked: https://screenshot.googleplex.com/74S09gFO82b\n * image_card_stacked: https://screenshot.googleplex.com/vedjTonVaDT\n * @const {!Object<!LayoutType, number>}\n */\nconst LAYOUT_TEXT_HEIGHT_MAP = {\n  [LayoutType.IMAGE_STACKED]: 80,\n  [LayoutType.IMAGE_SIDEBYSIDE]: 0,\n  [LayoutType.MOBILE_BANNER_IMAGE_SIDEBYSIDE]: 0,\n  [LayoutType.PUB_CONTROL_IMAGE_STACKED]: 80,\n  [LayoutType.PUB_CONTROL_IMAGE_SIDEBYSIDE]: 0,\n  [LayoutType.PUB_CONTROL_IMAGE_CARD_STACKED]: 85,\n  [LayoutType.PUB_CONTROL_IMAGE_CARD_SIDEBYSIDE]: 0,\n  [LayoutType.PUB_CONTROL_TEXT]: 80,\n  [LayoutType.PUB_CONTROL_TEXT_CARD]: 80,\n};\n\n/**\n * The layout - minimal width map for pub control UIs. We will adjust column\n * numbers according to minimal width.\n * @const {!Object<!LayoutType, number>}\n */\nconst LAYOUT_AD_WIDTH_MAP = {\n  [LayoutType.PUB_CONTROL_IMAGE_STACKED]: 100,\n  [LayoutType.PUB_CONTROL_IMAGE_SIDEBYSIDE]: 200,\n  [LayoutType.PUB_CONTROL_IMAGE_CARD_STACKED]: 150,\n  [LayoutType.PUB_CONTROL_IMAGE_CARD_SIDEBYSIDE]: 250,\n  [LayoutType.PUB_CONTROL_TEXT]: 100,\n  [LayoutType.PUB_CONTROL_TEXT_CARD]: 150,\n};\n\nconst PUB_CONTROL_LAYOUT_PREFIX = 'pub_control_';\n\nconst PUB_CONTROL_EXAMPLE =\n  '\\n ' +\n  'data-matched-content-rows-num=\"4,2\"\\n' +\n  'data-matched-content-columns-num=\"1,6\"\\n' +\n  'data-matched-content-ui-type=\"image_stacked,image_card_sidebyside\"';\n\n/**\n * Configuration of content recommendation unit for current slot. This is the\n * result of running CoRe responsive logic and values from this config\n * will be used in ad request.\n * @record\n */\nexport class CoReConfig {\n  /** see comment on class */\n  constructor() {\n    /** @const {number} */\n    this.slotWidth;\n\n    /** @const {number} */\n    this.slotHeight;\n\n    /**\n     * Number of rows to return in matched content unit. Corresponds to\n     * \"cr_col\" url param.\n     * @const {number}\n     */\n    this.numberOfRows;\n\n    /**\n     * Number of columns to return in matched content unit. Corresponds to\n     * \"cr_row\" url param.\n     * @const {number}\n     */\n    this.numberOfColumns;\n\n    /**\n     * Layout type to use for currect matched content slot. Corresponds to\n     * \"crui\" url param.\n     * @const {!LayoutType}\n     */\n    this.layoutType;\n\n    /**\n     * If not null then it contains an error that some of the provided\n     * parameters are incorrect. The error is intended to be displayed to\n     * developers who setup ad tag. For example it can displayed in console\n     * or thrown as js error. If validation is set other params should be\n     * ignored.\n     * @const {string|undefined}\n     */\n    this.validationError;\n  }\n}\n\n/**\n * @param {number} availableWidth\n * @param {boolean} isMobile\n * @return {!CoReConfig}\n */\nexport function getAutoConfig(availableWidth, isMobile) {\n  if (availableWidth < MIN_PUB_CONTROL_WIDTH_OF_DESKTOP) {\n    if (isMobile) {\n      const layoutType = LayoutType.MOBILE_BANNER_IMAGE_SIDEBYSIDE;\n      const numColumns = 1;\n      const numRows = 12;\n      const slotSize = getLargerAdOneColumnSidebysideSize(\n        availableWidth,\n        layoutType,\n        numColumns,\n        numRows\n      );\n      return {\n        slotWidth: slotSize.width,\n        slotHeight: slotSize.height,\n        numberOfColumns: numColumns,\n        numberOfRows: numRows,\n        layoutType,\n      };\n    } else {\n      const slotSize = getAutoSlotSize(availableWidth);\n      return {\n        slotWidth: slotSize.width,\n        slotHeight: slotSize.height,\n        numberOfColumns: 1,\n        numberOfRows: 13,\n        layoutType: LayoutType.IMAGE_SIDEBYSIDE,\n      };\n    }\n  } else {\n    const slotSize = getAutoSlotSize(availableWidth);\n    return {\n      slotWidth: slotSize.width,\n      slotHeight: slotSize.height,\n      numberOfColumns: 4,\n      numberOfRows: 2,\n      layoutType: LayoutType.IMAGE_STACKED,\n    };\n  }\n}\n\n/**\n * Parameters for matched content unit provided pub publisher. These\n * parameters are read from ad tag. These are unparsed parameters so they\n * might be invalid.\n *\n * @typedef {{\n *   numberOfRows: (string|undefined),\n *   numberOfColumns: (string|undefined),\n *   layoutType: (string|undefined),\n * }}\n */\nexport let RawPublisherControlParams;\n\n/**\n * Get CoRe Pub Control UI Sizes.\n * @param {number} availableWidth\n * @param {!RawPublisherControlParams} rawPubControlParams\n * @return {!CoReConfig}\n */\nexport function getPubControlConfig(availableWidth, rawPubControlParams) {\n  const pubParams = validateAndParsePubControlParams(rawPubControlParams);\n  if (pubParams.validationError) {\n    return {\n      slotWidth: 0,\n      slotHeight: 0,\n      numberOfColumns: 0,\n      numberOfRows: 0,\n      // set any layout, doesn't matter because it's error and it won't be used\n      // anyway\n      layoutType: LayoutType.IMAGE_STACKED,\n      validationError: pubParams.validationError,\n    };\n  }\n\n  let index;\n  if (\n    pubParams.layoutTypes.length === 2 &&\n    availableWidth >= MIN_PUB_CONTROL_WIDTH_OF_DESKTOP\n  ) {\n    // Publisher provided settings for both mobile and desktop and screen is\n    // wide - use desktop.\n    index = 1;\n  } else {\n    // Either publisher provided only one setting or screen is small so use\n    // first setting.\n    index = 0;\n  }\n\n  const layout = convertToPubControlLayoutType(pubParams.layoutTypes[index]);\n  const numColumns = getOptimizedNumColumns(\n    availableWidth,\n    pubParams.numberOfColumns[index],\n    layout\n  );\n  const numRows = pubParams.numberOfRows[index];\n\n  const slotSize = getPubControlSlotSize(\n    availableWidth,\n    numColumns,\n    numRows,\n    layout\n  );\n  if (slotSize.sizeError) {\n    return {\n      slotWidth: 0,\n      slotHeight: 0,\n      numberOfColumns: 0,\n      numberOfRows: 0,\n      layoutType: layout,\n      validationError: slotSize.sizeError,\n    };\n  }\n  return {\n    slotWidth: slotSize.width,\n    slotHeight: slotSize.height,\n    numberOfColumns: numColumns,\n    numberOfRows: numRows,\n    layoutType: layout,\n  };\n}\n\n/**\n * Validates and parses parameters that publisher specified on the ad tag via\n * data-matched-content-foo attributes.\n * @param {!RawPublisherControlParams} params\n * @return {{\n *   numberOfRows: (!Array<number>|undefined),\n *   numberOfColumns: (!Array<number>|undefined),\n *   layoutTypes: (!Array<!LayoutType>|undefined),\n *   validationError: (string|undefined),\n * }} parsed params or null if they were invalid.\n */\nfunction validateAndParsePubControlParams(params) {\n  // Verify that either all three parameters passed or none.\n  let numberOfPubControlParams = 0;\n  if (params.layoutType) {\n    numberOfPubControlParams++;\n  }\n  if (params.numberOfColumns) {\n    numberOfPubControlParams++;\n  }\n  if (params.numberOfRows) {\n    numberOfPubControlParams++;\n  }\n  if (numberOfPubControlParams < 3) {\n    return {\n      validationError: `Tags ${ExternalCorePubVars.UI_TYPE}, ${ExternalCorePubVars.COLUMNS_NUM} and ${ExternalCorePubVars.ROWS_NUM} should be set together.`,\n    };\n  }\n\n  const /** !Array<!LayoutType> */ layoutTypes = params.layoutType.split(',');\n  const /** !Array<string> */ numberOfRows = params.numberOfRows.split(',');\n  const /** !Array<string> */ numberOfColumns =\n      params.numberOfColumns.split(',');\n\n  // Check all params have same length.\n  if (\n    layoutTypes.length !== numberOfRows.length ||\n    layoutTypes.length !== numberOfColumns.length\n  ) {\n    return {\n      validationError: `Lengths of parameters ${ExternalCorePubVars.UI_TYPE}, ${ExternalCorePubVars.COLUMNS_NUM} and ${ExternalCorePubVars.ROWS_NUM} must match. Example: ${PUB_CONTROL_EXAMPLE}`,\n    };\n  }\n\n  if (layoutTypes.length > 2) {\n    return {\n      validationError:\n        `The parameter length of attribute ${ExternalCorePubVars.UI_TYPE}, ${ExternalCorePubVars.COLUMNS_NUM} and ${ExternalCorePubVars.ROWS_NUM} is too long. At most 2 parameters for each ` +\n        'attribute are needed: one for mobile and one for desktop, while ' +\n        `you are providing ${layoutTypes.length} parameters. Example: ${PUB_CONTROL_EXAMPLE}.`,\n    };\n  }\n\n  const /** !Array<number> */ numberOfRowsAsNumbers = [];\n  const /** !Array<number> */ numberOfColumnsAsNumbers = [];\n  for (let i = 0; i < layoutTypes.length; i++) {\n    const row = Number(numberOfRows[i]);\n    if (isNaN(row) || row === 0) {\n      return {\n        validationError: `Wrong value '${numberOfRows[i]}' for ${ExternalCorePubVars.ROWS_NUM}.`,\n      };\n    }\n    numberOfRowsAsNumbers.push(row);\n    const col = Number(numberOfColumns[i]);\n    if (isNaN(col) || col === 0) {\n      return {\n        validationError: `Wrong value '${numberOfColumns[i]}' for ${ExternalCorePubVars.COLUMNS_NUM}.`,\n      };\n    }\n    numberOfColumnsAsNumbers.push(col);\n  }\n  return {\n    numberOfRows: numberOfRowsAsNumbers,\n    numberOfColumns: numberOfColumnsAsNumbers,\n    layoutTypes,\n  };\n}\n\n/**\n * @param {number} availableWidth\n * @return {{width: number, height: number}}\n */\nfunction getAutoSlotSize(availableWidth) {\n  if (availableWidth >= 1200) {\n    return {width: 1200, height: 600};\n  } else if (availableWidth >= 850) {\n    return {width: availableWidth, height: Math.floor(availableWidth * 0.5)};\n  } else if (availableWidth >= 550) {\n    return {width: availableWidth, height: Math.floor(availableWidth * 0.6)};\n  } else if (availableWidth >= 468) {\n    return {width: availableWidth, height: Math.floor(availableWidth * 0.7)};\n  } else {\n    return {width: availableWidth, height: Math.floor(availableWidth * 3.44)};\n  }\n}\n\n/**\n * Calculate the ad height according to the layout and ad width.\n * @param {number} adWidth\n * @param {!LayoutType} layout\n * @return {number}\n */\nfunction getAdHeight(adWidth, layout) {\n  return (\n    adWidth * LAYOUT_ASPECT_RATIO_MAP[layout] + LAYOUT_TEXT_HEIGHT_MAP[layout]\n  );\n}\n\n/**\n * Calculate the core width according to the slot width and number\n * of columns.\n * @param {number} slotWidth\n * @param {number} numColumns\n * @return {number}\n */\nfunction getAdWidth(slotWidth, numColumns) {\n  return (slotWidth - PADDING * numColumns - PADDING) / numColumns;\n}\n\n/**\n * Calculate the core slot height according to the core height and\n * number of rows.\n * @param {number} adHeight\n * @param {number} numRows\n * @return {number}\n */\nfunction getSlotHeight(adHeight, numRows) {\n  return Math.floor(adHeight * numRows + PADDING * numRows + PADDING);\n}\n\n/**\n * Calculate the slot size for Pub Control UI.\n * @param {number} slotWidth\n * @param {number} numColumns\n * @param {number} numRows\n * @param {!LayoutType} layout\n * @return {{\n *   width: number,\n *   height: number,\n *   sizeError: (string|undefined),\n * }}\n */\nfunction getPubControlSlotSize(slotWidth, numColumns, numRows, layout) {\n  const adWidth = getAdWidth(slotWidth, numColumns);\n  const adHeight = getAdHeight(adWidth, layout);\n  const slotHeight = getSlotHeight(adHeight, numRows);\n\n  if (slotWidth > MAX_PUB_CONTROL_DIMENSION) {\n    return {\n      width: 0,\n      height: 0,\n      sizeError: 'Calculated slot width is too large: ' + slotWidth,\n    };\n  }\n  if (slotHeight > MAX_PUB_CONTROL_DIMENSION) {\n    return {\n      width: 0,\n      height: 0,\n      sizeError: 'Calculated slot height is too large: ' + slotHeight,\n    };\n  }\n\n  return {width: slotWidth, height: slotHeight};\n}\n\n/**\n * @param {number} availableWidth\n * @param {!LayoutType} layoutType\n * @param {number} numColumns\n * @param {number} numRows\n * @return {{width: number, height: number}}\n */\nfunction getLargerAdOneColumnSidebysideSize(\n  availableWidth,\n  layoutType,\n  numColumns,\n  numRows\n) {\n  const adWidth = getAdWidth(availableWidth, numColumns);\n  // The title height of first ad slot 70px, should be consistent with what we\n  // define in rendering js.\n  const firstAdHeight = Math.floor(adWidth / 1.91 + 70);\n  const restAdHeight = getAdHeight(adWidth, layoutType);\n  const slotHeight = firstAdHeight + getSlotHeight(restAdHeight, numRows - 1);\n\n  return {width: availableWidth, height: slotHeight};\n}\n\n/**\n * Adds 'pub_control_' prefix to Pub Control UI layout name if the layout name\n * does not have 'pub_control_' prefix. This is to differentiate Pub Control UI\n * from responsive auto UI.\n * @param {!LayoutType} layout\n * @return {!LayoutType} the new layout name with 'pub_control_' prefix.\n */\nfunction convertToPubControlLayoutType(layout) {\n  return layout.indexOf(PUB_CONTROL_LAYOUT_PREFIX) === 0\n    ? layout\n    : /** @type {!LayoutType} */ (PUB_CONTROL_LAYOUT_PREFIX + layout);\n}\n\n/**\n * Gets optimized number of columns. If the publisher specified value of\n * 'data-matched-content-columns-num' is too large, it may result in a very\n * small ad width and broken layout. We will adjust the column number to ensure\n * that ad width is larger than certain threshold and print out some warning\n * message to the console.\n * @param {number} availableWidth\n * @param {number} numColumns\n * @param {!LayoutType} layout\n * @return {number} optimized number of columns\n */\nfunction getOptimizedNumColumns(availableWidth, numColumns, layout) {\n  const minWidth = LAYOUT_AD_WIDTH_MAP[layout];\n  let optimizedNumColumns = numColumns;\n  while (\n    availableWidth / optimizedNumColumns < minWidth &&\n    optimizedNumColumns > 1\n  ) {\n    optimizedNumColumns--;\n  }\n  return optimizedNumColumns;\n}\n", "import {\n  ExternalCorePubVars,\n  MIN_PUB_CONTROL_WIDTH_OF_DESKTOP,\n  getAutoConfig,\n  getPubControlConfig,\n} from './a4a/shared/content-recommendation';\nimport {user} from '#utils/log';\n\n/**\n * Approved height for AdSense full-width responsive ads.\n * @const {number}\n */\nexport const ADSENSE_RSPV_ALLOWED_HEIGHT = 320;\n\n/**\n * The attribute value for AdSense data-auto-format tag.\n * For full-width responsive ad: data-auto-format='rspv'.\n * For full-width matched content responsive ad: data-auto-format='mcrspv'\n * @const {string}\n */\nexport const ADSENSE_RSPV_TAG = 'rspv';\nexport const ADSENSE_MCRSPV_TAG = 'mcrspv';\n\n/**\n * Given the amp-ad data attribute containing the multi-size dimensions, and a\n * set of primary dimensions, this function will return all valid multi-size\n * [width, height] pairs in an array.\n *\n * @param {string} multiSizeDataStr The amp-ad data attribute containing the\n *   multi-size dimensions.\n * @param {number} primaryWidth The primary width of the ad slot.\n * @param {number} primaryHeight The primary height of the ad slot.\n * @param {boolean} multiSizeValidation A flag that if set to true will enforce\n *   the rule that ensures multi-size dimensions are no less than 2/3rds of\n *   their primary dimension's counterpart.\n * @param {boolean=} isFluidPrimary Indicates whether the ad slot's primary\n *   size is fluid.\n * @return {?Array<!Array<number>>} An array of dimensions.\n */\nexport function getMultiSizeDimensions(\n  multiSizeDataStr,\n  primaryWidth,\n  primaryHeight,\n  multiSizeValidation,\n  isFluidPrimary = false\n) {\n  const dimensions = [];\n  const arrayOfSizeStrs = multiSizeDataStr.split(',');\n\n  for (let i = 0; i < arrayOfSizeStrs.length; i++) {\n    const sizeStr = arrayOfSizeStrs[i];\n    if (sizeStr.toLowerCase() == 'fluid') {\n      // Fluid dummy sizes should be appended to the front of the request\n      // parameter, so they must be handled elsewhere.\n      continue;\n    }\n    const size = sizeStr.split('x');\n\n    // Make sure that each size is specified in the form WxH.\n    if (size.length != 2) {\n      user().error('AMP-AD', `Invalid multi-size data format '${sizeStr}'.`);\n      continue;\n    }\n\n    const width = Number(size[0]);\n    const height = Number(size[1]);\n\n    // Make sure that both dimensions given are positive numbers.\n    if (\n      !validateDimensions(\n        width,\n        height,\n        (w) => isNaN(w) || w <= 0,\n        (h) => isNaN(h) || h <= 0,\n        (badParams) =>\n          badParams\n            .map(\n              (badParam) =>\n                `Invalid ${badParam.dim} of ${badParam.val} ` +\n                'given for secondary size.'\n            )\n            .join(' ')\n      )\n    ) {\n      continue;\n    }\n\n    // Check that secondary size is not larger than primary size.\n    if (\n      !isFluidPrimary &&\n      !validateDimensions(\n        width,\n        height,\n        (w) => w > primaryWidth,\n        (h) => h > primaryHeight,\n        (badParams) =>\n          badParams\n            .map(\n              (badParam) =>\n                `Secondary ${badParam.dim} ${badParam.val} ` +\n                `can't be larger than the primary ${badParam.dim}.`\n            )\n            .join(' ')\n      )\n    ) {\n      continue;\n    }\n\n    // Check that if multi-size-validation is on, that the secondary sizes\n    // are at least minRatio of the primary size.\n    if (multiSizeValidation) {\n      // The minimum ratio of each secondary dimension to its corresponding\n      // primary dimension.\n      const minRatio = 2 / 3;\n      const minWidth = minRatio * primaryWidth;\n      const minHeight = minRatio * primaryHeight;\n      if (\n        !validateDimensions(\n          width,\n          height,\n          (w) => w < minWidth,\n          (h) => h < minHeight,\n          (badParams) =>\n            badParams\n              .map(\n                (badParam) =>\n                  `Secondary ${badParam.dim} ${badParam.val} is ` +\n                  `smaller than 2/3rds of the primary ${badParam.dim}.`\n              )\n              .join(' ')\n        )\n      ) {\n        continue;\n      }\n    }\n\n    // Passed all checks! Push additional size to dimensions.\n    dimensions.push([width, height]);\n  }\n\n  return dimensions;\n}\n\n/**\n * A helper function for determining whether a given width or height violates\n * some condition.\n *\n * Checks the width and height against their corresponding conditions. If\n * either of the conditions fail, the errorBuilder function will be called with\n * the appropriate arguments, its result will be logged to user().error, and\n * validateDimensions will return false. Otherwise, validateDimensions will\n * only return true.\n *\n * @param {(number|string)} width\n * @param {(number|string)} height\n * @param {function((number|string)): boolean} widthCond\n * @param {function((number|string)): boolean} heightCond\n * @param {function(!Array<{dim: string, val: (number|string)}>): string=} errorBuilder\n * A function that will produce an informative error message.\n * @return {boolean}\n */\nfunction validateDimensions(\n  width,\n  height,\n  widthCond,\n  heightCond,\n  errorBuilder\n) {\n  const badParams = [];\n  if (widthCond(width)) {\n    badParams.push({dim: 'width', val: width});\n  }\n  if (heightCond(height)) {\n    badParams.push({dim: 'height', val: height});\n  }\n  if (badParams.length) {\n    user().warn('AMP-AD', errorBuilder(badParams));\n  }\n  return !badParams.length;\n}\n\n/**\n * Calculates height of responsive matched content slot based on its width.\n * This logic should be kept as close to possible to the logic inside\n * adsbygoogle.js.\n *\n * @param {number} availableWidth\n * @param {!Element} element <amp-ad> tag which contains publisher settings\n *     if any.\n * @return {number} height to use for the matched content slot.\n */\nexport function getMatchedContentResponsiveHeightAndUpdatePubParams(\n  availableWidth,\n  element\n) {\n  const pubControlParams = {\n    numberOfRows: element.getAttribute(ExternalCorePubVars.ROWS_NUM),\n    numberOfColumns: element.getAttribute(ExternalCorePubVars.COLUMNS_NUM),\n    layoutType: element.getAttribute(ExternalCorePubVars.UI_TYPE),\n  };\n  let config;\n  if (\n    pubControlParams.numberOfRows ||\n    pubControlParams.numberOfColumns ||\n    pubControlParams.layoutType\n  ) {\n    // Publisher provided at least 1 param  which means we are in\n    // \"pub controlled matched content\" mode.\n    config = getPubControlConfig(availableWidth, pubControlParams);\n  } else {\n    // Publisher didn't provide any matched content params so use auto mode.\n    config = getAutoConfig(\n      availableWidth,\n      availableWidth <= MIN_PUB_CONTROL_WIDTH_OF_DESKTOP\n    );\n  }\n  if (config.validationError) {\n    user().error('AMP-AD', config.validationError);\n    // There was an error in pub params and we logged it in console.\n    // Return 0 as height to hide slot.\n    return 0;\n  }\n  element.setAttribute(ExternalCorePubVars.ROWS_NUM, config.numberOfRows);\n  element.setAttribute(ExternalCorePubVars.COLUMNS_NUM, config.numberOfColumns);\n  element.setAttribute(ExternalCorePubVars.UI_TYPE, config.layoutType);\n\n  return config.slotHeight;\n}\n", "import {devAssert} from '#core/assert';\n\n/**\n * Maps a value in a first range to its equivalent in a second range\n * Ex.: 5 in the range [0,10] gives 60 in the range[40,80]\n *\n * NOTE: lower/upper bounds on the source range are detected automatically,\n * however the bounds on the target range are not altered (thus the target\n * range could be decreasing).\n * Ex1: 8 in the range [0, 10] gives 2 in the range [10, 0]\n * Ex2: also, 8 in the range [10, 0] gives 2 in the range [10, 0]\n *\n * NOTE: Input value is enforced to be bounded inside the source range\n * Ex1: -2 in the range [0, 10] is interpreted as 0 and thus gives 40 in [40,80]\n * Ex2: 19 in the range [0, 5] is interpreted as 5 and thus gives 80 in [40,80]\n *\n * @param {number} val the value in the source range\n * @param {number} min1 the lower bound of the source range\n * @param {number} max1 the upper bound of the source range\n * @param {number} min2 the lower bound of the target range\n * @param {number} max2 the upper bound of the target range\n * @return {number} the equivalent value in the target range\n */\nexport function mapRange(val, min1, max1, min2, max2) {\n  let max1Bound = max1;\n  let min1Bound = min1;\n  if (min1 > max1) {\n    max1Bound = min1;\n    min1Bound = max1;\n  }\n\n  if (val < min1Bound) {\n    val = min1Bound;\n  } else if (val > max1Bound) {\n    val = max1Bound;\n  }\n\n  return ((val - min1) * (max2 - min2)) / (max1 - min1) + min2;\n}\n\n/**\n * Computes the modulus of values `a` and `b`.\n *\n * This is needed because the % operator in JavaScript doesn't implement\n * modulus behavior as can be seen by the spec here:\n * http://www.ecma-international.org/ecma-262/5.1/#sec-11.5.3.\n * It instead is used to obtain the remainder of a division.\n * This function uses the remainder (%) operator to determine the modulus.\n * Derived from here:\n * https://stackoverflow.com/questions/25726760/javascript-modular-arithmetic/47354356#47354356\n *\n * @param {number} a\n * @param {number} b\n * @return {number} returns the modulus of the two numbers.\n * @example\n *\n * _.min(10, 5);\n * // => 0\n *\n * _.mod(-1, 5);\n * // => 4\n */\nexport function mod(a, b) {\n  return a > 0 && b > 0 ? a % b : ((a % b) + b) % b;\n}\n\n/**\n * Restricts a number to be in the given min/max range. The minimum value must\n * be less than or equal to the maximum value.\n *\n * Examples:\n * clamp(0.5, 0, 1) -> 0.5\n * clamp(1.5, 0, 1) -> 1\n * clamp(-0.5, 0, 1) -> 0\n *\n * @param {number} val the value to clamp.\n * @param {number} min the lower bound.\n * @param {number} max the upper bound.\n * @return {number} the clamped value.\n */\nexport function clamp(val, min, max) {\n  devAssert(min <= max, 'Minimum value is greater than the maximum.');\n  return Math.min(Math.max(val, min), max);\n}\n\n/**\n * Returns value bound to min and max values +/- extent. The lower bound must\n * be less than or equal to the upper bound.\n * @param {number} val the value to bound.\n * @param {number} min the lower bound.\n * @param {number} max the upper bound\n * @param {number} extent the allowed extent beyond the bounds.\n * @return {number} the bounded value.\n */\nexport function boundValue(val, min, max, extent) {\n  devAssert(min <= max, 'Lower bound is greater than the upper bound.');\n  return clamp(val, min - extent, max + extent);\n}\n\n/**\n * Returns the length of a vector given in X- and Y-coordinates.\n * @param {number} deltaX distance in the X direction.\n * @param {number} deltaY distance in the Y direction.\n * @return {number} the magnitude of the vector.\n */\nexport function magnitude(deltaX, deltaY) {\n  return Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n}\n\n/**\n * Returns the distance between two points.\n * @param {number} x1 X-coordinate of the first point.\n * @param {number} y1 Y-coordinate of the first point.\n * @param {number} x2 X-coordinate of the second point.\n * @param {number} y2 Y-coordinate of the second point.\n * @return {number} the distance between the two points.\n */\nexport function distance(x1, y1, x2, y2) {\n  return magnitude(x2 - x1, y2 - y1);\n}\n\n/**\n * @param {number} centerX\n * @param {number} centerY\n * @param {number} radius\n * @param {number} angleInDegrees\n * @return {{\n *  x: number,\n *  y: number,\n * }}\n */\nexport function polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n  const angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0;\n\n  return {\n    x: centerX + radius * Math.cos(angleInRadians),\n    y: centerY + radius * Math.sin(angleInRadians),\n  };\n}\n\n/**\n * Sums up the values of the given array and returns the result\n * @param {Array<number>} values\n * @return {number}\n */\nexport function sum(values) {\n  return values.reduce(function (a, b) {\n    return a + b;\n  });\n}\n", "import {addExperimentIdToElement} from '#ads/google/a4a/traffic-experiments';\nimport {\n  ADSENSE_MCRSPV_TAG,\n  ADSENSE_RSPV_ALLOWED_HEIGHT,\n  ADSENSE_RSPV_TAG,\n  getMatchedContentResponsiveHeightAndUpdatePubParams,\n} from '#ads/google/utils';\n\nimport {computedStyle, getStyle, setStyle} from '#core/dom/style';\nimport {clamp} from '#core/math';\nimport {hasOwn} from '#core/types/object';\nimport {tryParseJson} from '#core/types/object/json';\nimport {getWin} from '#core/window';\n\nimport {randomlySelectUnsetExperiments} from '#experiments';\n\nimport {Services} from '#service';\n\nimport {getData} from '#utils/event-helper';\nimport {dev, devAssert, user} from '#utils/log';\n\nconst TAG = 'amp-ad-network-adsense-impl';\n\n/**\n * Value of &rafmt= URL parameter depending on data-auto-format.\n * @const {!Object<string, number>}\n */\nconst RAFMT_PARAMS = {\n  [ADSENSE_RSPV_TAG]: 13,\n  [ADSENSE_MCRSPV_TAG]: 15,\n};\n\n/** @const {!{branch: string, control: string, experiment: string}}\n    @visibleForTesting\n*/\nexport const AD_SIZE_OPTIMIZATION_EXP = {\n  branch: 'adsense-ad-size-optimization',\n  control: '368226510',\n  experiment: '368226511',\n};\n\n/** @const {!{branch: string, control: string, experiment: string}}\n    @visibleForTesting\n*/\nexport const MAX_HEIGHT_EXP = {\n  branch: 'fix-inconsistent-responsive-height-selection',\n  control: '368226520',\n  experiment: '368226521',\n};\n\n/** @final */\nexport class ResponsiveState {\n  /**\n   * @param {!Element} element\n   * @param {boolean=} isContainerWidth\n   */\n  constructor(element, isContainerWidth) {\n    /**  @private {!Element}*/\n    this.element_ = element;\n\n    /** @private {boolean} */\n    this.isAlignedToViewport_ = false;\n\n    /** @private {boolean} */\n    this.isContainerWidth_ = !!isContainerWidth;\n\n    /** @private {!Window} */\n    this.win_ = getWin(element);\n  }\n\n  /**\n   * @param {!Element} element to potentially create state for.\n   * @return {?ResponsiveState} reponsive state for the element, if it\n   *  corresponds to a responsive ad, otherwise null.\n   */\n  static createIfResponsive(element) {\n    const autoFormat = element.getAttribute('data-auto-format');\n    if (!hasOwn(RAFMT_PARAMS, autoFormat)) {\n      return null;\n    }\n    return new ResponsiveState(element);\n  }\n\n  /**\n   * @param {!Element} element to potentially create state for.\n   * @return {?ResponsiveState} fall back state.\n   */\n  static createContainerWidthState(element) {\n    return new ResponsiveState(element, true);\n  }\n\n  /**\n   * Upgrades the ad unit to responsive if there is an opt-in setting in localstorage.\n   * See https://github.com/ampproject/amphtml/issues/23568 for design.\n   * @param {!Element} element\n   * @param {string} adClientId\n   * @return {!Promise<?ResponsiveState>} a promise that resolves when any upgrade is complete.\n   */\n  static maybeUpgradeToResponsive(element, adClientId) {\n    // If the ad unit is already responsive we don't upgrade again.\n    if (element.hasAttribute('data-auto-format')) {\n      return Promise.resolve(null);\n    }\n\n    // If the user already has a wide viewport layout, we don't upgrade to responsive.\n    if (!ResponsiveState.isLayoutViewportNarrow(element)) {\n      return Promise.resolve(null);\n    }\n\n    return (\n      Services.storageForDoc(element)\n        .then((storage) =>\n          storage.get(\n            ResponsiveState.getAdSizeOptimizationStorageKey_(adClientId)\n          )\n        )\n        .then((isAdSizeOptimizationEnabled) => {\n          if (isAdSizeOptimizationEnabled) {\n            return ResponsiveState.upgradeToResponsive_(element);\n          }\n          return null;\n        })\n        // Do nothing if we fail to read localstorage.\n        .catch(() => {\n          dev().warn(TAG, 'Failed to look up publisher ad size settings.');\n          return null;\n        })\n    );\n  }\n\n  /**\n   * Upgrades the element to responsive.\n   *\n   * @param {!Element} element\n   * @return {!ResponsiveState} responsive state\n   * @private\n   */\n  static upgradeToResponsive_(element) {\n    element.setAttribute('height', ADSENSE_RSPV_ALLOWED_HEIGHT);\n    element.setAttribute('width', '100vw');\n    element.setAttribute('data-full-width', '');\n    element.setAttribute('data-auto-format', 'rspv');\n\n    const state = ResponsiveState.createIfResponsive(element);\n    devAssert(state != null, 'Upgrade failed');\n    return /** @type {!ResponsiveState} */ (state);\n  }\n\n  /**\n   * Convert the element to container width responsive.\n   *\n   * @param {!Element} element\n   * @return {!Promise<?ResponsiveState>} a promise that return container width responsive state.\n   */\n  static convertToContainerWidth(element) {\n    const vsync = Services.vsyncFor(getWin(element));\n\n    return vsync\n      .runPromise(\n        {\n          measure: (state) => {\n            state./*OK*/ clientWidth = String(\n              element./*OK*/ parentElement./*OK*/ clientWidth\n            );\n          },\n          mutate: (state) => {\n            element.setAttribute('height', ADSENSE_RSPV_ALLOWED_HEIGHT);\n            element.setAttribute('width', state./*OK*/ clientWidth);\n            element.removeAttribute('data-full-width');\n            element.removeAttribute('data-auto-format');\n          },\n        },\n        {clientWidth: ''}\n      )\n      .then(() => {\n        const state = ResponsiveState.createContainerWidthState(element);\n        devAssert(state != null, 'Convert to container width state failed');\n        return /** @type {!ResponsiveState} */ (state);\n      });\n  }\n\n  /**\n   * Sets up a listener for a pingback of publisher settings in the ad response and\n   * writing such settings to localstorage.\n   *\n   * Note that we can have multiple listeners on the same page, which is okay because\n   * the settings for publishers should not change between different slots.\n   *\n   * Once the listener has received one valid setting update event, it will remove\n   * itself.\n   *\n   * See https://github.com/ampproject/amphtml/issues/23568 for design.\n   *\n   * @param {!Element} element to use for fetching storage.\n   * @param {!HTMLIFrameElement} iframe ad iframe.\n   * @param {string} adClientId\n   * @return {?Promise} a promise that resolves when ad size settings are updated, or null if no listener was attached.\n   */\n  static maybeAttachSettingsListener(element, iframe, adClientId) {\n    let promiseResolver;\n    const savePromise = new Promise((resolve) => {\n      promiseResolver = resolve;\n    });\n    const win = getWin(element);\n\n    const listener = (event) => {\n      const data = getData(event);\n      let dataList = null;\n      if (typeof data == 'string') {\n        dataList = tryParseJson(data);\n      } else if (typeof data == 'object') {\n        dataList = data;\n      }\n      if (dataList == null) {\n        return;\n      }\n\n      // dataList will look like this:\n      // {\n      //   'googMsgType': 'adsense-settings',\n      //   'adClient': 'ca-pub-123',\n      //   'enableAutoAdSize': '1'\n      // }\n      if (!!dataList && dataList['googMsgType'] != 'adsense-settings') {\n        return;\n      }\n      if (dataList['adClient'] != adClientId) {\n        return;\n      }\n\n      const autoAdSizeStatus = dataList['enableAutoAdSize'] == '1';\n      win.removeEventListener('message', listener);\n\n      Services.storageForDoc(element)\n        .then((storage) =>\n          storage\n            .set(\n              ResponsiveState.getAdSizeOptimizationStorageKey_(adClientId),\n              autoAdSizeStatus\n            )\n            .then(() => {\n              dev().info(\n                TAG,\n                `Saved publisher auto ad size setting: ${autoAdSizeStatus}`\n              );\n              promiseResolver();\n            })\n        )\n        // Do nothing if we fail to write to localstorage.\n        .catch(() => {\n          dev().warn(TAG, 'Failed to persist publisher auto ad size setting.');\n        });\n    };\n    win.addEventListener('message', listener);\n    return savePromise;\n  }\n\n  /**\n   * @param {string} adClientId\n   * @return {string} ad size optimization storage key.\n   * @private\n   */\n  static getAdSizeOptimizationStorageKey_(adClientId) {\n    return `aas-${adClientId}`;\n  }\n\n  /** @return {boolean} */\n  isValidElement() {\n    // Fall back state\n    if (this.isContainerWidth_) {\n      return true;\n    }\n\n    if (!this.element_.hasAttribute('data-full-width')) {\n      user().warn(\n        TAG,\n        'Responsive AdSense ad units require the attribute ' +\n          'data-full-width.'\n      );\n      return false;\n    }\n\n    const height = this.element_.getAttribute('height');\n    const width = this.element_.getAttribute('width');\n    // height is set to 0 by amp-auto-ads to avoid reflow.\n    if (height != 0 && height != ADSENSE_RSPV_ALLOWED_HEIGHT) {\n      user().warn(\n        TAG,\n        `Specified height ${height} in <amp-ad> tag is not equal to the ` +\n          `required height of ${ADSENSE_RSPV_ALLOWED_HEIGHT} for ` +\n          'responsive AdSense ad units.'\n      );\n      return false;\n    }\n    if (width != '100vw') {\n      user().warn(\n        TAG,\n        `Invalid width ${width} for full-width responsive <amp-ad> tag. ` +\n          'Width must be 100vw.'\n      );\n      return false;\n    }\n    return true;\n  }\n\n  /** Aligns the responsive element with the viewport edges.*/\n  alignToViewport() {\n    if (this.isAlignedToViewport_) {\n      return;\n    }\n    this.isAlignedToViewport_ = true;\n    const vsync = Services.vsyncFor(this.win_);\n    const layoutBox = this.element_.getLayoutBox();\n    const viewportSize = Services.viewportForDoc(\n      this.element_.getAmpDoc()\n    ).getSize();\n    const elementStyleWidth =\n      parseInt(getStyle(this.element_, 'width'), 10) || 0;\n    // Nudge into the correct horizontal position by changing side margin.\n    vsync.run(\n      {\n        measure: (state) => {\n          // Check the parent element because amp-ad is explicitly styled to\n          // have direction: ltr.\n          state.direction = computedStyle(\n            this.win_,\n            dev().assertElement(this.element_.parentElement)\n          )['direction'];\n        },\n        mutate: (state) => {\n          // If it's fall back state, align with the container width. Otherwise,\n          // adjust the margin for full-width expansion.\n          if (this.isContainerWidth_) {\n            setStyle(this.element_, 'width', '100%');\n          } else {\n            // Exit if the full-width resize did not succeed before.\n            if (elementStyleWidth != viewportSize.width) {\n              return;\n            }\n            if (state.direction == 'rtl') {\n              setStyle(this.element_, 'marginRight', layoutBox.left, 'px');\n            } else {\n              setStyle(this.element_, 'marginLeft', -layoutBox.left, 'px');\n            }\n          }\n        },\n      },\n      {direction: ''}\n    );\n  }\n\n  /** @return {boolean} */\n  isContainerWidthState() {\n    return this.isContainerWidth_;\n  }\n\n  /**\n   * @return {string}\n   * @private\n   */\n  getAutoFormat_() {\n    return this.element_.getAttribute('data-auto-format');\n  }\n\n  /**\n   * @return {number}\n   */\n  getRafmtParam() {\n    return RAFMT_PARAMS[this.getAutoFormat_()];\n  }\n\n  /**\n   * Selects into the inconsistent responsive height fix experiment.\n   * @return {boolean}\n   * @private\n   */\n  isInResponsiveHeightFixExperimentBranch_() {\n    const experimentInfoList =\n      /** @type {!Array<!../../../src/experiments.ExperimentInfo>} */ ([\n        {\n          experimentId: MAX_HEIGHT_EXP.branch,\n          isTrafficEligible: () => true,\n          branches: [MAX_HEIGHT_EXP.control, MAX_HEIGHT_EXP.experiment],\n        },\n      ]);\n    const setExps = randomlySelectUnsetExperiments(\n      this.win_,\n      experimentInfoList\n    );\n    Object.keys(setExps).forEach((expName) =>\n      addExperimentIdToElement(setExps[expName], this.element_)\n    );\n    return setExps[MAX_HEIGHT_EXP.branch] == MAX_HEIGHT_EXP.experiment;\n  }\n\n  /**\n   * Attempts to change the size to match the desired responsive height.\n   * @return {!Promise} a promise that resolves when we have attempted to change size\n   * (whether successfully or not).\n   */\n  attemptToMatchResponsiveHeight() {\n    const viewportSize = Services.viewportForDoc(\n      this.element_.getAmpDoc()\n    ).getSize();\n    // Attempt to resize to the correct height. The width should already be\n    // 100vw, but is fixed here so that future resizes of the viewport don't\n    // affect it.\n    return this.element_.getImpl(/* waitForBuild= */ false).then((impl) =>\n      impl\n        .attemptChangeSize(\n          this.getResponsiveHeight_(viewportSize),\n          viewportSize.width\n        )\n        .catch(() => {\n          dev().info(TAG, `Change size attempt failed.`);\n        })\n    );\n  }\n\n  /**\n   * Calculates the appropriate height for a full-width responsive ad of the\n   * given width.\n   * @param {!{width: number, height: number}} viewportSize\n   * @return {number}\n   * @private\n   */\n  getResponsiveHeight_(viewportSize) {\n    switch (this.getAutoFormat_()) {\n      case ADSENSE_RSPV_TAG:\n        const minHeight = 100;\n        const maxHeight = Math.min(\n          this.isInResponsiveHeightFixExperimentBranch_() ? 500 : 300,\n          viewportSize.height\n        );\n        // We aim for a 6:5 aspect ratio.\n        const idealHeight = Math.round(viewportSize.width / 1.2);\n        return clamp(idealHeight, minHeight, maxHeight);\n      case ADSENSE_MCRSPV_TAG:\n        return getMatchedContentResponsiveHeightAndUpdatePubParams(\n          viewportSize.width,\n          this.element_\n        );\n      default:\n        return 0;\n    }\n  }\n\n  /**\n   * Estimate if the viewport has a narrow layout.\n   * @param {!Element} element\n   * @return {boolean}\n   */\n  static isLayoutViewportNarrow(element) {\n    const viewportSize = Services.viewportForDoc(element).getSize();\n\n    return viewportSize.width < 488;\n  }\n}\n", "/**\n * Required flags to apply to the sandbox iframe.\n * @return {Array<string>}\n */\nexport const getRequiredSandboxFlags = () => [\n  // This only allows navigation when user interacts and thus prevents\n  // ads from auto navigating the user.\n  'allow-top-navigation-by-user-activation',\n  // Crucial because otherwise even target=_blank opened links are\n  // still sandboxed which they may not expect.\n  'allow-popups-to-escape-sandbox',\n];\n\n/**\n * These flags are not feature detected. Put stuff here where either\n * they have always been supported or support is not crucial.\n * @return {Array<string>}\n */\nexport const getOptionalSandboxFlags = () => [\n  'allow-forms',\n  // We should consider turning this off! But since the top navigation\n  // issue is the big one, we'll leave this allowed for now.\n  'allow-modals',\n  // Give access to raw mouse movements.\n  'allow-pointer-lock',\n  // This remains subject to popup blocking, it just makes it supported\n  // at all.\n  'allow-popups',\n  // This applies inside the iframe and is crucial to not break the web.\n  'allow-same-origin',\n  'allow-scripts',\n  // Not allowed\n  // - allow-top-navigation\n  // - allow-orientation-lock\n  // - allow-pointer-lock\n  // - allow-presentation\n];\n", "/**\n * @fileoverview Implements element layout. See https://goo.gl/9avXuT for\n * details.\n */\n\nimport {userAssert} from '#core/assert';\nimport {isFiniteNumber} from '#core/types';\n\n/**\n * @enum {string}\n */\nexport const Layout = {\n  NODISPLAY: 'nodisplay',\n  FIXED: 'fixed',\n  FIXED_HEIGHT: 'fixed-height',\n  RESPONSIVE: 'responsive',\n  CONTAINER: 'container',\n  FILL: 'fill',\n  FLEX_ITEM: 'flex-item',\n  FLUID: 'fluid',\n  INTRINSIC: 'intrinsic',\n};\n\n/**\n * Layout priorities to use with BaseElement#getLayoutPriority() and\n * BaseElement#updateLayoutPriority().\n * @enum {number}\n */\nexport const LayoutPriority = {\n  CONTENT: 0,\n  METADATA: 1,\n  ADS: 2,\n  BACKGROUND: 3,\n};\n\n/**\n * CSS Length type. E.g. \"1px\" or \"20vh\".\n * @typedef {string}\n */\nexport let LengthDef;\n\n/**\n * @typedef {{\n *   width: string,\n *   height: string\n * }}\n */\nexport let DimensionsDef;\n\n/**\n * Elements that the progress can be shown for. This set has to be externalized\n * since the element's implementation may not be downloaded yet.\n * This list does not include video players which are found via regex later.\n * @enum {boolean}\n * @private  Visible for testing only!\n */\nexport const LOADING_ELEMENTS_ = {\n  'AMP-AD': true,\n  'AMP-ANIM': true,\n  'AMP-EMBED': true,\n  'AMP-FACEBOOK': true,\n  'AMP-FACEBOOK-COMMENTS': true,\n  'AMP-FACEBOOK-PAGE': true,\n  'AMP-GOOGLE-DOCUMENT-EMBED': true,\n  'AMP-IFRAME': true,\n  'AMP-IMG': true,\n  'AMP-INSTAGRAM': true,\n  'AMP-LIST': true,\n  'AMP-PINTEREST': true,\n  'AMP-PLAYBUZZ': true,\n  'AMP-RENDER': true,\n  'AMP-TIKTOK': true,\n  'AMP-TWITTER': true,\n};\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they are listed individually.\n * @private @const {!RegExp}\n */\nconst videoPlayerTagNameRe =\n  /^amp\\-(video|.+player)|AMP-BRIGHTCOVE|AMP-DAILYMOTION|AMP-YOUTUBE|AMP-VIMEO|AMP-IMA-VIDEO/i;\n\n/**\n * @param {string} s\n * @return {!Layout|undefined} Returns undefined in case of failure to parse\n *   the layout string.\n */\nexport function parseLayout(s) {\n  for (const k in Layout) {\n    if (Layout[k] == s) {\n      return Layout[k];\n    }\n  }\n  return undefined;\n}\n\n/**\n * @param {!Layout} layout\n * @return {string}\n */\nexport function getLayoutClass(layout) {\n  return 'i-amphtml-layout-' + layout;\n}\n\n/**\n * Whether an element with this layout inherently defines the size.\n * @param {!Layout} layout\n * @return {boolean}\n */\nexport function isLayoutSizeDefined(layout) {\n  return (\n    layout == Layout.FIXED ||\n    layout == Layout.FIXED_HEIGHT ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.FILL ||\n    layout == Layout.FLEX_ITEM ||\n    layout == Layout.FLUID ||\n    layout == Layout.INTRINSIC\n  );\n}\n\n/**\n * Whether an element with this layout has a fixed dimension.\n * @param {!Layout} layout\n * @return {boolean}\n */\nexport function isLayoutSizeFixed(layout) {\n  return layout == Layout.FIXED || layout == Layout.FIXED_HEIGHT;\n}\n\n/**\n * Parses the CSS length value. If no units specified, the assumed value is\n * \"px\". Returns undefined in case of parsing error.\n * @param {string|undefined|null} s\n * @return {!LengthDef|undefined}\n */\nexport function parseLength(s) {\n  if (typeof s == 'number') {\n    return s + 'px';\n  }\n  if (!s) {\n    return undefined;\n  }\n  if (!/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)?$/.test(s)) {\n    return undefined;\n  }\n  if (/^\\d+(\\.\\d+)?$/.test(s)) {\n    return s + 'px';\n  }\n  return s;\n}\n\n/**\n * Asserts that the supplied value is a non-percent CSS Length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertLength(length) {\n  userAssert(\n    /^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)$/.test(length),\n    'Invalid length value: %s',\n    length\n  );\n  return /** @type {!LengthDef} */ (length);\n}\n\n/**\n * Asserts that the supplied value is a CSS Length value\n * (including percent unit).\n * @param {!LengthDef|string} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertLengthOrPercent(length) {\n  userAssert(\n    /^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|%)$/.test(length),\n    'Invalid length or percent value: %s',\n    length\n  );\n  return length;\n}\n\n/**\n * Returns units from the CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {string}\n */\nexport function getLengthUnits(length) {\n  assertLength(length);\n  const m = userAssert(\n    /[a-z]+/i.exec(length),\n    'Failed to read units from %s',\n    length\n  );\n  return m[0];\n}\n\n/**\n * Returns the numeric value of a CSS length value.\n * @param {!LengthDef|string|null|undefined|number} length\n * @return {number|undefined}\n */\nexport function getLengthNumeral(length) {\n  const res = parseFloat(length);\n  return isFiniteNumber(res) ? res : undefined;\n}\n\n/**\n * Whether the loading can be shown for the specified element. This set has\n * to be externalized since the element's implementation may not be\n * downloaded yet.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isLoadingAllowed(element) {\n  const tagName = element.tagName.toUpperCase();\n  return LOADING_ELEMENTS_[tagName] || isIframeVideoPlayerComponent(tagName);\n}\n\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they're present in the LOADING_ELEMENTS_ allowlist.\n * @param {string} tagName\n * @return {boolean}\n */\nexport function isIframeVideoPlayerComponent(tagName) {\n  if (tagName == 'AMP-VIDEO') {\n    return false;\n  }\n  return videoPlayerTagNameRe.test(tagName);\n}\n\n/**\n * Configures the supplied element to have a \"fill content\" layout. The\n * exact interpretation of \"fill content\" depends on the element's layout.\n *\n * If `opt_replacedContent` is specified, it indicates whether the \"replaced\n * content\" styling should be applied. Replaced content is not allowed to\n * have its own paddings or border.\n *\n * @param {!Element} element\n * @param {boolean=} opt_replacedContent\n */\nexport function applyFillContent(element, opt_replacedContent) {\n  element.classList.add('i-amphtml-fill-content');\n  if (opt_replacedContent) {\n    element.classList.add('i-amphtml-replaced-content');\n  }\n}\n", "import {getMode} from './mode';\n\n/**\n * Provides info about the current app. This return value may be cached and\n * passed around as it will always be DCE'd.\n * @param {?Window=} opt_win\n * @return {!./mode.ModeDef}\n */\nexport function getModeObject(opt_win) {\n  return {\n    localDev: getMode(opt_win).localDev,\n    development: getMode(opt_win).development,\n    esm: getMode(opt_win).esm,\n    test: getMode(opt_win).test,\n    rtvVersion: getMode(opt_win).rtvVersion,\n  };\n}\n", "import {DomFingerprint} from '#core/dom/fingerprint';\nimport {getLengthNumeral} from '#core/dom/layout';\nimport {getPageLayoutBoxBlocking} from '#core/dom/layout/page-layout-box';\nimport * as mode from '#core/mode';\nimport {dict} from '#core/types/object';\n\nimport {experimentToggles, isCanary} from '#experiments';\n\nimport {Services} from '#service';\n\nimport {urls} from './config';\nimport {getModeObject} from './mode-object';\n\n/**\n * Produces the attributes for the ad template.\n * @param {!Window} parentWindow\n * @param {!AmpElement} element\n * @param {string} sentinel\n * @param {!JsonObject=} attributes\n * @return {!JsonObject}\n */\nexport function getContextMetadata(\n  parentWindow,\n  element,\n  sentinel,\n  attributes\n) {\n  const startTime = Date.now();\n  const width = element.getAttribute('width');\n  const height = element.getAttribute('height');\n  attributes = attributes ? attributes : dict();\n  attributes['width'] = getLengthNumeral(width);\n  attributes['height'] = getLengthNumeral(height);\n  if (element.getAttribute('title')) {\n    attributes['title'] = element.getAttribute('title');\n  }\n  let locationHref = parentWindow.location.href;\n  // This is really only needed for tests, but whatever. Children\n  // see us as the logical origin, so telling them we are about:srcdoc\n  // will fail ancestor checks.\n  if (locationHref == 'about:srcdoc') {\n    locationHref = parentWindow.parent.location.href;\n  }\n\n  const ampdoc = Services.ampdoc(element);\n  const docInfo = Services.documentInfoForDoc(element);\n  const viewer = Services.viewerForDoc(element);\n  const referrer = viewer.getUnconfirmedReferrerUrl();\n\n  const layoutRect = getPageLayoutBoxBlocking(element);\n\n  // Use JsonObject to preserve field names so that ampContext can access\n  // values with name\n  // ampcontext.js and this file are compiled in different compilation unit\n\n  // Note: Field names can by perserved by using JsonObject, or by adding\n  // perserved name to extern. We are doing both right now.\n  // Please also add new introduced variable\n  // name to the extern list.\n  attributes['_context'] = dict({\n    'ampcontextVersion': mode.version(),\n    'ampcontextFilepath': `${\n      urls.thirdParty\n    }/${mode.version()}/ampcontext-v0.js`,\n    'sourceUrl': docInfo.sourceUrl,\n    'referrer': referrer,\n    'canonicalUrl': docInfo.canonicalUrl,\n    'pageViewId': docInfo.pageViewId,\n    'location': {\n      'href': locationHref,\n    },\n    'startTime': startTime,\n    'tagName': element.tagName,\n    'mode': getModeObject(),\n    'canary': isCanary(parentWindow),\n    'hidden': !ampdoc.isVisible(),\n    'initialLayoutRect': layoutRect\n      ? {\n          'left': layoutRect.left,\n          'top': layoutRect.top,\n          'width': layoutRect.width,\n          'height': layoutRect.height,\n        }\n      : null,\n    'domFingerprint': DomFingerprint.generate(element),\n    'experimentToggles': experimentToggles(parentWindow),\n    'sentinel': sentinel,\n  });\n  const adSrc = element.getAttribute('src');\n  if (adSrc) {\n    attributes['src'] = adSrc;\n  }\n  return attributes;\n}\n", "import {getOptionalSandboxFlags, getRequiredSandboxFlags} from '#core/3p-frame';\nimport {setStyle} from '#core/dom/style';\nimport * as mode from '#core/mode';\nimport {dict} from '#core/types/object';\nimport {tryParseJson} from '#core/types/object/json';\n\nimport {dev, devAssert, user, userAssert} from '#utils/log';\n\nimport {urls} from './config';\nimport {getContextMetadata} from './iframe-attributes';\nimport {assertHttpsUrl, parseUrlDeprecated} from './url';\n\n/** @type {!Object<string,number>} Number of 3p frames on the for that type. */\nlet count = {};\n\n/** @type {string} */\nlet overrideBootstrapBaseUrl;\n\n/** @const {string} */\nconst TAG = '3p-frame';\n\n/**\n * Produces the attributes for the ad template.\n * @param {!Window} parentWindow\n * @param {!AmpElement} element\n * @param {string=} opt_type\n * @param {Object=} opt_context\n * @return {!JsonObject} Contains\n *     - type, width, height, src attributes of <amp-ad> tag. These have\n *       precedence over the data- attributes.\n *     - data-* attributes of the <amp-ad> tag with the \"data-\" removed.\n *     - A _context object for internal use.\n */\nfunction getFrameAttributes(parentWindow, element, opt_type, opt_context) {\n  const type = opt_type || element.getAttribute('type');\n  userAssert(type, 'Attribute type required for <amp-ad>: %s', element);\n  const sentinel = generateSentinel(parentWindow);\n  let attributes = dict();\n  // Do these first, as the other attributes have precedence.\n  addDataAndJsonAttributes_(element, attributes);\n  attributes = getContextMetadata(parentWindow, element, sentinel, attributes);\n  attributes['type'] = type;\n  Object.assign(attributes['_context'], opt_context);\n  return attributes;\n}\n\n/**\n * Creates the iframe for the embed. Applies correct size and passes the embed\n * attributes to the frame via JSON inside the fragment.\n * @param {!Window} parentWindow\n * @param {!AmpElement} parentElement\n * @param {string=} opt_type\n * @param {Object=} opt_context\n * @param {{\n *   allowFullscreen: (boolean|undefined),\n *   initialIntersection: (IntersectionObserverEntry|undefined),\n * }=} options Options for the created iframe.\n * @return {!HTMLIFrameElement} The iframe.\n */\nexport function getIframe(\n  parentWindow,\n  parentElement,\n  opt_type,\n  opt_context,\n  options = {}\n) {\n  const {allowFullscreen = false, initialIntersection} = options;\n  // Check that the parentElement is already in DOM. This code uses a new and\n  // fast `isConnected` API and thus only used when it's available.\n  devAssert(\n    parentElement['isConnected'] === undefined ||\n      parentElement['isConnected'] === true,\n    'Parent element must be in DOM'\n  );\n  const attributes = getFrameAttributes(\n    parentWindow,\n    parentElement,\n    opt_type,\n    opt_context\n  );\n  if (initialIntersection) {\n    attributes['_context']['initialIntersection'] = initialIntersection;\n  }\n\n  const iframe = /** @type {!HTMLIFrameElement} */ (\n    parentWindow.document.createElement('iframe')\n  );\n\n  if (!count[attributes['type']]) {\n    count[attributes['type']] = 0;\n  }\n  count[attributes['type']] += 1;\n\n  const ampdoc = parentElement.getAmpDoc();\n  const baseUrl = getBootstrapBaseUrl(parentWindow, ampdoc);\n  const host = parseUrlDeprecated(baseUrl).hostname;\n  // This name attribute may be overwritten if this frame is chosen to\n  // be the master frame. That is ok, as we will read the name off\n  // for our uses before that would occur.\n  // @see https://github.com/ampproject/amphtml/blob/main/3p/integration.js\n  const name = JSON.stringify(\n    dict({\n      'host': host,\n      'bootstrap': getBootstrapUrl(attributes['type']),\n      'type': attributes['type'],\n      // https://github.com/ampproject/amphtml/pull/2955\n      'count': count[attributes['type']],\n      'attributes': attributes,\n    })\n  );\n\n  iframe.src = baseUrl;\n  iframe.ampLocation = parseUrlDeprecated(baseUrl);\n  iframe.name = name;\n  // Add the check before assigning to prevent IE throw Invalid argument error\n  if (attributes['width']) {\n    iframe.width = attributes['width'];\n  }\n  if (attributes['height']) {\n    iframe.height = attributes['height'];\n  }\n  if (attributes['title']) {\n    iframe.title = attributes['title'];\n  }\n  if (allowFullscreen) {\n    iframe.setAttribute('allowfullscreen', 'true');\n  }\n  iframe.setAttribute('scrolling', 'no');\n  setStyle(iframe, 'border', 'none');\n  /** @this {!Element} */\n  iframe.onload = function () {\n    // Chrome does not reflect the iframe readystate.\n    this.readyState = 'complete';\n  };\n  // Block synchronous XHR in ad. These are very rare, but super bad for UX\n  // as they block the UI thread for the arbitrary amount of time until the\n  // request completes.\n  iframe.setAttribute('allow', \"sync-xhr 'none';\");\n  const excludeFromSandbox = ['facebook'];\n  if (!excludeFromSandbox.includes(opt_type)) {\n    applySandbox(iframe);\n  }\n  iframe.setAttribute(\n    'data-amp-3p-sentinel',\n    attributes['_context']['sentinel']\n  );\n  return iframe;\n}\n\n/**\n * Copies data- attributes from the element into the attributes object.\n * Removes the data- from the name and capitalizes after -. If there\n * is an attribute called json, parses the JSON and adds it to the\n * attributes.\n * @param {!Element} element\n * @param {!JsonObject} attributes The destination.\n * visibleForTesting\n */\nexport function addDataAndJsonAttributes_(element, attributes) {\n  const {dataset} = element;\n  for (const name in dataset) {\n    // data-vars- is reserved for amp-analytics\n    // see https://github.com/ampproject/amphtml/blob/main/extensions/amp-analytics/analytics-vars.md#variables-as-data-attribute\n    if (!name.startsWith('vars')) {\n      attributes[name] = dataset[name];\n    }\n  }\n  const json = element.getAttribute('json');\n  if (json) {\n    const obj = tryParseJson(json);\n    if (obj === undefined) {\n      throw user().createError(\n        'Error parsing JSON in json attribute in element %s',\n        element\n      );\n    }\n    for (const key in obj) {\n      attributes[key] = obj[key];\n    }\n  }\n}\n\n/**\n * Get the bootstrap script URL for iframe.\n * @param {string} type\n * @return {string}\n */\nexport function getBootstrapUrl(type) {\n  const extension = mode.isEsm() ? '.mjs' : '.js';\n  if (mode.isProd()) {\n    return `${urls.thirdParty}/${mode.version()}/vendor/${type}${extension}`;\n  }\n  const filename = mode.isMinified()\n    ? `./vendor/${type}`\n    : `./vendor/${type}.max`;\n  return filename + extension;\n}\n\n/**\n * Preloads URLs related to the bootstrap iframe.\n * @param {!Window} win\n * @param {string} type\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {!./preconnect.PreconnectService} preconnect\n */\nexport function preloadBootstrap(win, type, ampdoc, preconnect) {\n  const url = getBootstrapBaseUrl(win, ampdoc);\n  preconnect.preload(ampdoc, url, 'document');\n\n  // While the URL may point to a custom domain, this URL will always be\n  // fetched by it.\n  preconnect.preload(ampdoc, getBootstrapUrl(type), 'script');\n}\n\n/**\n * Returns the base URL for 3p bootstrap iframes.\n * @param {!Window} parentWindow\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {boolean=} opt_strictForUnitTest\n * @return {string}\n * @visibleForTesting\n */\nexport function getBootstrapBaseUrl(\n  parentWindow,\n  ampdoc,\n  opt_strictForUnitTest\n) {\n  return (\n    getCustomBootstrapBaseUrl(parentWindow, ampdoc, opt_strictForUnitTest) ||\n    getDefaultBootstrapBaseUrl(parentWindow)\n  );\n}\n\n/**\n * @param {string} url\n */\nexport function setDefaultBootstrapBaseUrlForTesting(url) {\n  overrideBootstrapBaseUrl = url;\n}\n\n/**\n * @param {*} win\n */\nexport function resetBootstrapBaseUrlForTesting(win) {\n  win.__AMP_DEFAULT_BOOTSTRAP_SUBDOMAIN = undefined;\n}\n\n/**\n * Returns the default base URL for 3p bootstrap iframes.\n * @param {!Window} parentWindow\n * @param {string=} opt_srcFileBasename\n * @return {string}\n */\nexport function getDefaultBootstrapBaseUrl(parentWindow, opt_srcFileBasename) {\n  const srcFileBasename = opt_srcFileBasename || 'frame';\n  if (!mode.isProd()) {\n    return getDevelopmentBootstrapBaseUrl(parentWindow, srcFileBasename);\n  }\n  // Ensure same sub-domain is used despite potentially different file.\n  parentWindow.__AMP_DEFAULT_BOOTSTRAP_SUBDOMAIN =\n    parentWindow.__AMP_DEFAULT_BOOTSTRAP_SUBDOMAIN ||\n    getSubDomain(parentWindow);\n  return (\n    'https://' +\n    parentWindow.__AMP_DEFAULT_BOOTSTRAP_SUBDOMAIN +\n    `.${urls.thirdPartyFrameHost}/${mode.version()}/` +\n    `${srcFileBasename}.html`\n  );\n}\n\n/**\n * Function to return the development boostrap base URL\n * @param {!Window} parentWindow\n * @param {string} srcFileBasename\n * @return {string}\n */\nexport function getDevelopmentBootstrapBaseUrl(parentWindow, srcFileBasename) {\n  return (\n    overrideBootstrapBaseUrl ||\n    getAdsLocalhost(parentWindow) +\n      '/dist.3p/' +\n      (mode.isMinified()\n        ? `${mode.version()}/${srcFileBasename}`\n        : `current/${srcFileBasename}.max`) +\n      '.html'\n  );\n}\n\n/**\n * @param {!Window} win\n * @return {string}\n */\nfunction getAdsLocalhost(win) {\n  let adsUrl = urls.thirdParty; // local dev with a non-localhost server\n  if (adsUrl == 'https://3p.ampproject.net') {\n    adsUrl = 'http://ads.localhost'; // local dev with a localhost server\n  }\n  return (\n    adsUrl +\n    ':' +\n    (new URL(win.document.baseURI)?.port ||\n      win.location.port ||\n      win.parent.location.port)\n  );\n}\n\n/**\n * Sub domain on which the 3p iframe will be hosted.\n * Because we only calculate the URL once per page, this function is only\n * called once and hence all frames on a page use the same URL.\n * @param {!Window} win\n * @return {string}\n * @visibleForTesting\n */\nexport function getSubDomain(win) {\n  return 'd-' + getRandom(win);\n}\n\n/**\n * Generates a random non-negative integer.\n * @param {!Window} win\n * @return {string}\n */\nexport function getRandom(win) {\n  let rand;\n  if (win.crypto && win.crypto.getRandomValues) {\n    // By default use 2 32 bit integers.\n    const uint32array = new Uint32Array(2);\n    win.crypto.getRandomValues(uint32array);\n    rand = String(uint32array[0]) + uint32array[1];\n  } else {\n    // Fall back to Math.random.\n    rand = String(win.Math.random()).substr(2) + '0';\n  }\n  return rand;\n}\n\n/**\n * Returns the custom base URL for 3p bootstrap iframes if it exists.\n * Otherwise null.\n * @param {!Window} parentWindow\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {boolean=} opt_strictForUnitTest\n * @return {?string}\n */\nfunction getCustomBootstrapBaseUrl(\n  parentWindow,\n  ampdoc,\n  opt_strictForUnitTest\n) {\n  const meta = ampdoc.getMetaByName('amp-3p-iframe-src');\n  if (!meta) {\n    return null;\n  }\n  const url = assertHttpsUrl(meta, 'meta[name=\"amp-3p-iframe-src\"]');\n  userAssert(\n    url.indexOf('?') == -1,\n    '3p iframe url must not include query string %s in element %s.',\n    url,\n    meta\n  );\n  // This is not a security primitive, we just don't want this to happen in\n  // practice. People could still redirect to the same origin, but they cannot\n  // redirect to the proxy origin which is the important one.\n  const parsed = parseUrlDeprecated(url);\n  userAssert(\n    (parsed.hostname == 'localhost' && !opt_strictForUnitTest) ||\n      parsed.origin != parseUrlDeprecated(parentWindow.location.href).origin,\n    '3p iframe url must not be on the same origin as the current document ' +\n      '%s (%s) in element %s. See https://github.com/ampproject/amphtml' +\n      '/blob/main/docs/spec/amp-iframe-origin-policy.md for details.',\n    url,\n    parsed.origin,\n    meta\n  );\n  return `${url}?${mode.version()}`;\n}\n\n/**\n * Applies a sandbox to the iframe, if the required flags can be allowed.\n * @param {!Element} iframe\n * @visibleForTesting\n */\nexport function applySandbox(iframe) {\n  if (!iframe.sandbox || !iframe.sandbox.supports) {\n    return; // Can't feature detect support\n  }\n  // If these flags are not supported by the UA we don't apply any\n  // sandbox.\n  const requiredFlags = getRequiredSandboxFlags();\n  for (let i = 0; i < requiredFlags.length; i++) {\n    const flag = requiredFlags[i];\n    if (!iframe.sandbox.supports(flag)) {\n      dev().info(TAG, \"Iframe doesn't support %s\", flag);\n      return;\n    }\n  }\n  iframe.sandbox =\n    requiredFlags.join(' ') + ' ' + getOptionalSandboxFlags().join(' ');\n}\n\n/**\n * Returns a randomized sentinel value for 3p iframes.\n * The format is \"%d-%d\" with the first value being the depth of current\n * window in the window hierarchy and the second a random integer.\n * @param {!Window} parentWindow\n * @return {string}\n * @visibleForTesting\n */\nexport function generateSentinel(parentWindow) {\n  let windowDepth = 0;\n  for (let win = parentWindow; win && win != win.parent; win = win.parent) {\n    windowDepth++;\n  }\n  return String(windowDepth) + '-' + getRandom(parentWindow);\n}\n\n/**\n * Resets the count of each 3p frame type\n * @visibleForTesting\n */\nexport function resetCountForTesting() {\n  count = {};\n}\n", "/**\n * Commonly used signals across different elements and documents.\n * @enum {string}\n */\nexport const CommonSignals = {\n  /**\n   * The element's implementation has been registered and ready for upgrade.\n   */\n  READY_TO_UPGRADE: 'ready-upgrade',\n\n  /**\n   * The element has been upgraded from ElementStub to its real implementation.\n   */\n  UPGRADED: 'upgraded',\n\n  /**\n   * The element has been built.\n   */\n  BUILT: 'built',\n\n  /**\n   * The element has been mounted.\n   */\n  MOUNTED: 'mounted',\n\n  /**\n   * The element has started loading.\n   * LOAD_START triggers at the start of the layoutCallback.\n   */\n  LOAD_START: 'load-start',\n\n  /**\n   * Rendering has been confirmed to have been started.\n   * It is a signal to indicate meaningful display (e.g. text could be displayed\n   * CSS is correctly installed/applied).\n   *\n   * Elements can optionally implement RENDER_START signal. (e.g. ad, shadowdoc)\n   * if it want to define its own meaningful display time and toggle visibility.\n   *\n   * Simpler elements's RENDER_START can be equal to the start of the\n   * buildCallback\n   */\n  RENDER_START: 'render-start',\n\n  /**\n   * The element has been loaded.\n   * LOAD_END triggers at the end of the layoutCallback.\n   *\n   */\n  LOAD_END: 'load-end',\n\n  /**\n   * The initial contents of an element/document/embed have been loaded.\n   * INI_LOAD is an optional signal, implemented by ads, story, and elements\n   * that consist of other resources.\n   * It instructs that all critical resources has been loaded, and can be used\n   * for more accurate visibility measurement.\n   * When an element doesn't consist multiple child resources, LOAD_END signal\n   * can be used to indicate resource load completion.\n   * Note: Based on the implementation, INI_LOAD can trigger before or after\n   * LOAD_END.\n   */\n  INI_LOAD: 'ini-load',\n\n  /**\n   * The element has been unlaid out.\n   */\n  UNLOAD: 'unload',\n};\n", "import {dict} from '#core/types/object';\n\nimport {Services} from '#service';\n\n/**\n * Helper method to trigger analytics event if amp-analytics is available.\n * TODO: Do not expose this function\n * @param {!Element} target\n * @param {string} eventType\n * @param {!JsonObject} vars A map of vars and their values.\n * @param {boolean} enableDataVars A boolean to indicate if data-vars-*\n * attribute value from target element should be included.\n */\nexport function triggerAnalyticsEvent(\n  target,\n  eventType,\n  vars = dict(),\n  enableDataVars = true\n) {\n  Services.analyticsForDocOrNull(target).then((analytics) => {\n    if (!analytics) {\n      return;\n    }\n    analytics.triggerEventForTarget(target, eventType, vars, enableDataVars);\n  });\n}\n", "import {CommonSignals} from '#core/constants/common-signals';\nimport {createElementWithAttributes, removeElement} from '#core/dom';\nimport {isArray} from '#core/types';\nimport {dict} from '#core/types/object';\nimport {getWin} from '#core/window';\n\nimport {Services} from '#service';\n\nimport {triggerAnalyticsEvent} from '#utils/analytics';\nimport {devAssert} from '#utils/log';\n\n/**\n * Method to create scoped analytics element for any element.\n * TODO: Make this function private\n * @param {!Element} parentElement\n * @param {!JsonObject} config\n * @param {boolean=} loadAnalytics\n * @param {boolean=} disableImmediate\n * @return {!Element} created analytics element\n */\nexport function insertAnalyticsElement(\n  parentElement,\n  config,\n  loadAnalytics = false,\n  disableImmediate = false\n) {\n  const doc = /** @type {!Document} */ (parentElement.ownerDocument);\n  const analyticsElem = createElementWithAttributes(\n    doc,\n    'amp-analytics',\n    dict({\n      'sandbox': 'true',\n      'trigger': disableImmediate ? '' : 'immediate',\n    })\n  );\n  const scriptElem = createElementWithAttributes(\n    doc,\n    'script',\n    dict({\n      'type': 'application/json',\n    })\n  );\n  scriptElem.textContent = JSON.stringify(config);\n  analyticsElem.appendChild(scriptElem);\n  analyticsElem.CONFIG = config;\n\n  // Force load analytics extension if script not included in page.\n  if (loadAnalytics) {\n    // Get Extensions service and force load analytics extension.\n    const extensions = Services.extensionsFor(getWin(parentElement));\n    const ampdoc = Services.ampdoc(parentElement);\n    extensions./*OK*/ installExtensionForDoc(ampdoc, 'amp-analytics');\n  } else {\n    Services.analyticsForDocOrNull(parentElement).then((analytics) => {\n      devAssert(analytics);\n    });\n  }\n  parentElement.appendChild(analyticsElem);\n  return analyticsElem;\n}\n\n/**\n * A class that handles customEvent reporting of extension element through\n * amp-analytics. This class is not exposed to extension element directly to\n * restrict the genration of the config Please use CustomEventReporterBuilder to\n * build a CustomEventReporter instance.\n */\nclass CustomEventReporter {\n  /**\n   * @param {!Element} parent\n   * @param {!JsonObject} config\n   */\n  constructor(parent, config) {\n    devAssert(config['triggers'], 'Config must have triggers defined');\n    /** @private {string} */\n    this.id_ = parent.getResourceId();\n\n    /** @private {!AmpElement} */\n    this.parent_ = parent;\n\n    /** @private {JsonObject} */\n    this.config_ = config;\n\n    for (const event in config['triggers']) {\n      const eventType = config['triggers'][event]['on'];\n      devAssert(\n        eventType,\n        'CustomEventReporter config must specify trigger eventType'\n      );\n      const newEventType = this.getEventTypeInSandbox_(eventType);\n      config['triggers'][event]['on'] = newEventType;\n    }\n\n    this.parent_\n      .signals()\n      .whenSignal(CommonSignals.LOAD_START)\n      .then(() => {\n        insertAnalyticsElement(this.parent_, config, true);\n      });\n  }\n\n  /**\n   * @param {string} eventType\n   * @param {!JsonObject=} opt_vars A map of vars and their values.\n   */\n  trigger(eventType, opt_vars) {\n    devAssert(\n      this.config_['triggers'][eventType],\n      'Cannot trigger non initiated eventType'\n    );\n    triggerAnalyticsEvent(\n      this.parent_,\n      this.getEventTypeInSandbox_(eventType),\n      opt_vars,\n      /** enableDataVars */ false\n    );\n  }\n  /**\n   * @param {string} eventType\n   * @return {string}\n   */\n  getEventTypeInSandbox_(eventType) {\n    return `sandbox-${this.id_}-${eventType}`;\n  }\n}\n\n/**\n * A builder class that enable extension elements to easily build and get a\n * CustomEventReporter instance. Its constructor requires the parent AMP\n * element. It provides two methods #track() and #build() to build the\n * CustomEventReporter instance.\n */\nexport class CustomEventReporterBuilder {\n  /** @param {!AmpElement} parent */\n  constructor(parent) {\n    /** @private {!AmpElement} */\n    this.parent_ = parent;\n\n    /** @private {?JsonObject} */\n    this.config_ = /** @type {JsonObject} */ ({\n      'requests': {},\n      'triggers': {},\n    });\n  }\n\n  /**\n   * @param {!JsonObject} transportConfig\n   */\n  setTransportConfig(transportConfig) {\n    this.config_['transport'] = transportConfig;\n  }\n\n  /**\n   * @param {!JsonObject} extraUrlParamsConfig\n   */\n  setExtraUrlParams(extraUrlParamsConfig) {\n    this.config_['extraUrlParams'] = extraUrlParamsConfig;\n  }\n\n  /**\n   * The #track() method takes in a unique custom-event name, and the\n   * corresponding request url (or an array of request urls). One can call\n   * #track() multiple times with different eventType name (order doesn't\n   * matter) before #build() is called.\n   * @param {string} eventType\n   * @param {string|!Array<string>} request\n   * @return {!CustomEventReporterBuilder}\n   */\n  track(eventType, request) {\n    request = isArray(request) ? request : [request];\n    devAssert(\n      !this.config_['triggers'][eventType],\n      'customEventReporterBuilder should not track same eventType twice'\n    );\n    const requestList = [];\n    for (let i = 0; i < request.length; i++) {\n      const requestName = `${eventType}-request-${i}`;\n      this.config_['requests'][requestName] = request[i];\n      requestList.push(requestName);\n    }\n    this.config_['triggers'][eventType] = {\n      'on': eventType,\n      'request': requestList,\n    };\n    return this;\n  }\n\n  /**\n   * Call the #build() method to build and get the CustomEventReporter instance.\n   * One CustomEventReporterBuilder instance can only build one reporter, which\n   * means #build() should only be called once after all eventType are added.\n   * @return {!CustomEventReporter}\n   */\n  build() {\n    devAssert(this.config_, 'CustomEventReporter already built');\n    const report = new CustomEventReporter(\n      this.parent_,\n      /** @type {!JsonObject} */ (this.config_)\n    );\n    this.config_ = null;\n    return report;\n  }\n}\n\n/**\n * A helper method that should be used by all extension elements to add their\n * sandbox analytics tracking. This method takes care of insert and remove the\n * analytics tracker at the right time of the element lifecycle.\n * @param {!AmpElement} element\n * @param {!Promise<!JsonObject>} promise\n */\nexport function useAnalyticsInSandbox(element, promise) {\n  let analyticsElement = null;\n  let configPromise = promise;\n  // Listener to LOAD_START signal. Insert analytics element on LOAD_START\n  element\n    .signals()\n    .whenSignal(CommonSignals.LOAD_START)\n    .then(() => {\n      if (analyticsElement || !configPromise) {\n        return;\n      }\n      configPromise.then((config) => {\n        if (!configPromise) {\n          // If config promise resolve after unload, do nothing.\n          return;\n        }\n        configPromise = null;\n        analyticsElement = insertAnalyticsElement(element, config, false);\n      });\n    });\n\n  // Listener to UNLOAD signal. Destroy remove element on UNLOAD\n  element\n    .signals()\n    .whenSignal(CommonSignals.UNLOAD)\n    .then(() => {\n      configPromise = null;\n      if (analyticsElement) {\n        removeElement(analyticsElement);\n        analyticsElement = null;\n      }\n    });\n}\n", "import {map} from '#core/types/object';\n\n/**\n * Registry for A4A (AMP Ads for AMPHTML pages) \"is supported\" predicates.\n * If an ad network, {@code ${NETWORK}}, is registered in this object, then the\n * {@code <amp-ad type=\"${NETWORK}\">} implementation will look up its predicate\n * here. If there is a predicate and it and returns {@code true}, then\n * {@code amp-ad} will attempt to render the ad via the A4A pathway (fetch\n * ad creative via early XHR CORS request; verify that it is validated AMP;\n * and then render directly in the host page by splicing into the host DOM).\n * Otherwise, it will attempt to render the ad via the existing \"3p iframe\"\n * pathway (delay load into a cross-domain iframe).\n *\n * @type {!Object<string, function(!Window, !Element): boolean>}\n */\nlet a4aRegistry;\n\n/**\n * Returns the a4a registry map\n * @return {Object}\n */\nexport function getA4ARegistry() {\n  if (!a4aRegistry) {\n    a4aRegistry = map({\n      'adsense': () => true,\n      'adzerk': () => true,\n      'dianomi': () => true,\n      'doubleclick': () => true,\n      'fake': () => true,\n      'nws': () => true,\n      'valueimpression': () => true,\n      // TODO: Add new ad network implementation \"is enabled\" functions here.\n      // Note: if you add a function here that requires a new \"import\", above,\n      // you'll probably also need to add an exception to\n      // build-system/test-configs/dep-check-config.js in the\n      // \"filesMatching: 'ads/**/*.js'\" rule.\n    });\n  }\n\n  return a4aRegistry;\n}\n\n/**\n * An object mapping signing server names to their corresponding URLs.\n * @type {!Object<string, string>}\n */\nexport const signingServerURLs = {\n  'google': 'https://cdn.ampproject.org/amp-ad-verifying-keyset.json',\n  'google-dev': 'https://cdn.ampproject.org/amp-ad-verifying-keyset-dev.json',\n};\n", "import {isIframed} from '#core/dom';\nimport {removeItem} from '#core/types/array';\nimport {getWin} from '#core/window';\n\n/**\n * Returns an IntersectionObserver tracking the Viewport.\n *\n * @param {function(!Array<!IntersectionObserverEntry>)} ioCallback\n * @param {!Window} win\n * @param {{\n *   threshold: (number|!Array<number>|undefined),\n *   needsRootBounds: (boolean|undefined),\n * }=} opts\n * @return {!IntersectionObserver}\n */\nexport function createViewportObserver(ioCallback, win, opts = {}) {\n  const {needsRootBounds, threshold} = opts;\n  // The Document -> Element type conversion is necessary to satisfy the\n  // `IntersectionObserver` constructor extern that only accepts `Element`.\n  const root =\n    isIframed(win) && needsRootBounds\n      ? /** @type {?} */ (win.document)\n      : undefined;\n  return new win.IntersectionObserver(ioCallback, {\n    threshold,\n    root,\n  });\n}\n\n/** @type {!WeakMap<!Window, !IntersectionObserver>} */\nconst viewportObservers = new WeakMap();\n\n/** @type {!WeakMap<!Element, !Array<function(IntersectionObserverEntry)>>} */\nconst viewportCallbacks = new WeakMap();\n\n/**\n * Lazily creates an IntersectionObserver per Window to track when elements\n * enter and exit the viewport. Fires viewportCallback when this happens.\n *\n * @param {!Element} element\n * @param {function(IntersectionObserverEntry)} callback\n * @return {!UnlistenDef} clean up closure to unobserve the element\n */\nexport function observeIntersections(element, callback) {\n  const win = getWin(element);\n  let viewportObserver = viewportObservers.get(win);\n  if (!viewportObserver) {\n    viewportObservers.set(\n      win,\n      (viewportObserver = createViewportObserver(ioCallback, win))\n    );\n  }\n  let callbacks = viewportCallbacks.get(element);\n  if (!callbacks) {\n    callbacks = [];\n    viewportCallbacks.set(element, callbacks);\n  }\n  callbacks.push(callback);\n  viewportObserver.observe(element);\n  return () => {\n    unobserveIntersections(element, callback);\n  };\n}\n\n/**\n * Unsubscribes a callback from receiving IntersectionObserver updates for an element.\n *\n * @param {!Element} element\n * @param {function(IntersectionObserverEntry)} callback\n */\nfunction unobserveIntersections(element, callback) {\n  const callbacks = viewportCallbacks.get(element);\n  if (!callbacks) {\n    return;\n  }\n  if (!removeItem(callbacks, callback)) {\n    return;\n  }\n  if (callbacks.length) {\n    return;\n  }\n  // If an element has no more observer callbacks, then unobserve it.\n  const win = getWin(element);\n  const viewportObserver = viewportObservers.get(win);\n  viewportObserver?.unobserve(element);\n  viewportCallbacks.delete(element);\n}\n\n/**\n * Call the registered callbacks for each element that has crossed the\n * viewport boundary.\n *\n * @param {!Array<!IntersectionObserverEntry>} entries\n */\nfunction ioCallback(entries) {\n  const seen = new Set();\n  for (let i = entries.length - 1; i >= 0; i--) {\n    const entry = entries[i];\n    const {target} = entry;\n    if (seen.has(target)) {\n      continue;\n    }\n    seen.add(target);\n    const callbacks = viewportCallbacks.get(target);\n    if (!callbacks) {\n      continue;\n    }\n    for (let k = 0; k < callbacks.length; k++) {\n      const callback = callbacks[k];\n      callback(entry);\n    }\n  }\n}\n", "import {Deferred} from '#core/data-structures/promise';\nimport {dict} from '#core/types/object';\nimport {getWin} from '#core/window';\n\nimport {LayoutRectDef, layoutRectFromDomRect} from './rect';\nimport {createViewportObserver} from './viewport-observer';\n\n/** @type {!WeakMap<!Element, !Deferred<!IntersectionObserverEntry>>|undefined} */\nlet intersectionDeferreds;\n\n/** @type {!WeakMap<!Window, !IntersectionObserver>|undefined} */\nlet intersectionObservers;\n\n/**\n * @param {!Window} win\n * @return {!IntersectionObserver}\n */\nfunction getInOb(win) {\n  if (!intersectionDeferreds) {\n    intersectionDeferreds = new WeakMap();\n    intersectionObservers = new WeakMap();\n  }\n\n  let observer = intersectionObservers.get(win);\n  if (!observer) {\n    observer = createViewportObserver(\n      (entries) => {\n        const seen = new Set();\n        for (let i = entries.length - 1; i >= 0; i--) {\n          const {target} = entries[i];\n          if (seen.has(target)) {\n            continue;\n          }\n          seen.add(target);\n\n          observer.unobserve(target);\n          intersectionDeferreds.get(target).resolve(entries[i]);\n          intersectionDeferreds.delete(target);\n        }\n      },\n      win,\n      {needsRootBounds: true}\n    );\n    intersectionObservers.set(win, observer);\n  }\n  return observer;\n}\n\n/**\n * Returns a promise that resolves with the intersection entry for the given element.\n *\n * If multiple measures for the same element occur very quickly, they will\n * dedupe to the same promise.\n *\n * @param {!Element} el\n * @return {!Promise<!IntersectionObserverEntry>}\n */\nexport function measureIntersection(el) {\n  if (intersectionDeferreds && intersectionDeferreds.has(el)) {\n    return intersectionDeferreds.get(el).promise;\n  }\n\n  const inOb = getInOb(getWin(el));\n  inOb.observe(el);\n\n  const deferred = new Deferred();\n  intersectionDeferreds.set(el, deferred);\n  return deferred.promise;\n}\n\n/**\n * Convert an IntersectionObserverEntry to a regular object to make it serializable.\n *\n * @param {!IntersectionObserverEntry} entry\n * @return {!JsonObject}\n */\nexport function intersectionEntryToJson(entry) {\n  return dict({\n    'time': entry.time,\n    'rootBounds': safeLayoutRectFromDomRect(entry.rootBounds),\n    'boundingClientRect': safeLayoutRectFromDomRect(entry.boundingClientRect),\n    'intersectionRect': safeLayoutRectFromDomRect(entry.intersectionRect),\n    'intersectionRatio': entry.intersectionRatio,\n  });\n}\n\n/**\n * @param {?} rect\n * @return {?LayoutRectDef}\n */\nfunction safeLayoutRectFromDomRect(rect) {\n  if (rect === null) {\n    return null;\n  }\n  return layoutRectFromDomRect(/** @type {!ClientRect} */ (rect));\n}\n", "import {devAssert} from '#core/assert';\n\nexport class DetachedDomStream {\n  /**\n   * @param {!Window} win\n   * @param {function(!Document):void} onChunk\n   * @param {function(!Document):void} onEnd\n   */\n  constructor(win, onChunk, onEnd) {\n    /** @const @private {function(!Document):void} */\n    this.onChunk_ = onChunk;\n\n    /** @const @private {function(!Document):void} */\n    this.onEnd_ = onEnd;\n\n    /** @const @private {!Document} */\n    this.detachedDoc_ = win.document.implementation.createHTMLDocument('');\n    this.detachedDoc_.open();\n\n    /** @private {boolean} */\n    this.eof_ = false;\n  }\n\n  /**\n   * Write chunk into detached doc, and call given chunk cb.\n   * @public\n   * @param {string} chunk\n   */\n  write(chunk) {\n    devAssert(!this.eof_, 'Detached doc already closed.');\n\n    if (chunk) {\n      this.detachedDoc_.write(chunk);\n    }\n    this.onChunk_(this.detachedDoc_);\n  }\n\n  /**\n   * Called when stream is finished. Close the detached doc, and call cb.\n   * @public\n   */\n  close() {\n    this.eof_ = true;\n    this.detachedDoc_.close();\n    this.onEnd_(this.detachedDoc_);\n  }\n}\n", "import {Deferred} from '#core/data-structures/promise';\n\n/**\n * Decodes readable stream from response and writes to given writeable stream.\n * Returns a promise that resolves when first bytes are received from the\n * response, or we learn that the response is empty.\n * This function should be replaced with transform stream when well supported.\n * @param {!Window} win\n * @param {!Response} response\n * @param {!./detached.DetachedDomStream} writer\n * @return {!Promise<boolean>} true if response has content, false if\n * the response is empty.\n */\nexport function streamResponseToWriter(win, response, writer) {\n  const hasContentDeferred = new Deferred();\n  // Try native streaming first.\n  if (win.TextDecoder && win.ReadableStream) {\n    let firstRead = true;\n    const reader = response.body.getReader();\n    const decoder = new TextDecoder();\n\n    reader.read().then(function handleChunk({done, value}) {\n      if (firstRead) {\n        hasContentDeferred.resolve(!done);\n        firstRead = false;\n      }\n\n      // We need to close and flush the decoder on the last chunk even if\n      // we have no more bytes and `decode` will throw if not given an\n      // array buffer.\n      value = value || new Uint8Array(0);\n      const text = decoder.decode(value, {stream: !done});\n\n      if (text) {\n        writer.write(text);\n      }\n\n      if (!done) {\n        return reader.read().then(handleChunk);\n      }\n\n      writer.close();\n    });\n  } else {\n    // Fallback case waits for the complete response before writing.\n    response.text().then((text) => {\n      hasContentDeferred.resolve(!!text);\n      writer.write(text);\n      writer.close();\n    });\n  }\n\n  return hasContentDeferred.promise;\n}\n", "import {jsonConfiguration} from '#core/types/object/json';\n\nimport {getMode} from '../../mode';\n\n//////////////////////////////////////////////////////////////////\n//                                                              //\n//     IMPORTANT: All keys in RTC_VENDORS must be lowercase     //\n//       otherwise the vendor endpoint will not be used.        //\n//                                                              //\n//////////////////////////////////////////////////////////////////\n\n// Note: disableKeyAppend is an option specifically for DoubleClick's\n// implementation of RTC. It prevents the vendor ID from being\n// appended onto each key of the RTC response, for each vendor.\n// This appending is done to prevent a collision case during merge\n// that would cause one RTC response to overwrite another if they\n// share key names.\n/** @typedef {{\n    url: string,\n    macros: Array<string>,\n    errorReportingUrl: (string|undefined),\n    disableKeyAppend: boolean}} */\nlet RtcVendorDef;\n\n/** @const {!Object<string, RtcVendorDef>} */\nconst RTC_VENDORS = jsonConfiguration({\n  ////////////////////////////////////////////////////////////////////\n  //                                                                //\n  //              !!!      IMPORTANT NOTE     !!!                   //\n  //                                                                //\n  //  If you are adding a new vendor config object to this object,  //\n  //  make sure to also update the RTC documentation in these two   //\n  //  files under \"supported vendors\".                              //\n  // https://github.com/ampproject/amphtml/blob/main/extensions/amp-a4a/rtc-documentation.md\n  // https://github.com/ampproject/amphtml/blob/main/extensions/amp-a4a/rtc-publisher-implementation-guide.md\n  ////////////////////////////////////////////////////////////////////\n\n  // Add vendors here\n  admax: {\n    url: 'https://prebid.admaxmedia.io/openrtb2/amp?tag_id=PLACEMENT_ID&w=ATTR(width)&h=ATTR(height)&ow=ATTR(data-override-width)&oh=ATTR(data-override-height)&ms=ATTR(data-multi-size)&slot=ATTR(data-slot)&targeting=TGT&curl=CANONICAL_URL&timeout=TIMEOUT&adcid=ADCID&purl=HREF&gdpr_consent=CONSENT_STRING&account=ACCOUNT_ID',\n    macros: ['PLACEMENT_ID', 'CONSENT_STRING', 'ACCOUNT_ID'],\n    disableKeyAppend: true,\n  },\n  adpushup: {\n    url: 'https://amp.adpushup.com/prebidserver/openrtb2/amp?tag_id=TAG_ID&w=ATTR(width)&h=ATTR(height)&ow=ATTR(data-override-width)&oh=ATTR(data-override-height)&ms=ATTR(data-multi-size)&slot=ATTR(data-slot)&curl=CANONICAL_URL&gdpr_consent=CONSENT_STRING&adc=ADCID&purl=HREF',\n    macros: ['TAG_ID', 'CONSENT_STRING'],\n    disableKeyAppend: true,\n  },\n  andbeyond: {\n    url: 'https://prebid.andbeyond.media/amp.php?tag_id=TAG_ID',\n    macros: ['TAG_ID'],\n    disableKeyAppend: true,\n  },\n  aps: {\n    url: 'https://aax.amazon-adsystem.com/e/dtb/bid?src=PUB_ID&pubid=PUB_UUID&amp=1&u=CANONICAL_URL&slots=%5B%7B%22sd%22%3A%22ATTR(data-slot)%22%2C%22s%22%3A%5B%22ATTR(width)xATTR(height)%22%5D%2C%22ms%22%3A%22ATTR(data-multi-size)%22%7D%5D&pj=PARAMS&gdprc=CONSENT_STRING',\n    macros: ['PUB_ID', 'PARAMS', 'PUB_UUID', 'CONSENT_STRING'],\n    disableKeyAppend: true,\n  },\n  automatad: {\n    url: 'https://pbs01.automatad.com/openrtb2/amp?tag_id=TAG_ID',\n    macros: ['TAG_ID'],\n    disableKeyAppend: true,\n  },\n  browsi: {\n    url: 'https://amp.browsiprod.com/predict?pvid=PAGEVIEWID_64&ot=ELEMENT_POS&ul=SCROLL_TOP&pl=PAGE_HEIGHT&bks=BKG_STATE&pk=PUB_KEY&sk=SITE_KEY&h=ATTR(height)&adix=ATTR(data-amp-slot-index)&ref=REFERRER&url=HREF',\n    macros: ['PUB_KEY', 'SITE_KEY'],\n    errorReportingUrl:\n      'https://events.browsiprod.com/events/amp?e=ERROR_TYPE&h=HREF&et=predict_error',\n    disableKeyAppend: true,\n  },\n  criteo: {\n    url: 'https://bidder.criteo.com/amp/rtc?zid=ZONE_ID&nid=NETWORK_ID&psubid=PUBLISHER_SUB_ID&lir=LINE_ITEM_RANGES&w=ATTR(width)&h=ATTR(height)&ow=ATTR(data-override-width)&oh=ATTR(data-override-height)&ms=ATTR(data-multi-size)&slot=ATTR(data-slot)&timeout=TIMEOUT&curl=CANONICAL_URL&href=HREF&cst=CONSENT_STATE&cst_str=CONSENT_STRING&cst_type=CONSENT_METADATA(consentStringType)',\n    macros: [\n      'ZONE_ID',\n      'NETWORK_ID',\n      'PUBLISHER_SUB_ID',\n      'LINE_ITEM_RANGES',\n      'CONSENT_STATE',\n      'CONSENT_STRING',\n    ],\n    disableKeyAppend: true,\n  },\n  freestar: {\n    url: 'https://prebid-amp.pub.network/openrtb2/amp?tag_id=TAG_ID&w=ATTR(width)&h=ATTR(height)&ow=ATTR(data-override-width)&oh=ATTR(data-override-height)&ms=ATTR(data-multi-size)&slot=ATTR(data-slot)&targeting=TGT&curl=CANONICAL_URL&timeout=TIMEOUT&adc=ADCID&purl=HREF&gdpr_consent=CONSENT_STRING&account=ACCOUNT_ID',\n    macros: ['TAG_ID', 'CONSENT_STRING', 'ACCOUNT_ID'],\n    disableKeyAppend: true,\n  },\n  future: {\n    url: 'https://ads.servebom.com/amp?adunit=ADUNIT&gdpr_consent=CONSENT_STRING',\n    macros: ['ADUNIT', 'CONSENT_STRING'],\n    disableKeyAppend: true,\n  },\n  glxm: {\n    url: 'https://pbserver.galaxiemedia.fr/openrtb2/amp?tag_id=REQUEST_ID&w=ATTR(width)&h=ATTR(height)&ow=ATTR(data-override-width)&oh=ATTR(data-override-height)&ms=ATTR(data-multi-size)&slot=ATTR(data-slot)&targeting=TGT&curl=CANONICAL_URL&timeout=TIMEOUT&adc=ADCID&purl=HREF&gdpr_consent=CONSENT_STRING&account=ACCOUNT_ID',\n    macros: ['REQUEST_ID', 'CONSENT_STRING', 'ACCOUNT_ID'],\n    disableKeyAppend: true,\n  },\n  highfivve: {\n    url: 'https://prebid-server.h5v.eu/openrtb2/amp?tag_id=TAG_ID&w=ATTR(width)&h=ATTR(height)&ow=ATTR(data-override-width)&oh=ATTR(data-override-height)&ms=ATTR(data-multi-size)&slot=ATTR(data-slot)&targeting=TGT&curl=CANONICAL_URL&timeout=TIMEOUT&adc=ADCID&purl=HREF&gdpr_consent=CONSENT_STRING&account=ACCOUNT_ID',\n    macros: ['TAG_ID', 'CONSENT_STRING', 'ACCOUNT_ID'],\n    disableKeyAppend: true,\n  },\n  hubvisor: {\n    url: 'https://pbs.hubvisor.io/openrtb2/amp?tag_id=PLACEMENT_ID&slot=ATTR(data-slot)&targeting=TGT&curl=CANONICAL_URL&timeout=TIMEOUT&adcid=ADCID&purl=HREF&gdpr_consent=CONSENT_STRING',\n    macros: ['PLACEMENT_ID', 'CONSENT_STRING'],\n    disableKeyAppend: true,\n  },\n  indexexchange: {\n    url: 'https://amp.casalemedia.com/amprtc?v=1&w=ATTR(width)&h=ATTR(height)&ow=ATTR(data-override-width)&oh=ATTR(data-override-height)&ms=ATTR(data-multi-size)&s=SITE_ID&p=CANONICAL_URL&consent_state=CONSENT_STATE&consent_string=CONSENT_STRING',\n    macros: ['SITE_ID', 'CONSENT_STATE', 'CONSENT_STRING'],\n    disableKeyAppend: true,\n  },\n  kargo: {\n    url: 'https://krk.kargo.com/api/v1/amprtc?slot=SLOT_ID&w=ATTR(width)&h=ATTR(height)&ow=ATTR(data-override-width)&oh=ATTR(data-override-height)&ms=ATTR(data-multi-size)&pslot=ATTR(data-slot)&pvid=PAGEVIEWID&targeting=TGT&curl=CANONICAL_URL&timeout=TIMEOUT&acid=ADCID&purl=HREF',\n    macros: ['SLOT_ID'],\n    errorReportingUrl:\n      'https://krk.kargo.com/api/v1/event/amprtc-error?error_type=ERROR_TYPE&url=HREF',\n    disableKeyAppend: true,\n  },\n  lotame: {\n    url: 'https://ad.crwdcntrl.net/5/pe=y/c=CLIENT_ID/an=AD_NETWORK/ma=MAX_AUDIENCES',\n    macros: ['CLIENT_ID', 'AD_NETWORK', 'MAX_AUDIENCES'],\n    disableKeyAppend: true,\n  },\n  medianet: {\n    url: 'https://amprtc.media.net/rtb/getrtc?cid=CID&w=ATTR(width)&h=ATTR(height)&ow=ATTR(data-override-width)&oh=ATTR(data-override-height)&ms=ATTR(data-multi-size)&slot=ATTR(data-slot)&tgt=TGT&curl=CANONICAL_URL&to=TIMEOUT&purl=HREF&cste=CONSENT_STATE&cstr=CONSENT_STRING&adcid=ADCID&dmsv=ATTR(data-multi-size-validation)&ep=ELEMENT_POS&st=SCROLL_TOP&ph=PAGE_HEIGHT&bks=BKG_STATE&ref=REFERRER&dj=ATTR(data-json)',\n    macros: ['CID'],\n    errorReportingUrl:\n      'https://qsearch-a.akamaihd.net/log?logid=kfk&evtid=projectevents&project=amprtc_error&error=ERROR_TYPE&rd=HREF',\n    disableKeyAppend: true,\n  },\n  mediasquare: {\n    url: 'https://pbs-front.mediasquare.fr/msq_prebid?owner=OWNER&code=CODE&sizes=ATTR(data-multi-size)&adunit=ATTR(data-slot)&referer=HREF&gdpr_consent=CONSENT_STRING',\n    macros: ['OWNER', 'CODE', 'CONSENT_STRING'],\n    disableKeyAppend: true,\n  },\n  navegg: {\n    url: 'https://usr.navdmp.com/usr?acc=NVG_ACC&wst=0&v=10',\n    macros: ['NVG_ACC'],\n    disableKeyAppend: true,\n  },\n  newspassid: {\n    url: 'https://bidder.newspassid.com/openrtb2/amp?tag_id=TAG_ID&placement_id=PLACEMENT_ID&gdpr_consent=CONSENT_STRING&ad_unit_code=AD_UNIT_CODE&site_id=SITE_ID&publisher_id=PUBLISHER_ID&custom_data=TGT&pubcid=PUBCID&adcid=ADCID&w=ATTR(width)&h=ATTR(height)&ow=ATTR(data-override-width)&oh=ATTR(data-override-height)&ms=ATTR(data-multi-size)&slot=ATTR(data-slot)&curl=CANONICAL_URL&timeout=TIMEOUT&purl=HREF',\n    macros: [\n      'TAG_ID',\n      'PLACEMENT_ID',\n      'SITE_ID',\n      'PUBLISHER_ID',\n      'AD_UNIT_CODE',\n      'PUBCID',\n    ],\n    errorReportingUrl:\n      'https://bidder.newspassid.com/amp_error?err=ERROR_TYPE&url=HREF',\n    disableKeyAppend: true,\n  },\n  nexx360: {\n    url: 'https://pbs.nexx360.io/openrtb2/amp?tag_id=TAG_ID&w=ATTR(width)&h=ATTR(height)&ow=ATTR(data-override-width)&oh=ATTR(data-override-height)&ms=ATTR(data-multi-size)&slot=ATTR(data-slot)&targeting=TGT&curl=CANONICAL_URL&timeout=TIMEOUT&adc=ADCID&purl=HREF&gdpr_consent=CONSENT_STRING&account=ACCOUNT_ID',\n    macros: ['TAG_ID', 'CONSENT_STRING', 'ACCOUNT_ID'],\n    disableKeyAppend: true,\n  },\n  openwrap: {\n    // PubMatic OpenWrap\n    url: 'https://ow.pubmatic.com/amp?v=1&w=ATTR(width)&h=ATTR(height)&ms=ATTR(data-multi-size)&auId=ATTR(data-slot)&purl=HREF&pubId=PUB_ID&profId=PROFILE_ID&consent_string=CONSENT_STRING&gdpr_applies=CONSENT_METADATA(gdprApplies)&addtl_consent=CONSENT_METADATA(additionalConsent)&consent_type=CONSENT_METADATA(consentStringType)',\n    macros: ['PUB_ID', 'PROFILE_ID', 'CONSENT_STRING'],\n    errorReportingUrl: 'https://ow.pubmatic.com/amp_error?e=ERROR_TYPE&h=HREF',\n    disableKeyAppend: true,\n  },\n  ozone: {\n    url: 'https://elb.the-ozone-project.com/openrtb2/amp?tag_id=TAG_ID&placement_id=PLACEMENT_ID&gdpr_consent=CONSENT_STRING&ad_unit_code=AD_UNIT_CODE&site_id=SITE_ID&publisher_id=PUBLISHER_ID&custom_data=TGT&pubcid=PUBCID&adcid=ADCID&w=ATTR(width)&h=ATTR(height)&ow=ATTR(data-override-width)&oh=ATTR(data-override-height)&ms=ATTR(data-multi-size)&slot=ATTR(data-slot)&curl=CANONICAL_URL&timeout=TIMEOUT&purl=HREF',\n    macros: [\n      'TAG_ID',\n      'PLACEMENT_ID',\n      'SITE_ID',\n      'PUBLISHER_ID',\n      'AD_UNIT_CODE',\n      'PUBCID',\n    ],\n    errorReportingUrl:\n      'https://elb.the-ozone-project.com/amp_error?err=ERROR_TYPE&url=HREF',\n    disableKeyAppend: true,\n  },\n  prebidappnexus: {\n    url: 'https://prebid.adnxs.com/pbs/v1/openrtb2/amp?tag_id=PLACEMENT_ID&w=ATTR(width)&h=ATTR(height)&ow=ATTR(data-override-width)&oh=ATTR(data-override-height)&ms=ATTR(data-multi-size)&slot=ATTR(data-slot)&targeting=TGT&curl=CANONICAL_URL&timeout=TIMEOUT&adcid=ADCID&purl=HREF&gdpr_consent=CONSENT_STRING&account=ACCOUNT_ID&gdpr_applies=CONSENT_METADATA(gdprApplies)&addtl_consent=CONSENT_METADATA(additionalConsent)&consent_type=CONSENT_METADATA(consentStringType)',\n    macros: ['PLACEMENT_ID', 'CONSENT_STRING', 'ACCOUNT_ID'],\n    disableKeyAppend: true,\n  },\n  prebidappnexuspsp: {\n    url: 'https://ib.adnxs.com/prebid/amp?tag_id=PLACEMENT_ID&w=ATTR(width)&h=ATTR(height)&ow=ATTR(data-override-width)&oh=ATTR(data-override-height)&ms=ATTR(data-multi-size)&slot=ATTR(data-slot)&targeting=TGT&curl=CANONICAL_URL&timeout=TIMEOUT&adcid=ADCID&purl=HREF&gdpr_consent=CONSENT_STRING&account=ACCOUNT_ID&gdpr_applies=CONSENT_METADATA(gdprApplies)&addtl_consent=CONSENT_METADATA(additionalConsent)&consent_type=CONSENT_METADATA(consentStringType)',\n    macros: ['PLACEMENT_ID', 'CONSENT_STRING', 'ACCOUNT_ID'],\n    disableKeyAppend: true,\n  },\n  prebidflux: {\n    url: 'https://prebid-server.flux-adserver.com/openrtb2/amp?tag_id=TAG_ID',\n    macros: ['TAG_ID'],\n    disableKeyAppend: true,\n  },\n  prebidopenx: {\n    url: 'https://prebid.openx.net/openrtb2/amp?tag_id=REQUEST_ID&w=ATTR(width)&h=ATTR(height)&ow=ATTR(data-override-width)&oh=ATTR(data-override-height)&ms=ATTR(data-multi-size)&slot=ATTR(data-slot)&targeting=TGT&curl=CANONICAL_URL&timeout=TIMEOUT&adc=ADCID&purl=HREF&gdpr_consent=CONSENT_STRING&account=ACCOUNT_ID',\n    macros: ['REQUEST_ID', 'CONSENT_STRING', 'ACCOUNT_ID'],\n    disableKeyAppend: true,\n  },\n  prebidrubicon: {\n    url: 'https://prebid-server.rubiconproject.com/openrtb2/amp?tag_id=REQUEST_ID&w=ATTR(width)&h=ATTR(height)&ow=ATTR(data-override-width)&oh=ATTR(data-override-height)&ms=ATTR(data-multi-size)&slot=ATTR(data-slot)&targeting=TGT&curl=CANONICAL_URL&timeout=TIMEOUT&adc=ADCID&purl=HREF&gdpr_consent=CONSENT_STRING&account=ACCOUNT_ID&gdpr_applies=CONSENT_METADATA(gdprApplies)&addtl_consent=CONSENT_METADATA(additionalConsent)&consent_type=CONSENT_METADATA(consentStringType)',\n    macros: ['REQUEST_ID', 'CONSENT_STRING', 'ACCOUNT_ID'],\n    disableKeyAppend: true,\n  },\n  purch: {\n    url: 'https://ads.servebom.com/tmntag.js?v=1.2&fmt=amp&o={%22p%22%3APLACEMENT_ID}&div_id=DIV_ID',\n    macros: ['PLACEMENT_ID', 'DIV_ID'],\n    disableKeyAppend: true,\n  },\n  salesforcedmp: {\n    url: 'https://cdn.krxd.net/userdata/v2/amp/ORGANIZATION_ID?segments_key=SEGMENTS_KEY&kuid_key=USER_KEY',\n    macros: ['ORGANIZATION_ID', 'SEGMENTS_KEY', 'USER_KEY'],\n    disableKeyAppend: true,\n  },\n  sonobi: {\n    url: 'https://apex.go.sonobi.com/trinity.json?key_maker=%7B%22_DIVIDER_ATTR(data-slot)%7C1%22%3A%22PLACEMENT_ID_DIVIDER_ATTR(width)xATTR(height)%2CATTR(data-multi-size)%22%7D&ref=CANONICAL_URL&lib_name=amp&lib_v=0.1&pv=PAGEVIEWID&amp=1',\n    disableKeyAppend: true,\n    macros: ['PLACEMENT_ID', '_DIVIDER_'],\n  },\n  t13: {\n    url: 'https://s2s.t13.io/openrtb2/amp?tag_id=TAG_ID&w=ATTR(width)&h=ATTR(height)&ow=ATTR(data-override-width)&oh=ATTR(data-override-height)&ms=ATTR(data-multi-size)&slot=ATTR(data-slot)&targeting=TGT&curl=CANONICAL_URL&timeout=TIMEOUT&adc=ADCID&purl=HREF&gdpr_consent=CONSENT_STRING&account=ACCOUNT_ID',\n    macros: ['TAG_ID', 'CONSENT_STRING', 'ACCOUNT_ID'],\n    disableKeyAppend: true,\n  },\n  tail: {\n    url: 'https://ACCOUNT_ID.seg.t.tailtarget.com/amp',\n    macros: ['ACCOUNT_ID'],\n    disableKeyAppend: true,\n  },\n  yieldbot: {\n    url: 'https://i.yldbt.com/m/YB_PSN/v1/amp/init?curl=CANONICAL_URL&sn=YB_SLOT&w=ATTR(width)&h=ATTR(height)&ow=ATTR(data-override-width)&oh=ATTR(data-override-height)&ms=ATTR(data-multi-size)&aup=ATTR(data-slot)&pvi=PAGEVIEWID&tgt=TGT&adcid=ADCID&href=HREF',\n    macros: ['YB_PSN', 'YB_SLOT'],\n    disableKeyAppend: true,\n  },\n  yieldlab: {\n    url: 'https://ad.yieldlab.net/yp/ADSLOT_ID?content=amp&consent=CONSENT_STRING&t=amp%3D1',\n    macros: ['ADSLOT_ID', 'CONSENT_STRING'],\n    disableKeyAppend: true,\n  },\n  snigel: {\n    url: 'https://adserv.snigelweb.com/bp/v1/openrtb2/amp?tag_id=PLACEMENT_ID&w=ATTR(width)&h=ATTR(height)&ow=ATTR(data-override-width)&oh=ATTR(data-override-height)&ms=ATTR(data-multi-size)&slot=ATTR(data-slot)&targeting=TGT&curl=CANONICAL_URL&timeout=TIMEOUT&adcid=ADCID&purl=HREF&consent_string=CONSENT_STRING&account=ACCOUNT_ID&gdpr_applies=CONSENT_METADATA(gdprApplies)&addtl_consent=CONSENT_METADATA(additionalConsent)&consent_type=CONSENT_METADATA(consentStringType)',\n    macros: ['PLACEMENT_ID', 'CONSENT_STRING', 'ACCOUNT_ID'],\n    disableKeyAppend: true,\n  },\n});\n\n// DO NOT MODIFY: Setup for tests\nif (getMode().localDev || getMode().test) {\n  RTC_VENDORS['fakevendor'] = /** @type {RtcVendorDef} */ ({\n    url: 'https://localhost:8000/examples/rtcE1.json?slot_id=SLOT_ID&page_id=PAGE_ID&foo_id=FOO_ID',\n    macros: ['SLOT_ID', 'PAGE_ID', 'FOO_ID'],\n  });\n  RTC_VENDORS['fakevendor2'] = /** @type {RtcVendorDef} */ ({\n    url: 'https://localhost:8000/examples/rtcE1.json?slot_id=SLOT_ID&page_id=PAGE_ID&foo_id=FOO_ID',\n    errorReportingUrl: 'https://localhost:8000/examples/ERROR_TYPE',\n    disableKeyAppend: true,\n  });\n}\n\nexport {RTC_VENDORS};\n", "/**\n * Common AMP events.\n * @enum {string}\n */\nexport const AmpEvents = {\n  DOM_UPDATE: 'amp:dom-update',\n  FORM_DIRTINESS_CHANGE: 'amp:form-dirtiness-change',\n  FORM_VALUE_CHANGE: 'amp:form-value-change',\n  VISIBILITY_CHANGE: 'amp:visibilitychange', // https://github.com/ampproject/amphtml/blob/main/ads/README.md#page-visibility\n  // The following codes are only used for testing.\n  // TODO(choumx): Move these to a separate enum so they can be DCE'd.\n  ATTACHED: 'amp:attached',\n  STUBBED: 'amp:stubbed',\n  LOAD_START: 'amp:load-start',\n  LOAD_END: 'amp:load-end',\n  ERROR: 'amp:error',\n  SIZE_CHANGED: 'amp:size-changed',\n  UNLOAD: 'amp:unload',\n};\n", "/**\n * @param {number=} opt_base Exponential base. Defaults to 2.\n * @return {function(function()): number} Function that when invoked will\n *     call the passed in function. On every invocation the next\n *     invocation of the passed in function will be exponentially\n *     later. Returned function returns timeout id.\n */\nexport function exponentialBackoff(opt_base) {\n  const getTimeout = exponentialBackoffClock(opt_base);\n  return (work) => {\n    return setTimeout(work, getTimeout());\n  };\n}\n\n/**\n * @param {number=} opt_base Exponential base. Defaults to 2.\n * @return {function(): number} Function that when invoked will return\n *    a number that exponentially grows per invocation.\n */\nexport function exponentialBackoffClock(opt_base) {\n  const base = opt_base || 2;\n  let count = 0;\n  return () => {\n    let wait = Math.pow(base, count++);\n    wait += getJitter(wait);\n    return wait * 1000;\n  };\n}\n\n/**\n * Add jitter to avoid the thundering herd. This can e.g. happen when\n * we poll a backend and it fails for everyone at the same time.\n * We add up to 30% (default) longer or shorter than the given time.\n *\n * @param {number} wait the amount if base milliseconds\n * @param {number=} opt_perc the min/max percentage to add or sutract\n * @return {number}\n */\nexport function getJitter(wait, opt_perc) {\n  opt_perc = opt_perc || 0.3;\n  let jitter = wait * opt_perc * Math.random();\n  if (Math.random() > 0.5) {\n    jitter *= -1;\n  }\n  return jitter;\n}\n", "import {CommonSignals} from '#core/constants/common-signals';\nimport {TickLabel} from '#core/constants/enums';\nimport {insertAfterOrAtStart, waitForBodyOpenPromise} from '#core/dom';\nimport {setStyles} from '#core/dom/style';\nimport {rethrowAsync} from '#core/error';\nimport {map} from '#core/types/object';\n\nimport {Services} from '#service';\n\nimport {dev, devAssert} from '#utils/log';\n\nimport {waitForServices} from './render-delaying-services';\nimport {getAmpdoc} from './service-helpers';\n\nconst TRANSFORMER_PROP = '__AMP_CSS_TR';\nconst STYLE_MAP_PROP = '__AMP_CSS_SM';\n\n/**\n * Adds the given css text to the given ampdoc.\n *\n * The style tags will be at the beginning of the head before all author\n * styles. One element can be the main runtime CSS. This is guaranteed\n * to always be the first stylesheet in the doc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc The ampdoc that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are available.\n *     Not using a promise, because this is synchronous when possible.\n *     for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\nexport function installStylesForDoc(\n  ampdoc,\n  cssText,\n  cb,\n  opt_isRuntimeCss,\n  opt_ext\n) {\n  const cssRoot = ampdoc.getHeadNode();\n  const style = insertStyleElement(\n    cssRoot,\n    maybeTransform(cssRoot, cssText),\n    opt_isRuntimeCss || false,\n    opt_ext || null\n  );\n\n  if (cb) {\n    const rootNode = ampdoc.getRootNode();\n    // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n    if (styleLoaded(rootNode, style)) {\n      cb(style);\n      return style;\n    }\n    // Poll until styles are available.\n    const interval = setInterval(() => {\n      if (styleLoaded(rootNode, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n  return style;\n}\n\n/**\n * Creates the properly configured style element.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @param {boolean} isRuntimeCss\n * @param {?string} ext\n * @return {!Element}\n */\nfunction insertStyleElement(cssRoot, cssText, isRuntimeCss, ext) {\n  let styleMap = cssRoot[STYLE_MAP_PROP];\n  if (!styleMap) {\n    styleMap = cssRoot[STYLE_MAP_PROP] = map();\n  }\n\n  const isExtCss =\n    !isRuntimeCss && ext && ext != 'amp-custom' && ext != 'amp-keyframes';\n  const key = isRuntimeCss\n    ? 'amp-runtime'\n    : isExtCss\n    ? `amp-extension=${ext}`\n    : null;\n\n  // Check if it has already been created or discovered.\n  if (key) {\n    const existing = getExistingStyleElement(cssRoot, styleMap, key);\n    if (existing) {\n      if (existing.textContent !== cssText) {\n        existing.textContent = cssText;\n      }\n      return existing;\n    }\n  }\n\n  // Create the new style element and append to cssRoot.\n  const doc = cssRoot.ownerDocument || cssRoot;\n  const style = doc.createElement('style');\n  style./*OK*/ textContent = cssText;\n  let afterElement = null;\n  // Make sure that we place style tags after the main runtime CSS. Otherwise\n  // the order is random.\n  if (isRuntimeCss) {\n    style.setAttribute('amp-runtime', '');\n  } else if (isExtCss) {\n    style.setAttribute('amp-extension', ext || '');\n    afterElement = dev().assertElement(\n      getExistingStyleElement(cssRoot, styleMap, 'amp-runtime')\n    );\n  } else {\n    if (ext) {\n      style.setAttribute(ext, '');\n    }\n    afterElement = cssRoot.lastChild;\n  }\n  insertAfterOrAtStart(cssRoot, style, afterElement);\n  if (key) {\n    styleMap[key] = style;\n  }\n  return style;\n}\n\n/**\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {!Object<string, !Element>} styleMap\n * @param {string} key\n * @return {?Element}\n */\nfunction getExistingStyleElement(cssRoot, styleMap, key) {\n  // Already cached.\n  if (styleMap[key]) {\n    return styleMap[key];\n  }\n  // Check if the style has already been added by the server layout.\n  const existing = cssRoot./*OK*/ querySelector(`style[${key}]`);\n  if (existing) {\n    styleMap[key] = existing;\n    return existing;\n  }\n  // Nothing found.\n  return null;\n}\n\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {function(string):string} transformer\n */\nexport function installCssTransformer(cssRoot, transformer) {\n  cssRoot[TRANSFORMER_PROP] = transformer;\n}\n\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @return {string}\n */\nfunction maybeTransform(cssRoot, cssText) {\n  const transformer = cssRoot[TRANSFORMER_PROP];\n  return transformer ? transformer(cssText) : cssText;\n}\n\n/** @private {boolean} */\nlet bodyMadeVisible = false;\n\n/**\n * @param {boolean} value\n * @visibleForTesting\n */\nexport function setBodyMadeVisibleForTesting(value) {\n  bodyMadeVisible = value;\n}\n\n/**\n * Sets the document's body opacity to 1.\n * If the body is not yet available (because our script was loaded\n * synchronously), polls until it is.\n * @param {!Document} doc The document who's body we should make visible.\n */\nexport function makeBodyVisible(doc) {\n  devAssert(doc.defaultView, 'Passed in document must have a defaultView');\n  const win = /** @type {!Window} */ (doc.defaultView);\n  waitForBodyOpenPromise(doc)\n    .then(() => {\n      return waitForServices(win);\n    })\n    .catch((reason) => {\n      rethrowAsync(reason);\n      return [];\n    })\n    .then((services) => {\n      bodyMadeVisible = true;\n      if (INI_LOAD_INOB) {\n        // Force sync measurement to ensure that style recalc is complete\n        // before showing body, which would trigger FCP. This should reduce\n        // make it less likely that a CLS would be triggered after FCP.\n        doc.body./*OK*/ getBoundingClientRect();\n      }\n      setBodyVisibleStyles(doc);\n      const ampdoc = getAmpdoc(doc);\n      ampdoc.signals().signal(CommonSignals.RENDER_START);\n      if (services.length > 0) {\n        const resources = Services.resourcesForDoc(doc.documentElement);\n        resources./*OK*/ schedulePass(1, /* relayoutAll */ true);\n      }\n      try {\n        const perf = Services.performanceFor(win);\n        perf.tick(TickLabel.MAKE_BODY_VISIBLE);\n        perf.flush();\n      } catch (e) {}\n    });\n}\n\n/**\n * Set the document's body opacity to 1. Called in error cases.\n * @param {!Document} doc The document who's body we should make visible.\n */\nexport function makeBodyVisibleRecovery(doc) {\n  devAssert(doc.defaultView, 'Passed in document must have a defaultView');\n  if (bodyMadeVisible) {\n    return;\n  }\n  bodyMadeVisible = true;\n  setBodyVisibleStyles(doc);\n}\n\n/**\n * Make sure that body exists, and make it visible.\n * @param {!Document} doc\n */\nfunction setBodyVisibleStyles(doc) {\n  setStyles(dev().assertElement(doc.body), {\n    opacity: 1,\n    visibility: 'visible',\n    'animation': 'none',\n  });\n}\n\n/**\n * Indicates that the body is always visible. For instance, in case of PWA.\n * This check is on a module level variable, and could be problematic if you are\n * relying on this function across different binaries.\n * @param {!Window} unusedWin\n */\nexport function bodyAlwaysVisible(unusedWin) {\n  bodyMadeVisible = true;\n}\n\n/**\n * Checks whether a style element was registered in the DOM.\n * @param {!Document|!ShadowRoot} doc\n * @param {!Element} style\n * @return {boolean}\n */\nfunction styleLoaded(doc, style) {\n  const sheets = doc.styleSheets;\n  for (let i = 0; i < sheets.length; i++) {\n    const sheet = sheets[i];\n    if (sheet.ownerNode == style) {\n      return true;\n    }\n  }\n  return false;\n}\n", "import {AmpEvents} from '#core/constants/amp-events';\nimport {duplicateErrorIfNecessary} from '#core/error';\nimport {\n  USER_ERROR_SENTINEL,\n  isUserErrorEmbedMessage,\n  isUserErrorMessage,\n} from '#core/error/message-helpers';\nimport * as mode from '#core/mode';\nimport {findIndex} from '#core/types/array';\nimport {exponentialBackoff} from '#core/types/function/exponential-backoff';\nimport {dict} from '#core/types/object';\n\nimport {experimentTogglesOrNull, getBinaryType, isCanary} from '#experiments';\n\nimport {Services} from '#service';\n\nimport {triggerAnalyticsEvent} from '#utils/analytics';\nimport {isLoadErrorMessage} from '#utils/event-helper';\nimport {dev, setReportError} from '#utils/log';\n\nimport {urls} from './config';\nimport {getMode} from './mode';\nimport {makeBodyVisibleRecovery} from './style-installer';\nimport {isProxyOrigin} from './url';\n\nexport {setReportError};\n\n/**\n * @const {string}\n */\nconst CANCELLED = 'CANCELLED';\n\n/**\n * @const {string}\n */\nconst BLOCK_BY_CONSENT = 'BLOCK_BY_CONSENT';\n\n/**\n * @const {string}\n */\nconst ABORTED = 'AbortError';\n\n/**\n * The threshold for errors throttled because nothing can be done about\n * them, but we'd still like to report the rough number.\n * @const {number}\n */\nconst NON_ACTIONABLE_ERROR_THROTTLE_THRESHOLD = 0.001;\n\n/**\n * The threshold for errors throttled because nothing can be done about\n * them, but we'd still like to report the rough number.\n * @const {number}\n */\nconst USER_ERROR_THROTTLE_THRESHOLD = 0.1;\n\n/**\n * Chance to post to the new error reporting endpoint.\n * @const {number}\n */\nconst BETA_ERROR_REPORT_URL_FREQ = 0.1;\n\n/**\n * Collects error messages, so they can be included in subsequent reports.\n * That allows identifying errors that might be caused by previous errors.\n */\nlet accumulatedErrorMessages = self.__AMP_ERRORS || [];\n// Use a true global, to avoid multi-module inclusion issues.\nself.__AMP_ERRORS = accumulatedErrorMessages;\n\n/**\n * Pushes element into array, keeping at most the most recent limit elements\n *\n * @param {!Array<T>} array\n * @param {T} element\n * @param {number} limit\n * @template T\n */\nfunction pushLimit(array, element, limit) {\n  if (array.length >= limit) {\n    array.splice(0, array.length - limit + 1);\n  }\n  array.push(element);\n}\n\n/**\n * A wrapper around our exponentialBackoff, to lazy initialize it to avoid an\n * un-DCE'able side-effect.\n * @param {function()} work the function to execute after backoff\n * @return {number} the setTimeout id\n */\nlet reportingBackoff = function (work) {\n  // Set reportingBackoff as the lazy-created function. JS Vooodoooo.\n  reportingBackoff = exponentialBackoff(1.5);\n  return reportingBackoff(work);\n};\n\n/**\n * Attempts to stringify a value, falling back to String.\n * @param {*} value\n * @return {string}\n */\nfunction tryJsonStringify(value) {\n  try {\n    // Cast is fine, because we really don't care here. Just trying.\n    return JSON.stringify(/** @type {!JsonObject} */ (value));\n  } catch (e) {\n    return String(value);\n  }\n}\n\n/**\n * @param {!Window} win\n * @param {*} error\n * @param {!Element=} opt_associatedElement\n */\nexport function reportErrorForWin(win, error, opt_associatedElement) {\n  reportError(error, opt_associatedElement);\n  if (\n    error &&\n    !!win &&\n    isUserErrorMessage(error.message) &&\n    !isUserErrorEmbedMessage(error.message)\n  ) {\n    reportErrorToAnalytics(/** @type {!Error} */ (error), win);\n  }\n}\n\n/**\n * Reports an error. If the error has an \"associatedElement\" property\n * the element is marked with the `i-amphtml-element-error` and displays\n * the message itself. The message is always send to the console.\n * If the error has a \"messageArray\" property, that array is logged.\n * This way one gets the native fidelity of the console for things like\n * elements instead of stringification.\n * @param {*} error\n * @param {!Element=} opt_associatedElement\n * @return {!Error}\n */\nexport function reportError(error, opt_associatedElement) {\n  try {\n    // Convert error to the expected type.\n    let isValidError;\n    if (error) {\n      if (error.message !== undefined) {\n        error = duplicateErrorIfNecessary(/** @type {!Error} */ (error));\n        isValidError = true;\n      } else {\n        const origError = error;\n        error = new Error(tryJsonStringify(origError));\n        error.origError = origError;\n      }\n    } else {\n      error = new Error('Unknown error');\n    }\n    // Report if error is not an expected type.\n    if (!isValidError && getMode().localDev && !getMode().test) {\n      setTimeout(function () {\n        const rethrow = new Error(\n          '_reported_ Error reported incorrectly: ' + error\n        );\n        throw rethrow;\n      });\n    }\n\n    if (error.reported) {\n      return /** @type {!Error} */ (error);\n    }\n    error.reported = true;\n\n    // `associatedElement` is used to add the i-amphtml-error class; in\n    // `#development=1` mode, it also adds `i-amphtml-element-error` to the\n    // element and sets the `error-message` attribute.\n    if (error.messageArray) {\n      const elIndex = findIndex(error.messageArray, (item) => item?.tagName);\n      if (elIndex > -1) {\n        error.associatedElement = error.messageArray[elIndex];\n      }\n    }\n    // Update element.\n    const element = opt_associatedElement || error.associatedElement;\n    if (element && element.classList) {\n      element.classList.add('i-amphtml-error');\n      if (getMode().development) {\n        element.classList.add('i-amphtml-element-error');\n        element.setAttribute('error-message', error.message);\n      }\n    }\n\n    // Report to console.\n    if (\n      self.console &&\n      (isUserErrorMessage(error.message) ||\n        !error.expected ||\n        getMode().localDev)\n    ) {\n      const output = console.error || console.log;\n      if (error.messageArray) {\n        output.apply(console, error.messageArray);\n      } else {\n        if (element) {\n          output.call(console, error.message, element);\n        } else if (!mode.isMinified()) {\n          output.call(console, error.stack);\n        } else {\n          output.call(console, error.message);\n        }\n      }\n    }\n    if (element && element.dispatchCustomEventForTesting) {\n      element.dispatchCustomEventForTesting(AmpEvents.ERROR, error.message);\n    }\n\n    // 'call' to make linter happy. And .call to make compiler happy\n    // that expects some @this.\n    onError['call'](self, undefined, undefined, undefined, undefined, error);\n  } catch (errorReportingError) {\n    setTimeout(function () {\n      throw errorReportingError;\n    });\n  }\n  return /** @type {!Error} */ (error);\n}\n\n/**\n * Returns an error for a cancellation of a promise.\n * @return {!Error}\n */\nexport function cancellation() {\n  return new Error(CANCELLED);\n}\n\n/**\n * @param {*} errorOrMessage\n * @return {boolean}\n */\nexport function isCancellation(errorOrMessage) {\n  if (!errorOrMessage) {\n    return false;\n  }\n  if (typeof errorOrMessage == 'string') {\n    return errorOrMessage.startsWith(CANCELLED);\n  }\n  if (typeof errorOrMessage.message == 'string') {\n    return errorOrMessage.message.startsWith(CANCELLED);\n  }\n  return false;\n}\n\n/**\n * Returns an error for component blocked by consent\n * @return {!Error}\n */\nexport function blockedByConsentError() {\n  return new Error(BLOCK_BY_CONSENT);\n}\n\n/**\n * @param {*} errorOrMessage\n * @return {boolean}\n */\nexport function isBlockedByConsent(errorOrMessage) {\n  if (!errorOrMessage) {\n    return false;\n  }\n  if (typeof errorOrMessage == 'string') {\n    return errorOrMessage.startsWith(BLOCK_BY_CONSENT);\n  }\n  if (typeof errorOrMessage.message == 'string') {\n    return errorOrMessage.message.startsWith(BLOCK_BY_CONSENT);\n  }\n  return false;\n}\n\n/**\n * Install handling of global unhandled exceptions.\n * @param {!Window} win\n */\nexport function installErrorReporting(win) {\n  win.onerror = /** @type {!Function} */ (onError);\n  win.addEventListener('unhandledrejection', (event) => {\n    if (\n      event.reason &&\n      (event.reason.message === CANCELLED ||\n        event.reason.message === BLOCK_BY_CONSENT ||\n        event.reason.message === ABORTED)\n    ) {\n      event.preventDefault();\n      return;\n    }\n    reportError(event.reason || new Error('rejected promise ' + event));\n  });\n}\n\n/**\n * Signature designed, so it can work with window.onerror\n * @param {string|undefined} message\n * @param {string|undefined} filename\n * @param {string|undefined} line\n * @param {string|undefined} col\n * @param {*|undefined} error\n * @this {!Window|undefined}\n */\nfunction onError(message, filename, line, col, error) {\n  // Make an attempt to unhide the body but don't if the error is actually expected.\n  // eslint-disable-next-line local/no-invalid-this\n  if (this && this.document && (!error || !error.expected)) {\n    // eslint-disable-next-line local/no-invalid-this\n    makeBodyVisibleRecovery(this.document);\n  }\n  if (getMode().localDev || getMode().development || getMode().test) {\n    return;\n  }\n  let hasNonAmpJs = false;\n  try {\n    hasNonAmpJs = detectNonAmpJs(self);\n  } catch (ignore) {\n    // Ignore errors during error report generation.\n  }\n  if (hasNonAmpJs && Math.random() > 0.01) {\n    // Only report 1% of errors on pages with non-AMP JS.\n    // These errors can almost never be acted upon, but spikes such as\n    // due to buggy browser extensions may be helpful to notify authors.\n    return;\n  }\n  const data = getErrorReportData(\n    message,\n    filename,\n    line,\n    col,\n    error,\n    hasNonAmpJs\n  );\n  if (data) {\n    reportingBackoff(() => {\n      try {\n        return reportErrorToServerOrViewer(\n          // eslint-disable-next-line local/no-invalid-this\n          this,\n          /** @type {!JsonObject} */\n          (data)\n        ).catch(() => {\n          // catch async errors to avoid recursive errors.\n        });\n      } catch (e) {\n        // catch async errors to avoid recursive errors.\n      }\n    });\n  }\n}\n\n/**\n * Determines the error reporting endpoint which should be used.\n * If changing this URL, keep `docs/spec/amp-errors.md` in sync.\n * @return {string} error reporting endpoint URL.\n */\nfunction chooseReportingUrl_() {\n  return Math.random() < BETA_ERROR_REPORT_URL_FREQ\n    ? urls.betaErrorReporting\n    : urls.errorReporting;\n}\n\n/**\n * Passes the given error data to either server or viewer.\n * @param {!Window} win\n * @param {!JsonObject} data Data from `getErrorReportData`.\n * @return {Promise<undefined>}\n */\nexport function reportErrorToServerOrViewer(win, data) {\n  // Report the error to viewer if it has the capability. The data passed\n  // to the viewer is exactly the same as the data passed to the server\n  // below.\n\n  // Throttle reports from Stable by 90%.\n  if (data['pt'] && Math.random() < 0.9) {\n    return Promise.resolve();\n  }\n\n  return maybeReportErrorToViewer(win, data).then((reportedErrorToViewer) => {\n    if (!reportedErrorToViewer) {\n      const xhr = new XMLHttpRequest();\n      xhr.open('POST', chooseReportingUrl_(), true);\n      xhr.send(JSON.stringify(data));\n    }\n  });\n}\n\n/**\n * Passes the given error data to the viewer if the following criteria is met:\n * - The viewer is a trusted viewer\n * - The viewer has the `errorReporter` capability\n * - The AMP doc is in single doc mode\n * - The AMP doc is opted-in for error interception (`<html>` tag has the\n *   `report-errors-to-viewer` attribute)\n *\n * @param {!Window} win\n * @param {!JsonObject} data Data from `getErrorReportData`.\n * @return {!Promise<boolean>} `Promise<True>` if the error was sent to the\n *     viewer, `Promise<False>` otherwise.\n * @visibleForTesting\n */\nexport function maybeReportErrorToViewer(win, data) {\n  const ampdocService = Services.ampdocServiceFor(win);\n  if (!ampdocService.isSingleDoc()) {\n    return Promise.resolve(false);\n  }\n  const ampdocSingle = ampdocService.getSingleDoc();\n  const htmlElement = ampdocSingle.getRootNode().documentElement;\n  const docOptedIn = htmlElement.hasAttribute('report-errors-to-viewer');\n  if (!docOptedIn) {\n    return Promise.resolve(false);\n  }\n  const viewer = Services.viewerForDoc(ampdocSingle);\n  if (!viewer.hasCapability('errorReporter')) {\n    return Promise.resolve(false);\n  }\n  return viewer.isTrustedViewer().then((viewerTrusted) => {\n    if (!viewerTrusted) {\n      return false;\n    }\n    viewer.sendMessage('error', errorReportingDataForViewer(data));\n    return true;\n  });\n}\n\n/**\n * Strips down the error reporting data to a minimal set\n * to be sent to the viewer.\n * @param {!JsonObject} errorReportData\n * @return {!JsonObject}\n * @visibleForTesting\n */\nexport function errorReportingDataForViewer(errorReportData) {\n  return dict({\n    'm': errorReportData['m'], // message\n    'a': errorReportData['a'], // isUserError\n    's': errorReportData['s'], // error stack\n    'el': errorReportData['el'], // tagName\n    'ex': errorReportData['ex'], // expected error?\n    'v': errorReportData['v'], // runtime\n    'pt': errorReportData['pt'], // is pre-throttled\n  });\n}\n\n/**\n * @param {string|undefined}  message\n * @param {*|undefined} error\n * @return {string}\n */\nfunction buildErrorMessage_(message, error) {\n  if (error) {\n    if (error.message) {\n      message = error.message;\n    } else {\n      // This should never be a string, but sometimes it is.\n      message = String(error);\n    }\n  }\n  if (!message) {\n    message = 'Unknown error';\n  }\n\n  return message;\n}\n\n/**\n * Signature designed, so it can work with window.onerror\n * @param {string|undefined} message\n * @param {string|undefined} filename\n * @param {string|undefined} line\n * @param {string|undefined} col\n * @param {*|undefined} error\n * @param {boolean} hasNonAmpJs\n * @return {!JsonObject|undefined} The data to post\n * visibleForTesting\n */\nexport function getErrorReportData(\n  message,\n  filename,\n  line,\n  col,\n  error,\n  hasNonAmpJs\n) {\n  message = buildErrorMessage_(message, error);\n  // An \"expected\" error is still an error, i.e. some features are disabled\n  // or not functioning fully because of it. However, it's an expected\n  // error. E.g. as is the case with some browser API missing (storage).\n  // Thus, the error can be classified differently by log aggregators.\n  // The main goal is to monitor that an \"expected\" error doesn't deteriorate\n  // over time. It's impossible to completely eliminate it.\n  let expected = !!(error && error.expected);\n  if (/_reported_/.test(message)) {\n    return;\n  }\n  if (message == CANCELLED) {\n    return;\n  }\n\n  const detachedWindow = !(self && self.window);\n  const throttleBase = Math.random();\n\n  // We throttle load errors and generic \"Script error.\" errors\n  // that have no information and thus cannot be acted upon.\n  if (\n    isLoadErrorMessage(message) ||\n    // See https://github.com/ampproject/amphtml/issues/7353\n    // for context.\n    message == 'Script error.' ||\n    // Window has become detached, really anything can happen\n    // at this point.\n    detachedWindow\n  ) {\n    expected = true;\n\n    if (throttleBase > NON_ACTIONABLE_ERROR_THROTTLE_THRESHOLD) {\n      return;\n    }\n  }\n\n  const isUserError = isUserErrorMessage(message);\n\n  // Only report a subset of user errors.\n  if (isUserError && throttleBase > USER_ERROR_THROTTLE_THRESHOLD) {\n    return;\n  }\n\n  // This is the App Engine app in\n  // https://github.com/ampproject/error-tracker\n  // It stores error reports via https://cloud.google.com/error-reporting/\n  // for analyzing production issues.\n  const data = /** @type {!JsonObject} */ (Object.create(null));\n  data['v'] = getMode().rtvVersion;\n  data['noAmp'] = hasNonAmpJs ? '1' : '0';\n  data['m'] = message.replace(USER_ERROR_SENTINEL, '');\n  data['a'] = isUserError ? '1' : '0';\n\n  // Errors are tagged with \"ex\" (\"expected\") label to allow loggers to\n  // classify these errors as benchmarks and not exceptions.\n  data['ex'] = expected ? '1' : '0';\n  data['dw'] = detachedWindow ? '1' : '0';\n\n  let runtime = '1p';\n  if (IS_SXG) {\n    runtime = 'sxg';\n    data['sxg'] = '1';\n  } else if (mode.isEsm()) {\n    runtime = 'esm';\n    data['esm'] = '1';\n  } else if (self.context && self.context.location) {\n    data['3p'] = '1';\n    runtime = '3p';\n  } else if (getMode().runtime) {\n    runtime = getMode().runtime;\n  }\n\n  data['rt'] = runtime;\n\n  // Add our a4a id if we are inabox\n  if (runtime === 'inabox') {\n    data['adid'] = getMode().a4aId;\n  }\n\n  // TODO(erwinm): Remove ca when all systems read `bt` instead of `ca` to\n  // identify js binary type.\n  data['ca'] = isCanary(self) ? '1' : '0';\n\n  // Pass binary type.\n  data['bt'] = getBinaryType(self);\n\n  if (self.location.ancestorOrigins && self.location.ancestorOrigins[0]) {\n    data['or'] = self.location.ancestorOrigins[0];\n  }\n  if (self.viewerState) {\n    data['vs'] = self.viewerState;\n  }\n  // Is embedded?\n  if (self.parent && self.parent != self) {\n    data['iem'] = '1';\n  }\n\n  if (self.AMP && self.AMP.viewer) {\n    const resolvedViewerUrl = self.AMP.viewer.getResolvedViewerUrl();\n    const messagingOrigin = self.AMP.viewer.maybeGetMessagingOrigin();\n    if (resolvedViewerUrl) {\n      data['rvu'] = resolvedViewerUrl;\n    }\n    if (messagingOrigin) {\n      data['mso'] = messagingOrigin;\n    }\n  }\n\n  const exps = [];\n  const experiments = experimentTogglesOrNull(self);\n  for (const exp in experiments) {\n    const on = experiments[exp];\n    exps.push(`${exp}=${on ? '1' : '0'}`);\n  }\n  data['exps'] = exps.join(',');\n\n  if (error) {\n    data['el'] = error.associatedElement?.tagName || 'u'; // Unknown\n\n    if (error.args) {\n      data['args'] = JSON.stringify(error.args);\n    }\n\n    if (!isUserError && !error.ignoreStack && error.stack) {\n      data['s'] = error.stack;\n    }\n\n    // TODO(jridgewell, #18574); Make sure error is always an object.\n    if (error.message) {\n      error.message += ' _reported_';\n    }\n  } else {\n    data['f'] = filename || '';\n    data['l'] = line || '';\n    data['c'] = col || '';\n  }\n  data['r'] = self.document ? self.document.referrer : '';\n  data['ae'] = accumulatedErrorMessages.join(',');\n  data['fr'] = self.location['originalHash'] || self.location.hash;\n\n  // TODO(https://github.com/ampproject/error-tracker/issues/129): Remove once\n  // all clients are serving a version with pre-throttling.\n  if (data['bt'] === 'production') {\n    // Setting this field allows the error reporting service to know that this\n    // error has already been pre-throttled for Stable, so it doesn't need to\n    // throttle again.\n    data['pt'] = '1';\n  }\n\n  pushLimit(accumulatedErrorMessages, message, 25);\n\n  return data;\n}\n\n/**\n * Returns true if it appears like there is non-AMP JS on the\n * current page.\n * @param {!Window} win\n * @return {boolean}\n * @visibleForTesting\n */\nexport function detectNonAmpJs(win) {\n  if (!win.document) {\n    return false;\n  }\n  const scripts = win.document.querySelectorAll('script[src]');\n  for (let i = 0; i < scripts.length; i++) {\n    if (!isProxyOrigin(scripts[i].src.toLowerCase())) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Resets accumulated error messages for testing\n */\nexport function resetAccumulatedErrorMessagesForTesting() {\n  accumulatedErrorMessages = [];\n}\n\n/**\n * @param {!Error} error\n * @param {!Window} win\n */\nexport function reportErrorToAnalytics(error, win) {\n  // Currently this can only be executed in a single-doc mode. Otherwise,\n  // it's not clear which ampdoc the event would belong too.\n  if (Services.ampdocServiceFor(win).isSingleDoc()) {\n    const vars = dict({\n      'errorName': error.name,\n      'errorMessage': error.message,\n    });\n    triggerAnalyticsEvent(\n      getRootElement_(win),\n      'user-error',\n      vars,\n      /** enableDataVars */ false\n    );\n  }\n}\n\n/**\n * @param {!Window} win\n * @return {!Element}\n * @private\n */\nfunction getRootElement_(win) {\n  const root = Services.ampdocServiceFor(win).getSingleDoc().getRootNode();\n  return dev().assertElement(root.documentElement || root.body || root);\n}\n", "import {CONSENT_POLICY_STATE} from '#core/constants/consent-state';\nimport {isArray, isObject} from '#core/types';\nimport {tryParseJson} from '#core/types/object/json';\n\nimport {Services} from '#service';\n\nimport {dev, user, userAssert} from '#utils/log';\n\nimport {RTC_VENDORS} from './callout-vendors';\n\nimport {isCancellation} from '../../error-reporting';\nimport {getMode} from '../../mode';\nimport {registerServiceBuilderForDoc} from '../../service-helpers';\nimport {isAmpScriptUri} from '../../url';\n\n/** @type {string} */\nconst TAG = 'real-time-config';\n\n/** @type {number} */\nconst MAX_RTC_CALLOUTS = 5;\n\n/** @type {number} */\nconst MAX_URL_LENGTH = 16384;\n\n/** @typedef {{\n    urls: (undefined|Array<string>|\n      Array<{url:string, errorReportingUrl:string,\n        sendRegardlessOfConsentState:(undefined|boolean|Array<string>)}>),\n    vendors: (undefined|Object),\n    timeoutMillis: number,\n    errorReportingUrl: (undefined|string),\n    sendRegardlessOfConsentState: (undefined|boolean|Array<string>)\n}} */\nlet RtcConfigDef;\n\n/**\n * Enum starts at 4 because 1-3 reserved as:\n *  1 = custom remote.html in use.\n *  2 = RTC succeeded.\n *  3 = deprecated generic RTC failures.\n * @enum {string}\n */\nexport const RTC_ERROR_ENUM = {\n  // Occurs when response is unparseable as JSON\n  MALFORMED_JSON_RESPONSE: '4',\n  // Occurs when a publisher has specified the same url\n  // or vendor url (after macros are substituted) to call out to more than once.\n  DUPLICATE_URL: '5',\n  // Occurs when a URL fails isSecureUrl check.\n  INSECURE_URL: '6',\n  // Occurs when 5 valid callout urls have already been built, and additional\n  // urls are still specified.\n  MAX_CALLOUTS_EXCEEDED: '7',\n  // Occurs due to XHR failure.\n  NETWORK_FAILURE: '8',\n  // Occurs when a specified vendor does not exist in RTC_VENDORS.\n  UNKNOWN_VENDOR: '9',\n  // Occurs when request took longer than timeout\n  TIMEOUT: '10',\n  // Occurs when URL expansion time exceeded allowed timeout, request never\n  // sent.\n  MACRO_EXPAND_TIMEOUT: '11',\n};\n\n/** @const {!Object<string, boolean>} */\nconst GLOBAL_MACRO_ALLOWLIST = {CLIENT_ID: true};\n\nexport class RealTimeConfigService {\n  /**\n   * @param {!../ampdoc-impl.AmpDoc} ampDoc\n   */\n  constructor(ampDoc) {\n    /** @protected {!../ampdoc-impl.AmpDoc} */\n    this.ampDoc_ = ampDoc;\n  }\n\n  /**\n   * For a given A4A Element, sends out Real Time Config requests to\n   * any urls or vendors specified by the publisher.\n   * @param {!Element} element\n   * @param {!Object<string, !../../../src/service/variable-source.AsyncResolverDef>} customMacros The ad-network specified macro\n   *   substitutions available to use.\n   * @param {?CONSENT_POLICY_STATE} consentState\n   * @param {?string} consentString\n   * @param {?Object<string, string|number|boolean|undefined>} consentMetadata\n   * @param {!Function} checkStillCurrent\n   * @return {Promise<!Array<!rtcResponseDef>>|undefined}\n   * @visibleForTesting\n   */\n  maybeExecuteRealTimeConfig(\n    element,\n    customMacros,\n    consentState,\n    consentString,\n    consentMetadata,\n    checkStillCurrent\n  ) {\n    return new RealTimeConfigManager(this.ampDoc_).execute(\n      element,\n      customMacros,\n      consentState,\n      consentString,\n      consentMetadata,\n      checkStillCurrent\n    );\n  }\n}\n\nexport class RealTimeConfigManager {\n  /**\n   * @param {!../ampdoc-impl.AmpDoc} ampDoc\n   */\n  constructor(ampDoc) {\n    /** @protected {!../ampdoc-impl.AmpDoc} */\n    this.ampDoc_ = ampDoc;\n\n    /** @private {!Window} */\n    this.win_ = ampDoc.win;\n\n    /** @private {!Object<string, boolean>} */\n    this.seenUrls_ = {};\n\n    /** @private {?number} */\n    this.rtcStartTime_ = null;\n\n    /** @private {!Array<!Promise<!rtcResponseDef>>} */\n    this.promiseArray_ = [];\n\n    /** @private {?RtcConfigDef} */\n    this.rtcConfig_ = null;\n\n    /** @private {?CONSENT_POLICY_STATE} */\n    this.consentState_ = null;\n\n    /** @private {?string} */\n    this.consentString_ = null;\n\n    /** @private {?Object<string, string|number|boolean|undefined>} */\n    this.consentMetadata_ = null;\n  }\n\n  /**\n   * @param {string} error\n   * @param {string} callout\n   * @param {string} errorReportingUrl\n   * @param {number=} opt_rtcTime\n   * @return {!Promise<!rtcResponseDef>}\n   * @private\n   */\n  buildErrorResponse_(error, callout, errorReportingUrl, opt_rtcTime) {\n    dev().warn(TAG, `RTC callout to ${callout} caused ${error}`);\n    if (errorReportingUrl) {\n      this.sendErrorMessage(error, errorReportingUrl);\n    }\n    return Promise.resolve(\n      /**@type {rtcResponseDef} */ ({error, callout, rtcTime: opt_rtcTime || 0})\n    );\n  }\n\n  /**\n   * @param {string} errorType Uses the RTC_ERROR_ENUM above.\n   * @param {string} errorReportingUrl\n   */\n  sendErrorMessage(errorType, errorReportingUrl) {\n    if (\n      !getMode(this.win_).localDev &&\n      !getMode(this.win_).test &&\n      Math.random() >= 0.01\n    ) {\n      return;\n    }\n    const allowlist = {ERROR_TYPE: true, HREF: true};\n    const macros = {\n      ERROR_TYPE: errorType,\n      HREF: this.win_.location.href,\n    };\n    const service = Services.urlReplacementsForDoc(this.ampDoc_);\n    const url = service.expandUrlSync(errorReportingUrl, macros, allowlist);\n    new this.win_.Image().src = url;\n  }\n\n  /**\n   * Converts a URL into its corresponding shortened callout string.\n   * We also truncate to a maximum length of 50 characters.\n   * For instance, if we are passed\n   * \"https://example.test/example.php?foo=a&bar=b, then we return\n   * example.test/example.php\n   * @param {string} url\n   * @return {string}\n   */\n  getCalloutParam_(url) {\n    const urlService = Services.urlForDoc(this.ampDoc_);\n    const parsedUrl = urlService.parse(url);\n    return (parsedUrl.hostname + parsedUrl.pathname).substr(0, 50);\n  }\n\n  /**\n   * Returns whether a given callout object is valid to send an RTC request\n   * to, for the given consentState.\n   * @param {Object|string} calloutConfig\n   * @param {boolean=} optIsGloballyValid\n   * @return {boolean}\n   * @visibleForTesting\n   */\n  isValidCalloutForConsentState(calloutConfig, optIsGloballyValid) {\n    const {sendRegardlessOfConsentState} = calloutConfig;\n    if (!isObject(calloutConfig) || !sendRegardlessOfConsentState) {\n      return !!optIsGloballyValid;\n    }\n\n    if (typeof sendRegardlessOfConsentState == 'boolean') {\n      return sendRegardlessOfConsentState;\n    }\n\n    if (isArray(sendRegardlessOfConsentState)) {\n      for (let i = 0; i < sendRegardlessOfConsentState.length; i++) {\n        if (\n          this.consentState_ ==\n          CONSENT_POLICY_STATE[sendRegardlessOfConsentState[i]]\n        ) {\n          return true;\n        } else if (!CONSENT_POLICY_STATE[sendRegardlessOfConsentState[i]]) {\n          dev().warn(\n            TAG,\n            'Invalid RTC consent state given: ' +\n              `${sendRegardlessOfConsentState[i]}`\n          );\n        }\n      }\n      return false;\n    }\n    user().warn(\n      TAG,\n      'Invalid value for sendRegardlessOfConsentState:' +\n        `${sendRegardlessOfConsentState}`\n    );\n    return !!optIsGloballyValid;\n  }\n\n  /**\n   * Goes through the RTC config, and for any URL that we should not callout\n   * as per the current consent state, deletes it from the RTC config.\n   * For example, if the RTC config looked like:\n   *    {vendors: {vendorA: {'sendRegardlessOfConsentState': true}\n   *               vendorB: {'macros': {'SLOT_ID': 1}}},\n   *     urls: ['https://www.rtc.example/example',\n   *            {url: 'https://www.rtcSite2.example/example',\n   *             sendRegardlessOfConsentState: ['UNKNOWN']}]\n   *    }\n   * and the consentState is CONSENT_POLICY_STATE.UNKNOWN,\n   * then this method call would clear the callouts to vendorB, and to the first\n   * custom URL.\n   */\n  modifyRtcConfigForConsentStateSettings() {\n    if (\n      this.consentState_ == undefined ||\n      this.consentState_ == CONSENT_POLICY_STATE.SUFFICIENT ||\n      this.consentState_ == CONSENT_POLICY_STATE.UNKNOWN_NOT_REQUIRED\n    ) {\n      return;\n    }\n\n    const isGloballyValid = this.isValidCalloutForConsentState(this.rtcConfig_);\n    this.rtcConfig_.urls = (this.rtcConfig_.urls || []).filter((url) =>\n      this.isValidCalloutForConsentState(url, isGloballyValid)\n    );\n\n    Object.keys(this.rtcConfig_.vendors || {}).forEach((vendor) => {\n      if (\n        !this.isValidCalloutForConsentState(\n          this.rtcConfig_.vendors[vendor],\n          isGloballyValid\n        )\n      ) {\n        delete this.rtcConfig_.vendors[vendor];\n      }\n    });\n  }\n\n  /**\n   * Assigns constant macros that should exist for all RTC to object of custom\n   * per-network macros.\n   * @param {!Object<string, !../../../src/service/variable-source.AsyncResolverDef>} macros\n   * @return {!Object<string, !../../../src/service/variable-source.AsyncResolverDef>}\n   */\n  assignMacros(macros) {\n    macros['TIMEOUT'] = () => this.rtcConfig_.timeoutMillis;\n    macros['CONSENT_STATE'] = () => this.consentState_;\n    macros['CONSENT_STRING'] = () => this.consentString_;\n    macros['CONSENT_METADATA'] =\n      /** @type {!../../../src/service/variable-source.AsyncResolverDef} */ (\n        (key) => {\n          userAssert(key, 'CONSENT_METADATA macro must contian a key');\n          return this.consentMetadata_ ? this.consentMetadata_[key] : null;\n        }\n      );\n    return macros;\n  }\n\n  /**\n   * Manages sending the RTC callouts for the Custom URLs.\n   * @param {!Object<string, !../../../src/service/variable-source.AsyncResolverDef>} customMacros The ad-network specified macro\n   * @param {!Function} checkStillCurrent\n   * @param {!Element} element\n   */\n  handleRtcForCustomUrls(customMacros, checkStillCurrent, element) {\n    // For each publisher defined URL, inflate the url using the macros,\n    // and send the RTC request.\n    (this.rtcConfig_.urls || []).forEach((urlObj) => {\n      let url, errorReportingUrl;\n      if (isObject(urlObj)) {\n        url = urlObj.url;\n        errorReportingUrl = urlObj.errorReportingUrl;\n      } else if (typeof urlObj == 'string') {\n        url = urlObj;\n      } else {\n        dev().warn(TAG, `Invalid url: ${urlObj}`);\n      }\n      this.inflateAndSendRtc_(\n        url,\n        customMacros,\n        errorReportingUrl,\n        checkStillCurrent,\n        /* opt_vendor */ undefined,\n        element\n      );\n    });\n  }\n\n  /**\n   * Manages sending the RTC callouts for all specified vendors.\n   * @param {!Object<string, !../../../src/service/variable-source.AsyncResolverDef>} customMacros The ad-network specified macro\n   * @param {!Function} checkStillCurrent\n   */\n  handleRtcForVendorUrls(customMacros, checkStillCurrent) {\n    // For each vendor the publisher has specified, inflate the vendor\n    // url if it exists, and send the RTC request.\n    Object.keys(this.rtcConfig_.vendors || []).forEach((vendor) => {\n      const vendorObject = RTC_VENDORS[vendor.toLowerCase()];\n      const url = vendorObject ? vendorObject.url : '';\n      const errorReportingUrl =\n        vendorObject && vendorObject.errorReportingUrl\n          ? vendorObject.errorReportingUrl\n          : '';\n      if (!url) {\n        return this.promiseArray_.push(\n          this.buildErrorResponse_(\n            RTC_ERROR_ENUM.UNKNOWN_VENDOR,\n            vendor,\n            errorReportingUrl\n          )\n        );\n      }\n      // There are two valid configurations of the vendor object.\n      // It can either be an object of macros mapping string to string,\n      // or it can be an object with sub-objects, one of which can be\n      // 'macros'. This is for backwards compatability.\n      const vendorMacros = isObject(this.rtcConfig_.vendors[vendor]['macros'])\n        ? this.rtcConfig_.vendors[vendor]['macros']\n        : this.rtcConfig_.vendors[vendor];\n      const validVendorMacros = {};\n      Object.keys(vendorMacros).forEach((macro) => {\n        if (!(vendorObject.macros && vendorObject.macros.includes(macro))) {\n          user().error(TAG, `Unknown macro: ${macro} for vendor: ${vendor}`);\n        } else {\n          const value = vendorMacros[macro];\n          validVendorMacros[macro] =\n            isObject(value) || isArray(value) ? JSON.stringify(value) : value;\n        }\n      });\n      // The ad network defined macros override vendor defined/pub specifed.\n      const macros = Object.assign(validVendorMacros, customMacros);\n      this.inflateAndSendRtc_(\n        url,\n        macros,\n        errorReportingUrl,\n        checkStillCurrent,\n        vendor.toLowerCase()\n      );\n    });\n  }\n\n  /**\n   * @param {string} url\n   * @param {!Object<string, !../../../src/service/variable-source.AsyncResolverDef>} macros\n   * @param {string} errorReportingUrl\n   * @param {!Function} checkStillCurrent\n   * @param {string=} opt_vendor\n   * @param {!Element=} opt_element\n   * @private\n   */\n  inflateAndSendRtc_(\n    url,\n    macros,\n    errorReportingUrl,\n    checkStillCurrent,\n    opt_vendor,\n    opt_element\n  ) {\n    let {timeoutMillis} = this.rtcConfig_;\n    const callout = opt_vendor || this.getCalloutParam_(url);\n    /**\n     * The time that it takes to substitute the macros into the URL can vary\n     * depending on what the url requires to be substituted, i.e. a long\n     * async call. Thus, however long the URL replacement took is treated as a\n     * time penalty.\n     * @param {string} url\n     * @return {*} TODO(#23582): Specify return type\n     */\n    const send = (url) => {\n      if (Object.keys(this.seenUrls_).length == MAX_RTC_CALLOUTS) {\n        return this.buildErrorResponse_(\n          RTC_ERROR_ENUM.MAX_CALLOUTS_EXCEEDED,\n          callout,\n          errorReportingUrl\n        );\n      }\n      if (\n        !Services.urlForDoc(this.ampDoc_).isSecure(url) &&\n        !isAmpScriptUri(url)\n      ) {\n        return this.buildErrorResponse_(\n          RTC_ERROR_ENUM.INSECURE_URL,\n          callout,\n          errorReportingUrl\n        );\n      }\n      if (this.seenUrls_[url]) {\n        return this.buildErrorResponse_(\n          RTC_ERROR_ENUM.DUPLICATE_URL,\n          callout,\n          errorReportingUrl\n        );\n      }\n      this.seenUrls_[url] = true;\n      if (url.length > MAX_URL_LENGTH) {\n        url = this.truncUrl_(url);\n      }\n\n      return this.sendRtcCallout_(\n        url,\n        timeoutMillis,\n        callout,\n        checkStillCurrent,\n        errorReportingUrl,\n        opt_element\n      );\n    };\n\n    const allowlist = {...GLOBAL_MACRO_ALLOWLIST};\n    Object.keys(macros).forEach((key) => (allowlist[key] = true));\n    const urlReplacementStartTime = Date.now();\n    this.promiseArray_.push(\n      Services.timerFor(this.win_)\n        .timeoutPromise(\n          timeoutMillis,\n          Services.urlReplacementsForDoc(this.ampDoc_).expandUrlAsync(\n            url,\n            macros,\n            allowlist\n          )\n        )\n        .then((url) => {\n          checkStillCurrent();\n          timeoutMillis -= urlReplacementStartTime - Date.now();\n          return send(url);\n        })\n        .catch((error) => {\n          return isCancellation(error)\n            ? undefined\n            : this.buildErrorResponse_(\n                RTC_ERROR_ENUM.MACRO_EXPAND_TIMEOUT,\n                callout,\n                errorReportingUrl\n              );\n        })\n    );\n  }\n\n  /**\n   * @param {string} url\n   * @return {string}\n   */\n  truncUrl_(url) {\n    url = url.substr(0, MAX_URL_LENGTH - 12).replace(/%\\w?$/, '');\n    return url + '&__trunc__=1';\n  }\n\n  /**\n   * @param {string} url\n   * @param {number} timeoutMillis\n   * @param {string} callout\n   * @param {!Function} checkStillCurrent\n   * @param {string} errorReportingUrl\n   * @param {!Element=} opt_element\n   * @return {!Promise<!rtcResponseDef>}\n   * @private\n   */\n  sendRtcCallout_(\n    url,\n    timeoutMillis,\n    callout,\n    checkStillCurrent,\n    errorReportingUrl,\n    opt_element\n  ) {\n    let rtcFetch;\n    if (isAmpScriptUri(url)) {\n      rtcFetch = Services.scriptForDocOrNull(opt_element)\n        .then((service) => {\n          userAssert(service, 'AMP-SCRIPT is not installed.');\n          return service.fetch(url);\n        })\n        .then((json) => {\n          checkStillCurrent();\n          const rtcTime = Date.now() - this.rtcStartTime_;\n          if (typeof json !== 'object') {\n            return this.buildErrorResponse_(\n              RTC_ERROR_ENUM.MALFORMED_JSON_RESPONSE,\n              callout,\n              errorReportingUrl,\n              rtcTime\n            );\n          }\n          return {response: json, rtcTime, callout};\n        });\n    } else {\n      rtcFetch = Services.xhrFor(this.win_)\n        .fetchJson(\n          // NOTE(bradfrizzell): we could include ampCors:false allowing\n          // the request to be cached across sites but for now assume that\n          // is not a required feature.\n          url,\n          {credentials: 'include'}\n        )\n        .then((res) => {\n          checkStillCurrent();\n          return res.text().then((text) => {\n            checkStillCurrent();\n            const rtcTime = Date.now() - this.rtcStartTime_;\n            // An empty text response is allowed, not an error.\n            if (!text) {\n              return {rtcTime, callout};\n            }\n            const response = tryParseJson(text);\n            return response\n              ? {response, rtcTime, callout}\n              : this.buildErrorResponse_(\n                  RTC_ERROR_ENUM.MALFORMED_JSON_RESPONSE,\n                  callout,\n                  errorReportingUrl,\n                  rtcTime\n                );\n          });\n        });\n    }\n\n    /**\n     * Note: Timeout is enforced by timerFor, not the value of\n     *   rtcTime. There are situations where rtcTime could thus\n     *   end up being greater than timeoutMillis.\n     */\n    return Services.timerFor(this.win_)\n      .timeoutPromise(timeoutMillis, rtcFetch)\n      .catch((error) => {\n        return isCancellation(error)\n          ? undefined\n          : this.buildErrorResponse_(\n              // The relevant error message for timeout looks like it is\n              // just 'message' but is in fact 'messageXXX' where the\n              // X's are hidden special characters. That's why we use\n              // match here.\n              /^timeout/.test(error.message)\n                ? RTC_ERROR_ENUM.TIMEOUT\n                : RTC_ERROR_ENUM.NETWORK_FAILURE,\n              callout,\n              errorReportingUrl,\n              Date.now() - this.rtcStartTime_\n            );\n      });\n  }\n\n  /**\n   * For a given A4A Element, sends out Real Time Config requests to\n   * any urls or vendors specified by the publisher.\n   * @param {!Element} element\n   * @param {!Object<string, !../../../src/service/variable-source.AsyncResolverDef>} customMacros The ad-network specified macro\n   *   substitutions available to use.\n   * @param {?CONSENT_POLICY_STATE} consentState\n   * @param {?string} consentString\n   * @param {?Object<string, string|number|boolean|undefined>} consentMetadata\n   * @param {!Function} checkStillCurrent\n   * @return {Promise<!Array<!rtcResponseDef>>|undefined}\n   * @visibleForTesting\n   */\n  execute(\n    element,\n    customMacros,\n    consentState,\n    consentString,\n    consentMetadata,\n    checkStillCurrent\n  ) {\n    if (!this.validateRtcConfig_(element)) {\n      return;\n    }\n    this.consentState_ = consentState;\n    this.consentString_ = consentString;\n    this.consentMetadata_ = consentMetadata;\n    this.modifyRtcConfigForConsentStateSettings();\n    customMacros = this.assignMacros(customMacros);\n    this.rtcStartTime_ = Date.now();\n    this.handleRtcForCustomUrls(customMacros, checkStillCurrent, element);\n    this.handleRtcForVendorUrls(customMacros, checkStillCurrent);\n    return Promise.all(this.promiseArray_);\n  }\n\n  /**\n   * Attempts to parse the publisher-defined RTC config off the amp-ad\n   * element, then validates that the rtcConfig exists, and contains\n   * an entry for either vendor URLs, or publisher-defined URLs. If the\n   * config contains an entry for timeoutMillis, validates that it is a\n   * number, or converts to a number if number-like, otherwise overwrites\n   * with the default.\n   * IMPORTANT: If the rtcConfig is invalid, RTC is aborted, and the ad\n   *   request continues without RTC.\n   * @param {!Element} element\n   * @return {boolean}\n   */\n  validateRtcConfig_(element) {\n    const defaultTimeoutMillis = 1000;\n    const unparsedRtcConfig = element.getAttribute('rtc-config');\n    if (!unparsedRtcConfig) {\n      return false;\n    }\n    const rtcConfig = tryParseJson(unparsedRtcConfig);\n    if (!rtcConfig) {\n      user().warn(TAG, 'Could not JSON parse rtc-config attribute');\n      return false;\n    }\n\n    let timeout;\n    try {\n      userAssert(\n        rtcConfig['vendors'] || rtcConfig['urls'],\n        'RTC Config must specify vendors or urls'\n      );\n      Object.keys(rtcConfig).forEach((key) => {\n        switch (key) {\n          case 'vendors':\n            userAssert(isObject(rtcConfig[key]), 'RTC invalid vendors');\n            break;\n          case 'urls':\n            userAssert(isArray(rtcConfig[key]), 'RTC invalid urls');\n            break;\n          case 'timeoutMillis':\n            timeout = parseInt(rtcConfig[key], 10);\n            if (isNaN(timeout)) {\n              user().warn(\n                TAG,\n                'Invalid RTC timeout is NaN, ' +\n                  `using default timeout ${defaultTimeoutMillis}ms`\n              );\n              timeout = undefined;\n            } else if (timeout > defaultTimeoutMillis || timeout < 0) {\n              user().warn(\n                TAG,\n                `Invalid RTC timeout: ${timeout}ms, ` +\n                  `using default timeout ${defaultTimeoutMillis}ms`\n              );\n              timeout = undefined;\n            }\n            break;\n          default:\n            user().warn(TAG, `Unknown RTC Config key: ${key}`);\n            break;\n        }\n      });\n      if (\n        !Object.keys(rtcConfig['vendors'] || {}).length &&\n        !(rtcConfig['urls'] || []).length\n      ) {\n        return false;\n      }\n      const validateErrorReportingUrl = (urlObj) => {\n        const errorUrl = urlObj['errorReportingUrl'];\n        if (errorUrl && !Services.urlForDoc(this.ampDoc_).isSecure(errorUrl)) {\n          dev().warn(TAG, `Insecure RTC errorReportingUrl: ${errorUrl}`);\n          urlObj['errorReportingUrl'] = undefined;\n        }\n      };\n      /** @type {!Array} */ (rtcConfig['urls'] || []).forEach((urlObj) => {\n        if (isObject(urlObj)) {\n          validateErrorReportingUrl(urlObj);\n        }\n      });\n      validateErrorReportingUrl(rtcConfig);\n    } catch (unusedErr) {\n      // This error would be due to the asserts above.\n      return false;\n    }\n    rtcConfig['timeoutMillis'] =\n      timeout !== undefined ? timeout : defaultTimeoutMillis;\n    this.rtcConfig_ = /** @type {RtcConfigDef} */ (rtcConfig);\n    return true;\n  }\n}\n\n/**\n * @param {!../ampdoc-impl.AmpDoc} ampdoc\n */\nexport function installRealTimeConfigServiceForDoc(ampdoc) {\n  registerServiceBuilderForDoc(ampdoc, 'real-time-config', function (doc) {\n    return new RealTimeConfigService(doc);\n  });\n}\n", "import {tryResolve} from '#core/data-structures/promise';\nimport {rethrowAsync} from '#core/error';\nimport {hasOwn} from '#core/types/object';\nimport {trimStart} from '#core/types/string';\n\nimport {user} from '#utils/log';\n\n/** @private @const {string} */\nconst PARSER_IGNORE_FLAG = '`';\n\n/** @private @const {string} */\nconst TAG = 'Expander';\n\n/**\n * @typedef {{\n *   name: string,\n *   prioritized: (!BindingInfoDef|undefined),\n *   encode: boolean,\n *   sync: ../variable-source.SyncResolverDef,\n *   async: ../variable-source.AsyncResolverDef,\n * }}\n */\nlet BindingInfoDef;\n\n/**\n * @typedef {{\n *   start: number,\n *   stop: number,\n *   name: string,\n *   length: number,\n * }}\n */\nlet MatchDef;\n\n/** Rudamentary parser to handle nested Url replacement. */\nexport class Expander {\n  /**\n   * Link this instance of parser to the calling UrlReplacment\n   * @param {?../variable-source.VariableSource} variableSource the keywords to replace\n   * @param {!Object<string, *>=} opt_bindings additional one-off bindings\n   * @param {!Object<string, *>=} opt_collectVars Object passed in to collect\n   *   variable resolutions.\n   * @param {boolean=} opt_sync If the method should resolve syncronously.\n   * @param {!Object<string, boolean>=} opt_allowlist Optional allowlist of names\n   *   that can be substituted.\n   * @param {boolean=} opt_noEncode Should not urlEncode macro resolution.\n   */\n  constructor(\n    variableSource,\n    opt_bindings,\n    opt_collectVars,\n    opt_sync,\n    opt_allowlist,\n    opt_noEncode\n  ) {\n    /** @const {?../variable-source.VariableSource} */\n    this.variableSource_ = variableSource;\n\n    /**@const {!Object<string, *>|undefined} */\n    this.bindings_ = opt_bindings;\n\n    // TODO(ccordry): Remove this output object passed into constructor.\n    /**@const {!Object<string, *>|undefined} */\n    this.collectVars_ = opt_collectVars;\n\n    /**@const {boolean|undefined} */\n    this.sync_ = opt_sync;\n\n    /**@const {!Object<string, boolean>|undefined} */\n    this.allowlist_ = opt_allowlist;\n\n    /**@const {boolean|undefined} */\n    this.encode_ = !opt_noEncode;\n  }\n\n  /**\n   * take the template url and return a promise of its evaluated value\n   * @param {string} url url to be substituted\n   * @return {!Promise<string>|string}\n   */\n  expand(url) {\n    if (!url.length) {\n      return this.sync_ ? url : Promise.resolve(url);\n    }\n    const expr = this.variableSource_.getExpr(this.bindings_, this.allowlist_);\n\n    const matches = this.findMatches_(url, expr);\n    // if no keywords move on\n    if (!matches.length) {\n      return this.sync_ ? url : Promise.resolve(url);\n    }\n    return this.parseUrlRecursively_(url, matches);\n  }\n\n  /**\n   * Return any macros that exist in the given url.\n   * @param {string} url\n   * @return {!Array}\n   */\n  getMacroNames(url) {\n    const expr = this.variableSource_.getExpr(this.bindings_, this.allowlist_);\n    const matches = url.match(expr);\n    if (matches) {\n      return matches;\n    }\n    return [];\n  }\n\n  /**\n   * Structures the regex matching into the desired format\n   * @param {string} url url to be substituted\n   * @param {RegExp} expression regex containing all keywords\n   * @return {!Array<!MatchDef>} array of matching keywords.\n   */\n  findMatches_(url, expression) {\n    const matches = /** @type {!Array<!MatchDef>} */ ([]);\n    url.replace(expression, (match, name, startPosition) => {\n      const {length} = match;\n      const stopPosition = length + startPosition - 1;\n      const info = {\n        start: startPosition,\n        stop: stopPosition,\n        name,\n        length,\n      };\n      matches.push(info);\n    });\n    return matches;\n  }\n\n  /**\n   * @param {string} url\n   * @param {!Array<!MatchDef>} matches Array of matching keywords.\n   * @return {!Promise<string>|string}\n   */\n  parseUrlRecursively_(url, matches) {\n    const stack = [];\n    let urlIndex = 0;\n    let matchIndex = 0;\n    let match = matches[matchIndex];\n    let numOfPendingCalls = 0;\n    let ignoringChars = false;\n\n    const evaluateNextLevel = (encode) => {\n      let builder = '';\n      let results = [];\n      const args = [];\n\n      while (urlIndex < url.length && matchIndex <= matches.length) {\n        const trimmedBuilder = builder.trim();\n        if (match && urlIndex === match.start) {\n          // Collect any chars that may be prefixing the macro, if we are in\n          // a nested context trim the args.\n          if (trimmedBuilder) {\n            results.push(numOfPendingCalls ? trimStart(builder) : builder);\n          }\n\n          // If we know we are at the start of a macro, we figure out how to\n          // resolve it, and move our pointer to after the token.\n          let binding;\n          // Find out where this macro is coming from. Could be from the passed\n          // in optional bindings, or the global variable source.\n          if (this.bindings_ && hasOwn(this.bindings_, match.name)) {\n            // Macro is from optional bindings.\n            binding = /** @type {!BindingInfoDef} */ ({\n              // This construction helps us save the match name and determine\n              // precedence of resolution choices in #expandBinding_ later.\n              name: match.name,\n              prioritized: this.bindings_[match.name],\n              encode,\n            });\n          } else {\n            // Macro is from the global source.\n            binding = /** @type {!BindingInfoDef} */ ({\n              ...this.variableSource_.get(match.name),\n              name: match.name,\n              encode,\n            });\n          }\n\n          urlIndex = match.stop + 1;\n          match = matches[++matchIndex];\n\n          if (url[urlIndex] === '(') {\n            // When we see a `(` we know we need to resolve one level deeper\n            // before continuing. We push the binding in the stack for\n            // resolution later, and then make the recursive call.\n            urlIndex++;\n            numOfPendingCalls++;\n            stack.push(binding);\n            results.push(evaluateNextLevel(/* encode */ false));\n          } else {\n            // Many macros do not take arguments, in this case we do not need to\n            // recurse, we just start resolution in it's position.\n            results.push(this.evaluateBinding_(binding));\n          }\n\n          builder = '';\n        } else if (url[urlIndex] === PARSER_IGNORE_FLAG) {\n          if (!ignoringChars) {\n            ignoringChars = true;\n            // Collect any chars that may exist before backticks, eg FOO(a`b`)\n            if (trimmedBuilder) {\n              results.push(trimmedBuilder);\n            }\n          } else {\n            ignoringChars = false;\n            // Collect any chars inside backticks without trimming whitespace.\n            if (builder.length) {\n              results.push(builder);\n            }\n          }\n          builder = '';\n          urlIndex++;\n        } else if (\n          numOfPendingCalls &&\n          url[urlIndex] === ',' &&\n          !ignoringChars\n        ) {\n          // Commas tell us to create a new argument when in nested context and\n          // we push any string built so far, create a new array for the next\n          // argument, and reset our string builder.\n          if (trimmedBuilder) {\n            results.push(trimmedBuilder);\n          }\n          args.push(results);\n          results = [];\n          // Support existing two comma format by pushing an empty string as\n          // argument. eg CLIENT_ID(__ga,,ga-url)\n          if (url[urlIndex + 1] === ',') {\n            args.push(['']);\n            urlIndex++;\n          }\n          builder = '';\n          urlIndex++;\n        }\n\n        // Invoke a function on every right parenthesis unless the stack is\n        // empty. This is where we actually evaluate any macro that takes an\n        // argument. We pop the macro resover off the stack, and take anying left\n        // in our string builder and add it as the final section of the final\n        // arg. Then we call the resolver.\n        else if (numOfPendingCalls && url[urlIndex] === ')' && !ignoringChars) {\n          urlIndex++;\n          numOfPendingCalls--;\n          const binding = stack.pop();\n          if (trimmedBuilder) {\n            results.push(trimmedBuilder);\n          }\n          args.push(results);\n          const value = this.evaluateBinding_(binding, /* opt_args */ args);\n          return value;\n        } else {\n          // This is the most common case. Just building a string as we walk\n          // along.\n          builder += url[urlIndex];\n          urlIndex++;\n        }\n\n        // Capture any trailing characters.\n        if (urlIndex === url.length && builder.length) {\n          results.push(builder);\n        }\n      }\n\n      // TODO: If there is a single item in results, we should preserve it's\n      // type when returning here and the async version below.\n      if (this.sync_) {\n        return results.join('');\n      }\n\n      return Promise.all(results)\n        .then((promiseArray) => promiseArray.join(''))\n        .catch((e) => {\n          rethrowAsync(e);\n          return '';\n        });\n    };\n\n    return evaluateNextLevel(this.encode_);\n  }\n\n  /**\n   * Called when a binding is ready to be resolved. Determines which version of\n   * binding to use and if syncronous or asyncronous version should be called.\n   * @param {!BindingInfoDef} bindingInfo An object containing the name of\n   *    macro and value to be resolved.\n   * @param {Array=} opt_args Arguments passed to the macro. Arguments come as\n   *    an array of arrays that will be eventually passed to a function.apply\n   *    invocation. For example: FOO(BARBAR, 123) => When we are ready to evaluate\n   *    the FOO binding opt_args will be [[Result of BAR, Result of BAR], [123]].\n   *    This structure is so that the outer array will have the correct number of\n   *    arguments, but we still can resolve each macro separately.\n   * @return {string|!Promise<string>}\n   */\n  evaluateBinding_(bindingInfo, opt_args) {\n    const {encode, name} = bindingInfo;\n    let binding;\n    if (bindingInfo.prioritized != undefined) {\n      // Has to explicity check for undefined because bindingInfo.priorityized\n      // could not be a function but a false value. For example {FOO: 0}\n      // If a binding is passed in through the bindings argument it always takes\n      // precedence.\n      binding = bindingInfo.prioritized;\n    } else if (this.sync_ && bindingInfo.sync != undefined) {\n      // Use the sync resolution if avaliable when called synchronously.\n      binding = bindingInfo.sync;\n    } else if (this.sync_) {\n      // If there is no sync resolution we can not wait.\n      user().error(TAG, 'ignoring async replacement key: ', bindingInfo.name);\n      binding = '';\n    } else {\n      // Prefer the async over the sync but it may not exist.\n      binding = bindingInfo.async || bindingInfo.sync;\n    }\n\n    if (this.sync_) {\n      const result = this.evaluateBindingSync_(binding, name, opt_args);\n      return encode ? encodeURIComponent(result) : result;\n    } else {\n      return this.evaluateBindingAsync_(binding, name, opt_args).then(\n        (result) => (encode ? encodeURIComponent(result) : result)\n      );\n    }\n  }\n\n  /**\n   * Resolves binding to value to be substituted asyncronously.\n   * @param {*} binding Container for sync/async resolutions.\n   * @param {string} name\n   * @param {?Array=} opt_args Arguments to be passed if binding is function.\n   * @return {!Promise<string>} Resolved value.\n   */\n  evaluateBindingAsync_(binding, name, opt_args) {\n    let value;\n    try {\n      if (typeof binding === 'function') {\n        const bindingFunc = binding;\n        if (opt_args) {\n          value = this.processArgsAsync_(opt_args).then((args) =>\n            bindingFunc.apply(null, args)\n          );\n        } else {\n          value = tryResolve(bindingFunc);\n        }\n      } else {\n        value = Promise.resolve(binding);\n      }\n      return value\n        .then((val) => {\n          this.maybeCollectVars_(name, val, opt_args);\n\n          let result;\n\n          if (val == null) {\n            result = '';\n          } else {\n            result = val;\n          }\n          return result;\n        })\n        .catch((e) => {\n          rethrowAsync(e);\n          this.maybeCollectVars_(name, '', opt_args);\n          return Promise.resolve('');\n        });\n    } catch (e) {\n      // Report error, but do not disrupt URL replacement. This will\n      // interpolate as the empty string.\n      rethrowAsync(e);\n      this.maybeCollectVars_(name, '', opt_args);\n      return Promise.resolve('');\n    }\n  }\n\n  /**\n   * Flattens the inner layer of an array of arrays so that the result can be\n   * passed to a function.apply call. Must wait for any inner macros to resolve.\n   * This will cast all arguments to string before calling the macro.\n   *  [[Result of BAR, Result of BAR], 123]. => ['resultresult', '123']\n   * @param {!Array<!Array>} argsArray\n   * @return {!Promise<Array<string>>}\n   */\n  processArgsAsync_(argsArray) {\n    return Promise.all(\n      argsArray.map((argArray) => {\n        return Promise.all(argArray).then((resolved) => resolved.join(''));\n      })\n    );\n  }\n\n  /**\n   * Resolves binding to value to be substituted asyncronously.\n   * @param {*} binding Container for sync/async resolutions.\n   * @param {string} name\n   * @param {?Array=} opt_args Arguments to be passed if binding is function.\n   * @return {string} Resolved value.\n   */\n  evaluateBindingSync_(binding, name, opt_args) {\n    try {\n      let value = binding;\n      if (typeof binding === 'function') {\n        value = binding.apply(null, this.processArgsSync_(opt_args));\n      }\n\n      let result;\n\n      if (value && typeof value.then == 'function') {\n        // If binding is passed in as opt_binding we try to resolve it and it\n        // may return a promise. NOTE: We do not collect this discarded value,\n        // even if collectVars exists.\n        user().error(TAG, 'ignoring async macro resolution');\n        result = '';\n      } else if (\n        typeof value === 'string' ||\n        typeof value === 'number' ||\n        typeof value === 'boolean'\n      ) {\n        // Normal case.\n        this.maybeCollectVars_(name, value, opt_args);\n        // TODO: We should try to preserve type here.\n        result = value.toString();\n      } else {\n        // Most likely a broken binding gets us here.\n        this.maybeCollectVars_(name, '', opt_args);\n        result = '';\n      }\n\n      return result;\n    } catch (e) {\n      // Report error, but do not disrupt URL replacement. This will\n      // interpolate as the empty string.\n      rethrowAsync(e);\n      this.maybeCollectVars_(name, '', opt_args);\n      return '';\n    }\n  }\n\n  /**\n   * Flattens the inner layer of an array of arrays so that the result can be\n   * passed to a function.apply call. Will not wait for any promise to resolve.\n   * This will cast all arguments to string before calling the macro.\n   *  [[Result of BAR, Result of BAR], 123]. => ['resultresult', '123']\n   * @param {Array<!Array>|undefined} argsArray\n   * @return {Array<string>|undefined}\n   */\n  processArgsSync_(argsArray) {\n    if (!argsArray) {\n      return argsArray;\n    }\n    return argsArray.map((argArray) => {\n      return argArray.join('');\n    });\n  }\n\n  /**\n   * Collect vars if given the optional object. Handles formatting of kv pairs.\n   * @param {string} name Name of the macro.\n   * @param {*} value Raw macro resolution value.\n   * @param {?Array=} opt_args Arguments to be passed if binding is function.\n   */\n  maybeCollectVars_(name, value, opt_args) {\n    if (!this.collectVars_) {\n      return;\n    }\n\n    let args = '';\n    if (opt_args) {\n      const rawArgs = opt_args.filter((arg) => arg !== '').join(',');\n      args = `(${rawArgs})`;\n    }\n    this.collectVars_[`${name}${args}`] = value || '';\n  }\n}\n", "import * as mode from '#core/mode';\nimport {hasOwn} from '#core/types/object';\nimport {getHashParams, parseQueryString} from '#core/types/string/url';\nimport {WindowInterface} from '#core/window/interface';\n\nimport {Services} from '#service';\n\nimport {dev, devAssert, user, userAssert} from '#utils/log';\n\nimport {Expander} from './url-expander/expander';\nimport {\n  AsyncResolverDef,\n  ResolverReturnDef,\n  SyncResolverDef,\n  VariableSource,\n  getNavigationData,\n  getTimingDataAsync,\n  getTimingDataSync,\n} from './variable-source';\n\nimport {getTrackImpressionPromise} from '../impression';\nimport {\n  installServiceInEmbedDoc,\n  registerServiceBuilderForDoc,\n} from '../service-helpers';\nimport {\n  addMissingParamsToUrl,\n  addParamsToUrl,\n  getSourceUrl,\n  isProtocolValid,\n  parseUrlDeprecated,\n  removeAmpJsParamsFromUrl,\n  removeFragment,\n} from '../url';\n\n/** @private @const {string} */\nconst TAG = 'UrlReplacements';\nconst EXPERIMENT_DELIMITER = '!';\nconst VARIANT_DELIMITER = '.';\nconst GEO_DELIM = ',';\nconst ORIGINAL_HREF_PROPERTY = 'amp-original-href';\nconst ORIGINAL_VALUE_PROPERTY = 'amp-original-value';\n\n/**\n * Returns a function that executes method on a new Date instance. This is a\n * byte saving hack.\n *\n * @param {string} method\n * @return {!SyncResolverDef}\n */\nfunction dateMethod(method) {\n  return () => new Date()[method]();\n}\n\n/**\n * Returns a function that returns property of screen. This is a byte saving\n * hack.\n *\n * @param {!Screen} screen\n * @param {string} property\n * @return {!SyncResolverDef}\n */\nfunction screenProperty(screen, property) {\n  return () => screen[property];\n}\n\n/**\n *\n * @param {Object<string,(string|Array<string>)>|null} geo\n * @param {string} geoType\n * @return {string}\n */\nfunction geoData(geo, geoType) {\n  if (geoType) {\n    userAssert(\n      geoType === 'ISOCountry',\n      'The value passed to AMP_GEO() is not valid name:' + geoType\n    );\n    return /** @type {string} */ ((geo && geo[geoType]) || 'unknown');\n  }\n  return /** @type {string} */ (\n    geo?.matchedISOCountryGroups.join(GEO_DELIM) || 'unknown'\n  );\n}\n\n/**\n * Class to provide variables that pertain to top level AMP window.\n */\nexport class GlobalVariableSource extends VariableSource {\n  /**\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    super(ampdoc);\n\n    /** @private {Object<string,(string|Array<string>)>|null} */\n    this.cachedGeo_ = null;\n  }\n\n  /**\n   * Utility function for setting resolver for timing data that supports\n   * sync and async.\n   * @param {string} varName\n   * @param {string} startEvent\n   * @param {string=} endEvent\n   * @return {!VariableSource}\n   * @private\n   */\n  setTimingResolver_(varName, startEvent, endEvent) {\n    return this.setBoth(\n      varName,\n      () => {\n        return getTimingDataSync(this.ampdoc.win, startEvent, endEvent);\n      },\n      () => {\n        return getTimingDataAsync(this.ampdoc.win, startEvent, endEvent);\n      }\n    );\n  }\n\n  /** @override */\n  initialize() {\n    const {win} = this.ampdoc;\n    const element = this.ampdoc.getHeadNode();\n\n    /** @const {!./viewport/viewport-interface.ViewportInterface} */\n    const viewport = Services.viewportForDoc(this.ampdoc);\n\n    // Greedily cache the geo location if available for synchronous replacements.\n    Services.geoForDocOrNull(this.ampdoc).then((geo) => {\n      this.cachedGeo_ = geo;\n    });\n\n    // Returns a random value for cache busters.\n    this.set('RANDOM', () => Math.random());\n\n    // Provides a counter starting at 1 per given scope.\n    const counterStore = Object.create(null);\n    this.set('COUNTER', (scope) => {\n      return (counterStore[scope] = (counterStore[scope] | 0) + 1);\n    });\n\n    // Returns the canonical URL for this AMP document.\n    this.set('CANONICAL_URL', () => this.getDocInfo_().canonicalUrl);\n\n    // Returns the host of the canonical URL for this AMP document.\n    this.set(\n      'CANONICAL_HOST',\n      () => parseUrlDeprecated(this.getDocInfo_().canonicalUrl).host\n    );\n\n    // Returns the hostname of the canonical URL for this AMP document.\n    this.set(\n      'CANONICAL_HOSTNAME',\n      () => parseUrlDeprecated(this.getDocInfo_().canonicalUrl).hostname\n    );\n\n    // Returns the path of the canonical URL for this AMP document.\n    this.set(\n      'CANONICAL_PATH',\n      () => parseUrlDeprecated(this.getDocInfo_().canonicalUrl).pathname\n    );\n\n    // Returns the referrer URL.\n    this.setAsync(\n      'DOCUMENT_REFERRER',\n      /** @type {AsyncResolverDef} */ (\n        () => {\n          return Services.viewerForDoc(this.ampdoc).getReferrerUrl();\n        }\n      )\n    );\n\n    // Like DOCUMENT_REFERRER, but returns null if the referrer is of\n    // same domain or the corresponding CDN proxy.\n    this.setAsync(\n      'EXTERNAL_REFERRER',\n      /** @type {AsyncResolverDef} */ (\n        () => {\n          return Services.viewerForDoc(this.ampdoc)\n            .getReferrerUrl()\n            .then((referrer) => {\n              if (!referrer) {\n                return null;\n              }\n              const referrerHostname = parseUrlDeprecated(\n                getSourceUrl(referrer)\n              ).hostname;\n              const currentHostname = WindowInterface.getHostname(win);\n              return referrerHostname === currentHostname ? null : referrer;\n            });\n        }\n      )\n    );\n\n    // Returns the title of this AMP document.\n    this.set('TITLE', () => {\n      // The environment may override the title and set originalTitle. Prefer\n      // that if available.\n      const doc = win.document;\n      return doc['originalTitle'] || doc.title;\n    });\n\n    // Returns the URL for this AMP document.\n    this.set('AMPDOC_URL', () => {\n      return removeFragment(this.addReplaceParamsIfMissing_(win.location.href));\n    });\n\n    // Returns the host of the URL for this AMP document.\n    this.set('AMPDOC_HOST', () => {\n      const url = parseUrlDeprecated(win.location.href);\n      return url && url.host;\n    });\n\n    // Returns the hostname of the URL for this AMP document.\n    this.set('AMPDOC_HOSTNAME', () => {\n      const url = parseUrlDeprecated(win.location.href);\n      return url && url.hostname;\n    });\n\n    // Returns the Source URL for this AMP document.\n    const expandSourceUrl = () => {\n      const docInfo = this.getDocInfo_();\n      return removeFragment(this.addReplaceParamsIfMissing_(docInfo.sourceUrl));\n    };\n    this.setBoth(\n      'SOURCE_URL',\n      () => expandSourceUrl(),\n      () => getTrackImpressionPromise().then(() => expandSourceUrl())\n    );\n\n    // Returns the host of the Source URL for this AMP document.\n    this.set(\n      'SOURCE_HOST',\n      () => parseUrlDeprecated(this.getDocInfo_().sourceUrl).host\n    );\n\n    // Returns the hostname of the Source URL for this AMP document.\n    this.set(\n      'SOURCE_HOSTNAME',\n      () => parseUrlDeprecated(this.getDocInfo_().sourceUrl).hostname\n    );\n\n    // Returns the path of the Source URL for this AMP document.\n    this.set(\n      'SOURCE_PATH',\n      () => parseUrlDeprecated(this.getDocInfo_().sourceUrl).pathname\n    );\n\n    // Returns a random string that will be the constant for the duration of\n    // single page view. It should have sufficient entropy to be unique for\n    // all the page views a single user is making at a time.\n    this.set('PAGE_VIEW_ID', () => this.getDocInfo_().pageViewId);\n\n    // Returns a random string that will be the constant for the duration of\n    // single page view. It should have sufficient entropy to be unique for\n    // all the page views a single user is making at a time.\n    this.setAsync('PAGE_VIEW_ID_64', () => this.getDocInfo_().pageViewId64);\n\n    this.setBoth(\n      'QUERY_PARAM',\n      (param, defaultValue = '') => {\n        return this.getQueryParamData_(param, defaultValue);\n      },\n      (param, defaultValue = '') => {\n        return getTrackImpressionPromise().then(() => {\n          return this.getQueryParamData_(param, defaultValue);\n        });\n      }\n    );\n\n    // Returns the value of the given field name in the fragment query string.\n    // Second parameter is an optional default value.\n    // For example, if location is 'pub.com/amp.html?x=1#y=2' then\n    // FRAGMENT_PARAM(y) returns '2' and FRAGMENT_PARAM(z, 3) returns 3.\n    this.set('FRAGMENT_PARAM', (param, defaultValue = '') => {\n      return this.getFragmentParamData_(param, defaultValue);\n    });\n\n    /**\n     * Stores client ids that were generated during this page view\n     * indexed by scope.\n     * @type {?Object<string, string>}\n     */\n    let clientIds = null;\n    // Synchronous alternative. Only works for scopes that were previously\n    // requested using the async method.\n    this.setBoth(\n      'CLIENT_ID',\n      (scope) => {\n        if (!clientIds) {\n          return null;\n        }\n        return clientIds[scope];\n      },\n      (scope, opt_userNotificationId, opt_cookieName, opt_disableBackup) => {\n        userAssert(\n          scope,\n          'The first argument to CLIENT_ID, the fallback' +\n            /*OK*/ ' Cookie name, is required'\n        );\n\n        let consent = Promise.resolve();\n\n        // If no `opt_userNotificationId` argument is provided then\n        // assume consent is given by default.\n        if (opt_userNotificationId) {\n          consent = Services.userNotificationManagerForDoc(element).then(\n            (service) => {\n              return service.get(opt_userNotificationId);\n            }\n          );\n        }\n        return Services.cidForDoc(this.ampdoc)\n          .then((cid) => {\n            opt_disableBackup = opt_disableBackup == 'true' ? true : false;\n            return cid.get(\n              {\n                /** @type {string} */ scope,\n                createCookieIfNotPresent: true,\n                cookieName: opt_cookieName || undefined,\n                disableBackup: opt_disableBackup,\n              },\n              consent\n            );\n          })\n          .then((cid) => {\n            if (!clientIds) {\n              clientIds = Object.create(null);\n            }\n\n            // A temporary work around to extract Client ID from _ga cookie. #5761\n            // TODO: replace with \"filter\" when it's in place. #2198\n            const cookieName = opt_cookieName || scope;\n            if (cid && cookieName == '_ga') {\n              if (typeof cid === 'string') {\n                cid = extractClientIdFromGaCookie(cid);\n              } else {\n                // TODO(@jridgewell, #11120): remove once #11120 is figured out.\n                // Do not log the CID directly, that's PII.\n                dev().error(\n                  TAG,\n                  'non-string cid, what is it?',\n                  Object.keys(cid)\n                );\n              }\n            }\n\n            clientIds[scope] = cid;\n            return cid;\n          });\n      }\n    );\n\n    // Returns assigned variant name for the given experiment.\n    this.setAsync(\n      'VARIANT',\n      /** @type {AsyncResolverDef} */ (\n        (experiment) => {\n          return this.getVariantsValue_((variants) => {\n            const variant = variants[/** @type {string} */ (experiment)];\n            userAssert(\n              variant !== undefined,\n              'The value passed to VARIANT() is not a valid experiment in <amp-experiment>:' +\n                experiment\n            );\n            // When no variant assigned, use reserved keyword 'none'.\n            return variant === null ? 'none' : /** @type {string} */ (variant);\n          }, 'VARIANT');\n        }\n      )\n    );\n\n    // Returns all assigned experiment variants in a serialized form.\n    this.setAsync(\n      'VARIANTS',\n      /** @type {AsyncResolverDef} */ (\n        () => {\n          return this.getVariantsValue_((variants) => {\n            const experiments = [];\n            for (const experiment in variants) {\n              const variant = variants[experiment];\n              experiments.push(\n                experiment + VARIANT_DELIMITER + (variant || 'none')\n              );\n            }\n            return experiments.join(EXPERIMENT_DELIMITER);\n          }, 'VARIANTS');\n        }\n      )\n    );\n\n    // Returns assigned geo value for geoType or all groups.\n    this.setBoth(\n      'AMP_GEO',\n      (geoType) => geoData(this.cachedGeo_, geoType),\n      (geoType) => this.getGeo_((geo) => geoData(geo, geoType), 'AMP_GEO')\n    );\n\n    // Returns the number of milliseconds since 1 Jan 1970 00:00:00 UTC.\n    this.set('TIMESTAMP', dateMethod('getTime'));\n\n    // Returns the human readable timestamp in format of\n    // 2011-01-01T11:11:11.612Z.\n    this.set('TIMESTAMP_ISO', dateMethod('toISOString'));\n\n    // Returns the user's time-zone offset from UTC, in minutes.\n    this.set('TIMEZONE', dateMethod('getTimezoneOffset'));\n\n    // Returns a promise resolving to viewport.getScrollHeight.\n    this.set('SCROLL_HEIGHT', () => viewport.getScrollHeight());\n\n    // Returns a promise resolving to viewport.getScrollWidth.\n    this.set('SCROLL_WIDTH', () => viewport.getScrollWidth());\n\n    // Returns the viewport height.\n    this.set('VIEWPORT_HEIGHT', () => viewport.getHeight());\n\n    // Returns the viewport width.\n    this.set('VIEWPORT_WIDTH', () => viewport.getWidth());\n\n    const {screen} = win;\n    // Returns screen.width.\n    this.set('SCREEN_WIDTH', screenProperty(screen, 'width'));\n\n    // Returns screen.height.\n    this.set('SCREEN_HEIGHT', screenProperty(screen, 'height'));\n\n    // Returns screen.availHeight.\n    this.set('AVAILABLE_SCREEN_HEIGHT', screenProperty(screen, 'availHeight'));\n\n    // Returns screen.availWidth.\n    this.set('AVAILABLE_SCREEN_WIDTH', screenProperty(screen, 'availWidth'));\n\n    // Returns screen.ColorDepth.\n    this.set('SCREEN_COLOR_DEPTH', screenProperty(screen, 'colorDepth'));\n\n    // Returns document characterset.\n    this.set('DOCUMENT_CHARSET', () => {\n      const doc = win.document;\n      return doc.characterSet || doc.charset;\n    });\n\n    // Returns the browser language.\n    this.set('BROWSER_LANGUAGE', () => {\n      const nav = win.navigator;\n      return (\n        nav.language ||\n        // Only used on IE.\n        nav['userLanguage'] ||\n        nav.browserLanguage ||\n        ''\n      ).toLowerCase();\n    });\n\n    // Returns the user agent.\n    this.set('USER_AGENT', () => {\n      return win.navigator.userAgent;\n    });\n\n    // Returns the user agent client hint.\n    this.setAsync(\n      'UACH',\n      (variable) =>\n        win.navigator?.userAgentData\n          ?.getHighEntropyValues([variable])\n          ?.then((values) => values[variable]) || Promise.resolve('')\n    );\n\n    // Returns the time it took to load the whole page. (excludes amp-* elements\n    // that are not rendered by the system yet.)\n    this.setTimingResolver_(\n      'PAGE_LOAD_TIME',\n      'navigationStart',\n      'loadEventStart'\n    );\n\n    // Returns the time it took to perform DNS lookup for the domain.\n    this.setTimingResolver_(\n      'DOMAIN_LOOKUP_TIME',\n      'domainLookupStart',\n      'domainLookupEnd'\n    );\n\n    // Returns the time it took to connect to the server.\n    this.setTimingResolver_('TCP_CONNECT_TIME', 'connectStart', 'connectEnd');\n\n    // Returns the time it took for server to start sending a response to the\n    // request.\n    this.setTimingResolver_(\n      'SERVER_RESPONSE_TIME',\n      'requestStart',\n      'responseStart'\n    );\n\n    // Returns the time it took to download the page.\n    this.setTimingResolver_(\n      'PAGE_DOWNLOAD_TIME',\n      'responseStart',\n      'responseEnd'\n    );\n\n    // Returns the time it took for redirects to complete.\n    this.setTimingResolver_('REDIRECT_TIME', 'navigationStart', 'fetchStart');\n\n    // Returns the time it took for DOM to become interactive.\n    this.setTimingResolver_(\n      'DOM_INTERACTIVE_TIME',\n      'navigationStart',\n      'domInteractive'\n    );\n\n    // Returns the time it took for content to load.\n    this.setTimingResolver_(\n      'CONTENT_LOAD_TIME',\n      'navigationStart',\n      'domContentLoadedEventStart'\n    );\n\n    // Access: Reader ID.\n    this.setAsync(\n      'ACCESS_READER_ID',\n      /** @type {AsyncResolverDef} */ (\n        () => {\n          return this.getAccessValue_((accessService) => {\n            return accessService.getAccessReaderId();\n          }, 'ACCESS_READER_ID');\n        }\n      )\n    );\n\n    // Access: data from the authorization response.\n    this.setAsync(\n      'AUTHDATA',\n      /** @type {AsyncResolverDef} */ (\n        (field) => {\n          userAssert(\n            field,\n            'The first argument to AUTHDATA, the field, is required'\n          );\n          return this.getAccessValue_((accessService) => {\n            return accessService.getAuthdataField(field);\n          }, 'AUTHDATA');\n        }\n      )\n    );\n\n    // Returns an identifier for the viewer.\n    this.setAsync('VIEWER', () => {\n      return Services.viewerForDoc(this.ampdoc)\n        .getViewerOrigin()\n        .then((viewer) => {\n          return viewer == undefined ? '' : viewer;\n        });\n    });\n\n    // Returns the total engaged time since the content became viewable.\n    this.setAsync('TOTAL_ENGAGED_TIME', () => {\n      return Services.activityForDoc(element).then((activity) => {\n        return activity.getTotalEngagedTime();\n      });\n    });\n\n    // Returns the incremental engaged time since the last push under the\n    // same name.\n    this.setAsync('INCREMENTAL_ENGAGED_TIME', (name, reset) => {\n      return Services.activityForDoc(element).then((activity) => {\n        return activity.getIncrementalEngagedTime(\n          /** @type {string} */ (name),\n          reset !== 'false'\n        );\n      });\n    });\n\n    this.set('NAV_TIMING', (startAttribute, endAttribute) => {\n      userAssert(\n        startAttribute,\n        'The first argument to NAV_TIMING, the ' +\n          'start attribute name, is required'\n      );\n      return getTimingDataSync(\n        win,\n        /**@type {string}*/ (startAttribute),\n        /**@type {string}*/ (endAttribute)\n      );\n    });\n    this.setAsync('NAV_TIMING', (startAttribute, endAttribute) => {\n      userAssert(\n        startAttribute,\n        'The first argument to NAV_TIMING, the ' +\n          'start attribute name, is required'\n      );\n      return getTimingDataAsync(\n        win,\n        /**@type {string}*/ (startAttribute),\n        /**@type {string}*/ (endAttribute)\n      );\n    });\n\n    this.set('NAV_TYPE', () => {\n      return getNavigationData(win, 'type');\n    });\n\n    this.set('NAV_REDIRECT_COUNT', () => {\n      return getNavigationData(win, 'redirectCount');\n    });\n\n    // returns the AMP version number\n    this.set('AMP_VERSION', () => mode.version());\n\n    this.set('BACKGROUND_STATE', () => {\n      return this.ampdoc.isVisible() ? '0' : '1';\n    });\n\n    this.setAsync('VIDEO_STATE', (id, property) => {\n      return Services.videoManagerForDoc(this.ampdoc).getVideoStateProperty(\n        id,\n        property\n      );\n    });\n\n    this.setAsync('AMP_STATE', (key) => {\n      // This is safe since AMP_STATE is not an A4A allowlisted variable.\n      const root = this.ampdoc.getRootNode();\n      const element = /** @type {!Element|!ShadowRoot} */ (\n        root.documentElement || root\n      );\n      return Services.bindForDocOrNull(element).then((bind) => {\n        if (!bind) {\n          return '';\n        }\n        return bind.getStateValue(/** @type {string} */ (key)) || '';\n      });\n    });\n  }\n\n  /**\n   * Merges any replacement parameters into a given URL's query string,\n   * preferring values set in the original query string.\n   * @param {string} orig The original URL\n   * @return {string} The resulting URL\n   * @private\n   */\n  addReplaceParamsIfMissing_(orig) {\n    const {replaceParams} = this.getDocInfo_();\n    if (!replaceParams) {\n      return orig;\n    }\n    return addMissingParamsToUrl(\n      removeAmpJsParamsFromUrl(orig),\n      /** @type {!JsonObject} */ (replaceParams)\n    );\n  }\n\n  /**\n   * Return the document info for the current ampdoc.\n   * @return {./document-info-impl.DocumentInfoDef}\n   */\n  getDocInfo_() {\n    return Services.documentInfoForDoc(this.ampdoc);\n  }\n\n  /**\n   * Resolves the value via access service. If access service is not configured,\n   * the resulting value is `null`.\n   * @param {function(!../../extensions/amp-access/0.1/access-vars.AccessVars):(T|!Promise<T>)} getter\n   * @param {string} expr\n   * @return {?T}\n   * @template T\n   * @private\n   */\n  getAccessValue_(getter, expr) {\n    const element = this.ampdoc.getHeadNode();\n    return Promise.all([\n      Services.accessServiceForDocOrNull(element),\n      Services.subscriptionsServiceForDocOrNull(element),\n    ]).then((services) => {\n      const accessService =\n        /** @type {?../../extensions/amp-access/0.1/access-vars.AccessVars} */ (\n          services[0]\n        );\n      const subscriptionService =\n        /** @type {?../../extensions/amp-access/0.1/access-vars.AccessVars} */ (\n          services[1]\n        );\n      const service = accessService || subscriptionService;\n      if (!service) {\n        // Access/subscriptions service is not installed.\n        user().error(\n          TAG,\n          'Access or subsciptions service is not installed to access: ',\n          expr\n        );\n        return null;\n      }\n\n      // If both an access and subscription service are present, prefer\n      // subscription then fall back to access because access can be namespaced.\n      if (accessService && subscriptionService) {\n        return getter(subscriptionService) || getter(accessService);\n      }\n\n      return getter(service);\n    });\n  }\n\n  /**\n   * Return the QUERY_PARAM from the current location href\n   * @param {string} param\n   * @param {string} defaultValue\n   * @return {string}\n   * @private\n   */\n  getQueryParamData_(param, defaultValue) {\n    userAssert(\n      param,\n      'The first argument to QUERY_PARAM, the query string ' +\n        'param is required'\n    );\n    const url = parseUrlDeprecated(\n      removeAmpJsParamsFromUrl(this.ampdoc.win.location.href)\n    );\n    const params = parseQueryString(url.search);\n    const {replaceParams} = this.getDocInfo_();\n    if (typeof params[param] !== 'undefined') {\n      return params[param];\n    }\n    if (replaceParams && typeof replaceParams[param] !== 'undefined') {\n      return /** @type {string} */ (replaceParams[param]);\n    }\n    return defaultValue;\n  }\n\n  /**\n   * Return the FRAGMENT_PARAM from the original location href\n   * @param {*} param\n   * @param {string} defaultValue\n   * @return {string}\n   * @private\n   */\n  getFragmentParamData_(param, defaultValue) {\n    userAssert(\n      param,\n      'The first argument to FRAGMENT_PARAM, the fragment string ' +\n        'param is required'\n    );\n    userAssert(typeof param == 'string', 'param should be a string');\n    const params = getHashParams(this.ampdoc.win);\n    return params[param] === undefined ? defaultValue : params[param];\n  }\n\n  /**\n   * Resolves the value via amp-experiment's variants service.\n   * @param {function(!Object<string, string>):(?string)} getter\n   * @param {string} expr\n   * @return {!Promise<?string>}\n   * @template T\n   * @private\n   */\n  getVariantsValue_(getter, expr) {\n    return Services.variantsForDocOrNull(this.ampdoc.getHeadNode())\n      .then((variants) => {\n        userAssert(\n          variants,\n          'To use variable %s, amp-experiment should be configured',\n          expr\n        );\n        return variants.getVariants();\n      })\n      .then((variantsMap) => getter(variantsMap));\n  }\n\n  /**\n   * Resolves the value via geo service.\n   * @param {function(!../../extensions/amp-geo/0.1/amp-geo.GeoDef)} getter\n   * @param {string} expr\n   * @return {!Promise<Object<string,(string|Array<string>)>>}\n   * @template T\n   * @private\n   */\n  getGeo_(getter, expr) {\n    if (this.cachedGeo_ !== null) {\n      return getter(this.cachedGeo_);\n    }\n\n    return Services.geoForDocOrNull(this.ampdoc.getHeadNode()).then((geo) => {\n      userAssert(geo, 'To use variable %s, amp-geo should be configured', expr);\n      this.cachedGeo_ = geo;\n      return getter(geo);\n    });\n  }\n}\n\n/**\n * This class replaces substitution variables with their values.\n * Document new values in ../docs/spec/amp-var-substitutions.md\n * @package For export\n */\nexport class UrlReplacements {\n  /**\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   * @param {!VariableSource} variableSource\n   */\n  constructor(ampdoc, variableSource) {\n    /** @const {!./ampdoc-impl.AmpDoc} */\n    this.ampdoc = ampdoc;\n\n    /** @type {VariableSource} */\n    this.variableSource_ = variableSource;\n  }\n\n  /**\n   * Synchronously expands the provided source by replacing all known variables\n   * with their resolved values. Optional `opt_bindings` can be used to add new\n   * variables or override existing ones.  Any async bindings are ignored.\n   * @param {string} source\n   * @param {!Object<string, (ResolverReturnDef|!SyncResolverDef)>=} opt_bindings\n   * @param {!Object<string, boolean>=} opt_allowlist Optional allowlist of\n   *     names that can be substituted.\n   * @return {string}\n   */\n  expandStringSync(source, opt_bindings, opt_allowlist) {\n    return /** @type {string} */ (\n      new Expander(\n        this.variableSource_,\n        opt_bindings,\n        /* opt_collectVars */ undefined,\n        /* opt_sync */ true,\n        opt_allowlist,\n        /* opt_noEncode */ true\n      )./*OK*/ expand(source)\n    );\n  }\n\n  /**\n   * Expands the provided source by replacing all known variables with their\n   * resolved values. Optional `opt_bindings` can be used to add new variables\n   * or override existing ones.\n   * @param {string} source\n   * @param {!Object<string, *>=} opt_bindings\n   * @param {!Object<string, boolean>=} opt_allowlist\n   * @return {!Promise<string>}\n   */\n  expandStringAsync(source, opt_bindings, opt_allowlist) {\n    return /** @type {!Promise<string>} */ (\n      new Expander(\n        this.variableSource_,\n        opt_bindings,\n        /* opt_collectVars */ undefined,\n        /* opt_sync */ undefined,\n        opt_allowlist,\n        /* opt_noEncode */ true\n      )./*OK*/ expand(source)\n    );\n  }\n\n  /**\n   * Synchronously expands the provided URL by replacing all known variables\n   * with their resolved values. Optional `opt_bindings` can be used to add new\n   * variables or override existing ones.  Any async bindings are ignored.\n   * @param {string} url\n   * @param {!Object<string, (ResolverReturnDef|!SyncResolverDef)>=} opt_bindings\n   * @param {!Object<string, boolean>=} opt_allowlist Optional allowlist of\n   *     names that can be substituted.\n   * @return {string}\n   */\n  expandUrlSync(url, opt_bindings, opt_allowlist) {\n    return this.ensureProtocolMatches_(\n      url,\n      /** @type {string} */ (\n        new Expander(\n          this.variableSource_,\n          opt_bindings,\n          /* opt_collectVars */ undefined,\n          /* opt_sync */ true,\n          opt_allowlist\n        )./*OK*/ expand(url)\n      )\n    );\n  }\n\n  /**\n   * Expands the provided URL by replacing all known variables with their\n   * resolved values. Optional `opt_bindings` can be used to add new variables\n   * or override existing ones.\n   * @param {string} url\n   * @param {!Object<string, *>=} opt_bindings\n   * @param {!Object<string, boolean>=} opt_allowlist Optional allowlist of names\n   *     that can be substituted.\n   * @param {boolean=} opt_noEncode should not encode URL\n   * @return {!Promise<string>}\n   */\n  expandUrlAsync(url, opt_bindings, opt_allowlist, opt_noEncode) {\n    return /** @type {!Promise<string>} */ (\n      new Expander(\n        this.variableSource_,\n        opt_bindings,\n        /* opt_collectVars */ undefined,\n        /* opt_sync */ undefined,\n        opt_allowlist,\n        opt_noEncode\n      )\n        ./*OK*/ expand(url)\n        .then((replacement) => this.ensureProtocolMatches_(url, replacement))\n    );\n  }\n\n  /**\n   * Expands an input element value attribute with variable substituted.\n   * @param {!HTMLInputElement} element\n   * @return {!Promise<string>}\n   */\n  expandInputValueAsync(element) {\n    return /** @type {!Promise<string>} */ (\n      this.expandInputValue_(element, /*opt_sync*/ false)\n    );\n  }\n\n  /**\n   * Expands an input element value attribute with variable substituted.\n   * @param {!HTMLInputElement} element\n   * @return {string} Replaced string for testing\n   */\n  expandInputValueSync(element) {\n    return /** @type {string} */ (\n      this.expandInputValue_(element, /*opt_sync*/ true)\n    );\n  }\n\n  /**\n   * Expands in input element value attribute with variable substituted.\n   * @param {!HTMLInputElement} element\n   * @param {boolean=} opt_sync\n   * @return {string|!Promise<string>}\n   */\n  expandInputValue_(element, opt_sync) {\n    devAssert(\n      element.tagName == 'INPUT' &&\n        (element.getAttribute('type') || '').toLowerCase() == 'hidden',\n      'Input value expansion only works on hidden input fields: %s',\n      element\n    );\n\n    const allowlist = this.getAllowlistForElement_(element);\n    if (!allowlist) {\n      return opt_sync ? element.value : Promise.resolve(element.value);\n    }\n    if (element[ORIGINAL_VALUE_PROPERTY] === undefined) {\n      element[ORIGINAL_VALUE_PROPERTY] = element.value;\n    }\n    const result = new Expander(\n      this.variableSource_,\n      /* opt_bindings */ undefined,\n      /* opt_collectVars */ undefined,\n      /* opt_sync */ opt_sync,\n      /* opt_allowlist */ allowlist\n    )./*OK*/ expand(element[ORIGINAL_VALUE_PROPERTY] || element.value);\n\n    if (opt_sync) {\n      return (element.value = result);\n    }\n    return result.then((newValue) => {\n      element.value = newValue;\n      return newValue;\n    });\n  }\n\n  /**\n   * Returns a replacement allowlist from elements' data-amp-replace attribute.\n   * @param {!Element} element\n   * @param {!Object<string, boolean>=} opt_supportedReplacement Optional supported\n   * replacement that filters allowlist to a subset.\n   * @return {!Object<string, boolean>|undefined}\n   */\n  getAllowlistForElement_(element, opt_supportedReplacement) {\n    const allowlist = element.getAttribute('data-amp-replace');\n    if (!allowlist) {\n      return;\n    }\n    const requestedReplacements = {};\n    allowlist\n      .trim()\n      .split(/\\s+/)\n      .forEach((replacement) => {\n        if (\n          !opt_supportedReplacement ||\n          hasOwn(opt_supportedReplacement, replacement)\n        ) {\n          requestedReplacements[replacement] = true;\n        } else {\n          user().warn('URL', 'Ignoring unsupported replacement', replacement);\n        }\n      });\n    return requestedReplacements;\n  }\n\n  /**\n   * Returns whether variable substitution is allowed for given url.\n   * @param {!Location} url\n   * @return {boolean}\n   */\n  isAllowedOrigin_(url) {\n    const docInfo = Services.documentInfoForDoc(this.ampdoc);\n    if (\n      url.origin == parseUrlDeprecated(docInfo.canonicalUrl).origin ||\n      url.origin == parseUrlDeprecated(docInfo.sourceUrl).origin\n    ) {\n      return true;\n    }\n\n    const meta = this.ampdoc.getMetaByName('amp-link-variable-allowed-origin');\n    if (meta) {\n      const allowlist = meta.trim().split(/\\s+/);\n      for (let i = 0; i < allowlist.length; i++) {\n        if (url.origin == parseUrlDeprecated(allowlist[i]).origin) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Replaces values in the link of an anchor tag if\n   * - the link opts into it (via data-amp-replace argument)\n   * - the destination is the source or canonical origin of this doc.\n   * @param {!Element} element An anchor element.\n   * @param {?string} defaultUrlParams to expand link if caller request.\n   * @return {string|undefined} Replaced string for testing\n   */\n  maybeExpandLink(element, defaultUrlParams) {\n    devAssert(element.tagName == 'A');\n    const aElement = /** @type {!HTMLAnchorElement} */ (element);\n    const supportedReplacements = {\n      'CLIENT_ID': true,\n      'QUERY_PARAM': true,\n      'PAGE_VIEW_ID': true,\n      'PAGE_VIEW_ID_64': true,\n      'NAV_TIMING': true,\n    };\n    let additionalUrlParameters =\n      aElement.getAttribute('data-amp-addparams') || '';\n    const allowlist = this.getAllowlistForElement_(\n      aElement,\n      supportedReplacements\n    );\n\n    if (!allowlist && !additionalUrlParameters && !defaultUrlParams) {\n      return;\n    }\n    // ORIGINAL_HREF_PROPERTY has the value of the href \"pre-replacement\".\n    // We set this to the original value before doing any work and use it\n    // on subsequent replacements, so that each run gets a fresh value.\n    let href = dev().assertString(\n      aElement[ORIGINAL_HREF_PROPERTY] || aElement.getAttribute('href')\n    );\n    const url = parseUrlDeprecated(href);\n    if (aElement[ORIGINAL_HREF_PROPERTY] == null) {\n      aElement[ORIGINAL_HREF_PROPERTY] = href;\n    }\n\n    const isAllowedOrigin = this.isAllowedOrigin_(url);\n    if (additionalUrlParameters) {\n      additionalUrlParameters = isAllowedOrigin\n        ? this.expandSyncIfAllowedList_(additionalUrlParameters, allowlist)\n        : additionalUrlParameters;\n      href = addParamsToUrl(href, parseQueryString(additionalUrlParameters));\n    }\n\n    if (!isAllowedOrigin) {\n      if (allowlist) {\n        user().warn(\n          'URL',\n          'Ignoring link replacement %s' +\n            \" because the link does not go to the document's\" +\n            ' source, canonical, or allowlisted origin.',\n          href\n        );\n      }\n      return (aElement.href = href);\n    }\n\n    // Note that defaultUrlParams is treated differently than\n    // additionalUrlParameters in two ways #1: If the outgoing url origin is not\n    // allowlisted: additionalUrlParameters are always appended by not expanded,\n    // defaultUrlParams will not be appended. #2: If the expansion function is\n    // not allowlisted: additionalUrlParamters will not be expanded,\n    // defaultUrlParams will by default support QUERY_PARAM, and will still be\n    // expanded.\n    if (defaultUrlParams) {\n      if (!allowlist || !allowlist['QUERY_PARAM']) {\n        // override allowlist and expand defaultUrlParams;\n        const overrideAllowlist = {'QUERY_PARAM': true};\n        defaultUrlParams = this.expandUrlSync(\n          defaultUrlParams,\n          /* opt_bindings */ undefined,\n          /* opt_allowlist */ overrideAllowlist\n        );\n      }\n      href = addParamsToUrl(href, parseQueryString(defaultUrlParams));\n    }\n\n    href = this.expandSyncIfAllowedList_(href, allowlist);\n\n    return (aElement.href = href);\n  }\n\n  /**\n   * @param {string} href\n   * @param {!Object<string, boolean>|undefined} allowlist\n   * @return {string}\n   */\n  expandSyncIfAllowedList_(href, allowlist) {\n    return allowlist\n      ? this.expandUrlSync(\n          href,\n          /* opt_bindings */ undefined,\n          /* opt_allowlist */ allowlist\n        )\n      : href;\n  }\n\n  /**\n   * Collects all substitutions in the provided URL and expands them to the\n   * values for known variables. Optional `opt_bindings` can be used to add\n   * new variables or override existing ones.\n   * @param {string} url\n   * @param {!Object<string, *>=} opt_bindings\n   * @return {!Promise<!Object<string, *>>}\n   */\n  collectVars(url, opt_bindings) {\n    const vars = Object.create(null);\n    return new Expander(this.variableSource_, opt_bindings, vars)\n      ./*OK*/ expand(url)\n      .then(() => vars);\n  }\n\n  /**\n   * Collects substitutions in the `src` attribute of the given element\n   * that are _not_ allowlisted via `data-amp-replace` opt-in attribute.\n   * @param {!Element} element\n   * @return {!Array<string>}\n   */\n  collectDisallowedVarsSync(element) {\n    const url = element.getAttribute('src');\n    const macroNames = new Expander(this.variableSource_).getMacroNames(url);\n    const allowlist = this.getAllowlistForElement_(element);\n    if (allowlist) {\n      return macroNames.filter((v) => !allowlist[v]);\n    } else {\n      // All vars are unallowlisted if the element has no allowlist.\n      return macroNames;\n    }\n  }\n\n  /**\n   * Ensures that the protocol of the original url matches the protocol of the\n   * replacement url. Returns the replacement if they do, the original if they\n   * do not.\n   * @param {string} url\n   * @param {string} replacement\n   * @return {string}\n   */\n  ensureProtocolMatches_(url, replacement) {\n    const newProtocol = parseUrlDeprecated(\n      replacement,\n      /* opt_nocache */ true\n    ).protocol;\n    const oldProtocol = parseUrlDeprecated(\n      url,\n      /* opt_nocache */ true\n    ).protocol;\n    if (newProtocol != oldProtocol) {\n      user().error(TAG, 'Illegal replacement of the protocol: ', url);\n      return url;\n    }\n    userAssert(\n      isProtocolValid(replacement),\n      'The replacement url has invalid protocol: %s',\n      replacement\n    );\n\n    return replacement;\n  }\n\n  /**\n   * @return {VariableSource}\n   */\n  getVariableSource() {\n    return this.variableSource_;\n  }\n}\n\n/**\n * Extracts client ID from a _ga cookie.\n * https://developers.google.com/analytics/devguides/collection/analyticsjs/cookies-user-id\n * @param {string} gaCookie\n * @return {string}\n */\nexport function extractClientIdFromGaCookie(gaCookie) {\n  return gaCookie.replace(/^(GA1|1)\\.[\\d-]+\\./, '');\n}\n\n/**\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n */\nexport function installUrlReplacementsServiceForDoc(ampdoc) {\n  registerServiceBuilderForDoc(ampdoc, 'url-replace', function (doc) {\n    return new UrlReplacements(doc, new GlobalVariableSource(doc));\n  });\n}\n\n/**\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @param {!VariableSource} varSource\n */\nexport function installUrlReplacementsForEmbed(ampdoc, varSource) {\n  installServiceInEmbedDoc(\n    ampdoc,\n    'url-replace',\n    new UrlReplacements(ampdoc, varSource)\n  );\n}\n\n/**\n * @typedef {{incomingFragment: string, outgoingFragment: string}}\n */\nlet ShareTrackingFragmentsDef;\n", "import {devAssert} from '#core/assert';\nimport {iterateCursor, removeElement} from '#core/dom';\nimport {childElementsByTag} from '#core/dom/query';\n\nimport {Services} from '#service';\n\nimport {dev} from '#utils/log';\n\n/**\n * Takes as an input a text stream, parses it and incrementally reconstructs\n * it in the new target root.\n *\n * See https://jakearchibald.com/2016/fun-hacks-faster-content/ for more\n * details.\n *\n * @interface\n * @extends {WritableStreamDefaultWriter}\n * @visibleForTesting\n */\nexport class DomWriter {\n  /**\n   * Sets the callback that will be called when body has been parsed.\n   *\n   * For shadow use case, unlike most of other nodes, `<body>` cannot be simply\n   * merged to support Shadow DOM polyfill where the use of `<body>`\n   * element is not possible.\n   *\n   * The callback will be given the parsed document and it must return back\n   * the reconstructed `<body>` node in the target DOM where all children\n   * will be streamed into.\n   *\n   * @param {function(!Document):!Element} unusedCallback\n   */\n  onBody(unusedCallback) {}\n\n  /**\n   * Sets the callback that will be called when new nodes have been merged\n   * into the target DOM.\n   * @param {function()} unusedCallback\n   */\n  onBodyChunk(unusedCallback) {}\n\n  /**\n   * Sets the callback that will be called when the DOM has been fully\n   * constructed.\n   * @param {function()} unusedCallback\n   */\n  onEnd(unusedCallback) {}\n}\n\n/**\n * Takes as an input a text stream, parses it and incrementally reconstructs\n * it in the given root.\n *\n * See https://jakearchibald.com/2016/fun-hacks-faster-content/ for more\n * details.\n *\n * @implements {DomWriter}\n * @visibleForTesting\n */\nexport class DomWriterStreamer {\n  /**\n   * @param {!Window} win\n   */\n  constructor(win) {\n    /** @const @private {!Document} */\n    this.parser_ = win.document.implementation.createHTMLDocument('');\n    this.parser_.open();\n\n    /** @const @private */\n    this.vsync_ = Services.vsyncFor(win);\n\n    /** @private @const */\n    this.boundMerge_ = this.merge_.bind(this);\n\n    /** @private {?function(!Document):!Element} */\n    this.onBody_ = null;\n\n    /** @private {?function()} */\n    this.onBodyChunk_ = null;\n\n    /** @private {?function()} */\n    this.onEnd_ = null;\n\n    /** @private {boolean} */\n    this.mergeScheduled_ = false;\n\n    /** @const @private {!Promise} */\n    this.success_ = Promise.resolve();\n\n    /** @private {boolean} */\n    this.eof_ = false;\n\n    /** @private {?Element} */\n    this.targetBody_ = null;\n  }\n\n  /** @override */\n  onBody(callback) {\n    this.onBody_ = callback;\n  }\n\n  /** @override */\n  onBodyChunk(callback) {\n    this.onBodyChunk_ = callback;\n  }\n\n  /** @override */\n  onEnd(callback) {\n    this.onEnd_ = callback;\n  }\n\n  /** @override */\n  write(chunk) {\n    if (this.eof_) {\n      throw new Error('closed already');\n    }\n    if (chunk) {\n      this.parser_.write(/** @type {string} */ (chunk));\n    }\n    this.schedule_();\n    return this.success_;\n  }\n\n  /** @override */\n  close() {\n    this.parser_.close();\n    this.eof_ = true;\n    this.schedule_();\n    return this.success_;\n  }\n\n  /** @override */\n  abort(unusedReason) {\n    throw new Error('Not implemented');\n  }\n\n  /** @override */\n  releaseLock() {\n    throw new Error('Not implemented');\n  }\n\n  /** @override */\n  get closed() {\n    throw new Error('Not implemented');\n  }\n\n  /** @override */\n  get desiredSize() {\n    throw new Error('Not implemented');\n  }\n\n  /** @override */\n  get ready() {\n    throw new Error('Not implemented');\n  }\n\n  /** @private */\n  schedule_() {\n    devAssert(this.onBody_ && this.onBodyChunk_ && this.onEnd_);\n    if (!this.mergeScheduled_) {\n      this.mergeScheduled_ = true;\n      this.vsync_.mutate(this.boundMerge_);\n    }\n  }\n\n  /** @private */\n  merge_() {\n    this.mergeScheduled_ = false;\n\n    // Body has been newly parsed.\n    if (!this.targetBody_ && this.parser_.body) {\n      this.targetBody_ = this.onBody_(this.parser_);\n    }\n\n    // Merge body children.\n    if (this.targetBody_) {\n      const inputBody = dev().assertElement(this.parser_.body);\n      const targetBody = devAssert(this.targetBody_);\n      let transferCount = 0;\n      removeNoScriptElements(inputBody);\n      while (inputBody.firstChild) {\n        transferCount++;\n        targetBody.appendChild(inputBody.firstChild);\n      }\n      if (transferCount > 0) {\n        this.onBodyChunk_();\n      }\n    }\n\n    // EOF.\n    if (this.eof_) {\n      this.onEnd_();\n    }\n  }\n}\n\n/**\n * Takes as an input a text stream, aggregates it and parses it in one bulk.\n * This is a workaround against the browsers that do not support streaming DOM\n * parsing. Mainly currently Firefox.\n *\n * See https://github.com/whatwg/html/issues/2827 and\n * https://bugzilla.mozilla.org/show_bug.cgi?id=867102\n *\n * @implements {DomWriter}\n * @visibleForTesting\n */\nexport class DomWriterBulk {\n  /**\n   * @param {!Window} win\n   */\n  constructor(win) {\n    /** @private {!Array<string>} */\n    this.fullHtml_ = [];\n\n    /** @const @private */\n    this.vsync_ = Services.vsyncFor(win);\n\n    /** @private {?function(!Document):!Element} */\n    this.onBody_ = null;\n\n    /** @private {?function()} */\n    this.onBodyChunk_ = null;\n\n    /** @private {?function()} */\n    this.onEnd_ = null;\n\n    /** @const @private {!Promise} */\n    this.success_ = Promise.resolve();\n\n    /** @private {boolean} */\n    this.eof_ = false;\n  }\n\n  /** @override */\n  onBody(callback) {\n    this.onBody_ = callback;\n  }\n\n  /** @override */\n  onBodyChunk(callback) {\n    this.onBodyChunk_ = callback;\n  }\n\n  /** @override */\n  onEnd(callback) {\n    this.onEnd_ = callback;\n  }\n\n  /** @override */\n  write(chunk) {\n    devAssert(this.onBody_ && this.onBodyChunk_ && this.onEnd_);\n    if (this.eof_) {\n      throw new Error('closed already');\n    }\n    if (chunk) {\n      this.fullHtml_.push(dev().assertString(chunk));\n    }\n    return this.success_;\n  }\n\n  /** @override */\n  close() {\n    devAssert(this.onBody_ && this.onBodyChunk_ && this.onEnd_);\n    this.eof_ = true;\n    this.vsync_.mutate(() => this.complete_());\n    return this.success_;\n  }\n\n  /** @override */\n  abort(unusedReason) {\n    throw new Error('Not implemented');\n  }\n\n  /** @override */\n  releaseLock() {\n    throw new Error('Not implemented');\n  }\n\n  /** @override */\n  get closed() {\n    throw new Error('Not implemented');\n  }\n\n  /** @override */\n  get desiredSize() {\n    throw new Error('Not implemented');\n  }\n\n  /** @override */\n  get ready() {\n    throw new Error('Not implemented');\n  }\n\n  /** @private */\n  complete_() {\n    const fullHtml = this.fullHtml_.join('');\n    const doc = new DOMParser().parseFromString(fullHtml, 'text/html');\n\n    // Merge body.\n    if (doc.body) {\n      const inputBody = doc.body;\n      const targetBody = this.onBody_(doc);\n      let transferCount = 0;\n      removeNoScriptElements(inputBody);\n      while (inputBody.firstChild) {\n        transferCount++;\n        targetBody.appendChild(inputBody.firstChild);\n      }\n      if (transferCount > 0) {\n        this.onBodyChunk_();\n      }\n    }\n\n    // EOF.\n    this.onEnd_();\n  }\n}\n\n/**\n * Remove any noscript elements.\n *\n * According to the spec\n * (https://w3c.github.io/DOM-Parsing/#the-domparser-interface), with\n * `DOMParser().parseFromString`, contents of `noscript` get parsed as markup,\n * so we need to remove them manually. Why? \u00AF\\_(\u30C4)_/\u00AF `createHTMLDocument()`\n * seems to behave the same way.\n *\n * @param {!Element} parent\n */\nexport function removeNoScriptElements(parent) {\n  const noscriptElements = childElementsByTag(parent, 'noscript');\n  iterateCursor(noscriptElements, (element) => {\n    removeElement(element);\n  });\n}\n", "import {devAssert, devAssertElement} from '#core/assert';\nimport {Deferred} from '#core/data-structures/promise';\n\nimport {removeNoScriptElements} from './dom-writer';\n\n/**\n * @param {!Function} cb\n * @return {!Promise}\n */\nconst DEFAULT_TRANSFER_THROTTLE_FUNC = (cb) => Promise.resolve(cb());\n\nexport class DomTransformStream {\n  /**\n   * @param {!Window} win\n   * @param {(function(!Function):!Promise)=} opt_transferThrottleFunc\n   */\n  constructor(win, opt_transferThrottleFunc) {\n    const headDefer = new Deferred();\n    /**\n     * Resolves when head has been written to in memory document.\n     * @const @private {!Promise<!Element>}\n     */\n    this.headPromise_ = headDefer.promise;\n\n    /** @const @private {!function(!Element)} */\n    this.headResolver_ = headDefer.resolve;\n\n    const transferDefer = new Deferred();\n    /**\n     * Resovles when complete doc has been transfered to the target\n     * body.\n     * @const @private {!Promise}\n     */\n    this.bodyTransferPromise_ = transferDefer.promise;\n\n    /** @const @private {!function(!Promise)} */\n    this.bodyTransferResolver_ = transferDefer.resolve;\n\n    /** @private {?Element} */\n    this.detachedBody_ = null;\n\n    const targetBodyDefer = new Deferred();\n    /**\n     * Resolves when target body is ready to receive elements.\n     * @private {!Promise<!Element>}\n     */\n    this.targetBodyPromise_ = targetBodyDefer.promise;\n\n    /** @const @private {!function(!Element)} */\n    this.targetBodyResolver_ = targetBodyDefer.resolve;\n\n    /** @private {?Promise} */\n    this.currentChunkTransferPromise_ = null;\n\n    /** @private {boolean} */\n    this.shouldTransfer_ = false;\n\n    /** @private @const */\n    this.transferThrottle_ =\n      opt_transferThrottleFunc || DEFAULT_TRANSFER_THROTTLE_FUNC;\n  }\n\n  /**\n   * Callback passed into DetachedDomStream constructor. Receives updated\n   * document everytime a new chunk is written.\n   * Resolves headPromise when body is available, and streams to body iff\n   * bodyTransfer() has been called.\n   * @param {!Document} detachedDoc\n   */\n  onChunk(detachedDoc) {\n    // <body> is newly formed.\n    if (!this.detachedBody_ && detachedDoc.body) {\n      this.detachedBody_ = detachedDoc.body;\n      this.headResolver_(devAssertElement(detachedDoc.head));\n    }\n\n    // If bodyTransfer has already been called, keep transferring on new chunks.\n    if (this.shouldTransfer_) {\n      this.transferBodyChunk_();\n    }\n  }\n\n  /**\n   * Callback passed into DetachedDomStream constructor. Called with complete\n   * doc when stream is closed.\n   * Schedules final transfer, then resovles body complete promise.\n   * @param {!Document} unusedCompleteDoc\n   */\n  onEnd(unusedCompleteDoc) {\n    this.bodyTransferResolver_(this.transferBodyChunk_());\n  }\n\n  /**\n   * Promise that will resolve with <head> when available.\n   * @return {!Promise<!Element>}\n   */\n  waitForHead() {\n    return this.headPromise_;\n  }\n\n  /**\n   * Start the body transfer process. Should only be called once.\n   * @param {!Element} targetBody body element to be appended to.\n   * @return {!Promise} resolves when doc has been fully transferred.\n   */\n  transferBody(targetBody) {\n    devAssertElement(\n      targetBody,\n      'No target body given to DomTransformStream.transferBody'\n    );\n\n    devAssert(\n      !this.shouldTransfer_,\n      'DomTransformStream.transferBody should only be called once'\n    );\n\n    this.shouldTransfer_ = true;\n    this.targetBodyResolver_(targetBody);\n\n    this.headPromise_.then(() => {\n      const attrs = this.detachedBody_.attributes;\n      for (let i = 0; i < attrs.length; i++) {\n        const {name, value} = attrs[i];\n        targetBody.setAttribute(name, value);\n      }\n    });\n\n    this.transferBodyChunk_();\n\n    return this.bodyTransferPromise_;\n  }\n\n  /**\n   * Transfers available body elements in vsync cycle.\n   * @return {!Promise}\n   */\n  transferBodyChunk_() {\n    if (this.currentChunkTransferPromise_) {\n      return this.currentChunkTransferPromise_;\n    }\n\n    this.currentChunkTransferPromise_ = Promise.all([\n      this.targetBodyPromise_,\n      this.headPromise_,\n    ]).then((resolvedElements) => {\n      const transferThrottle = this.transferThrottle_;\n      return transferThrottle(() => {\n        this.currentChunkTransferPromise_ = null;\n        const targetBody = resolvedElements[0];\n        removeNoScriptElements(devAssertElement(this.detachedBody_));\n        while (this.detachedBody_.firstChild) {\n          targetBody.appendChild(this.detachedBody_.firstChild);\n        }\n      });\n    });\n\n    return this.currentChunkTransferPromise_;\n  }\n}\n", "import {Services} from '#service';\nimport {\n  VariableSource,\n  getNavigationData,\n  getTimingDataAsync,\n  getTimingDataSync,\n} from '#service/variable-source';\n\nimport {user, userAssert} from '#utils/log';\n\nconst ALLOWLISTED_VARIABLES = [\n  'AMPDOC_HOST',\n  'AMPDOC_HOSTNAME',\n  'AMPDOC_URL',\n  'AMP_VERSION',\n  'AVAILABLE_SCREEN_HEIGHT',\n  'AVAILABLE_SCREEN_WIDTH',\n  'BACKGROUND_STATE',\n  'BROWSER_LANGUAGE',\n  'CANONICAL_HOST',\n  'CANONICAL_HOSTNAME',\n  'CANONICAL_PATH',\n  'CANONICAL_URL',\n  'COUNTER',\n  'DOCUMENT_CHARSET',\n  'DOCUMENT_REFERRER',\n  'PAGE_VIEW_ID',\n  'RANDOM',\n  'SCREEN_COLOR_DEPTH',\n  'SCREEN_HEIGHT',\n  'SCREEN_WIDTH',\n  'SCROLL_HEIGHT',\n  'SCROLL_WIDTH',\n  'SOURCE_HOST',\n  'SOURCE_HOSTNAME',\n  'SOURCE_PATH',\n  'SOURCE_URL',\n  'TIMESTAMP',\n  'TIMEZONE',\n  'TITLE',\n  'TOTAL_ENGAGED_TIME',\n  'USER_AGENT',\n  'VARIANT',\n  'VARIANTS',\n  'VIEWER',\n  'VIEWPORT_HEIGHT',\n  'VIEWPORT_WIDTH',\n];\n\n/** Provides A4A specific variable substitution. */\nexport class A4AVariableSource extends VariableSource {\n  /**\n   * @param  {!../../../src/service/ampdoc-impl.AmpDoc} parentAmpdoc\n   * @param  {!Window} embedWin\n   */\n  constructor(parentAmpdoc, embedWin) {\n    super(parentAmpdoc);\n\n    // Use parent URL replacements service for fallback.\n    const headNode = parentAmpdoc.getHeadNode();\n    const urlReplacements = Services.urlReplacementsForDoc(headNode);\n\n    /** @private {VariableSource} global variable source for fallback. */\n    this.globalVariableSource_ = urlReplacements.getVariableSource();\n\n    /** @private {!Window} */\n    this.win_ = embedWin;\n  }\n\n  /** @override */\n  initialize() {\n    // Initiate allowed varaibles first in case the resolver function needs\n    // to be overwritten.\n    for (let v = 0; v < ALLOWLISTED_VARIABLES.length; v++) {\n      const varName = ALLOWLISTED_VARIABLES[v];\n      const resolvers = this.globalVariableSource_.get(varName);\n      this.set(varName, resolvers.sync).setAsync(varName, resolvers.async);\n    }\n\n    this.set('NAV_TIMING', (startAttribute, endAttribute) => {\n      userAssert(\n        startAttribute,\n        'The first argument to NAV_TIMING, the' +\n          ' start attribute name, is required'\n      );\n      return getTimingDataSync(\n        this.win_,\n        /**@type {string}*/ (startAttribute),\n        /**@type {string}*/ (endAttribute)\n      );\n    }).setAsync('NAV_TIMING', (startAttribute, endAttribute) => {\n      userAssert(\n        startAttribute,\n        'The first argument to NAV_TIMING, the' +\n          ' start attribute name, is required'\n      );\n      return getTimingDataAsync(\n        this.win_,\n        /**@type {string}*/ (startAttribute),\n        /**@type {string}*/ (endAttribute)\n      );\n    });\n\n    this.set('NAV_TYPE', () => {\n      return getNavigationData(this.win_, 'type');\n    });\n\n    this.set('NAV_REDIRECT_COUNT', () => {\n      return getNavigationData(this.win_, 'redirectCount');\n    });\n\n    this.set(\n      'HTML_ATTR',\n      /** @type {function(...*)} */ (this.htmlAttributeBinding_.bind(this))\n    );\n\n    this.set('CLIENT_ID', () => null);\n  }\n\n  /**\n   * Provides a binding for getting attributes from the DOM.\n   * Most such bindings are provided in src/service/url-replacements-impl, but\n   * this one needs access to this.win_.document, which if the amp-analytics\n   * tag is contained within an amp-ad tag will NOT be the parent/publisher\n   * page. Hence the need to put it here.\n   * @param {string} cssSelector Elements matching this selector will be\n   *     included, provided they have at least one of the attributeNames\n   *     set, up to a max of 10. May be URI encoded.\n   * @param {...string} var_args Additional params will be the names of\n   *     attributes whose values will be returned. There should be at least 1.\n   * @return {string} A stringified JSON array containing one member for each\n   *     matching element. Each member will contain the names and values of the\n   *     specified attributes, if the corresponding element has that attribute.\n   *     Note that if an element matches the cssSelected but has none of the\n   *     requested attributes, then nothing will be included in the array\n   *     for that element.\n   */\n  htmlAttributeBinding_(cssSelector, var_args) {\n    // Generate an error if cssSelector matches more than this many elements\n    const HTML_ATTR_MAX_ELEMENTS_TO_TRAVERSE = 20;\n\n    // Of the elements matched by cssSelector, see which contain one or more\n    // of the specified attributes, and return an array of at most this many.\n    const HTML_ATTR_MAX_ELEMENTS_TO_RETURN = 10;\n\n    // Only allow at most this many attributeNames to be specified.\n    const HTML_ATTR_MAX_ATTRS = 10;\n\n    const TAG = 'A4AVariableSource';\n\n    const attributeNames = Array.prototype.slice.call(arguments, 1);\n    if (!cssSelector || !attributeNames.length) {\n      return '[]';\n    }\n    if (attributeNames.length > HTML_ATTR_MAX_ATTRS) {\n      user().error(TAG, `At most ${HTML_ATTR_MAX_ATTRS} may be requested.`);\n      return '[]';\n    }\n    cssSelector = decodeURI(cssSelector);\n    let elements;\n    try {\n      elements = this.win_.document.querySelectorAll(cssSelector);\n    } catch (e) {\n      user().error(TAG, `Invalid selector: ${cssSelector}`);\n      return '[]';\n    }\n    if (elements.length > HTML_ATTR_MAX_ELEMENTS_TO_TRAVERSE) {\n      user().error(\n        TAG,\n        'CSS selector may match at most ' +\n          `${HTML_ATTR_MAX_ELEMENTS_TO_TRAVERSE} elements.`\n      );\n      return '[]';\n    }\n    const result = [];\n    for (\n      let i = 0;\n      i < elements.length && result.length < HTML_ATTR_MAX_ELEMENTS_TO_RETURN;\n      ++i\n    ) {\n      const currentResult = {};\n      let foundAtLeastOneAttr = false;\n      for (let j = 0; j < attributeNames.length; ++j) {\n        const attributeName = attributeNames[j];\n        if (elements[i].hasAttribute(attributeName)) {\n          currentResult[attributeName] =\n            elements[i].getAttribute(attributeName);\n          foundAtLeastOneAttr = true;\n        }\n      }\n      if (foundAtLeastOneAttr) {\n        result.push(currentResult);\n      }\n    }\n    return JSON.stringify(result);\n  }\n}\n", "import {isArray, isObject} from '#core/types';\nimport {parseJson} from '#core/types/object/json';\n\nimport {Services} from '#service';\nimport {parseExtensionUrl} from '#service/extension-script';\n\nimport {dev} from '#utils/log';\n\nimport {urls} from '../../../src/config';\nimport {isSecureUrlDeprecated} from '../../../src/url';\n\nconst TAG = 'amp-ad-util';\n\n/**\n * Sends a CORS XHR request to the given URL.\n * @param {!Window} win\n * @param {string} url Request URL to send XHR to.\n * @return {!Promise<!Response>}\n */\nexport function sendXhrRequest(win, url) {\n  return Services.xhrFor(win).fetch(url, {\n    mode: 'cors',\n    method: 'GET',\n    credentials: 'include',\n  });\n}\n\n/** @type {Array<string>} */\nconst METADATA_STRINGS = [\n  '<script amp-ad-metadata type=application/json>',\n  '<script type=\"application/json\" amp-ad-metadata>',\n  '<script type=application/json amp-ad-metadata>',\n];\n\n/**\n *\n * Throws {@code SyntaxError} if the metadata block delimiters are missing\n * or corrupted or if the metadata content doesn't parse as JSON.\n * @param {string} creative from which CSS is extracted\n * @return {?./amp-ad-type-defs.CreativeMetaDataDef} Object result of parsing\n *     JSON data blob inside the metadata markers on the ad text, or null if\n *     no metadata markers are found.\n * TODO(keithwrightbos@): report error cases\n */\nexport function getAmpAdMetadata(creative) {\n  let metadataStart = -1;\n  let metadataString;\n  for (let i = 0; i < METADATA_STRINGS.length; i++) {\n    metadataString = METADATA_STRINGS[i];\n    metadataStart = creative.lastIndexOf(metadataString);\n    if (metadataStart >= 0) {\n      break;\n    }\n  }\n  if (metadataStart < 0) {\n    // Couldn't find a metadata blob.\n    dev().warn(\n      TAG,\n      `Could not locate start index for amp meta data in: ${creative}`\n    );\n    return null;\n  }\n  const metadataEnd = creative.lastIndexOf('</script>');\n  if (metadataEnd < 0) {\n    // Couldn't find a metadata blob.\n    dev().warn(\n      TAG,\n      'Could not locate closing script tag for amp meta data in: %s',\n      creative\n    );\n    return null;\n  }\n  try {\n    const metaDataObj = parseJson(\n      creative.slice(metadataStart + metadataString.length, metadataEnd)\n    );\n    let ampRuntimeUtf16CharOffsets = metaDataObj['ampRuntimeUtf16CharOffsets'];\n    if (!isArray(ampRuntimeUtf16CharOffsets)) {\n      const headStart = creative.indexOf('<head>');\n      const headEnd = creative.indexOf('</head>');\n      const headSubstring = creative.slice(\n        headStart,\n        headEnd + '</head>'.length\n      );\n      const scriptStart = headSubstring.indexOf('<script');\n      const scriptEnd = headSubstring.lastIndexOf('</script>');\n      if (scriptStart < 0 || scriptEnd < 0) {\n        throw new Error('The mandatory script tag is missing or incorrect.');\n      }\n      ampRuntimeUtf16CharOffsets = [\n        // This assumes all script tags are contiguous.\n        // This assumption is enforced server-side.\n        headStart + scriptStart,\n        headStart + scriptEnd + '</script>'.length,\n      ];\n    } else if (\n      ampRuntimeUtf16CharOffsets.length != 2 ||\n      typeof ampRuntimeUtf16CharOffsets[0] !== 'number' ||\n      typeof ampRuntimeUtf16CharOffsets[1] !== 'number'\n    ) {\n      throw new Error('Invalid runtime offsets');\n    }\n    const metaData = {};\n    if (metaDataObj['customElementExtensions']) {\n      metaData.customElementExtensions = metaDataObj['customElementExtensions'];\n      if (!isArray(metaData.customElementExtensions)) {\n        throw new Error('Invalid extensions', metaData.customElementExtensions);\n      }\n    } else {\n      metaData.customElementExtensions = [];\n    }\n    if (metaDataObj['customStylesheets']) {\n      // Expect array of objects with at least one key being 'href' whose\n      // value is URL.\n      metaData.customStylesheets = metaDataObj['customStylesheets'];\n      const errorMsg = 'Invalid custom stylesheets';\n      if (!isArray(metaData.customStylesheets)) {\n        throw new Error(errorMsg);\n      }\n      /** @type {!Array} */ (metaData.customStylesheets).forEach(\n        (stylesheet) => {\n          if (\n            !isObject(stylesheet) ||\n            !stylesheet['href'] ||\n            typeof stylesheet['href'] !== 'string' ||\n            !isSecureUrlDeprecated(stylesheet['href'])\n          ) {\n            throw new Error(errorMsg);\n          }\n        }\n      );\n    }\n    if (isArray(metaDataObj['images'])) {\n      // Load maximum of 5 images.\n      metaData.images = metaDataObj['images'].splice(0, 5);\n    }\n    // TODO(keithwrightbos): OK to assume ampRuntimeUtf16CharOffsets is before\n    // metadata as its in the head?\n    metaData.minifiedCreative =\n      creative.slice(0, ampRuntimeUtf16CharOffsets[0]) +\n      creative.slice(ampRuntimeUtf16CharOffsets[1], metadataStart) +\n      creative.slice(metadataEnd + '</script>'.length);\n    return metaData;\n  } catch (err) {\n    dev().warn(\n      TAG,\n      'Invalid amp metadata: %s',\n      creative.slice(metadataStart + metadataString.length, metadataEnd)\n    );\n    return null;\n  }\n}\n\n/**\n * Merges any elements from customElementExtensions array into extensions array if\n * the element is not present.\n * @param {!Array<{custom-element: string, 'src': string}>} extensions\n * @param {!Array<string>} customElementExtensions\n */\nexport function mergeExtensionsMetadata(extensions, customElementExtensions) {\n  for (let i = 0; i < customElementExtensions.length; i++) {\n    const extensionId = customElementExtensions[i];\n    if (!extensionsHasElement(extensions, extensionId)) {\n      extensions.push({\n        'custom-element': extensionId,\n        // The default version is 0.1. To specify a specific version,\n        // use metadata['extensions'] field instead.\n        src: `${urls.cdn}/v0/${extensionId}-0.1.js`,\n      });\n    }\n  }\n}\n\n/**\n * Determine if parsed extensions metadata contains given element id.\n * @param {!Array<{custom-element: string, src: string}>} extensions\n * @param {string} id\n * @return {boolean}\n */\nexport function extensionsHasElement(extensions, id) {\n  return extensions.some((entry) => entry['custom-element'] === id);\n}\n\n/**\n * Parses extension urls from given metadata to retrieve name and version.\n * @param {!./amp-ad-type-defs.CreativeMetaDataDef} creativeMetadata\n * @return {!Array<?{extensionId: string, extensionVersion: string}>}\n */\nexport function getExtensionsFromMetadata(creativeMetadata) {\n  const parsedExtensions = [];\n  const {extensions} = creativeMetadata;\n  if (!extensions || !isArray(extensions)) {\n    return parsedExtensions;\n  }\n\n  for (let i = 0; i < extensions.length; i++) {\n    const extension = extensions[i];\n    const extensionData = parseExtensionUrl(extension.src);\n    if (extensionData) {\n      parsedExtensions.push(extensionData);\n    }\n  }\n  return parsedExtensions;\n}\n", "/**\n * Visibility state of the AMP document.\n * @enum {string}\n */\nexport const VisibilityState = {\n  /**\n   * The AMP document is being pre-rendered before being shown.\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * The AMP document is currently active and visible.\n   */\n  VISIBLE: 'visible',\n\n  /**\n   * The AMP document is active but the browser tab or AMP app is not.\n   */\n  HIDDEN: 'hidden',\n\n  /**\n   * The AMP document is visible, but the user has started swiping away from\n   * it. The runtime may stop active playback.\n   */\n  PAUSED: 'paused',\n\n  /**\n   * The AMP document is no longer active because the user swiped away or\n   * closed the viewer. The document may become visible again later.\n   */\n  INACTIVE: 'inactive',\n};\n", "import {TimestampDef} from '#core/types/date';\nimport {map} from '#core/types/object';\n\nimport {Deferred} from './promise';\n\n/**\n * This object tracts signals and allows blocking until a signal has been\n * received.\n */\nexport class Signals {\n  /**\n   * Creates an instance of Signals.\n   */\n  constructor() {\n    /**\n     * A mapping from a signal name to the signal response: either time or\n     * an error.\n     * @private @const {!Object<string, (!TimestampDef|!Error)>}\n     */\n    this.map_ = map();\n\n    /**\n     * A mapping from a signal name to the signal promise, resolve and reject.\n     * Only allocated when promise has been requested.\n     * @private {?Object<string, {\n     *   promise: !Promise,\n     *   resolve: (function(!TimestampDef)|undefined),\n     *   reject: (function(!Error)|undefined)\n     * }>}\n     */\n    this.promiseMap_ = null;\n  }\n\n  /**\n   * Returns the current known value of the signal. If signal is not yet\n   * available, `null` is returned.\n   * @param {string} name\n   * @return {number|!Error|null}\n   */\n  get(name) {\n    const v = this.map_[name];\n    return v == null ? null : v;\n  }\n\n  /**\n   * Returns the promise that's resolved when the signal is triggered. The\n   * resolved value is the time of the signal.\n   * @param {string} name\n   * @return {!Promise<!TimestampDef>}\n   */\n  whenSignal(name) {\n    let promiseStruct = this.promiseMap_?.[name];\n    if (!promiseStruct) {\n      const result = this.map_[name];\n      if (result != null) {\n        // Immediately resolve signal.\n        const promise =\n          typeof result == 'number'\n            ? Promise.resolve(result)\n            : Promise.reject(result);\n        promiseStruct = {promise};\n      } else {\n        // Allocate the promise/resolver for when the signal arrives in the\n        // future.\n        promiseStruct = new Deferred();\n      }\n      if (!this.promiseMap_) {\n        this.promiseMap_ = map();\n      }\n      this.promiseMap_[name] = promiseStruct;\n    }\n    return promiseStruct.promise;\n  }\n\n  /**\n   * Triggers the signal with the specified name on the element. The time is\n   * optional; if not provided, the current time is used. The associated\n   * promise is resolved with the resulting TimestampDef.\n   * @param {string} name\n   * @param {!TimestampDef=} opt_time\n   */\n  signal(name, opt_time) {\n    if (this.map_[name] != null) {\n      // Do not duplicate signals.\n      return;\n    }\n    const time = opt_time ?? Date.now();\n    this.map_[name] = time;\n    const promiseStruct = this.promiseMap_?.[name];\n    if (promiseStruct?.resolve) {\n      promiseStruct.resolve(time);\n      promiseStruct.resolve = undefined;\n      promiseStruct.reject = undefined;\n    }\n  }\n\n  /**\n   * Rejects the signal. Indicates that the signal will never succeed. The\n   * associated signal is rejected.\n   * @param {string} name\n   * @param {!Error} error\n   */\n  rejectSignal(name, error) {\n    if (this.map_[name] != null) {\n      // Do not duplicate signals.\n      return;\n    }\n    this.map_[name] = error;\n    const promiseStruct = this.promiseMap_?.[name];\n    if (promiseStruct?.reject) {\n      promiseStruct.reject(error);\n      promiseStruct.promise.catch(() => {});\n      promiseStruct.resolve = undefined;\n      promiseStruct.reject = undefined;\n    }\n  }\n\n  /**\n   * Resets all signals.\n   * @param {string} name\n   */\n  reset(name) {\n    if (this.map_[name]) {\n      delete this.map_[name];\n    }\n    // Reset promise it has already been resolved.\n    const promiseStruct = this.promiseMap_?.[name];\n    if (promiseStruct && !promiseStruct.resolve) {\n      delete this.promiseMap_[name];\n    }\n  }\n}\n", "/** Polyfill for the public AbortController. */\nclass AbortController {\n  /** Constructor. */\n  constructor() {\n    /** @const {!AbortSignal} */\n    this.signal_ = new AbortSignal();\n  }\n\n  /** Triggers an abort signal. */\n  abort() {\n    if (this.signal_.isAborted_) {\n      // Already aborted.\n      return;\n    }\n    this.signal_.isAborted_ = true;\n    if (this.signal_.onabort_) {\n      const event = /** @type {!Event} */ ({\n        'type': 'abort',\n        'bubbles': false,\n        'cancelable': false,\n        'target': this.signal_,\n        'currentTarget': this.signal_,\n      });\n      this.signal_.onabort_(event);\n    }\n  }\n\n  /** @return {!AbortSignal} */\n  get signal() {\n    return this.signal_;\n  }\n}\n\n/** Polyfill for the public AbortSignal. */\nclass AbortSignal {\n  /** */\n  constructor() {\n    /** @private {boolean} */\n    this.isAborted_ = false;\n    /** @private {?function(!Event)} */\n    this.onabort_ = null;\n  }\n\n  /** @return {boolean} */\n  get aborted() {\n    return this.isAborted_;\n  }\n\n  /** @return {?function(!Event)} */\n  get onabort() {\n    return this.onabort_;\n  }\n\n  /** @param {?function(!Event)} value */\n  set onabort(value) {\n    this.onabort_ = value;\n  }\n}\n\n/**\n * Sets the AbortController and AbortSignal polyfills if not defined.\n * @param {!Window} win\n */\nexport function install(win) {\n  if (win.AbortController) {\n    return;\n  }\n  Object.defineProperty(win, 'AbortController', {\n    configurable: true,\n    enumerable: false,\n    writable: true,\n    value: AbortController,\n  });\n  Object.defineProperty(win, 'AbortSignal', {\n    configurable: true,\n    enumerable: false,\n    writable: true,\n    value: AbortSignal,\n  });\n}\n", "import {Deferred} from '#core/data-structures/promise';\nimport {rethrowAsync} from '#core/error';\nimport * as mode from '#core/mode';\nimport {map} from '#core/types/object';\n\n/**\n * For type anotations where Element is a local variable.\n * @typedef {!Element}\n */\nlet ElementOrigDef;\n\n/** @typedef {!typeof HTMLElement} */\nlet CustomElementConstructorDef;\n\n/**\n * @typedef {{\n *  name: string,\n *  ctor: !CustomElementConstructorDef,\n * }}\n */\nlet CustomElementDef;\n\n/**\n * Validates the custom element's name.\n * This intentionally ignores \"valid\" higher Unicode Code Points.\n * https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\n */\nconst VALID_NAME = /^[a-z][a-z0-9._]*-[a-z0-9._-]*$/;\nconst INVALID_NAMES = [\n  'annotation-xml',\n  'color-profile',\n  'font-face',\n  'font-face-src',\n  'font-face-uri',\n  'font-face-format',\n  'font-face-name',\n  'missing-glyph',\n];\n\n/**\n * A MutationObserverInit dictionary to track subtree modifications.\n */\nconst TRACK_SUBTREE = {\n  'childList': true,\n  'subtree': true,\n};\n\n/**\n * Asserts that the custom element name conforms to the spec.\n *\n * @param {!typeof SyntaxError} SyntaxError\n * @param {string} name\n */\nfunction assertValidName(SyntaxError, name) {\n  if (!VALID_NAME.test(name) || INVALID_NAMES.includes(name)) {\n    throw new SyntaxError(`invalid custom element name \"${name}\"`);\n  }\n}\n\n/**\n * Does win have a full Custom Elements registry?\n *\n * @param {!Window} win\n * @return {boolean}\n */\nfunction hasCustomElements(win) {\n  const {customElements} = win;\n\n  return !!(\n    customElements &&\n    customElements.define &&\n    customElements.get &&\n    customElements.whenDefined\n  );\n}\n\n/**\n * Was HTMLElement already patched for this window?\n *\n * @param {!Window} win\n * @return {boolean}\n */\nfunction isPatched(win) {\n  const tag = win.HTMLElement.toString();\n  return tag.indexOf('[native code]') === -1;\n}\n\n/**\n * The public Custom Elements API.\n */\nclass CustomElementRegistry {\n  /**\n   * @param {!Window} win\n   * @param {!Registry} registry\n   */\n  constructor(win, registry) {\n    /** @const @private */\n    this.win_ = win;\n\n    /** @const @private */\n    this.registry_ = registry;\n\n    /** @private @const @type {!Object<string, !Deferred>} */\n    this.pendingDefines_ = map();\n  }\n\n  /**\n   * Register the custom element.\n   *\n   * @param {string} name\n   * @param {!CustomElementConstructorDef} ctor\n   * @param {!Object=} options\n   */\n  define(name, ctor, options) {\n    this.registry_.define(name, ctor, options);\n\n    // If anyone is waiting for this custom element to be defined, resolve\n    // their promise.\n    const pending = this.pendingDefines_;\n    const deferred = pending[name];\n    if (deferred) {\n      deferred.resolve();\n      delete pending[name];\n    }\n  }\n\n  /**\n   * Get the constructor of the (already defined) custom element.\n   *\n   * @param {string} name\n   * @return {!CustomElementConstructorDef|undefined}\n   */\n  get(name) {\n    const def = this.registry_.getByName(name);\n    if (def) {\n      return def.ctor;\n    }\n  }\n\n  /**\n   * Returns a promise that waits until the custom element is defined.\n   * If the custom element is already defined, returns a resolved promise.\n   *\n   * @param {string} name\n   * @return {!Promise<undefined>}\n   */\n  whenDefined(name) {\n    const {Promise, SyntaxError} = this.win_;\n    assertValidName(SyntaxError, name);\n\n    if (this.registry_.getByName(name)) {\n      return Promise.resolve();\n    }\n\n    const pending = this.pendingDefines_;\n    let deferred = pending[name];\n    if (!deferred) {\n      deferred = new Deferred();\n      pending[name] = deferred;\n    }\n\n    return deferred.promise;\n  }\n\n  /**\n   * Upgrade all custom elements inside root.\n   *\n   * @param {!Node} root\n   */\n  upgrade(root) {\n    this.registry_.upgrade(root);\n  }\n}\n\n/**\n * This internal APIs necessary to run the CustomElementRegistry.\n * Since Registry is never exposed externally, all methods are actually\n * available on the instance.\n */\nclass Registry {\n  /**\n   * @param {!Window} win\n   */\n  constructor(win) {\n    /** @private @const */\n    this.win_ = win;\n\n    /** @private @const @type {!Object<string, !CustomElementDef>} */\n    this.definitions_ = map();\n\n    /**\n     * A up-to-date DOM selector for all custom elements.\n     * @type {string}\n     */\n    this.query_ = '';\n\n    /**\n     * The currently upgrading element.\n     * @private {?Element}\n     */\n    this.current_ = null;\n\n    /**\n     * Once started (after the first Custom Element definition), this tracks\n     * DOM append and removals.\n     *\n     * @private {?MutationObserver}\n     */\n    this.mutationObserver_ = null;\n\n    /**\n     * All the observed DOM trees, including shadow trees.\n     *\n     * @private @const {!Array<!Node>}\n     */\n    this.roots_ = [win.document];\n  }\n\n  /**\n   * The currently-being-upgraded custom element.\n   *\n   * When an already created (through the DOM parsing APIs, or innerHTML)\n   * custom element node is being upgraded, we can't just create a new node\n   * (it's illegal in the spec). But we still need to run the custom element's\n   * constructor code on the node. We avoid this conundrum by running the\n   * constructor while returning this current node in the HTMLElement\n   * class constructor (the base class of all custom elements).\n   *\n   * @return {?Element}\n   */\n  current() {\n    const current = this.current_;\n    this.current_ = null;\n    return current;\n  }\n\n  /**\n   * Finds the custom element definition by name.\n   *\n   * @param {string} name\n   * @return {!CustomElementDef|undefined}\n   */\n  getByName(name) {\n    const definition = this.definitions_[name];\n    if (definition) {\n      return definition;\n    }\n  }\n\n  /**\n   * Finds the custom element definition by constructor instance.\n   *\n   * @param {!CustomElementConstructorDef} ctor\n   * @return {!CustomElementDef|undefined}\n   */\n  getByConstructor(ctor) {\n    const definitions = this.definitions_;\n\n    for (const name in definitions) {\n      const def = definitions[name];\n      if (def.ctor === ctor) {\n        return def;\n      }\n    }\n  }\n\n  /**\n   * Registers the custom element definition, and upgrades all elements by that\n   * name in the root document.\n   *\n   * @param {string} name\n   * @param {!CustomElementConstructorDef} ctor\n   * @param {!Object|undefined} options\n   */\n  define(name, ctor, options) {\n    const {Error, SyntaxError} = this.win_;\n\n    if (options) {\n      throw new Error('Extending native custom elements is not supported');\n    }\n\n    assertValidName(SyntaxError, name);\n\n    if (this.getByName(name) || this.getByConstructor(ctor)) {\n      throw new Error(`duplicate definition \"${name}\"`);\n    }\n\n    // TODO(jridgewell): Record connectedCallback, disconnectedCallback,\n    // adoptedCallback, attributeChangedCallback, and observedAttributes.\n    // TODO(jridgewell): If attributeChangedCallback, gather observedAttributes\n    this.definitions_[name] = {\n      name,\n      ctor,\n    };\n\n    this.observe_(name);\n    for (const tree of this.roots_) {\n      this.upgrade(tree, name);\n    }\n  }\n\n  /**\n   * Upgrades custom elements descendants of root (but not including root).\n   *\n   * When called with an opt_query, it both upgrades and connects the custom\n   * elements (this is used during the custom element define algorithm).\n   *\n   * @param {!Node} root\n   * @param {string=} opt_query\n   */\n  upgrade(root, opt_query) {\n    // Only CustomElementRegistry.p.define provides a query (the newly defined\n    // custom element). In this case, we are both upgrading _and_ connecting\n    // the custom elements.\n    const newlyDefined = !!opt_query;\n    const query = opt_query || this.query_;\n    const upgradeCandidates = this.queryAll_(root, query);\n\n    for (const candidate of upgradeCandidates) {\n      if (newlyDefined) {\n        this.connectedCallback_(candidate);\n      } else {\n        this.upgradeSelf(candidate);\n      }\n    }\n  }\n\n  /**\n   * Upgrades the custom element node, if a custom element has been registered\n   * by this name.\n   *\n   * @param {!Node} node\n   */\n  upgradeSelf(node) {\n    const def = this.getByName(node.localName);\n    if (!def) {\n      return;\n    }\n\n    this.upgradeSelf_(/** @type {!Element} */ (node), def);\n  }\n\n  /**\n   * @param {!Node} root\n   * @param {string} query\n   * @return {!Array|!NodeList}\n   */\n  queryAll_(root, query) {\n    if (!query || !root.querySelectorAll) {\n      // Nothing to do...\n      return [];\n    }\n\n    return root.querySelectorAll(query);\n  }\n\n  /**\n   * Upgrades the (already created via DOM parsing) custom element.\n   *\n   * @param {!Element} node\n   * @param {!CustomElementDef} def\n   */\n  upgradeSelf_(node, def) {\n    const {ctor} = def;\n    if (node instanceof ctor) {\n      return;\n    }\n\n    // Despite how it looks, this is not a useless construction.\n    // HTMLElementPolyfill (the base class of all custom elements) will return\n    // the current node, allowing the custom element's subclass constructor to\n    // run on the node. The node itself is already constructed, so the return\n    // value is just the node.\n    this.current_ = node;\n    try {\n      const el = new ctor();\n\n      if (el !== node) {\n        throw new this.win_.Error(\n          'Constructor illegally returned a different instance.'\n        );\n      }\n    } catch (e) {\n      rethrowAsync(e);\n    }\n  }\n\n  /**\n   * Fires connectedCallback on the custom element, if it has one.\n   * This also upgrades the custom element, since it may not have been\n   * accessible via the root document before (a detached DOM tree).\n   *\n   * @param {!Node} node\n   */\n  connectedCallback_(node) {\n    const def = this.getByName(node.localName);\n    if (!def) {\n      return;\n    }\n    node = /** @type {!HTMLElement} */ (node);\n    this.upgradeSelf_(node, def);\n    // TODO(jridgewell): It may be appropriate to adoptCallback, if the node\n    // used to be in another doc.\n    // TODO(jridgewell): I should be calling the definitions connectedCallback\n    // with node as the context.\n    if (node.connectedCallback) {\n      try {\n        node.connectedCallback();\n      } catch (e) {\n        rethrowAsync(e);\n      }\n    }\n  }\n\n  /**\n   * Fires disconnectedCallback on the custom element, if it has one.\n   *\n   * @param {!Node} node\n   */\n  disconnectedCallback_(node) {\n    // TODO(jridgewell): I should be calling the definitions connectedCallback\n    // with node as the context.\n    node = /** @type {!HTMLElement} */ (node);\n    if (node.disconnectedCallback) {\n      try {\n        node.disconnectedCallback();\n      } catch (e) {\n        rethrowAsync(e);\n      }\n    }\n  }\n\n  /**\n   * Records name as a registered custom element to observe.\n   *\n   * Starts the Mutation Observer if this is the first registered custom\n   * element. This is deferred until the first custom element is defined to\n   * speed up initial rendering of the page.\n   *\n   * Mutation Observers are conveniently available in every browser we care\n   * about. When a node is connected to the root document, all custom\n   * elements (including that node iteself) will be upgraded and call\n   * connectedCallback. When a node is disconnectedCallback from the root\n   * document, all custom elements will call disconnectedCallback.\n   *\n   * @param {string} name\n   */\n  observe_(name) {\n    if (this.query_) {\n      this.query_ += `,${name}`;\n      return;\n    }\n\n    this.query_ = name;\n\n    // The first registered name starts the mutation observer.\n    const mo = new this.win_.MutationObserver((records) => {\n      if (records) {\n        this.handleRecords_(records);\n      }\n    });\n    this.mutationObserver_ = mo;\n\n    // I would love to not have to hold onto all of the roots, since it's a\n    // memory leak. Unfortunately, there's no way to iterate a list and hold\n    // onto its contents weakly.\n    for (const tree of this.roots_) {\n      mo.observe(tree, TRACK_SUBTREE);\n    }\n\n    installPatches(this.win_, this);\n  }\n\n  /**\n   * Adds the shadow tree to be observed by the polyfill.\n   *\n   * @param {!Node} tree\n   */\n  observe(tree) {\n    this.roots_.push(tree);\n    if (this.mutationObserver_) {\n      this.mutationObserver_.observe(tree, TRACK_SUBTREE);\n    }\n  }\n\n  /**\n   * This causes a synchronous handling of all the Mutation Observer's tracked\n   * mutations. This does nothing until the mutation observer is actually\n   * registered on the first Custom Element definition.\n   */\n  sync() {\n    if (this.mutationObserver_) {\n      this.handleRecords_(this.mutationObserver_.takeRecords());\n    }\n  }\n\n  /**\n   * Handle all the Mutation Observer's Mutation Records.\n   * All added custom elements will be upgraded (if not already) and call\n   * connectedCallback. All removed custom elements will call\n   * disconnectedCallback.\n   *\n   * @param {!Array<!MutationRecord>} records\n   */\n  handleRecords_(records) {\n    for (const record of records) {\n      if (!record) {\n        continue;\n      }\n\n      const {addedNodes, removedNodes} = record;\n      for (const node of addedNodes) {\n        const connectedCandidates = this.queryAll_(node, this.query_);\n        this.connectedCallback_(node);\n        for (const candidate of connectedCandidates) {\n          this.connectedCallback_(candidate);\n        }\n      }\n\n      for (const node of removedNodes) {\n        const disconnectedCandidates = this.queryAll_(node, this.query_);\n        this.disconnectedCallback_(node);\n        for (const candidate of disconnectedCandidates) {\n          this.disconnectedCallback_(candidate);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Patches the DOM APIs to support synchronous Custom Elements.\n * @param {!Window} win\n * @param {!Registry} registry\n */\nfunction installPatches(win, registry) {\n  const {Document, Element, Node, document} = win;\n  const docProto = Document.prototype;\n  const elProto = Element.prototype;\n  const nodeProto = Node.prototype;\n  const {createElement, importNode} = docProto;\n  const {appendChild, cloneNode, insertBefore, removeChild, replaceChild} =\n    nodeProto;\n\n  // Patch createElement to immediately upgrade the custom element.\n  // This has the added benefit that it avoids the \"already created but needs\n  // constructor code run\" chicken-and-egg problem.\n  docProto.createElement = function (name) {\n    const def = registry.getByName(name);\n    if (def) {\n      return new def.ctor();\n    }\n    return createElement.apply(this, arguments);\n  };\n\n  // Patch importNode to immediately upgrade custom elements.\n  // TODO(jridgewell): Can fire adoptedCallback for cross doc imports.\n  docProto.importNode = function () {\n    const imported = importNode.apply(this, arguments);\n\n    // Only upgrade elements if the document that the nodes were imported into\n    // is _this_ document. If it's another document, then that document's\n    // element registry must do the upgrade.\n    // Eg, when importing from a <template>, the cloned document fragment\n    // should be upgraded. But importing from document into the <template>\n    // should not.\n    if (imported && this === document) {\n      registry.upgradeSelf(imported);\n      registry.upgrade(imported);\n    }\n    return imported;\n  };\n\n  // Patch appendChild to upgrade custom elements before returning.\n  nodeProto.appendChild = function () {\n    const appended = appendChild.apply(this, arguments);\n    registry.sync();\n    return appended;\n  };\n\n  // Patch insertBefore to upgrade custom elements before returning.\n  nodeProto.insertBefore = function () {\n    const inserted = insertBefore.apply(this, arguments);\n    registry.sync();\n    return inserted;\n  };\n\n  // Patch removeChild to upgrade custom elements before returning.\n  nodeProto.removeChild = function () {\n    const removed = removeChild.apply(this, arguments);\n    registry.sync();\n    return removed;\n  };\n\n  // Patch replaceChild to upgrade and detach custom elements before returning.\n  nodeProto.replaceChild = function () {\n    const replaced = replaceChild.apply(this, arguments);\n    registry.sync();\n    return replaced;\n  };\n\n  // Patch cloneNode to immediately upgrade custom elements.\n  nodeProto.cloneNode = function () {\n    const cloned = cloneNode.apply(this, arguments);\n\n    // Only upgrade elements if the cloned node belonged to _this_ document.\n    // Eg, when cloning a <template>'s content, the cloned document fragment\n    // does not belong to this document.\n    if (cloned.ownerDocument === document) {\n      registry.upgradeSelf(cloned);\n      registry.upgrade(cloned);\n    }\n    return cloned;\n  };\n\n  // Patch the innerHTML setter to immediately upgrade custom elements.\n  // Note, this could technically fire connectedCallbacks if this node was\n  // connected, but we leave that to the Mutation Observer.\n  let innerHTMLProto = elProto;\n  let innerHTMLDesc = Object.getOwnPropertyDescriptor(\n    innerHTMLProto,\n    'innerHTML'\n  );\n  if (!innerHTMLDesc) {\n    // Sigh... IE11 puts innerHTML desciptor on HTMLElement. But, we've\n    // replaced HTMLElement with a polyfill wrapper, so have to get its proto.\n    innerHTMLProto = Object.getPrototypeOf(win.HTMLElement.prototype);\n    innerHTMLDesc = Object.getOwnPropertyDescriptor(\n      innerHTMLProto,\n      'innerHTML'\n    );\n  }\n  if (innerHTMLDesc?.configurable) {\n    const innerHTMLSetter = innerHTMLDesc.set;\n    innerHTMLDesc.set = function (html) {\n      innerHTMLSetter.call(this, html);\n      registry.upgrade(this);\n    };\n    Object.defineProperty(\n      /** @type {!Object} */ (innerHTMLProto),\n      'innerHTML',\n      innerHTMLDesc\n    );\n  }\n}\n\n/**\n * Does the polyfilling.\n * @param {!Window} win\n */\nfunction polyfill(win) {\n  const {Element, HTMLElement, document} = win;\n  const {createElement} = document;\n\n  const registry = new Registry(win);\n  const customElements = new CustomElementRegistry(win, registry);\n\n  // Expose the custom element registry.\n  // Object.getOwnPropertyDescriptor(window, 'customElements')\n  // {get: \u0192, set: undefined, enumerable: true, configurable: true}\n  Object.defineProperty(win, 'customElements', {\n    enumerable: true,\n    configurable: true,\n    // writable: false,\n    value: customElements,\n  });\n\n  // Have to patch shadow methods now, since there's no way to find shadow trees\n  // later.\n  const elProto = Element.prototype;\n  const {attachShadow, createShadowRoot} = elProto;\n  if (attachShadow) {\n    /**\n     * @param {{mode: string}} unused\n     * @return {!ShadowRoot}\n     */\n    elProto.attachShadow = function (unused) {\n      const shadow = attachShadow.apply(this, arguments);\n      registry.observe(shadow);\n      return shadow;\n    };\n    // Necessary for Shadow AMP\n    elProto.attachShadow.toString = function () {\n      return attachShadow.toString();\n    };\n  }\n  if (createShadowRoot) {\n    /** @return {!ShadowRoot} */\n    elProto.createShadowRoot = function () {\n      const shadow = createShadowRoot.apply(this, arguments);\n      registry.observe(shadow);\n      return shadow;\n    };\n    // Necessary for Shadow AMP\n    elProto.createShadowRoot.toString = function () {\n      return createShadowRoot.toString();\n    };\n  }\n\n  /**\n   * You can't use the real HTMLElement constructor, because you can't subclass\n   * it without using native classes. So, mock its approximation using\n   * createElement.\n   * @return {!ElementOrigDef}\n   */\n  function HTMLElementPolyfill() {\n    const {constructor} = this;\n\n    // If we're upgrading an already created custom element, we can't create\n    // another new node (by the spec, it must be the same node).\n    let el = registry.current();\n\n    // If there's not a already created custom element, we're being invoked via\n    // `new`ing the constructor.\n    //\n    // Technically, we could get here via createElement, but we patched that.\n    // If it the custom element was registered, the patch turned it into a\n    // `new` call.\n    // If it was not registered, the native createElement is used. And if\n    // native createElement is being used and we got to this code, we're really\n    // in an infinite loop (a native createElement call just below) so we've\n    // got bigger problems.\n    //\n    // So just take my word we got here via `new`.\n    if (!el) {\n      // The custom element definition is an invariant. If the custom element\n      // is registered, everything works. If it's not, it throws in the member\n      // property access (only defined custom elements can be directly\n      // constructed via `new`).\n      const def = registry.getByConstructor(constructor);\n      el = createElement.call(document, def.name);\n    }\n\n    // Finally, if the node was already constructed, we need to reset its\n    // prototype to the custom element prototype. And if it wasn't already\n    // constructed, we created a new node via native createElement, and we need\n    // to reset its prototype. Basically always reset the prototype.\n    setPrototypeOf(el, constructor.prototype);\n    return el;\n  }\n  subClass(HTMLElement, HTMLElementPolyfill);\n\n  // Expose the polyfilled HTMLElement constructor for everyone to extend from.\n  win.HTMLElementOrig = win.HTMLElement;\n  win.HTMLElement = HTMLElementPolyfill;\n\n  // When we transpile `super` in Custom Element subclasses, we change it to\n  // `superClass.call(this)` (where `superClass` is `HTMLElementPolyfill`).\n  // That `.call` value is inherited from `Function.prototype`.\n  // But, IE11's native HTMLElement hierarchy doesn't extend from Function!\n  // And because `HTMLElementPolyfill` extends from `HTMLElement`, it doesn't\n  // have a `.call`! So we need to manually install it.\n  if (!HTMLElementPolyfill.call) {\n    HTMLElementPolyfill.apply = win.Function.apply;\n    HTMLElementPolyfill.bind = win.Function.bind;\n    HTMLElementPolyfill.call = win.Function.call;\n  }\n}\n\n/**\n * Wraps HTMLElement in a Reflect.construct constructor, so that transpiled\n * classes can `_this = superClass.call(this)` during their construction.\n *\n * This is only used when Custom Elements v1 is already available _and_ we're\n * using transpiled classes (which use ES5 construction idioms).\n *\n * @param {!Window} win\n * @suppress {globalThis}\n */\nfunction wrapHTMLElement(win) {\n  const {HTMLElement, Reflect} = win;\n  /** @return {!Element} */\n  function HTMLElementWrapper() {\n    const ctor = /** @type {function(...?):?|undefined} */ (this.constructor);\n\n    // Reflect.construct allows us to construct a new HTMLElement without using\n    // `new` (which will always fail because native HTMLElement is a restricted\n    // constructor).\n    return Reflect.construct(HTMLElement, [], ctor);\n  }\n  subClass(HTMLElement, HTMLElementWrapper);\n\n  // Expose the wrapped HTMLElement constructor for everyone to extend from.\n  win.HTMLElementOrig = win.HTMLElement;\n  win.HTMLElement = HTMLElementWrapper;\n}\n\n/**\n * Setups up prototype inheritance\n *\n * @param {!SUPER} superClass\n * @param {!SUB} subClass\n * @template SUPER\n * @template SUB\n */\nfunction subClass(superClass, subClass) {\n  // Object.getOwnPropertyDescriptor(superClass.prototype, 'constructor')\n  // {value: \u0192, writable: true, enumerable: false, configurable: true}\n  subClass.prototype = Object.create(superClass.prototype, {\n    constructor: {\n      // enumerable: false,\n      configurable: true,\n      writable: true,\n      value: subClass,\n    },\n  });\n  setPrototypeOf(subClass, superClass);\n}\n\n/**\n * Tests whether setting '__proto__' will change the prototype chain of an\n * object. Only needed for old IE.\n * @return {boolean}\n */\nfunction supportsUnderProto() {\n  const proto = {'test': true};\n  const obj = {};\n  obj.__proto__ = proto;\n  return !!obj['test'];\n}\n\n/**\n * Sets the prototype chain of an object, with various fallbacks to support\n * old IE.\n * @param {!Object} obj\n * @param {!Object} prototype\n */\nfunction setPrototypeOf(obj, prototype) {\n  if (mode.isEsm() || Object.setPrototypeOf) {\n    // Every decent browser.\n    Object.setPrototypeOf(obj, prototype);\n  } else if (supportsUnderProto()) {\n    // IE11\n    obj.__proto__ = prototype;\n  } else {\n    // IE10 man. :sigh:\n    copyProperties(obj, prototype);\n  }\n}\n\n/**\n * Copies the property descriptors from prototype to obj. This is only\n * necessary for old IE, which can't properly set the prototype of an already\n * created object.\n * @param {!Object} obj\n * @param {!Object} prototype\n * @visibleForTesting\n */\nexport function copyProperties(obj, prototype) {\n  let current = prototype;\n  while (current !== null) {\n    if (Object.isPrototypeOf.call(current, obj)) {\n      break;\n    }\n\n    for (const prop of Object.getOwnPropertyNames(current)) {\n      if (Object.hasOwnProperty.call(obj, prop)) {\n        continue;\n      }\n\n      const desc = /** @type {!ObjectPropertyDescriptor<Object>} */ (\n        Object.getOwnPropertyDescriptor(current, prop)\n      );\n      Object.defineProperty(obj, prop, desc);\n    }\n\n    current = Object.getPrototypeOf(current);\n  }\n}\n\n/**\n * Polyfills Custom Elements v1 API. This has 5 modes:\n *\n * 1. Custom elements v1 already supported, using native classes\n * 2. Custom elements v1 already supported, using transpiled classes\n * 3. Custom elements v1 not supported, using native classes\n * 4. Custom elements v1 not supported, using transpiled classes\n * 5. No sample class constructor provided\n *\n * In mode 1, nothing is done. In mode 2, a minimal polyfill is used to support\n * extending the HTMLElement base class. In mode 3, 4, and 5 a full polyfill is\n * done.\n *\n * @param {!Window} win\n * @param {!Function=} ctor\n */\nexport function install(win, ctor) {\n  // Don't install in no-DOM environments e.g. worker.\n  const shouldInstall = win.document;\n  const hasCE = hasCustomElements(win);\n  if (!shouldInstall || (hasCE && isPatched(win))) {\n    return;\n  }\n\n  let install = true;\n  let installWrapper = false;\n\n  if (ctor && hasCE) {\n    // If ctor is constructable without new, it's a function. That means it was\n    // compiled down, and we need to do the minimal polyfill because all you\n    // cannot extend HTMLElement without native classes.\n    try {\n      const {Reflect} = win;\n\n      // \"Construct\" ctor using ES5 idioms\n      // I'm not sure why, but Closure will complain at the\n      // `Function.call.call()` below unless we cast to a Function instance\n      // here.\n      const instance = /** @type {!Function} */ (Object.create(ctor.prototype));\n\n      // This will throw an error unless we're in a transpiled environemnt.\n      // Native classes must be called as `new Ctor`, not `Ctor.call(instance)`.\n      // We use `Function.call.call` because Closure is too smart for regular\n      // `Ctor.call`.\n      Function.call.call(ctor, instance);\n\n      // If that didn't throw, we're transpiled.\n      // Let's find out if we can wrap HTMLElement and avoid a full patch.\n      installWrapper = !!Reflect?.construct;\n    } catch (e) {\n      // The ctor threw when we constructed it via ES5, so it's a real class.\n      // We're ok to not install the polyfill.\n      install = false;\n    }\n  }\n\n  if (installWrapper) {\n    wrapHTMLElement(win);\n  } else if (install) {\n    polyfill(win);\n  }\n}\n", "/**\n * Polyfill for `document.contains()` method. Notice that according to spec\n * `document.contains` is inclusionary.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/contains\n * @param {?Node} node\n * @return {boolean}\n * @this {Document}\n */\nfunction documentContainsPolyfill(node) {\n  // Per spec, \"contains\" method is inclusionary\n  // i.e. `node.contains(node) == true`. However, we still need to test\n  // equality to the document itself.\n  // eslint-disable-next-line local/no-invalid-this\n  return node == this || this.documentElement.contains(node);\n}\n\n/**\n * Polyfills `HTMLDocument.contains` API.\n * @param {!Window} win\n */\nexport function install(win) {\n  // HTMLDocument is undefined in Internet Explorer 10, but it has Document,\n  // so we use that as a fallback.\n  const documentClass = win.HTMLDocument || win.Document;\n  if (documentClass && !documentClass.prototype.contains) {\n    win.Object.defineProperty(documentClass.prototype, 'contains', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: documentContainsPolyfill,\n    });\n  }\n}\n", "/**\n * @fileoverview\n * See https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver.\n *\n * This is the stub to support IntersectionObserver. It's installed from\n * polyfills/intersection-observer.js and upgraded from the\n * amp-intersection-observer-polyfill extension.\n */\n\n/** @typedef {function(!typeof IntersectionObserver)} */\nlet InObUpgraderDef;\n\nconst UPGRADERS = '_upgraders';\nconst NATIVE = '_native';\nconst STUB = '_stub';\n\n/**\n * @param {!Window} win\n * @return {boolean}\n * @visibleForTesting\n */\nexport function shouldLoadPolyfill(win) {\n  return (\n    !win.IntersectionObserver ||\n    !win.IntersectionObserverEntry ||\n    !!win.IntersectionObserver[STUB] ||\n    !supportsDocumentRoot(win) ||\n    isWebkit(win)\n  );\n}\n\n/**\n * All current WebKit (as of Safari 14.x) {root:document} IntersectionObservers\n * will report incorrect rootBounds, intersectionRect, and intersectionRatios\n * and therefore we force the polyfill in this case.\n * See: https://bugs.webkit.org/show_bug.cgi?id=219495.\n *\n * @param {!Window} win\n * @return {boolean}\n */\nfunction isWebkit(win) {\n  // navigator.vendor is always \"Apple Computer, Inc.\" for all iOS browsers and\n  // Mac OS Safari.\n  return /apple/i.test(win.navigator.vendor);\n}\n\n/**\n * @param {!typeof IntersectionObserver} Native\n * @param {!typeof IntersectionObserver} Polyfill\n * @return {!typeof IntersectionObserver}\n */\nfunction getIntersectionObserverDispatcher(Native, Polyfill) {\n  /**\n   * @param {!IntersectionObserverCallback} ioCallback\n   * @param {IntersectionObserverInit=} opts\n   * @return {!IntersectionObserver}\n   */\n  function Ctor(ioCallback, opts) {\n    if (opts?.root?.nodeType === /* Node.DOCUMENT_NODE */ 9) {\n      return new Polyfill(ioCallback, opts);\n    } else {\n      return new Native(ioCallback, opts);\n    }\n  }\n  return Ctor;\n}\n\n/**\n * Installs the InOb stubs. This should only be called in two cases:\n * 1. No native InOb exists.\n * 2. Native InOb is present, but lacks document root support.\n *\n * @param {!Window} win\n */\nexport function installStub(win) {\n  if (!win.IntersectionObserver) {\n    win.IntersectionObserver = IntersectionObserverStub;\n    win.IntersectionObserver[STUB] = IntersectionObserverStub;\n    return;\n  }\n\n  const Native = win.IntersectionObserver;\n  win.IntersectionObserver = getIntersectionObserverDispatcher(\n    win.IntersectionObserver,\n    IntersectionObserverStub\n  );\n  win.IntersectionObserver[STUB] = IntersectionObserverStub;\n  win.IntersectionObserver[NATIVE] = Native;\n}\n\n/**\n * Returns true if IntersectionObserver supports a document root.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function supportsDocumentRoot(win) {\n  try {\n    new win.IntersectionObserver(() => {}, {\n      // TODO(rcebulko): Update when CC updates their externs\n      // See https://github.com/google/closure-compiler/pull/3804\n      root: /** @type {?} */ (win.document),\n    });\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * @param {!Window} win\n * @param {function()} installer\n */\nexport function upgradePolyfill(win, installer) {\n  // Can't use the IntersectionObserverStub here directly since it's a separate\n  // instance deployed in v0.js vs the polyfill extension.\n  const Stub = win.IntersectionObserver[STUB];\n  if (Stub) {\n    const Native = win.IntersectionObserver[NATIVE];\n    delete win.IntersectionObserver;\n    delete win.IntersectionObserverEntry;\n    installer();\n    const Polyfill = win.IntersectionObserver;\n    if (Native) {\n      win.IntersectionObserver = getIntersectionObserverDispatcher(\n        Native,\n        Polyfill\n      );\n    }\n\n    /** @type {!Array<!InObUpgraderDef>} */\n    const upgraders = Stub[UPGRADERS].slice(0);\n    const microtask = Promise.resolve();\n    const upgrade = (upgrader) => {\n      microtask.then(() => upgrader(Polyfill));\n    };\n    upgraders.forEach(upgrade);\n    Stub[UPGRADERS] = {'push': upgrade};\n  } else {\n    // Even if this is not the stub, we still may need to polyfill\n    // `isIntersecting`. See `shouldLoadPolyfill` for more info.\n    installer();\n  }\n}\n\n/**\n * The stub for `IntersectionObserver`. Implements the same interface, but\n * keeps the tracked elements in memory until the actual polyfill arives.\n * This stub is necessary because the polyfill itself is significantly bigger.\n *\n * It doesn't technically extend IntersectionObserver, but this allows the stub\n * to be seen as equivalent when typechecking calls expecting an\n * IntersectionObserver.\n * @extends IntersectionObserver\n */\nexport class IntersectionObserverStub {\n  /**\n   * @param {!IntersectionObserverCallback} callback\n   * @param {!IntersectionObserverInit=} options\n   */\n  constructor(callback, options) {\n    /** @private @const */\n    this.callback_ = callback;\n\n    /** @private @const {!IntersectionObserverInit} */\n    this.options_ = {\n      root: null,\n      rootMargin: '0px 0px 0px 0px',\n      ...options,\n    };\n\n    /** @private {!Array<!Element>} */\n    this.elements_ = [];\n\n    /** @private {?IntersectionObserver} */\n    this.inst_ = null;\n\n    // Wait for the upgrade.\n    IntersectionObserverStub[UPGRADERS].push(this.upgrade_.bind(this));\n  }\n\n  /** @return {?Element} */\n  get root() {\n    if (this.inst_) {\n      return this.inst_.root;\n    }\n    // eslint-disable-next-line local/no-forbidden-terms\n    return /** @type {!Element} */ (this.options_.root) || null;\n  }\n\n  /** @return {string} */\n  get rootMargin() {\n    if (this.inst_) {\n      return this.inst_.rootMargin;\n    }\n    // The CC-provided IntersectionObserverInit type allows for rootMargin to be\n    // undefined, but we provide a default, so it's guaranteed to be a string\n    // here.\n    return /** @type {string} */ (this.options_.rootMargin);\n  }\n\n  /** @return {!Array<number>} */\n  get thresholds() {\n    if (this.inst_) {\n      return this.inst_.thresholds;\n    }\n    return [].concat(this.options_.threshold || 0);\n  }\n\n  /** @return {undefined} */\n  disconnect() {\n    if (this.inst_) {\n      this.inst_.disconnect();\n    } else {\n      this.elements_.length = 0;\n    }\n  }\n\n  /** @return {!Array<!IntersectionObserverEntry>} */\n  takeRecords() {\n    if (this.inst_) {\n      return this.inst_.takeRecords();\n    }\n    return [];\n  }\n\n  /** @param {!Element} target */\n  observe(target) {\n    if (this.inst_) {\n      this.inst_.observe(target);\n    } else {\n      if (this.elements_.indexOf(target) == -1) {\n        this.elements_.push(target);\n      }\n    }\n  }\n\n  /** @param {!Element} target */\n  unobserve(target) {\n    if (this.inst_) {\n      this.inst_.unobserve(target);\n    } else {\n      const index = this.elements_.indexOf(target);\n      if (index != -1) {\n        this.elements_.splice(index, 1);\n      }\n    }\n  }\n\n  /**\n   * @param {!typeof IntersectionObserver} Ctor\n   * @private\n   */\n  upgrade_(Ctor) {\n    const inst = new Ctor(this.callback_, this.options_);\n    this.inst_ = inst;\n    for (const e of this.elements_) {\n      inst.observe(e);\n    }\n    this.elements_.length = 0;\n  }\n}\n\n/** @type {!Array<!InObUpgraderDef>} */\nIntersectionObserverStub[UPGRADERS] = [];\n\n/** @visibleForTesting */\nexport function resetStubsForTesting() {\n  IntersectionObserverStub[UPGRADERS] = [];\n}\n", "/**\n * @fileoverview\n * See https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver.\n */\n\nimport {\n  installStub,\n  shouldLoadPolyfill,\n} from './stubs/intersection-observer-stub';\n\n/**\n * Installs the IntersectionObserver polyfill. There are a few different modes of operation.\n * - No native support: immediately register a Stub and upgrade lazily once the full polyfill loads.\n * - Partial InOb support: choose between the lazily upgrading Stub and the native InOb on a per-instance basis.\n * - Full InOb support: Don't install anything.\n *\n * @param {!Window} win\n */\nexport function install(win) {\n  if (shouldLoadPolyfill(win)) {\n    installStub(win);\n  }\n  fixEntry(win);\n}\n\n/**\n * @param {!Window} parentWin\n * @param {!Window} childWin\n */\nexport function installForChildWin(parentWin, childWin) {\n  if (shouldLoadPolyfill(childWin)) {\n    Object.defineProperties(childWin, {\n      IntersectionObserver: {get: () => parentWin.IntersectionObserver},\n      IntersectionObserverEntry: {\n        get: () => parentWin.IntersectionObserverEntry,\n      },\n    });\n  } else {\n    fixEntry(childWin);\n  }\n}\n\n/** @param {!Window} win */\nfunction fixEntry(win) {\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (\n    win.IntersectionObserverEntry &&\n    !('isIntersecting' in win.IntersectionObserverEntry.prototype)\n  ) {\n    Object.defineProperty(\n      win.IntersectionObserverEntry.prototype,\n      'isIntersecting',\n      {\n        enumerable: true,\n        configurable: true,\n        get() {\n          return this.intersectionRatio > 0;\n        },\n      }\n    );\n  }\n}\n", "/**\n * @fileoverview\n * See https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver\n *\n * This is the stub to support ResizeObserver. It's installed from\n * polyfills/resize-observer.js and upgraded from the\n * amp-resize-observer-polyfill extension.\n */\n\n/** @typedef {function(!typeof ResizeObserver)} */\nlet ResObsUpgraderDef;\n\nconst UPGRADERS = '_upgraders';\nconst STUB = '_stub';\n\n/**\n * @param {!Window} win\n * @return {boolean}\n * @visibleForTesting\n */\nexport function shouldLoadPolyfill(win) {\n  return !win.ResizeObserver || !!win.ResizeObserver[STUB];\n}\n\n/**\n * Installs the ResOb stubs.\n *\n * @param {!Window} win\n */\nexport function installStub(win) {\n  if (win.ResizeObserver) {\n    return;\n  }\n\n  win.ResizeObserver = ResizeObserverStub;\n  win.ResizeObserver[STUB] = ResizeObserverStub;\n}\n\n/**\n * @param {!Window} win\n * @param {function()} installer\n */\nexport function upgradePolyfill(win, installer) {\n  // Can't use the ResizeObserverStub here directly since it's a separate\n  // instance deployed in v0.js vs the polyfill extension.\n  const Stub = win.ResizeObserver[STUB];\n  if (Stub) {\n    delete win.ResizeObserver;\n    delete win.ResizeObserverEntry;\n    installer();\n\n    const Polyfill = win.ResizeObserver;\n    /** @type {!Array<ResObsUpgraderDef>} */\n    const upgraders = Stub[UPGRADERS].slice(0);\n    const microtask = Promise.resolve();\n    const upgrade = (upgrader) => {\n      microtask.then(() => upgrader(Polyfill));\n    };\n    for (const upgrader of upgraders) {\n      upgrade(upgrader);\n    }\n    Stub[UPGRADERS] = {'push': upgrade};\n  } else {\n    // Even if this is not the stub, we still may need to install the polyfill.\n    // See `shouldLoadPolyfill` for more info.\n    installer();\n  }\n}\n\n/**\n * The stub for `ResizeObserver`. Implements the same interface, but\n * keeps the tracked elements in memory until the actual polyfill arives.\n * This stub is necessary because the polyfill itself is significantly bigger.\n * It doesn't technically extend ResizeObserver, but this allows the stub\n * to be seen as equivalent when typechecking calls expecting a ResizeObserver.\n * @extends ResizeObserver\n */\nexport class ResizeObserverStub {\n  /** @param {!ResizeObserverCallback} callback */\n  constructor(callback) {\n    /** @private @const {!ResizeObserverCallback} */\n    this.callback_ = callback;\n\n    /** @private {!Array<!Element>} */\n    this.elements_ = [];\n\n    /** @private {?ResizeObserver} */\n    this.inst_ = null;\n\n    // Wait for the upgrade.\n    ResizeObserverStub[UPGRADERS].push(this.upgrade_.bind(this));\n  }\n\n  /** @return {undefined} */\n  disconnect() {\n    if (this.inst_) {\n      this.inst_.disconnect();\n    } else {\n      this.elements_.length = 0;\n    }\n  }\n\n  /** @param {!Element} target */\n  observe(target) {\n    if (this.inst_) {\n      this.inst_.observe(target);\n    } else {\n      if (this.elements_.indexOf(target) == -1) {\n        this.elements_.push(target);\n      }\n    }\n  }\n\n  /** @param {!Element} target */\n  unobserve(target) {\n    if (this.inst_) {\n      this.inst_.unobserve(target);\n    } else {\n      const index = this.elements_.indexOf(target);\n      if (index != -1) {\n        this.elements_.splice(index, 1);\n      }\n    }\n  }\n\n  /**\n   * @param {!typeof ResizeObserver} Ctor\n   * @private\n   */\n  upgrade_(Ctor) {\n    const inst = new Ctor(this.callback_);\n    this.inst_ = inst;\n    for (const e of this.elements_) {\n      inst.observe(e);\n    }\n    this.elements_.length = 0;\n  }\n}\n\n/** @type {!Array<!ResObsUpgraderDef>} */\nResizeObserverStub[UPGRADERS] = [];\n\n/** @visibleForTesting */\nexport function resetStubsForTesting() {\n  ResizeObserverStub[UPGRADERS] = [];\n}\n", "/**\n * @fileoverview\n * See https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver\n */\n\nimport {installStub, shouldLoadPolyfill} from './stubs/resize-observer-stub';\n\n/**\n * Installs the ResizeObserver polyfill. There are a few different modes of\n * operation.\n *\n * @param {!Window} win\n */\nexport function install(win) {\n  if (shouldLoadPolyfill(win)) {\n    installStub(win);\n  }\n}\n\n/**\n * @param {!Window} parentWin\n * @param {!Window} childWin\n */\nexport function installForChildWin(parentWin, childWin) {\n  if (!childWin.ResizeObserver && parentWin.ResizeObserver) {\n    Object.defineProperties(childWin, {\n      ResizeObserver: {get: () => parentWin.ResizeObserver},\n      ResizeObserverEntry: {get: () => parentWin.ResizeObserverEntry},\n    });\n  }\n}\n", "import {devAssert} from '#core/assert';\nimport {map} from '#core/types/object';\n\nlet htmlContainer;\nlet svgContainer;\n\n/**\n * Creates the html helper for the doc.\n *\n * @param {!Element|!Document} nodeOrDoc\n * @return {function(!Array<string>):!Element}\n */\nexport function htmlFor(nodeOrDoc) {\n  const doc = nodeOrDoc.ownerDocument || nodeOrDoc;\n  if (!htmlContainer || htmlContainer.ownerDocument !== doc) {\n    htmlContainer = doc.createElement('div');\n  }\n\n  return html;\n}\n\n/**\n * Creates the svg helper for the doc.\n *\n * @param {!Element|!Document} nodeOrDoc\n * @return {function(!Array<string>):!Element}\n */\nexport function svgFor(nodeOrDoc) {\n  const doc = nodeOrDoc.ownerDocument || nodeOrDoc;\n  if (!svgContainer || svgContainer.ownerDocument !== svgContainer) {\n    svgContainer = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  }\n\n  return svg;\n}\n\n/**\n * A tagged template literal helper to generate static SVG trees.\n * This must be used as a tagged template, ie\n *\n * ```\n * const circle = svg`<circle cx=\"60\" cy=\"60\" r=\"22\"></circle>`;\n * ```\n *\n * Only the root element and its subtree will be returned. DO NOT use this to\n * render subtree's with dynamic content, it WILL result in an error!\n *\n * @param {!Array<string>} strings\n * @return {!Element}\n */\nfunction svg(strings) {\n  return createNode(svgContainer, strings);\n}\n\n/**\n * A tagged template literal helper to generate static DOM trees.\n * This must be used as a tagged template, ie\n *\n * ```\n * const div = html`<div><span></span></div>`;\n * ```\n *\n * Only the root element and its subtree will be returned. DO NOT use this to\n * render subtree's with dynamic content, it WILL result in an error!\n *\n * @param {!Array<string>} strings\n * @return {!Element}\n */\nfunction html(strings) {\n  return createNode(htmlContainer, strings);\n}\n\n/**\n * Helper used by html and svg string literal functions.\n * @param {!Element} container\n * @param {!Array<string>} strings\n * @return {!Element}\n */\nfunction createNode(container, strings) {\n  devAssert(strings.length === 1, 'Improper html template tag usage.');\n  container./*OK*/ innerHTML = strings[0];\n\n  const el = container.firstElementChild;\n  devAssert(el, 'No elements in template');\n  devAssert(!el.nextElementSibling, 'Too many root elements in template');\n\n  // Clear to free memory.\n  container.removeChild(el);\n\n  return el;\n}\n\n/**\n * Queries an element for all elements with a \"ref\" attribute, removing\n * the attribute afterwards.\n * Returns a named map of all ref elements.\n *\n * @param {!Element} root\n * @return {!Object<string, !Element>}\n */\nexport function htmlRefs(root) {\n  const elements = root.querySelectorAll('[ref]');\n  const refs = map();\n\n  for (let i = 0; i < elements.length; i++) {\n    const element = elements[i];\n    const ref = devAssert(element.getAttribute('ref'), 'Empty ref attr');\n    element.removeAttribute('ref');\n    devAssert(refs[ref] === undefined, 'Duplicate ref');\n    refs[ref] = element;\n  }\n\n  return refs;\n}\n", "import {Deferred} from '#core/data-structures/promise';\nimport {Layout} from '#core/dom/layout';\nimport {\n  layoutRectLtwh,\n  layoutRectSizeEquals,\n  layoutSizeFromRect,\n  moveLayoutRect,\n  rectsOverlap,\n} from '#core/dom/layout/rect';\nimport {computedStyle, toggle} from '#core/dom/style';\nimport {toWin} from '#core/window';\n\nimport {Services} from '#service';\n\nimport {dev, devAssert} from '#utils/log';\n\nimport {\n  cancellation,\n  isBlockedByConsent,\n  reportError,\n} from '../error-reporting';\n\nconst TAG = 'Resource';\nconst RESOURCE_PROP_ = '__AMP__RESOURCE';\nconst OWNER_PROP_ = '__AMP__OWNER';\n\n/**\n * Resource state.\n *\n * @enum {number}\n */\nexport const ResourceState = {\n  /**\n   * The resource has not been built yet. Measures, layouts, preloads or\n   * viewport signals are not allowed.\n   */\n  NOT_BUILT: 0,\n\n  /**\n   * The resource has been built, but not measured yet and not yet ready\n   * for layout.\n   */\n  NOT_LAID_OUT: 1,\n\n  /**\n   * The resource has been built and measured and ready for layout.\n   */\n  READY_FOR_LAYOUT: 2,\n\n  /**\n   * The resource is currently scheduled for layout.\n   */\n  LAYOUT_SCHEDULED: 3,\n\n  /**\n   * The resource has been laid out.\n   */\n  LAYOUT_COMPLETE: 4,\n\n  /**\n   * The latest resource's layout failed.\n   */\n  LAYOUT_FAILED: 5,\n};\n\n/** @typedef {{\n  distance: (boolean|number),\n    viewportHeight: (number|undefined),\n    scrollPenalty: (number|undefined),\n  }} */\nlet ViewportRatioDef;\n\n/**\n * A Resource binding for an AmpElement.\n */\nexport class Resource {\n  /**\n   * @param {!Element} element\n   * @return {!Resource}\n   */\n  static forElement(element) {\n    return /** @type {!Resource} */ (\n      devAssert(\n        Resource.forElementOptional(element),\n        'Missing resource prop on %s',\n        element\n      )\n    );\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {Resource}\n   */\n  static forElementOptional(element) {\n    return /** @type {Resource} */ (element[RESOURCE_PROP_]);\n  }\n\n  /**\n   * Assigns an owner for the specified element. This means that the resources\n   * within this element will be managed by the owner and not Resources manager.\n   * @param {!Element} element\n   * @param {!AmpElement} owner\n   */\n  static setOwner(element, owner) {\n    devAssert(owner.contains(element), 'Owner must contain the element');\n    if (Resource.forElementOptional(element)) {\n      Resource.forElementOptional(element).updateOwner(owner);\n    }\n    element[OWNER_PROP_] = owner;\n\n    // Need to clear owner cache for all child elements\n    const cachedElements = element.getElementsByClassName('i-amphtml-element');\n    for (let i = 0; i < cachedElements.length; i++) {\n      const ele = cachedElements[i];\n      if (Resource.forElementOptional(ele)) {\n        Resource.forElementOptional(ele).updateOwner(undefined);\n      }\n    }\n  }\n\n  /**\n   * @param {number} id\n   * @param {!AmpElement} element\n   * @param {!./resources-interface.ResourcesInterface} resources\n   */\n  constructor(id, element, resources) {\n    element[RESOURCE_PROP_] = this;\n\n    /** @private {number} */\n    this.id_ = id;\n\n    /** @const {!AmpElement} */\n    this.element = element;\n\n    /** @const {string} */\n    this.debugid = element.tagName.toLowerCase() + '#' + id;\n\n    /** @const {!Window} */\n    this.hostWin = toWin(element.ownerDocument.defaultView);\n\n    /** @const @private {!./resources-interface.ResourcesInterface} */\n    this.resources_ = resources;\n\n    /** @const @private {boolean} */\n    this.isPlaceholder_ = element.hasAttribute('placeholder');\n\n    /** @private {boolean} */\n    this.isBuilding_ = false;\n\n    /** @private {!AmpElement|undefined|null} */\n    this.owner_ = undefined;\n\n    /** @private {!ResourceState} */\n    this.state_ = element.isBuilt()\n      ? ResourceState.NOT_LAID_OUT\n      : ResourceState.NOT_BUILT;\n\n    // Race condition: if an element is reparented while building, it'll\n    // receive a newly constructed Resource. Make sure this Resource's\n    // internal state is also \"building\".\n    if (this.state_ == ResourceState.NOT_BUILT && element.isBuilding()) {\n      this.build();\n    }\n\n    /** @private {number} */\n    this.priorityOverride_ = -1;\n\n    /** @private {number} */\n    this.layoutCount_ = 0;\n\n    /**\n     * Used to signal that the current layoutCallback has been aborted by an\n     * unlayoutCallback.\n     * @private {?AbortController}\n     */\n    this.abortController_ = null;\n\n    /** @private {*} */\n    this.lastLayoutError_ = null;\n\n    /** @private {boolean} */\n    this.isFixed_ = false;\n\n    /** @private {!../layout-rect.LayoutRectDef} */\n    this.layoutBox_ = layoutRectLtwh(-10000, -10000, 0, 0);\n\n    /** @private {?../layout-rect.LayoutRectDef} */\n    this.initialLayoutBox_ = null;\n\n    /** @private {boolean} */\n    this.isMeasureRequested_ = false;\n\n    /**\n     * Really, this is a <number, !Deferred> map,\n     * but CC's type system can't handle it.\n     * @private {?Object<string, !Deferred>}\n     */\n    this.withViewportDeferreds_ = null;\n\n    /** @private {?Promise<undefined>} */\n    this.layoutPromise_ = null;\n\n    /**\n     * Pending change size that was requested but could not be satisfied.\n     * @private {!./resources-impl.SizeDef|undefined}\n     */\n    this.pendingChangeSize_ = undefined;\n\n    const deferred = new Deferred();\n\n    /** @private @const {!Promise} */\n    this.loadPromise_ = deferred.promise;\n\n    /** @private {?Function} */\n    this.loadPromiseResolve_ = deferred.resolve;\n\n    // TODO(#30620): remove isInViewport_ and whenWithinViewport.\n    /** @const @private {boolean} */\n    this.isInViewport_ = false;\n  }\n\n  /**\n   * Returns resource's ID.\n   * @return {number}\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Update owner element\n   * @param {AmpElement|undefined} owner\n   */\n  updateOwner(owner) {\n    this.owner_ = owner;\n  }\n\n  /**\n   * Returns an owner element or null.\n   * @return {?AmpElement}\n   */\n  getOwner() {\n    if (this.owner_ === undefined) {\n      for (let n = this.element; n; n = n.parentElement) {\n        if (n[OWNER_PROP_]) {\n          this.owner_ = n[OWNER_PROP_];\n          break;\n        }\n      }\n      if (this.owner_ === undefined) {\n        this.owner_ = null;\n      }\n    }\n    return this.owner_;\n  }\n\n  /**\n   * Whether the resource has an owner.\n   * @return {boolean}\n   */\n  hasOwner() {\n    return !!this.getOwner();\n  }\n\n  /**\n   * Returns the resource's element priority.\n   * @return {number}\n   */\n  getLayoutPriority() {\n    if (this.priorityOverride_ != -1) {\n      return this.priorityOverride_;\n    }\n    return this.element.getLayoutPriority();\n  }\n\n  /**\n   * Overrides the element's priority.\n   * @param {number} newPriority\n   */\n  updateLayoutPriority(newPriority) {\n    this.priorityOverride_ = newPriority;\n  }\n\n  /**\n   * Returns the resource's state. See {@link ResourceState} for details.\n   * @return {!ResourceState}\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * Returns whether the resource has been fully built.\n   * @return {boolean}\n   */\n  isBuilt() {\n    return this.element.isBuilt();\n  }\n\n  /**\n   * Returns whether the resource is currently being built.\n   * @return {boolean}\n   */\n  isBuilding() {\n    return this.isBuilding_;\n  }\n\n  /**\n   * Returns promise that resolves when the element has been built.\n   * @return {!Promise}\n   */\n  whenBuilt() {\n    // TODO(dvoytenko): merge with the standard BUILT signal.\n    return this.element.signals().whenSignal('res-built');\n  }\n\n  /**\n   * Requests the resource's element to be built. See {@link AmpElement.build}\n   * for details.\n   * @return {?Promise}\n   */\n  build() {\n    if (this.isBuilding_ || !this.element.isUpgraded()) {\n      return null;\n    }\n    this.isBuilding_ = true;\n    return this.element.buildInternal().then(\n      () => {\n        this.isBuilding_ = false;\n        this.state_ = ResourceState.NOT_LAID_OUT;\n        // TODO(dvoytenko): merge with the standard BUILT signal.\n        this.element.signals().signal('res-built');\n      },\n      (reason) => {\n        this.maybeReportErrorOnBuildFailure(reason);\n        this.isBuilding_ = false;\n        this.element.signals().rejectSignal('res-built', reason);\n        throw reason;\n      }\n    );\n  }\n\n  /**\n   * @param {*} reason\n   * @visibleForTesting\n   */\n  maybeReportErrorOnBuildFailure(reason) {\n    if (!isBlockedByConsent(reason)) {\n      dev().error(TAG, 'failed to build:', this.debugid, reason);\n    }\n  }\n\n  /**\n   * Instructs the element to change its size and transitions to the state\n   * awaiting the measure and possibly layout.\n   * @param {number|undefined} newHeight\n   * @param {number|undefined} newWidth\n   * @param {!../layout-rect.LayoutMarginsChangeDef=} opt_newMargins\n   */\n  changeSize(newHeight, newWidth, opt_newMargins) {\n    this.element./*OK*/ applySize(newHeight, newWidth, opt_newMargins);\n\n    // Schedule for re-measure and possible re-layout.\n    this.requestMeasure();\n  }\n\n  /**\n   * Informs the element that it's either overflown or not.\n   * @param {boolean} overflown\n   * @param {number|undefined} requestedHeight\n   * @param {number|undefined} requestedWidth\n   * @param {!../layout-rect.LayoutMarginsChangeDef|undefined} requestedMargins\n   */\n  overflowCallback(\n    overflown,\n    requestedHeight,\n    requestedWidth,\n    requestedMargins\n  ) {\n    if (overflown) {\n      this.pendingChangeSize_ = {\n        height: requestedHeight,\n        width: requestedWidth,\n        margins: requestedMargins,\n      };\n    }\n    this.element.overflowCallback(\n      overflown,\n      requestedHeight,\n      requestedWidth,\n      requestedMargins\n    );\n  }\n\n  /** reset pending change sizes */\n  resetPendingChangeSize() {\n    this.pendingChangeSize_ = undefined;\n  }\n\n  /**\n   * @return {!./resources-impl.SizeDef|undefined}\n   */\n  getPendingChangeSize() {\n    return this.pendingChangeSize_;\n  }\n\n  /**\n   * Time delay imposed by baseElement upgradeCallback.  If no\n   * upgradeCallback specified or not yet executed, delay is 0.\n   * @return {number}\n   */\n  getUpgradeDelayMs() {\n    return this.element.getUpgradeDelayMs();\n  }\n\n  /**\n   * Measures the resource's boundaries. An upgraded element will be\n   * transitioned to the \"ready for layout\" state.\n   */\n  measure() {\n    // Check if the element is ready to be measured.\n    // Placeholders are special. They are technically \"owned\" by parent AMP\n    // elements, sized by parents, but laid out independently. This means\n    // that placeholders need to at least wait until the parent element\n    // has been stubbed. We can tell whether the parent has been stubbed\n    // by whether a resource has been attached to it.\n    if (\n      this.isPlaceholder_ &&\n      this.element.parentElement &&\n      // Use prefix to recognize AMP element. This is necessary because stub\n      // may not be attached yet.\n      this.element.parentElement.tagName.startsWith('AMP-') &&\n      !(RESOURCE_PROP_ in this.element.parentElement)\n    ) {\n      return;\n    }\n    if (\n      !this.element.ownerDocument ||\n      !this.element.ownerDocument.defaultView\n    ) {\n      // Most likely this is an element who's window has just been destroyed.\n      // This is an issue with FIE embeds destruction. Such elements will be\n      // considered \"not displayable\" until they are GC'ed.\n      this.state_ = ResourceState.NOT_LAID_OUT;\n      return;\n    }\n\n    this.isMeasureRequested_ = false;\n\n    const oldBox = this.layoutBox_;\n    this.computeMeasurements_();\n    const newBox = this.layoutBox_;\n\n    // Note that \"left\" doesn't affect readiness for the layout.\n    const sizeChanges = !layoutRectSizeEquals(oldBox, newBox);\n    if (\n      this.state_ == ResourceState.NOT_LAID_OUT ||\n      oldBox.top != newBox.top ||\n      sizeChanges\n    ) {\n      if (this.element.isUpgraded()) {\n        if (this.state_ == ResourceState.NOT_LAID_OUT) {\n          // If the element isn't laid out yet, then we're now ready for layout.\n          this.state_ = ResourceState.READY_FOR_LAYOUT;\n        } else if (\n          (this.state_ == ResourceState.LAYOUT_COMPLETE ||\n            this.state_ == ResourceState.LAYOUT_FAILED) &&\n          this.element.isRelayoutNeeded()\n        ) {\n          // If the element was already laid out and we need to relayout, then\n          // go back to ready for layout.\n          this.state_ = ResourceState.READY_FOR_LAYOUT;\n        }\n      }\n    }\n\n    if (!this.hasBeenMeasured()) {\n      this.initialLayoutBox_ = newBox;\n    }\n\n    this.element.updateLayoutBox(newBox, sizeChanges);\n  }\n\n  /**\n   * Yields when the resource has been measured.\n   * @return {!Promise}\n   */\n  ensureMeasured() {\n    if (this.hasBeenMeasured()) {\n      return Promise.resolve();\n    }\n    return Services.vsyncFor(this.hostWin).measure(() => this.measure());\n  }\n\n  /**\n   * Computes the current layout box and position-fixed state of the element.\n   * @private\n   */\n  computeMeasurements_() {\n    const viewport = Services.viewportForDoc(this.element);\n    this.layoutBox_ = viewport.getLayoutRect(this.element);\n\n    // Calculate whether the element is currently is or in `position:fixed`.\n    let isFixed = false;\n    if (viewport.supportsPositionFixed() && this.isDisplayed()) {\n      const {win} = this.resources_.getAmpdoc();\n      const {body} = win.document;\n      for (let n = this.element; n && n != body; n = n./*OK*/ offsetParent) {\n        if (n.isAlwaysFixed && n.isAlwaysFixed()) {\n          isFixed = true;\n          break;\n        }\n        if (\n          viewport.isDeclaredFixed(n) &&\n          computedStyle(win, n).position == 'fixed'\n        ) {\n          isFixed = true;\n          break;\n        }\n      }\n    }\n    this.isFixed_ = isFixed;\n\n    if (isFixed) {\n      // For fixed position elements, we need the relative position to the\n      // viewport. When accessing the layoutBox through #getLayoutBox, we'll\n      // return the new absolute position.\n      this.layoutBox_ = moveLayoutRect(\n        this.layoutBox_,\n        -viewport.getScrollLeft(),\n        -viewport.getScrollTop()\n      );\n    }\n  }\n\n  /**\n   * Completes collapse: ensures that the element is `display:none` and\n   * updates layout box.\n   */\n  completeCollapse() {\n    toggle(this.element, false);\n    this.layoutBox_ = layoutRectLtwh(\n      this.layoutBox_.left,\n      this.layoutBox_.top,\n      0,\n      0\n    );\n    this.isFixed_ = false;\n    this.element.updateLayoutBox(this.getLayoutBox());\n    const owner = this.getOwner();\n    if (owner) {\n      owner.collapsedCallback(this.element);\n    }\n  }\n\n  /**\n   * Completes expand: ensures that the element is not `display:none` and\n   * updates measurements.\n   */\n  completeExpand() {\n    toggle(this.element, true);\n    this.requestMeasure();\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isMeasureRequested() {\n    return this.isMeasureRequested_;\n  }\n\n  /**\n   * Checks if the current resource has been measured.\n   * @return {boolean}\n   */\n  hasBeenMeasured() {\n    return !!this.initialLayoutBox_;\n  }\n\n  /**\n   * Requests the element to be remeasured on the next pass.\n   */\n  requestMeasure() {\n    this.isMeasureRequested_ = true;\n  }\n\n  /**\n   * Returns a previously measured layout size.\n   * @return {!../layout-rect.LayoutSizeDef}\n   */\n  getLayoutSize() {\n    return layoutSizeFromRect(this.layoutBox_);\n  }\n\n  /**\n   * Returns a previously measured layout box adjusted to the viewport. This\n   * mainly affects fixed-position elements that are adjusted to be always\n   * relative to the document position in the viewport.\n   * The returned layoutBox is:\n   * - relative to the top of the document for non fixed element,\n   * - relative to the top of the document at current scroll position\n   *   for fixed element.\n   * @return {!../layout-rect.LayoutRectDef}\n   */\n  getLayoutBox() {\n    if (!this.isFixed_) {\n      return this.layoutBox_;\n    }\n    const viewport = Services.viewportForDoc(this.element);\n    return moveLayoutRect(\n      this.layoutBox_,\n      viewport.getScrollLeft(),\n      viewport.getScrollTop()\n    );\n  }\n\n  /**\n   * Returns the first measured layout box.\n   * @return {!../layout-rect.LayoutRectDef}\n   */\n  getInitialLayoutBox() {\n    // Before the first measure, there will be no initial layoutBox.\n    // Luckily, layoutBox will be present but essentially useless.\n    return this.initialLayoutBox_ || this.layoutBox_;\n  }\n\n  /**\n   * Whether the resource is displayed, i.e. if it has non-zero width and\n   * height.\n   * @return {boolean}\n   */\n  isDisplayed() {\n    const isConnected =\n      this.element.ownerDocument && this.element.ownerDocument.defaultView;\n    if (!isConnected) {\n      return false;\n    }\n    const isFluid = this.element.getLayout() == Layout.FLUID;\n    const box = this.getLayoutBox();\n    const hasNonZeroSize = box.height > 0 && box.width > 0;\n    return isFluid || hasNonZeroSize;\n  }\n\n  /**\n   * Whether the element is fixed according to the latest measurement.\n   * @return {boolean}\n   */\n  isFixed() {\n    return this.isFixed_;\n  }\n\n  /**\n   * Whether the element's layout box overlaps with the specified rect.\n   * @param {!../layout-rect.LayoutRectDef} rect\n   * @return {boolean}\n   */\n  overlaps(rect) {\n    return rectsOverlap(this.getLayoutBox(), rect);\n  }\n\n  /**\n   * Whether this element can be pre-rendered.\n   * @return {boolean}\n   */\n  prerenderAllowed() {\n    return this.element.prerenderAllowed();\n  }\n\n  /**\n   * Whether this element has render-blocking service.\n   * @return {boolean}\n   */\n  isBuildRenderBlocking() {\n    return this.element.isBuildRenderBlocking();\n  }\n\n  /**\n   * @param {number|boolean} viewport derived from renderOutsideViewport.\n   * @return {!Promise} resolves when underlying element is built and within the\n   *    viewport range given.\n   */\n  whenWithinViewport(viewport) {\n    // TODO(#30620): remove this method once IntersectionObserver{root:doc} is\n    // polyfilled.\n    devAssert(viewport !== false);\n    // Resolve is already laid out or viewport is true.\n    if (!this.isLayoutPending() || viewport === true) {\n      return Promise.resolve();\n    }\n    // See if pre-existing promise.\n    const viewportNum = dev().assertNumber(viewport);\n    const key = String(viewportNum);\n    if (this.withViewportDeferreds_ && this.withViewportDeferreds_[key]) {\n      return this.withViewportDeferreds_[key].promise;\n    }\n    // See if already within viewport multiplier.\n    if (this.isWithinViewportRatio(viewportNum)) {\n      return Promise.resolve();\n    }\n    // return promise that will trigger when within viewport multiple.\n    this.withViewportDeferreds_ = this.withViewportDeferreds_ || {};\n    this.withViewportDeferreds_[key] = new Deferred();\n    return this.withViewportDeferreds_[key].promise;\n  }\n\n  /** @private resolves promises populated via whenWithinViewport. */\n  resolveDeferredsWhenWithinViewports_() {\n    if (!this.withViewportDeferreds_) {\n      return;\n    }\n    const viewportRatio = this.getDistanceViewportRatio();\n    for (const key in this.withViewportDeferreds_) {\n      if (this.isWithinViewportRatio(parseFloat(key), viewportRatio)) {\n        this.withViewportDeferreds_[key].resolve();\n        delete this.withViewportDeferreds_[key];\n      }\n    }\n  }\n\n  /** @return {!ViewportRatioDef} */\n  getDistanceViewportRatio() {\n    // Numeric interface, element is allowed to render outside viewport when it\n    // is within X times the viewport height of the current viewport.\n    const viewport = Services.viewportForDoc(this.element);\n    const viewportBox = viewport.getRect();\n    const layoutBox = this.getLayoutBox();\n    const scrollDirection = this.resources_.getScrollDirection();\n    let scrollPenalty = 1;\n    let distance = 0;\n\n    if (\n      viewportBox.right < layoutBox.left ||\n      viewportBox.left > layoutBox.right\n    ) {\n      // If outside of viewport's x-axis, element is not in viewport so return\n      // false.\n      return {distance: false};\n    }\n\n    if (viewportBox.bottom < layoutBox.top) {\n      // Element is below viewport\n      distance = layoutBox.top - viewportBox.bottom;\n\n      // If we're scrolling away from the element\n      if (scrollDirection == -1) {\n        scrollPenalty = 2;\n      }\n    } else if (viewportBox.top > layoutBox.bottom) {\n      // Element is above viewport\n      distance = viewportBox.top - layoutBox.bottom;\n\n      // If we're scrolling away from the element\n      if (scrollDirection == 1) {\n        scrollPenalty = 2;\n      }\n    } else {\n      // Element is in viewport so return true for all but boolean false.\n      return {distance: true};\n    }\n    return {distance, scrollPenalty, viewportHeight: viewportBox.height};\n  }\n\n  /**\n   * @param {number|boolean} multiplier\n   * @param {ViewportRatioDef=} opt_viewportRatio\n   * @return {boolean} whether multiplier given is within viewport ratio\n   * @visibleForTesting\n   */\n  isWithinViewportRatio(multiplier, opt_viewportRatio) {\n    if (typeof multiplier === 'boolean') {\n      return multiplier;\n    }\n    const {distance, scrollPenalty, viewportHeight} =\n      opt_viewportRatio || this.getDistanceViewportRatio();\n    if (typeof distance == 'boolean') {\n      return distance;\n    }\n    return distance < (viewportHeight * multiplier) / scrollPenalty;\n  }\n\n  /**\n   * Whether this is allowed to render when not in viewport.\n   * @return {boolean}\n   */\n  renderOutsideViewport() {\n    // The exception is for owned resources, since they only attempt to\n    // render outside viewport when the owner has explicitly allowed it.\n    // TODO(jridgewell, #5803): Resources should be asking owner if it can\n    // prerender this resource, so that it can avoid expensive elements wayyy\n    // outside of viewport. For now, blindly trust that owner knows what it's\n    // doing.\n    this.resolveDeferredsWhenWithinViewports_();\n    return (\n      this.hasOwner() ||\n      this.isWithinViewportRatio(this.element.renderOutsideViewport())\n    );\n  }\n\n  /**\n   * Whether this is allowed to render when scheduler is idle but not in\n   * viewport.\n   * @return {boolean}\n   */\n  idleRenderOutsideViewport() {\n    return this.isWithinViewportRatio(this.element.idleRenderOutsideViewport());\n  }\n\n  /**\n   * Sets the resource's state to LAYOUT_SCHEDULED.\n   * @param {number} scheduleTime The time at which layout was scheduled.\n   */\n  layoutScheduled(scheduleTime) {\n    this.state_ = ResourceState.LAYOUT_SCHEDULED;\n    this.element.layoutScheduleTime = scheduleTime;\n  }\n\n  /**\n   * Undoes `layoutScheduled`.\n   */\n  layoutCanceled() {\n    this.state_ = this.hasBeenMeasured()\n      ? ResourceState.READY_FOR_LAYOUT\n      : ResourceState.NOT_LAID_OUT;\n  }\n\n  /**\n   * Starts the layout of the resource. Returns the promise that will yield\n   * once layout is complete. Only allowed to be called on a upgraded, built\n   * and displayed element.\n   * @return {!Promise}\n   */\n  startLayout() {\n    if (this.layoutPromise_) {\n      return this.layoutPromise_;\n    }\n    if (this.state_ == ResourceState.LAYOUT_COMPLETE) {\n      return Promise.resolve();\n    }\n    if (this.state_ == ResourceState.LAYOUT_FAILED) {\n      return Promise.reject(this.lastLayoutError_);\n    }\n\n    devAssert(\n      this.state_ != ResourceState.NOT_BUILT,\n      'Not ready to start layout: %s (%s)',\n      this.debugid,\n      this.state_\n    );\n    devAssert(this.isDisplayed(), 'Not displayed for layout: %s', this.debugid);\n\n    if (this.state_ != ResourceState.LAYOUT_SCHEDULED) {\n      const err = dev().createError(\n        'startLayout called but not LAYOUT_SCHEDULED',\n        'currently: ',\n        this.state_\n      );\n      reportError(err, this.element);\n      return Promise.reject(err);\n    }\n\n    // Unwanted re-layouts are ignored.\n    if (this.layoutCount_ > 0 && !this.element.isRelayoutNeeded()) {\n      dev().fine(\n        TAG,\n        \"layout canceled since it wasn't requested:\",\n        this.debugid,\n        this.state_\n      );\n      this.state_ = ResourceState.LAYOUT_COMPLETE;\n      return Promise.resolve();\n    }\n\n    dev().fine(TAG, 'start layout:', this.debugid, 'count:', this.layoutCount_);\n    this.layoutCount_++;\n    this.state_ = ResourceState.LAYOUT_SCHEDULED;\n    this.abortController_ = new AbortController();\n    const {signal} = this.abortController_;\n\n    const promise = new Promise((resolve, reject) => {\n      Services.vsyncFor(this.hostWin).mutate(() => {\n        let callbackResult;\n        try {\n          callbackResult = this.element.layoutCallback(signal);\n        } catch (e) {\n          reject(e);\n        }\n        Promise.resolve(callbackResult).then(resolve, reject);\n      });\n      signal.onabort = () => reject(cancellation());\n    }).then(\n      () => this.layoutComplete_(true, signal),\n      (reason) => this.layoutComplete_(false, signal, reason)\n    );\n\n    return (this.layoutPromise_ = promise);\n  }\n\n  /**\n   * @param {boolean} success\n   * @param {!AbortSignal} signal\n   * @param {*=} opt_reason\n   * @return {!Promise|undefined}\n   */\n  layoutComplete_(success, signal, opt_reason) {\n    this.abortController_ = null;\n    if (signal.aborted) {\n      // We hit a race condition, where `layoutCallback` -> `unlayoutCallback`\n      // was called in quick succession. Since the unlayout was called before\n      // the layout completed, we want to remain in the unlayout state.\n      const err = dev().createError('layoutComplete race');\n      err.associatedElement = this.element;\n      dev().expectedError(TAG, err);\n      throw cancellation();\n    }\n    if (this.loadPromiseResolve_) {\n      this.loadPromiseResolve_();\n      this.loadPromiseResolve_ = null;\n    }\n    this.layoutPromise_ = null;\n    this.state_ = success\n      ? ResourceState.LAYOUT_COMPLETE\n      : ResourceState.LAYOUT_FAILED;\n    this.lastLayoutError_ = opt_reason;\n    if (success) {\n      dev().fine(TAG, 'layout complete:', this.debugid);\n    } else {\n      dev().fine(TAG, 'loading failed:', this.debugid, opt_reason);\n      return Promise.reject(opt_reason);\n    }\n  }\n\n  /**\n   * Returns true if the resource layout has not completed or failed.\n   * @return {boolean}\n   */\n  isLayoutPending() {\n    return (\n      this.state_ != ResourceState.LAYOUT_COMPLETE &&\n      this.state_ != ResourceState.LAYOUT_FAILED\n    );\n  }\n\n  /**\n   * Returns a promise that is resolved when this resource is laid out\n   * for the first time and the resource was loaded. Note that the resource\n   * could be unloaded subsequently. This method returns resolved promise for\n   * sunch unloaded elements.\n   * @return {!Promise}\n   */\n  loadedOnce() {\n    if (this.element.R1()) {\n      return this.element.whenLoaded();\n    }\n    return this.loadPromise_;\n  }\n\n  /**\n   * Whether the resource is currently visible in the viewport.\n   * @return {boolean}\n   */\n  isInViewport() {\n    if (this.isInViewport_) {\n      this.resolveDeferredsWhenWithinViewports_();\n    }\n    return this.isInViewport_;\n  }\n\n  /**\n   * Updates the inViewport state of the element.\n   * @param {boolean} inViewport\n   */\n  setInViewport(inViewport) {\n    this.isInViewport_ = inViewport;\n  }\n\n  /**\n   * Calls element's unlayoutCallback callback and resets state for\n   * relayout in case document becomes active again.\n   */\n  unlayout() {\n    if (\n      this.state_ == ResourceState.NOT_BUILT ||\n      this.state_ == ResourceState.NOT_LAID_OUT ||\n      this.state_ == ResourceState.READY_FOR_LAYOUT\n    ) {\n      return;\n    }\n    if (this.abortController_) {\n      this.abortController_.abort();\n      this.abortController_ = null;\n    }\n    this.setInViewport(false);\n    if (this.element.unlayoutCallback()) {\n      this.element.togglePlaceholder(true);\n      this.state_ = ResourceState.NOT_LAID_OUT;\n      this.layoutCount_ = 0;\n      this.layoutPromise_ = null;\n    }\n  }\n\n  /**\n   * Returns the task ID for this resource.\n   * @param {string} localId\n   * @return {string}\n   */\n  getTaskId(localId) {\n    return this.debugid + '#' + localId;\n  }\n\n  /**\n   * Calls element's pauseCallback callback.\n   */\n  pause() {\n    this.element.pause();\n  }\n\n  /**\n   * Calls element's pauseCallback callback.\n   */\n  pauseOnRemove() {\n    this.element.pause();\n  }\n\n  /**\n   * Calls element's resumeCallback callback.\n   */\n  resume() {\n    this.element.resume();\n  }\n\n  /**\n   * Called when a previously visible element is no longer displayed.\n   */\n  unload() {\n    this.element.unmount();\n  }\n\n  /**\n   * Disconnect the resource. Mainly intended for embed resources that do not\n   * receive `disconnectedCallback` naturally via CE API.\n   */\n  disconnect() {\n    delete this.element[RESOURCE_PROP_];\n    this.element.disconnect(/* opt_pretendDisconnected */ true);\n  }\n}\n", "import {PriorityQueue} from '#core/data-structures/priority-queue';\n\nimport {Services} from '#service';\n\nimport {getData} from '#utils/event-helper';\nimport {dev} from '#utils/log';\n\nimport {\n  getServiceForDoc,\n  registerServiceBuilderForDoc,\n} from './service-helpers';\nimport {makeBodyVisibleRecovery} from './style-installer';\n\n/**\n * @const {string}\n */\nconst TAG = 'CHUNK';\n\n/**\n * @type {boolean}\n */\nlet deactivated = /nochunking=1/.test(self.location.hash);\nlet allowLongTasks = false;\n\n/**\n * @const {!Promise}\n */\nconst resolved = Promise.resolve();\n\n/**\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @return {!Chunks}\n * @private\n */\nfunction chunkServiceForDoc(elementOrAmpDoc) {\n  registerServiceBuilderForDoc(elementOrAmpDoc, 'chunk', Chunks);\n  return getServiceForDoc(elementOrAmpDoc, 'chunk');\n}\n\n/**\n * Run the given function. For visible documents the function will be\n * called in a micro task (Essentially ASAP). If the document is\n * not visible, tasks will yield to the event loop (to give the browser\n * time to do other things) and may even be further delayed until\n * there is time.\n *\n * @param {!Document|!./service/ampdoc-impl.AmpDoc} doc\n * @param {function(?IdleDeadline)} fn\n * @param {boolean=} opt_makesBodyVisible Pass true if this service makes\n *     the body visible. This is relevant because it may influence the\n *     task scheduling strategy.\n */\nexport function startupChunk(doc, fn, opt_makesBodyVisible) {\n  if (deactivated) {\n    resolved.then(fn);\n    return;\n  }\n  const service = chunkServiceForDoc(doc.documentElement || doc);\n  service.runForStartup(fn);\n  if (opt_makesBodyVisible) {\n    service.runForStartup(() => {\n      service.bodyIsVisible_ = true;\n    });\n  }\n}\n\n/**\n * Run the given function sometime in the future without blocking UI.\n *\n * Higher priority tasks are executed before lower priority tasks.\n * Tasks with the same priority are executed in FIFO order.\n *\n * Uses `requestIdleCallback` if available and passes the `IdleDeadline`\n * object to the function, which can be used to perform a variable amount\n * of work depending on the remaining amount of idle time.\n *\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {function(?IdleDeadline)} fn\n * @param {ChunkPriority} priority\n */\nexport function chunk(elementOrAmpDoc, fn, priority) {\n  if (deactivated) {\n    resolved.then(fn);\n    return;\n  }\n  const service = chunkServiceForDoc(elementOrAmpDoc);\n  service.run(fn, priority);\n}\n\n/**\n * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @return {!Chunks}\n */\nexport function chunkInstanceForTesting(elementOrAmpDoc) {\n  return chunkServiceForDoc(elementOrAmpDoc);\n}\n\n/**\n * Use a standard micro task for every invocation. This should only\n * be called from the AMP bootstrap script if it is known that\n * chunking makes no sense. In particular this is the case when\n * AMP runs in the `amp-shadow` multi document mode.\n */\nexport function deactivateChunking() {\n  deactivated = true;\n}\n\n/**\n * Allow continuing macro tasks after a long task (>5ms).\n * In particular this is the case when AMP runs in the `amp-inabox` ads mode.\n */\nexport function allowLongTasksInChunking() {\n  allowLongTasks = true;\n}\n\n/**\n * @visibleForTesting\n */\nexport function activateChunkingForTesting() {\n  deactivated = false;\n}\n\n/**\n * Runs all currently scheduled chunks.\n * Independent of errors it will unwind the queue. Will afterwards\n * throw the first encountered error.\n * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n */\nexport function runChunksForTesting(elementOrAmpDoc) {\n  const service = chunkInstanceForTesting(elementOrAmpDoc);\n  const errors = [];\n  while (true) {\n    try {\n      if (!service.execute_(/* idleDeadline */ null)) {\n        break;\n      }\n    } catch (e) {\n      errors.push(e);\n    }\n  }\n  if (errors.length) {\n    throw errors[0];\n  }\n}\n\n/**\n * The priority of a chunk task. Higher priority tasks have higher values.\n * @enum {number}\n */\nexport const ChunkPriority = {\n  HIGH: 20,\n  LOW: 10,\n  BACKGROUND: 0,\n};\n\n/** @enum {string} */\nconst TaskState = {\n  NOT_RUN: 'not_run',\n  RUN: 'run',\n};\n\n/**\n * A default chunkable task.\n * @private\n */\nclass Task {\n  /**\n   * @param {function(?IdleDeadline)} fn\n   */\n  constructor(fn) {\n    /** @public {TaskState} */\n    this.state = TaskState.NOT_RUN;\n\n    /** @private @const {!function(?IdleDeadline)} */\n    this.fn_ = fn;\n  }\n\n  /**\n   * Executes the wrapped function.\n   * @param {?IdleDeadline} idleDeadline\n   * @throws {Error}\n   * @protected\n   */\n  runTask_(idleDeadline) {\n    if (this.state == TaskState.RUN) {\n      return;\n    }\n    this.state = TaskState.RUN;\n    try {\n      this.fn_(idleDeadline);\n    } catch (e) {\n      this.onTaskError_(e);\n      throw e;\n    }\n  }\n\n  /**\n   * @return {string}\n   * @protected\n   */\n  getName_() {\n    return this.fn_.displayName || this.fn_.name;\n  }\n\n  /**\n   * Optional handling when a task run throws an error.\n   * @param {Error} unusedError\n   * @private\n   */\n  onTaskError_(unusedError) {\n    // By default, no-op.\n  }\n\n  /**\n   * Returns true if this task should be run without delay.\n   * @return {boolean}\n   * @protected\n   */\n  immediateTriggerCondition_() {\n    // By default, there are no immediate trigger conditions.\n    return false;\n  }\n\n  /**\n   * Returns true if this task should be scheduled using `requestIdleCallback`.\n   * Otherwise, task is scheduled as macro-task on next event loop.\n   * @return {boolean}\n   * @protected\n   */\n  useRequestIdleCallback_() {\n    // By default, never use requestIdleCallback.\n    return false;\n  }\n}\n\n/**\n * A task that's run as part of AMP's startup sequence.\n * @private\n */\nclass StartupTask extends Task {\n  /**\n   * @param {function(?IdleDeadline)} fn\n   * @param {!Window} win\n   * @param {!Chunks} chunks\n   */\n  constructor(fn, win, chunks) {\n    super(fn);\n\n    /** @private @const */\n    this.chunks_ = chunks;\n  }\n\n  /** @override */\n  onTaskError_(unusedError) {\n    // Startup tasks run early in init. All errors should show the doc.\n    makeBodyVisibleRecovery(self.document);\n  }\n\n  /** @override */\n  immediateTriggerCondition_() {\n    // Run in a micro task when the doc is visible. Otherwise, run after\n    // having yielded to the event queue once.\n    return this.isVisible_();\n  }\n\n  /** @override */\n  useRequestIdleCallback_() {\n    // We only start using requestIdleCallback when the core runtime has\n    // been initialized. Otherwise we risk starving ourselves\n    // before the render-critical work is done.\n    return this.chunks_.coreReady_;\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  isVisible_() {\n    return this.chunks_.ampdoc.isVisible();\n  }\n}\n\n/**\n * Handles queueing, scheduling and executing tasks.\n */\nclass Chunks {\n  /**\n   * @param {!./service/ampdoc-impl.AmpDoc} ampDoc\n   */\n  constructor(ampDoc) {\n    /** @protected @const {!./service/ampdoc-impl.AmpDoc} */\n    this.ampdoc = ampDoc;\n    /** @private @const {!Window} */\n    this.win_ = ampDoc.win;\n    /** @private @const {!PriorityQueue<Task>} */\n    this.tasks_ = new PriorityQueue();\n    /** @private @const {function(?IdleDeadline)} */\n    this.boundExecute_ = this.execute_.bind(this);\n    /** @private {number} */\n    this.durationOfLastExecution_ = 0;\n    /** @private @const {boolean} */\n    this.supportsInputPending_ = !!(\n      this.win_.navigator.scheduling &&\n      this.win_.navigator.scheduling.isInputPending\n    );\n\n    /**\n     * Set to true if we scheduled a macro or micro task to execute the next\n     * task. If true, we don't schedule another one.\n     * Not set to true if we use rIC, because we always want to transition\n     * to immeditate invocation from that state.\n     * @private {boolean}\n     */\n    this.scheduledImmediateInvocation_ = false;\n    /** @private {boolean} Whether the document can actually be painted. */\n    this.bodyIsVisible_ = this.win_.document.documentElement.hasAttribute(\n      'i-amphtml-no-boilerplate'\n    );\n\n    this.win_.addEventListener('message', (e) => {\n      if (getData(e) == 'amp-macro-task') {\n        this.execute_(/* idleDeadline */ null);\n      }\n    });\n\n    /** @protected {boolean} */\n    this.coreReady_ = false;\n    Services.viewerPromiseForDoc(ampDoc).then(() => {\n      // Once the viewer has been resolved, most of core runtime has been\n      // initialized as well.\n      this.coreReady_ = true;\n    });\n\n    ampDoc.onVisibilityChanged(() => {\n      if (ampDoc.isVisible()) {\n        this.schedule_();\n      }\n    });\n  }\n\n  /**\n   * Run fn as a \"chunk\".\n   * @param {function(?IdleDeadline)} fn\n   * @param {number} priority\n   */\n  run(fn, priority) {\n    const t = new Task(fn);\n    this.enqueueTask_(t, priority);\n  }\n\n  /**\n   * Run a fn that's part of AMP's startup sequence as a \"chunk\".\n   * @param {function(?IdleDeadline)} fn\n   */\n  runForStartup(fn) {\n    const t = new StartupTask(fn, this.win_, this);\n    this.enqueueTask_(t, Number.POSITIVE_INFINITY);\n  }\n\n  /**\n   * Queues a task to be executed later with given priority.\n   * @param {!Task} task\n   * @param {number} priority\n   * @private\n   */\n  enqueueTask_(task, priority) {\n    this.tasks_.enqueue(task, priority);\n    this.schedule_();\n  }\n\n  /**\n   * Returns the next task that hasn't been run yet.\n   * If `opt_dequeue` is true, remove the returned task from the queue.\n   * @param {boolean=} opt_dequeue\n   * @return {?Task}\n   * @private\n   */\n  nextTask_(opt_dequeue) {\n    let t = this.tasks_.peek();\n    // Dequeue tasks until we find one that hasn't been run yet.\n    while (t && t.state !== TaskState.NOT_RUN) {\n      this.tasks_.dequeue();\n      t = this.tasks_.peek();\n    }\n    // If `opt_dequeue` is true, remove this task from the queue.\n    if (t && opt_dequeue) {\n      this.tasks_.dequeue();\n    }\n    return t;\n  }\n\n  /**\n   * Run a task.\n   * Schedule the next round if there are more tasks.\n   * @param {?IdleDeadline} idleDeadline\n   * @return {boolean} Whether anything was executed.\n   * @private\n   */\n  execute_(idleDeadline) {\n    const t = this.nextTask_(/* opt_dequeue */ true);\n    if (!t) {\n      this.scheduledImmediateInvocation_ = false;\n      this.durationOfLastExecution_ = 0;\n      return false;\n    }\n    let before;\n    try {\n      before = Date.now();\n      t.runTask_(idleDeadline);\n    } finally {\n      // We want to capture the time of the entire task duration including\n      // scheduled immediate (from resolved promises) micro tasks.\n      // Lacking a better way to do this we just scheduled 10 nested\n      // micro tasks.\n      resolved\n        .then()\n        .then()\n        .then()\n        .then()\n        .then()\n        .then()\n        .then()\n        .then()\n        .then(() => {\n          this.scheduledImmediateInvocation_ = false;\n          this.durationOfLastExecution_ += Date.now() - before;\n          dev().fine(\n            TAG,\n            t.getName_(),\n            'Chunk duration',\n            Date.now() - before,\n            this.durationOfLastExecution_\n          );\n\n          this.schedule_();\n        });\n    }\n    return true;\n  }\n\n  /**\n   * Calls `execute_()` asynchronously.\n   * @param {?IdleDeadline} idleDeadline\n   * @private\n   */\n  executeAsap_(idleDeadline) {\n    // If the user-agent supports isInputPending, use it to break to a macro task as necessary.\n    // Otherwise If we've spent over 5 millseconds executing the\n    // last instruction yield back to the main thread.\n    // 5 milliseconds is a magic number.\n    if (\n      !allowLongTasks &&\n      this.bodyIsVisible_ &&\n      (this.supportsInputPending_\n        ? /** @type {!{scheduling: {isInputPending: Function}}} */ (\n            this.win_.navigator\n          ).scheduling.isInputPending()\n        : this.durationOfLastExecution_ > 5)\n    ) {\n      this.durationOfLastExecution_ = 0;\n      this.requestMacroTask_();\n      return;\n    }\n    resolved.then(() => {\n      this.boundExecute_(idleDeadline);\n    });\n  }\n\n  /**\n   * Schedule running the next queued task.\n   * @private\n   */\n  schedule_() {\n    if (this.scheduledImmediateInvocation_) {\n      return;\n    }\n    const nextTask = this.nextTask_();\n    if (!nextTask) {\n      return;\n    }\n    if (nextTask.immediateTriggerCondition_()) {\n      this.scheduledImmediateInvocation_ = true;\n      this.executeAsap_(/* idleDeadline */ null);\n      return;\n    }\n    // If requestIdleCallback exists, schedule a task with it, but\n    // do not wait longer than two seconds.\n    if (nextTask.useRequestIdleCallback_() && this.win_.requestIdleCallback) {\n      onIdle(\n        this.win_,\n        // Wait until we have a budget of at least 15ms.\n        // 15ms is a magic number. Budgets are higher when the user\n        // is completely idle (around 40), but that occurs too\n        // rarely to be usable. 15ms budgets can happen during scrolling\n        // but only if the device is doing super, super well, and no\n        // real processing is done between frames.\n        15 /* minimumTimeRemaining */,\n        2000 /* timeout */,\n        this.boundExecute_\n      );\n      return;\n    }\n    this.requestMacroTask_();\n  }\n\n  /**\n   * Requests executing of a macro task. Yields to the event queue\n   * before executing the task.\n   * Places task on browser message queue which then respectively\n   * triggers dequeuing and execution of a chunk.\n   */\n  requestMacroTask_() {\n    // The message doesn't actually matter.\n    this.win_./*OK*/ postMessage('amp-macro-task', '*');\n  }\n}\n\n/**\n * Delays calling the given function until the browser is notifying us\n * about a certain minimum budget or the timeout is reached.\n * @param {!Window} win\n * @param {number} minimumTimeRemaining Minimum number of millis idle\n *     budget for callback to fire.\n * @param {number} timeout in millis for callback to fire.\n * @param {function(?IdleDeadline)} fn Callback.\n * @visibleForTesting\n */\nexport function onIdle(win, minimumTimeRemaining, timeout, fn) {\n  const startTime = Date.now();\n  /**\n   * @param {!IdleDeadline} info\n   */\n  function rIC(info) {\n    if (info.timeRemaining() < minimumTimeRemaining) {\n      const remainingTimeout = timeout - (Date.now() - startTime);\n      if (remainingTimeout <= 0 || info.didTimeout) {\n        dev().fine(TAG, 'Timed out', timeout, info.didTimeout);\n        fn(info);\n      } else {\n        dev().fine(\n          TAG,\n          'Rescheduling with',\n          remainingTimeout,\n          info.timeRemaining()\n        );\n        win.requestIdleCallback(rIC, {timeout: remainingTimeout});\n      }\n    } else {\n      dev().fine(TAG, 'Running idle callback with ', minimumTimeRemaining);\n      fn(info);\n    }\n  }\n  win.requestIdleCallback(rIC, {timeout});\n}\n", "import {devAssert} from '#core/assert';\n\n/**\n * Key string in an action arguments map for an unparsed object literal string.\n *\n * E.g. for the action in <p on=\"tap:AMP.setState({foo: 'bar'})\",\n * then `args[RAW_OBJECT_ARGS_KEY]` is the string \"{foo: 'bar'}\".\n *\n * The action service delegates parsing of object literals to the corresponding\n * extension (in the example above, amp-bind).\n *\n * @see ./service/action-impl.ActionInfoDef\n * @const {string}\n */\nexport const RAW_OBJECT_ARGS_KEY = '__AMP_OBJECT_STRING__';\n\n/**\n * Identifier for an element's default action.\n *\n * @const {string}\n */\nexport const DEFAULT_ACTION = 'activate';\n\n/**\n * Corresponds to degree of user intent, i.e. events triggered with strong\n * user intent have high trust.\n *\n * @enum {number}\n */\nexport const ActionTrust = {\n  /**\n   * Events that are triggered without a user gesture, or triggered by a user\n   * gesture with weak intent (e.g. scroll) are \"low trust\".\n   *\n   * Actions that have low impact on the page's visual state should require\n   * \"low trust\" (e.g. pausing a video).\n   */\n  LOW: 1,\n  /**\n   * Events that are triggered nearly immediately (up to a few seconds) after\n   * a user gesture with strong intent (e.g. tap or swipe) are \"default trust\".\n   *\n   * Actions that can modify the page's visual state (e.g. content jumping)\n   * should require \"default trust\". This is the default required trust level\n   * for actions.\n   */\n  DEFAULT: 2,\n  /**\n   * Events that are triggered immediately after a user gesture with\n   * strong intent (e.g. tap or swipe) are \"high trust\".\n   *\n   * There are no actions yet that require high trust.\n   */\n  HIGH: 3,\n};\n\n/**\n * @param {!ActionTrust} actionTrust\n * @return {string}\n */\nexport function actionTrustToString(actionTrust) {\n  switch (actionTrust) {\n    case ActionTrust.LOW:\n      return 'low';\n    case ActionTrust.HIGH:\n      return 'high';\n    default:\n      devAssert(actionTrust === ActionTrust.DEFAULT);\n      return 'default';\n  }\n}\n", "import {deserializeMessage, isAmpMessage} from '#core/3p-frame-messaging';\nimport {addAttributesToElement} from '#core/dom';\nimport {closestAncestorElementBySelector} from '#core/dom/query';\nimport {setStyle} from '#core/dom/style';\nimport {remove} from '#core/types/array';\nimport {dict} from '#core/types/object';\nimport {tryParseJson} from '#core/types/object/json';\n\nimport {getData} from '#utils/event-helper';\nimport {dev, devAssert} from '#utils/log';\n\nimport {parseUrlDeprecated} from './url';\n\n/**\n * Sentinel used to force unlistening after a iframe is detached.\n * @type {string}\n */\nconst UNLISTEN_SENTINEL = 'unlisten';\n\n/**\n * @typedef {{\n *   frame: !Element,\n *   events: !Object<string, !Array<function(!JsonObject)>>\n * }}\n */\nlet WindowEventsDef;\n\n/**\n * Returns a mapping from a URL's origin to an array of windows and their\n * listenFor listeners.\n * @param {?Window} parentWin the window that created the iframe\n * @param {boolean=} opt_create create the mapping if it does not exist\n * @return {?Object<string, !Array<!WindowEventsDef>>}\n */\nfunction getListenFors(parentWin, opt_create) {\n  let {listeningFors} = parentWin;\n\n  if (!listeningFors && opt_create) {\n    listeningFors = parentWin.listeningFors = Object.create(null);\n  }\n  return listeningFors || null;\n}\n\n/**\n * Returns an array of WindowEventsDef that have had any listenFor listeners\n * registered for this sentinel.\n * @param {?Window} parentWin the window that created the iframe\n * @param {string} sentinel the sentinel of the message\n * @param {boolean=} opt_create create the array if it does not exist\n * @return {?Array<!WindowEventsDef>}\n */\nfunction getListenForSentinel(parentWin, sentinel, opt_create) {\n  const listeningFors = getListenFors(parentWin, opt_create);\n  if (!listeningFors) {\n    return listeningFors;\n  }\n\n  let listenSentinel = listeningFors[sentinel];\n  if (!listenSentinel && opt_create) {\n    listenSentinel = listeningFors[sentinel] = [];\n  }\n  return listenSentinel || null;\n}\n\n/**\n * Returns an mapping of event names to listenFor listeners.\n * @param {?Window} parentWin the window that created the iframe\n * @param {!Element} iframe the iframe element who's context will trigger the\n *     event\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n * @return {?Object<string, !Array<function(!JsonObject, !Window, string, !MessageEvent)>>}\n */\nfunction getOrCreateListenForEvents(parentWin, iframe, opt_is3P) {\n  const sentinel = getSentinel_(iframe, opt_is3P);\n  const listenSentinel = getListenForSentinel(parentWin, sentinel, true);\n\n  let windowEvents;\n  for (let i = 0; i < listenSentinel.length; i++) {\n    const we = listenSentinel[i];\n    if (we.frame === iframe) {\n      windowEvents = we;\n      break;\n    }\n  }\n\n  if (!windowEvents) {\n    windowEvents = {\n      frame: iframe,\n      events: Object.create(null),\n    };\n    listenSentinel.push(windowEvents);\n  }\n\n  return windowEvents.events;\n}\n\n/**\n * Returns an mapping of event names to listenFor listeners.\n * @param {?Window} parentWin the window that created the iframe\n * @param {string} sentinel the sentinel of the message\n * @param {string} origin the source window's origin\n * @param {?Window} triggerWin the window that triggered the event\n * @return {?Object<string, !Array<function(!JsonObject, !Window, string, !MessageEvent)>>}\n */\nfunction getListenForEvents(parentWin, sentinel, origin, triggerWin) {\n  const listenSentinel = getListenForSentinel(parentWin, sentinel);\n\n  if (!listenSentinel) {\n    return listenSentinel;\n  }\n\n  // Find the entry for the frame.\n  // TODO(@nekodo): Add a WeakMap<Window, WindowEventsDef> cache to\n  //     speed up this process.\n  let windowEvents;\n  for (let i = 0; i < listenSentinel.length; i++) {\n    const we = listenSentinel[i];\n    const {contentWindow} = we.frame;\n    if (!contentWindow) {\n      setTimeout(dropListenSentinel, 0, listenSentinel);\n    } else if (\n      triggerWin == contentWindow ||\n      isDescendantWindow(contentWindow, triggerWin)\n    ) {\n      // 3p code path, we may accept messages from nested frames.\n      windowEvents = we;\n      break;\n    }\n  }\n\n  return windowEvents ? windowEvents.events : null;\n}\n\n/**\n * Checks whether one window is a descendant of another by climbing\n * the parent chain.\n * @param {?Window} ancestor potential ancestor window\n * @param {?Window} descendant potential descendant window\n * @return {boolean}\n */\nfunction isDescendantWindow(ancestor, descendant) {\n  for (let win = descendant; win && win != win.parent; win = win.parent) {\n    if (win == ancestor) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Removes any listenFors registed on listenSentinel that do not have\n * a contentWindow (the frame was removed from the DOM tree).\n * @param {!Array<!WindowEventsDef>} listenSentinel\n */\nfunction dropListenSentinel(listenSentinel) {\n  const noopData = dict({'sentinel': UNLISTEN_SENTINEL});\n\n  for (let i = listenSentinel.length - 1; i >= 0; i--) {\n    const windowEvents = listenSentinel[i];\n\n    if (!windowEvents.frame.contentWindow) {\n      listenSentinel.splice(i, 1);\n\n      const {events} = windowEvents;\n      for (const name in events) {\n        // Splice here, so that each unlisten does not shift the array\n        events[name].splice(0, Infinity).forEach((event) => {\n          event(noopData);\n        });\n      }\n    }\n  }\n}\n\n/**\n * Registers the global listenFor event listener if it has yet to be.\n * @param {?Window} parentWin\n */\nfunction registerGlobalListenerIfNeeded(parentWin) {\n  if (parentWin.listeningFors) {\n    return;\n  }\n  const listenForListener = function (event) {\n    if (!getData(event)) {\n      return;\n    }\n    const data = parseIfNeeded(getData(event));\n\n    if (!data || !data['sentinel']) {\n      return;\n    }\n\n    const listenForEvents = getListenForEvents(\n      parentWin,\n      data['sentinel'],\n      event.origin,\n      event.source\n    );\n    if (!listenForEvents) {\n      return;\n    }\n\n    let listeners = listenForEvents[data['type']];\n    if (!listeners) {\n      return;\n    }\n\n    // We slice to avoid issues with adding another listener or unlistening\n    // during iteration. We could move to a Doubly Linked List with\n    // backtracking, but that's overly complicated.\n    listeners = listeners.slice();\n    for (let i = 0; i < listeners.length; i++) {\n      const listener = listeners[i];\n      listener(data, event.source, event.origin, event);\n    }\n  };\n\n  parentWin.addEventListener('message', listenForListener);\n}\n\n/**\n * Allows listening for message from the iframe. Returns an unlisten\n * function to remove the listener.\n *\n * @param {?Element} iframe\n * @param {string} typeOfMessage\n * @param {?function(!JsonObject, !Window, string, !MessageEvent)} callback Called when a\n *     message of this type arrives for this iframe.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n * @param {boolean=} opt_includingNestedWindows set to true if messages from\n *     nested frames should also be accepted.\n * @param {boolean=} opt_allowOpaqueOrigin set to true if messages from\n       opaque origins (origin == null) are allowed.\n * @return {!UnlistenDef}\n */\nexport function listenFor(\n  iframe,\n  typeOfMessage,\n  callback,\n  opt_is3P,\n  opt_includingNestedWindows,\n  opt_allowOpaqueOrigin\n) {\n  devAssert(iframe.src, 'only iframes with src supported');\n  devAssert(\n    !iframe.parentNode,\n    'cannot register events on an attached ' +\n      'iframe. It will cause hair-pulling bugs like #2942'\n  );\n  devAssert(callback);\n  const parentWin = iframe.ownerDocument.defaultView;\n\n  registerGlobalListenerIfNeeded(parentWin);\n\n  const listenForEvents = getOrCreateListenForEvents(\n    parentWin,\n    iframe,\n    opt_is3P\n  );\n\n  const iframeOrigin = parseUrlDeprecated(iframe.src).origin;\n  let events =\n    listenForEvents[typeOfMessage] || (listenForEvents[typeOfMessage] = []);\n\n  let unlisten;\n  let listener = function (data, source, origin, event) {\n    const sentinel = data['sentinel'];\n\n    // Exclude messages that don't satisfy amp sentinel rules.\n    if (sentinel == 'amp') {\n      // For `amp` sentinel, nested windows are not allowed\n      if (source != iframe.contentWindow) {\n        return;\n      }\n\n      // For `amp` sentinel origin must match unless opaque origin is allowed\n      const isOpaqueAndAllowed = origin == 'null' && opt_allowOpaqueOrigin;\n      if (iframeOrigin != origin && !isOpaqueAndAllowed) {\n        return;\n      }\n    }\n\n    // Exclude nested frames if necessary.\n    // Note that the source was already verified to be either the contentWindow\n    // of the iframe itself or a descendant window within it.\n    if (!opt_includingNestedWindows && source != iframe.contentWindow) {\n      return;\n    }\n\n    if (data.sentinel == UNLISTEN_SENTINEL) {\n      unlisten();\n      return;\n    }\n    callback(data, source, origin, event);\n  };\n\n  events.push(listener);\n\n  return (unlisten = function () {\n    if (listener) {\n      const index = events.indexOf(listener);\n      if (index > -1) {\n        events.splice(index, 1);\n      }\n      // Make sure references to the unlisten function do not keep\n      // alive too much.\n      listener = null;\n      events = null;\n      callback = null;\n    }\n  });\n}\n\n/**\n * Returns a promise that resolves when one of given messages has been observed\n * for the first time. And remove listener for all other messages.\n * @param {!Element} iframe\n * @param {string|!Array<string>} typeOfMessages\n * @param {boolean=} opt_is3P\n * @return {!Promise<!{data: !JsonObject, source: !Window, origin: string, event: !MessageEvent}>}\n */\nexport function listenForOncePromise(iframe, typeOfMessages, opt_is3P) {\n  const unlistenList = [];\n  if (typeof typeOfMessages == 'string') {\n    typeOfMessages = [typeOfMessages];\n  }\n  return new Promise((resolve) => {\n    for (let i = 0; i < typeOfMessages.length; i++) {\n      const message = typeOfMessages[i];\n      const unlisten = listenFor(\n        iframe,\n        message,\n        (data, source, origin, event) => {\n          for (let i = 0; i < unlistenList.length; i++) {\n            unlistenList[i]();\n          }\n          resolve({data, source, origin, event});\n        },\n        opt_is3P\n      );\n      unlistenList.push(unlisten);\n    }\n  });\n}\n\n/**\n * Posts a message to the iframe.\n * @param {!Element} iframe The iframe.\n * @param {string} type Type of the message.\n * @param {!JsonObject} object Message payload.\n * @param {string} targetOrigin origin of the target.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n */\nexport function postMessage(iframe, type, object, targetOrigin, opt_is3P) {\n  postMessageToWindows(\n    iframe,\n    [{win: iframe.contentWindow, origin: targetOrigin}],\n    type,\n    object,\n    opt_is3P\n  );\n}\n\n/**\n * Posts an identical message to multiple target windows with the same\n * sentinel.\n * The message is serialized only once.\n * @param {!Element} iframe The iframe.\n * @param {!Array<{win: !Window, origin: string}>} targets to send the message\n *     to, pairs of window and its origin.\n * @param {string} type Type of the message.\n * @param {!JsonObject} object Message payload.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n */\nexport function postMessageToWindows(iframe, targets, type, object, opt_is3P) {\n  if (!iframe.contentWindow) {\n    return;\n  }\n  object['type'] = type;\n  object['sentinel'] = getSentinel_(iframe, opt_is3P);\n  let payload = object;\n  if (opt_is3P) {\n    // Serialize ourselves because that is much faster in Chrome.\n    payload = 'amp-' + JSON.stringify(object);\n  }\n  for (let i = 0; i < targets.length; i++) {\n    const target = targets[i];\n    target.win./*OK*/ postMessage(payload, target.origin);\n  }\n}\n\n/**\n * Gets the sentinel string.\n * @param {!Element} iframe The iframe.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n * @return {string} Sentinel string.\n * @private\n */\nfunction getSentinel_(iframe, opt_is3P) {\n  return opt_is3P ? iframe.getAttribute('data-amp-3p-sentinel') : 'amp';\n}\n\n/**\n * JSON parses event.data if it needs to be\n * @param {*} data\n * @return {?JsonObject} object message\n * @private\n * @visibleForTesting\n */\nexport function parseIfNeeded(data) {\n  if (typeof data == 'string') {\n    if (data.charAt(0) == '{') {\n      data =\n        tryParseJson(data, (e) => {\n          dev().warn(\n            'IFRAME-HELPER',\n            'Postmessage could not be parsed. ' +\n              'Is it in a valid JSON format?',\n            e\n          );\n        }) || null;\n    } else if (isAmpMessage(data)) {\n      data = deserializeMessage(data);\n    } else {\n      data = null;\n    }\n  }\n  return /** @type {?JsonObject} */ (data);\n}\n\n/**\n * Manages a postMessage API for an iframe with a subscription message and\n * a way to broadcast messages to all subscribed windows, which\n * in turn must all be descendants of the contentWindow of the iframe.\n */\nexport class SubscriptionApi {\n  /**\n   * @param {!Element} iframe The iframe.\n   * @param {string} type Type of the subscription message.\n   * @param {boolean} is3p set to true if the iframe is 3p.\n   * @param {function(!JsonObject, !Window, string)} requestCallback Callback\n   *     invoked whenever a new window subscribes.\n   */\n  constructor(iframe, type, is3p, requestCallback) {\n    /** @private @const {!Element} */\n    this.iframe_ = iframe;\n    /** @private @const {boolean} */\n    this.is3p_ = is3p;\n    /** @private @const {!Array<{win: !Window, origin: string}>} */\n    this.clientWindows_ = [];\n\n    /** @private @const {!UnlistenDef} */\n    this.unlisten_ = listenFor(\n      this.iframe_,\n      type,\n      (data, source, origin) => {\n        // This message might be from any window within the iframe, we need\n        // to keep track of which windows want to be sent updates.\n        if (!this.clientWindows_.some((entry) => entry.win == source)) {\n          this.clientWindows_.push({win: source, origin});\n        }\n        requestCallback(data, source, origin);\n      },\n      this.is3p_,\n      // For 3P frames we also allow nested frames within them to subscribe..\n      this.is3p_ /* opt_includingNestedWindows */\n    );\n  }\n\n  /**\n   * Sends a message to all subscribed windows.\n   * @param {string} type Type of the message.\n   * @param {!JsonObject} data Message payload.\n   */\n  send(type, data) {\n    // Remove clients that have been removed from the DOM.\n    remove(this.clientWindows_, (client) => !client.win.parent);\n    postMessageToWindows(\n      this.iframe_,\n      this.clientWindows_,\n      type,\n      data,\n      this.is3p_\n    );\n  }\n\n  /**\n   * Destroys iframe.\n   */\n  destroy() {\n    this.unlisten_();\n    this.clientWindows_.length = 0;\n  }\n}\n\n/**\n * @param {!Element} element\n * @return {boolean}\n */\nexport function looksLikeTrackingIframe(element) {\n  const {height, width} = element.getLayoutSize();\n  // This heuristic is subject to change.\n  if (width > 10 || height > 10) {\n    return false;\n  }\n  // Iframe is not tracking iframe if open with user interaction\n  return !closestAncestorElementBySelector(element, '.i-amphtml-overlay');\n}\n\n// Most common ad sizes\n// Array of [width, height] pairs.\nconst adSizes = [\n  [300, 250],\n  [320, 50],\n  [300, 50],\n  [320, 100],\n];\n\n/**\n * Guess whether this element might be an ad.\n * @param {!Element} element An amp-iframe element.\n * @return {boolean}\n * @visibleForTesting\n */\nexport function isAdLike(element) {\n  const {height, width} = element.getLayoutSize();\n  for (let i = 0; i < adSizes.length; i++) {\n    const refWidth = adSizes[i][0];\n    const refHeight = adSizes[i][1];\n    if (refHeight > height) {\n      continue;\n    }\n    if (refWidth > width) {\n      continue;\n    }\n    // Fuzzy matching to account for padding.\n    if (height - refHeight <= 20 && width - refWidth <= 20) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * @param {!Element} iframe\n * @return {!Element}\n */\nexport function disableScrollingOnIframe(iframe) {\n  addAttributesToElement(iframe, dict({'scrolling': 'no'}));\n\n  // This shouldn't work, but it does on Firefox.\n  // https://stackoverflow.com/a/15494969\n  setStyle(iframe, 'overflow', 'hidden');\n\n  return iframe;\n}\n\n/**\n * Returns true if win's properties can be accessed and win is defined.\n * This functioned is used to determine if a window is cross-domained\n * from the perspective of the current window.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function canInspectWindow(win) {\n  // TODO: this is not reliable.  The compiler assumes that property reads are\n  // side-effect free.  The recommended fix is to use goog.reflect.sinkValue\n  // but since we're not using the closure library I'm not sure how to do this.\n  // See https://github.com/google/closure-compiler/issues/3156\n  try {\n    // win['test'] could be truthy but not true the compiler shouldn't be able\n    // to optimize this check away.\n    return !!win.location.href && (win['test'] || true);\n  } catch (unusedErr) {\n    return false;\n  }\n}\n\n/** @const {string} */\nexport const FIE_EMBED_PROP = '__AMP_EMBED__';\n\n/**\n * Returns the embed created using `installFriendlyIframeEmbed` or `null`.\n * Caution: This will only return the FIE after the iframe has 'loaded'. If you\n * are checking before this signal you may be in a race condition that returns\n * null.\n * @param {!HTMLIFrameElement} iframe\n * @return {?./friendly-iframe-embed.FriendlyIframeEmbed}\n */\nexport function getFriendlyIframeEmbedOptional(iframe) {\n  return /** @type {?./friendly-iframe-embed.FriendlyIframeEmbed} */ (\n    iframe[FIE_EMBED_PROP]\n  );\n}\n\n/**\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isInFie(element) {\n  return (\n    element.classList.contains('i-amphtml-fie') ||\n    !!closestAncestorElementBySelector(element, '.i-amphtml-fie')\n  );\n}\n", "import {MessageType} from '#core/3p-frame-messaging';\nimport {\n  layoutRectLtwh,\n  moveLayoutRect,\n  rectIntersection,\n} from '#core/dom/layout/rect';\nimport {dict} from '#core/types/object';\n\nimport {SubscriptionApi} from '../iframe-helper';\n\n/**\n * The structure that defines the rectangle used in intersection observers.\n *\n * @typedef {{\n *   top: number,\n *   bottom: number,\n *   left: number,\n *   right: number,\n *   width: number,\n *   height: number,\n *   x: number,\n *   y: number,\n * }}\n */\nexport let DOMRect;\n\nexport const DEFAULT_THRESHOLD = [\n  0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65,\n  0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1,\n];\n\n/** @typedef {{\n *    element: !Element,\n *    currentThresholdSlot: number,\n *  }}\n */\nlet ElementIntersectionStateDef;\n\n/** @const @private */\nconst INIT_TIME = Date.now();\n\n/**\n * A function to get the element's current IntersectionObserverEntry\n * regardless of the intersetion ratio. Only available when element is not\n * nested in a container iframe.\n * @param {!../layout-rect.LayoutRectDef} element element's rect\n * @param {?../layout-rect.LayoutRectDef} owner element's owner rect\n * @param {!../layout-rect.LayoutRectDef} hostViewport hostViewport's rect\n * @return {!IntersectionObserverEntry} A change entry.\n */\nexport function getIntersectionChangeEntry(element, owner, hostViewport) {\n  const intersection =\n    rectIntersection(element, owner, hostViewport) ||\n    layoutRectLtwh(0, 0, 0, 0);\n  const ratio = intersectionRatio(intersection, element);\n  return calculateChangeEntry(element, hostViewport, intersection, ratio);\n}\n\n/**\n * A class to help amp-iframe and amp-ad nested iframe listen to intersection\n * change.\n */\nexport class IntersectionObserver3pHost {\n  /**\n   * @param {!AMP.BaseElement} baseElement\n   * @param {!Element} iframe\n   */\n  constructor(baseElement, iframe) {\n    /** @private @const {!AMP.BaseElement} */\n    this.baseElement_ = baseElement;\n\n    /** @private {?IntersectionObserver} */\n    this.intersectionObserver_ = null;\n\n    /** @private {?SubscriptionApi} */\n    this.subscriptionApi_ = new SubscriptionApi(\n      iframe,\n      MessageType.SEND_INTERSECTIONS,\n      false, // is3P\n      () => {\n        this.startSendingIntersection_();\n      }\n    );\n\n    this.intersectionObserver_ = new IntersectionObserver(\n      (entries) => {\n        this.subscriptionApi_.send(\n          MessageType.INTERSECTION,\n          dict({'changes': entries.map(cloneEntryForCrossOrigin)})\n        );\n      },\n      {threshold: DEFAULT_THRESHOLD}\n    );\n  }\n\n  /**\n   * Function to start listening to viewport event. and observer intersection\n   * change on the element.\n   */\n  startSendingIntersection_() {\n    this.intersectionObserver_.observe(this.baseElement_.element);\n  }\n\n  /**\n   * Clean all listenrs\n   */\n  destroy() {\n    this.intersectionObserver_.disconnect();\n    this.intersectionObserver_ = null;\n    this.subscriptionApi_.destroy();\n    this.subscriptionApi_ = null;\n  }\n}\n\n/**\n * Returns the ratio of the smaller box's area to the larger box's area.\n * @param {!../layout-rect.LayoutRectDef} smaller\n * @param {!../layout-rect.LayoutRectDef} larger\n * @return {number}\n * @visibleForTesting\n */\nexport function intersectionRatio(smaller, larger) {\n  const smallerBoxArea = smaller.width * smaller.height;\n  const largerBoxArea = larger.width * larger.height;\n\n  // Check for a divide by zero\n  return largerBoxArea === 0 ? 0 : smallerBoxArea / largerBoxArea;\n}\n\n/**\n * Helper function to calculate the IntersectionObserver change entry.\n * @param {!../layout-rect.LayoutRectDef} element element's rect\n * @param {?../layout-rect.LayoutRectDef} hostViewport hostViewport's rect\n * @param {!../layout-rect.LayoutRectDef} intersection\n * @param {number} ratio\n * @return {!IntersectionObserverEntry}}\n */\nfunction calculateChangeEntry(element, hostViewport, intersection, ratio) {\n  // If element not in an iframe.\n  // adjust all LayoutRect to hostViewport Origin.\n  let boundingClientRect = element;\n  let rootBounds = hostViewport;\n  // If no hostViewport is provided, element is inside an non-scrollable iframe.\n  // Every Layoutrect has already adjust their origin according to iframe\n  // rect origin. LayoutRect position is relative to iframe origin,\n  // thus relative to iframe's viewport origin because the viewport is at the\n  // iframe origin. No need to adjust position here.\n\n  if (hostViewport) {\n    // If element not in an iframe.\n    // adjust all LayoutRect to hostViewport Origin.\n    rootBounds = /** @type {!../layout-rect.LayoutRectDef} */ (rootBounds);\n    intersection = moveLayoutRect(\n      intersection,\n      -hostViewport.left,\n      -hostViewport.top\n    );\n    // The element is relative to (0, 0), while the viewport moves. So, we must\n    // adjust.\n    boundingClientRect = moveLayoutRect(\n      boundingClientRect,\n      -hostViewport.left,\n      -hostViewport.top\n    );\n    // Now, move the viewport to (0, 0)\n    rootBounds = moveLayoutRect(\n      rootBounds,\n      -hostViewport.left,\n      -hostViewport.top\n    );\n  }\n\n  return /** @type {!IntersectionObserverEntry} */ ({\n    time:\n      typeof performance !== 'undefined' && performance.now\n        ? performance.now()\n        : Date.now() - INIT_TIME,\n    rootBounds,\n    boundingClientRect,\n    intersectionRect: intersection,\n    intersectionRatio: ratio,\n  });\n}\n\n/**\n * @param {!IntersectionObserverEntry} entry\n * @return {!IntersectionObserverEntry}\n */\nexport function cloneEntryForCrossOrigin(entry) {\n  return /** @type {!IntersectionObserverEntry} */ ({\n    'time': entry.time,\n    'rootBounds': entry.rootBounds,\n    'boundingClientRect': entry.boundingClientRect,\n    'intersectionRect': entry.intersectionRect,\n    'intersectionRatio': entry.intersectionRatio,\n  });\n}\n", "import {AmpEvents} from '#core/constants/amp-events';\nimport {CommonSignals} from '#core/constants/common-signals';\nimport {ReadyState} from '#core/constants/ready-state';\nimport {tryResolve} from '#core/data-structures/promise';\nimport {Signals} from '#core/data-structures/signals';\nimport * as dom from '#core/dom';\nimport {\n  UPGRADE_TO_CUSTOMELEMENT_PROMISE,\n  UPGRADE_TO_CUSTOMELEMENT_RESOLVER,\n} from '#core/dom/amp-element-helpers';\nimport {Layout, LayoutPriority, isLoadingAllowed} from '#core/dom/layout';\nimport {MediaQueryProps} from '#core/dom/media-query-props';\nimport * as query from '#core/dom/query';\nimport {setStyle} from '#core/dom/style';\nimport {rethrowAsync} from '#core/error';\nimport {applyStaticLayout} from '#core/static-layout';\nimport {getWin} from '#core/window';\n\nimport {Services} from '#service';\nimport {ResourceState} from '#service/resource';\nimport {getSchedulerForDoc} from '#service/scheduler';\n\nimport {dev, devAssert, user, userAssert} from '#utils/log';\n\nimport {startupChunk} from './chunk';\nimport {shouldBlockOnConsentByMeta} from './consent';\nimport {ElementStub} from './element-stub';\nimport {\n  blockedByConsentError,\n  cancellation,\n  isBlockedByConsent,\n  isCancellation,\n  reportError,\n} from './error-reporting';\nimport {getMode} from './mode';\nimport {getIntersectionChangeEntry} from './utils/intersection-observer-3p-host';\n\nconst TAG = 'CustomElement';\n\n/**\n * @enum {number}\n */\nconst UpgradeState = {\n  NOT_UPGRADED: 1,\n  UPGRADED: 2,\n  UPGRADE_FAILED: 3,\n  UPGRADE_IN_PROGRESS: 4,\n};\n\nconst NO_BUBBLES = {bubbles: false};\nconst RETURN_TRUE = () => true;\n\n/**\n * Caches whether the template tag is supported to avoid memory allocations.\n * @type {boolean|undefined}\n */\nlet templateTagSupported;\n\n/** @type {!Array<AmpElement>} */\nexport const stubbedElements = [];\n\n/**\n * Extensions which have failed to load, making their elements unresolvable.\n * If null, then any remaining elements which don't immediately have their\n * implClass available are marked unresolvable.\n * @type {Set<string>}\n */\nconst unresolvableExtensions = new Set();\n\n/**\n * Whether this platform supports template tags.\n * @return {boolean}\n */\nfunction isTemplateTagSupported() {\n  if (templateTagSupported === undefined) {\n    const template = self.document.createElement('template');\n    templateTagSupported = 'content' in template;\n  }\n  return templateTagSupported;\n}\n\n/**\n * Creates a named custom element class.\n *\n * @param {!Window} win The window in which to register the custom element.\n * @param {function(!./service/ampdoc-impl.AmpDoc, !AmpElement, ?(typeof BaseElement))} elementConnectedCallback\n * @return {typeof AmpElement} The custom element class.\n */\nexport function createCustomElementClass(win, elementConnectedCallback) {\n  const BaseCustomElement = /** @type {typeof HTMLElement} */ (\n    createBaseCustomElementClass(win, elementConnectedCallback)\n  );\n  // It's necessary to create a subclass, because the same \"base\" class cannot\n  // be registered to multiple custom elements.\n  class CustomAmpElement extends BaseCustomElement {\n    /**\n     * adoptedCallback is only called when using a Native implementation of Custom Elements V1.\n     * Our polyfill does not call this method.\n     */\n    adoptedCallback() {\n      // Work around an issue with Firefox changing the prototype of our\n      // already constructed element to the new document's HTMLElement.\n      if (Object.getPrototypeOf(this) !== customAmpElementProto) {\n        Object.setPrototypeOf(this, customAmpElementProto);\n      }\n    }\n  }\n  const customAmpElementProto = CustomAmpElement.prototype;\n  return /** @type {typeof AmpElement} */ (CustomAmpElement);\n}\n\n/**\n * Creates a base custom element class.\n *\n * @param {!Window} win The window in which to register the custom element.\n * @param {function(!./service/ampdoc-impl.AmpDoc, !AmpElement, ?(typeof BaseElement))} elementConnectedCallback\n * @return {typeof HTMLElement}\n */\nfunction createBaseCustomElementClass(win, elementConnectedCallback) {\n  if (win.__AMP_BASE_CE_CLASS) {\n    return win.__AMP_BASE_CE_CLASS;\n  }\n  const htmlElement = /** @type {typeof HTMLElement} */ (win.HTMLElement);\n\n  /**\n   * @abstract @extends {HTMLElement}\n   */\n  class BaseCustomElement extends htmlElement {\n    /** */\n    constructor() {\n      super();\n      this.createdCallback();\n    }\n\n    /**\n     * Called when elements is created. Sets instance vars since there is no\n     * constructor.\n     * @final\n     */\n    createdCallback() {\n      // Flag \"notbuilt\" is removed by Resource manager when the resource is\n      // considered to be built. See \"setBuilt\" method.\n      /** @private {boolean} */\n      this.built_ = false;\n\n      /**\n       * Several APIs require the element to be connected to the DOM tree, but\n       * the CustomElement lifecycle APIs are async. This lead to subtle bugs\n       * that require state tracking. See #12849, https://crbug.com/821195, and\n       * https://bugs.webkit.org/show_bug.cgi?id=180940.\n       * @private {boolean}\n       */\n      this.isConnected_ = false;\n\n      /** @private {?Promise} */\n      this.buildingPromise_ = null;\n\n      /**\n       * Indicates that the `mountCallback()` has been called and it hasn't\n       * been reversed with an `unmountCallback()` call.\n       * @private {boolean}\n       */\n      this.mounted_ = false;\n\n      /** @private {?Promise} */\n      this.mountPromise_ = null;\n\n      /** @private {?AbortController} */\n      this.mountAbortController_ = null;\n\n      /** @private {!ReadyState} */\n      this.readyState_ = ReadyState.UPGRADING;\n\n      /** @type {boolean} */\n      this.everAttached = false;\n\n      /**\n       * Ampdoc can only be looked up when an element is attached.\n       * @private {?./service/ampdoc-impl.AmpDoc}\n       */\n      this.ampdoc_ = null;\n\n      /**\n       * Resources can only be looked up when an element is attached.\n       * @private {?./service/resources-interface.ResourcesInterface}\n       */\n      this.resources_ = null;\n\n      /** @private {!Layout} */\n      this.layout_ = Layout.NODISPLAY;\n\n      /** @private {number} */\n      this.layoutCount_ = 0;\n\n      /** @private {boolean} */\n      this.isFirstLayoutCompleted_ = false;\n\n      /** @public {boolean} */\n      this.warnOnMissingOverflow = true;\n\n      /**\n       * This element can be assigned by the {@link applyStaticLayout} to a\n       * child element that will be used to size this element.\n       * @package {?Element|undefined}\n       */\n      this.sizerElement = undefined;\n\n      /** @private {?Element|undefined} */\n      this.overflowElement_ = undefined;\n\n      /**\n       * The time at which this element was scheduled for layout relative to\n       * the epoch. This value will be set to 0 until the this element has been\n       * scheduled.\n       * Note that this value may change over time if the element is enqueued,\n       * then dequeued and re-enqueued by the scheduler.\n       * @type {number|undefined}\n       */\n      this.layoutScheduleTime = undefined;\n\n      // Closure compiler appears to mark HTMLElement as @struct which\n      // disables bracket access. Force this with a type coercion.\n      const nonStructThis = /** @type {!Object} */ (this);\n\n      // `opt_implementationClass` is only used for tests.\n      /** @type {?(typeof ../base-element.BaseElement)} */\n      let Ctor =\n        win.__AMP_EXTENDED_ELEMENTS &&\n        win.__AMP_EXTENDED_ELEMENTS[this.localName];\n      if (getMode().test && nonStructThis['implementationClassForTesting']) {\n        Ctor = nonStructThis['implementationClassForTesting'];\n      }\n\n      /** @private {?(typeof ../base-element.BaseElement)} */\n      this.implClass_ = Ctor === ElementStub ? null : Ctor || null;\n\n      if (!this.implClass_) {\n        stubbedElements.push(this);\n      }\n\n      /** @private {?./base-element.BaseElement} */\n      this.impl_ = null;\n\n      /**\n       * An element always starts in a unupgraded state until it's added to DOM\n       * for the first time in which case it can be upgraded immediately or wait\n       * for script download or `upgradeCallback`.\n       * @private {!UpgradeState}\n       */\n      this.upgradeState_ = UpgradeState.NOT_UPGRADED;\n\n      /**\n       * Time delay imposed by baseElement upgradeCallback.  If no\n       * upgradeCallback specified or not yet executed, delay is 0.\n       * @private {number}\n       */\n      this.upgradeDelayMs_ = 0;\n\n      /**\n       * Action queue is initially created and kept around until the element\n       * is ready to send actions directly to the implementation.\n       * - undefined initially\n       * - array if used\n       * - null after unspun\n       * @private {?Array<!./service/action-impl.ActionInvocation>|undefined}\n       */\n      this.actionQueue_ = undefined;\n\n      /**\n       * Whether the element is in the template.\n       * @private {boolean|undefined}\n       */\n      this.isInTemplate_ = undefined;\n\n      /** @private @const */\n      this.signals_ = new Signals();\n\n      if (this.implClass_) {\n        this.signals_.signal(CommonSignals.READY_TO_UPGRADE);\n      }\n\n      const perf = Services.performanceForOrNull(win);\n      /** @private {boolean} */\n      this.perfOn_ = perf && perf.isPerformanceTrackingOn();\n\n      /** @private {?MediaQueryProps} */\n      this.mediaQueryProps_ = null;\n\n      if (nonStructThis[UPGRADE_TO_CUSTOMELEMENT_RESOLVER]) {\n        nonStructThis[UPGRADE_TO_CUSTOMELEMENT_RESOLVER](nonStructThis);\n        delete nonStructThis[UPGRADE_TO_CUSTOMELEMENT_RESOLVER];\n        delete nonStructThis[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n      }\n    }\n\n    /** @return {!ReadyState} */\n    get readyState() {\n      return this.readyState_;\n    }\n\n    /** @return {!Signals} */\n    signals() {\n      return this.signals_;\n    }\n\n    /**\n     * Returns the associated ampdoc. Only available after attachment. It throws\n     * exception before the element is attached.\n     * @return {!./service/ampdoc-impl.AmpDoc}\n     * @final\n     * @package\n     */\n    getAmpDoc() {\n      devAssert(this.ampdoc_, 'no ampdoc yet, since element is not attached');\n      return /** @type {!./service/ampdoc-impl.AmpDoc} */ (this.ampdoc_);\n    }\n\n    /**\n     * Returns Resources manager. Only available after attachment. It throws\n     * exception before the element is attached.\n     * @return {!./service/resources-interface.ResourcesInterface}\n     * @final\n     * @package\n     */\n    getResources() {\n      devAssert(\n        this.resources_,\n        'no resources yet, since element is not attached'\n      );\n      return /** @type {!./service/resources-interface.ResourcesInterface} */ (\n        this.resources_\n      );\n    }\n\n    /**\n     * Whether the element has been upgraded yet. Always returns false when\n     * the element has not yet been added to DOM. After the element has been\n     * added to DOM, the value depends on the `BaseElement` implementation and\n     * its `upgradeElement` callback.\n     * @return {boolean}\n     * @final\n     */\n    isUpgraded() {\n      return this.upgradeState_ == UpgradeState.UPGRADED;\n    }\n\n    /** @return {!Promise} */\n    whenUpgraded() {\n      return this.signals_.whenSignal(CommonSignals.UPGRADED);\n    }\n\n    /**\n     * Upgrades the element to the provided new implementation. If element\n     * has already been attached, it's layout validation and attachment flows\n     * are repeated for the new implementation.\n     * @param {typeof ./base-element.BaseElement} newImplClass\n     * @final @package\n     */\n    upgrade(newImplClass) {\n      if (this.isInTemplate_) {\n        return;\n      }\n      if (this.upgradeState_ != UpgradeState.NOT_UPGRADED) {\n        // Already upgraded or in progress or failed.\n        return;\n      }\n\n      this.implClass_ = newImplClass;\n      this.signals_.signal(CommonSignals.READY_TO_UPGRADE);\n      if (this.everAttached) {\n        // Usually, we do an implementation upgrade when the element is\n        // attached to the DOM. But, if it hadn't yet upgraded from\n        // ElementStub, we couldn't. Now that it's upgraded from a stub, go\n        // ahead and do the full upgrade.\n        this.upgradeOrSchedule_();\n      }\n    }\n\n    /**\n     * When the document is ready (meaning all external resources are loaded or\n     * failed), we mark any stubbed elements as unresolved. If they haven't\n     * been upgraded yet (or pending upgrade or deferredBuild elements), then\n     * the extension failed to load.\n     */\n    markUnresolved() {\n      if (!this.implClass_) {\n        this.classList.add('amp-unresolved', 'i-amphtml-unresolved');\n      }\n    }\n\n    /**\n     * Time delay imposed by baseElement upgradeCallback.  If no\n     * upgradeCallback specified or not yet executed, delay is 0.\n     * @return {number}\n     */\n    getUpgradeDelayMs() {\n      return this.upgradeDelayMs_;\n    }\n\n    /**\n     * Completes the upgrade of the element with the provided implementation.\n     * @param {!./base-element.BaseElement} newImpl\n     * @param {number} upgradeStartTime\n     * @final @private\n     */\n    completeUpgrade_(newImpl, upgradeStartTime) {\n      this.impl_ = newImpl;\n      this.upgradeDelayMs_ = win.Date.now() - upgradeStartTime;\n      this.upgradeState_ = UpgradeState.UPGRADED;\n      this.setReadyStateInternal(ReadyState.BUILDING);\n      this.classList.remove('amp-unresolved', 'i-amphtml-unresolved');\n      this.assertLayout_();\n      this.dispatchCustomEventForTesting(AmpEvents.ATTACHED);\n      if (!this.R1()) {\n        this.getResources().upgraded(this);\n      }\n      this.signals_.signal(CommonSignals.UPGRADED);\n    }\n\n    /** @private */\n    assertLayout_() {\n      if (\n        this.layout_ != Layout.NODISPLAY &&\n        this.impl_ &&\n        !this.impl_.isLayoutSupported(this.layout_)\n      ) {\n        userAssert(\n          this.getAttribute('layout'),\n          'The element did not specify a layout attribute. ' +\n            'Check https://amp.dev/documentation/guides-and-tutorials/' +\n            'develop/style_and_layout/control_layout and the respective ' +\n            'element documentation for details.'\n        );\n        userAssert(false, `Layout not supported: ${this.layout_}`);\n      }\n    }\n\n    /**\n     * Get the priority to build the element.\n     * @return {number}\n     */\n    getBuildPriority() {\n      return this.implClass_\n        ? this.implClass_.getBuildPriority(this)\n        : LayoutPriority.BACKGROUND;\n    }\n\n    /**\n     * Get the priority to load the element.\n     * @return {number}\n     * TODO(#31915): remove once R1 migration is complete.\n     */\n    getLayoutPriority() {\n      return this.impl_\n        ? this.impl_.getLayoutPriority()\n        : LayoutPriority.BACKGROUND;\n    }\n\n    /**\n     * Get the default action alias.\n     * @return {?string}\n     */\n    getDefaultActionAlias() {\n      devAssert(\n        this.isUpgraded(),\n        'Cannot get default action alias of unupgraded element'\n      );\n      return this.impl_.getDefaultActionAlias();\n    }\n\n    /** @return {boolean} */\n    isBuilding() {\n      return !!this.buildingPromise_;\n    }\n\n    /**\n     * Whether the element has been built. A built element had its\n     * {@link buildCallback} method successfully invoked.\n     * @return {boolean}\n     * @final\n     */\n    isBuilt() {\n      return this.built_;\n    }\n\n    /**\n     * Returns the promise that's resolved when the element has been built. If\n     * the build fails, the resulting promise is rejected.\n     * @return {!Promise}\n     */\n    whenBuilt() {\n      return this.signals_.whenSignal(CommonSignals.BUILT);\n    }\n\n    /**\n     * Requests or requires the element to be built. The build is done by\n     * invoking {@link BaseElement.buildCallback} method.\n     *\n     * Can only be called on a upgraded element. May only be called from\n     * resource.js to ensure an element and its resource are in sync.\n     *\n     * @return {?Promise}\n     * @final\n     * @restricted\n     */\n    buildInternal() {\n      assertNotTemplate(this);\n      devAssert(this.implClass_, 'Cannot build unupgraded element');\n      if (this.buildingPromise_) {\n        return this.buildingPromise_;\n      }\n\n      this.setReadyStateInternal(ReadyState.BUILDING);\n\n      // Create the instance.\n      const implPromise = this.createImpl_();\n      this.getSizer_();\n\n      // Wait for consent.\n      const consentPromise = implPromise.then(() => {\n        const policyId = this.getConsentPolicy_();\n        const purposeConsents = !policyId ? this.getPurposesConsent_() : null;\n        if (!policyId && !purposeConsents) {\n          return;\n        }\n        // Must have policyId or granularExp w/ purposeConsents\n        return Services.consentPolicyServiceForDocOrNull(this)\n          .then((policy) => {\n            if (!policy) {\n              return true;\n            }\n            return policyId\n              ? policy.whenPolicyUnblock(policyId)\n              : policy.whenPurposesUnblock(purposeConsents);\n          })\n          .then((shouldUnblock) => {\n            if (!shouldUnblock) {\n              throw blockedByConsentError();\n            }\n          });\n      });\n\n      // Build callback.\n      const buildPromise = consentPromise.then(() =>\n        devAssert(this.impl_).buildCallback()\n      );\n\n      // Build the element.\n      return (this.buildingPromise_ = buildPromise.then(\n        () => {\n          this.built_ = true;\n          this.classList.add('i-amphtml-built');\n          this.classList.remove('i-amphtml-notbuilt', 'amp-notbuilt');\n          this.signals_.signal(CommonSignals.BUILT);\n\n          if (this.R1()) {\n            this.setReadyStateInternal(\n              this.readyState_ != ReadyState.BUILDING\n                ? this.readyState_\n                : ReadyState.MOUNTING\n            );\n          } else {\n            this.setReadyStateInternal(ReadyState.LOADING);\n            this.preconnect(/* onLayout */ false);\n          }\n\n          if (this.isConnected_) {\n            this.connected_();\n          }\n\n          if (this.actionQueue_) {\n            // Only schedule when the queue is not empty, which should be\n            // the case 99% of the time.\n            Services.timerFor(getWin(this)).delay(\n              this.dequeueActions_.bind(this),\n              1\n            );\n          }\n          if (!this.getPlaceholder()) {\n            const placeholder = this.createPlaceholder();\n            if (placeholder) {\n              this.appendChild(placeholder);\n            }\n          }\n        },\n        (reason) => {\n          this.signals_.rejectSignal(\n            CommonSignals.BUILT,\n            /** @type {!Error} */ (reason)\n          );\n\n          if (this.R1()) {\n            this.setReadyStateInternal(ReadyState.ERROR, reason);\n          }\n\n          if (!isBlockedByConsent(reason)) {\n            reportError(reason, this);\n          }\n          throw reason;\n        }\n      ));\n    }\n\n    /**\n     * @return {!Promise}\n     */\n    build() {\n      if (this.buildingPromise_) {\n        return this.buildingPromise_;\n      }\n\n      const readyPromise = this.signals_.whenSignal(\n        CommonSignals.READY_TO_UPGRADE\n      );\n      return readyPromise.then(() => {\n        if (this.R1()) {\n          const scheduler = getSchedulerForDoc(this.getAmpDoc());\n          scheduler.scheduleAsap(this);\n        }\n        return this.whenBuilt();\n      });\n    }\n\n    /**\n     * Mounts the element by calling the `BaseElement.mountCallback` method.\n     *\n     * Can only be called on a upgraded element. May only be called from\n     * scheduler.js.\n     *\n     * @return {!Promise}\n     * @final\n     * @restricted\n     */\n    mountInternal() {\n      if (this.mountPromise_) {\n        return this.mountPromise_;\n      }\n      this.mountAbortController_ =\n        this.mountAbortController_ || new AbortController();\n      const {signal} = this.mountAbortController_;\n      return (this.mountPromise_ = this.buildInternal()\n        .then(() => {\n          devAssert(this.R1());\n          if (signal.aborted) {\n            // Mounting has been canceled.\n            return;\n          }\n          this.setReadyStateInternal(\n            this.readyState_ != ReadyState.MOUNTING\n              ? this.readyState_\n              : this.implClass_.usesLoading(this)\n              ? ReadyState.LOADING\n              : ReadyState.MOUNTING\n          );\n          this.mounted_ = true;\n          const result = this.impl_.mountCallback(signal);\n          // The promise supports the V0 format for easy migration. If the\n          // `mountCallback` returns a promise, the assumption is that the\n          // element has finished loading when the promise completes.\n          return result ? result.then(RETURN_TRUE) : false;\n        })\n        .then((hasLoaded) => {\n          this.mountAbortController_ = null;\n          if (signal.aborted) {\n            throw cancellation();\n          }\n          this.signals_.signal(CommonSignals.MOUNTED);\n          if (!this.implClass_.usesLoading(this) || hasLoaded) {\n            this.setReadyStateInternal(ReadyState.COMPLETE);\n          }\n        })\n        .catch((reason) => {\n          this.mountAbortController_ = null;\n          if (isCancellation(reason)) {\n            this.mountPromise_ = null;\n          } else {\n            this.signals_.rejectSignal(\n              CommonSignals.MOUNTED,\n              /** @type {!Error} */ (reason)\n            );\n            this.setReadyStateInternal(ReadyState.ERROR, reason);\n          }\n          throw reason;\n        }));\n    }\n\n    /**\n     * Requests the element to be mounted as soon as possible.\n     * @return {!Promise}\n     * @final\n     */\n    mount() {\n      if (this.mountPromise_) {\n        return this.mountPromise_;\n      }\n\n      // Create the abort controller right away to ensure that we the unmount\n      // will properly cancel this operation.\n      this.mountAbortController_ =\n        this.mountAbortController_ || new AbortController();\n      const {signal} = this.mountAbortController_;\n\n      const readyPromise = this.signals_.whenSignal(\n        CommonSignals.READY_TO_UPGRADE\n      );\n      return readyPromise.then(() => {\n        if (!this.R1()) {\n          return this.whenBuilt();\n        }\n        if (signal.aborted) {\n          throw cancellation();\n        }\n        const scheduler = getSchedulerForDoc(this.getAmpDoc());\n        scheduler.scheduleAsap(this);\n        return this.whenMounted();\n      });\n    }\n\n    /**\n     * Unmounts the element and makes it ready for the next mounting\n     * operation.\n     * @final\n     */\n    unmount() {\n      // Ensure that the element is paused.\n      if (this.isConnected_) {\n        this.pause();\n      }\n\n      // Legacy R0 elements simply unlayout.\n      if (!this.R1()) {\n        this.unlayout_();\n        return;\n      }\n\n      // Cancel the currently mounting operation.\n      if (this.mountAbortController_) {\n        this.mountAbortController_.abort();\n        this.mountAbortController_ = null;\n      }\n\n      // Unschedule a currently pending mount request.\n      const scheduler = getSchedulerForDoc(this.getAmpDoc());\n      scheduler.unschedule(this);\n\n      // Try to unmount if the element has been built already.\n      if (this.mounted_) {\n        this.impl_.unmountCallback();\n      }\n\n      // Complete unmount and reset the state.\n      this.mounted_ = false;\n      this.mountPromise_ = null;\n      this.reset_();\n\n      // Prepare for the next mount if the element is connected.\n      if (this.isConnected_) {\n        this.upgradeOrSchedule_(/* opt_disablePreload */ true);\n      }\n    }\n\n    /**\n     * Returns the promise that's resolved when the element has been mounted. If\n     * the mount fails, the resulting promise is rejected.\n     * @return {!Promise}\n     */\n    whenMounted() {\n      return this.signals_.whenSignal(CommonSignals.MOUNTED);\n    }\n\n    /**\n     * @return {!Promise}\n     * @final\n     */\n    whenLoaded() {\n      return this.signals_.whenSignal(CommonSignals.LOAD_END);\n    }\n\n    /**\n     * Ensure that the element is eagerly loaded.\n     *\n     * @param {number=} opt_parentPriority\n     * @return {!Promise}\n     * @final\n     */\n    ensureLoaded(opt_parentPriority) {\n      return this.mount().then(() => {\n        if (this.R1()) {\n          if (this.implClass_.usesLoading(this)) {\n            this.impl_.ensureLoaded();\n          }\n          return this.whenLoaded();\n        }\n\n        // Very ugly! The \"built\" signal must be resolved from the Resource\n        // and not the element itself because the Resource has not correctly\n        // set its state for the downstream to process it correctly.\n        const resource = this.getResource_();\n        return resource.whenBuilt().then(() => {\n          if (resource.getState() == ResourceState.LAYOUT_COMPLETE) {\n            return;\n          }\n          if (\n            resource.getState() != ResourceState.LAYOUT_SCHEDULED ||\n            resource.isMeasureRequested()\n          ) {\n            resource.measure();\n          }\n          if (!resource.isDisplayed()) {\n            return;\n          }\n          this.getResources().scheduleLayoutOrPreload(\n            resource,\n            /* layout */ true,\n            opt_parentPriority,\n            /* forceOutsideViewport */ true\n          );\n          return this.whenLoaded();\n        });\n      });\n    }\n\n    /**\n     * See `BaseElement.setAsContainer`.\n     *\n     * @param {!Element=} opt_scroller A child of the container that should be\n     * monitored. Typically a scrollable element.\n     * @restricted\n     * @final\n     */\n    setAsContainerInternal(opt_scroller) {\n      const builder = getSchedulerForDoc(this.getAmpDoc());\n      builder.setContainer(this, opt_scroller);\n    }\n\n    /**\n     * See `BaseElement.removeAsContainer`.\n     * @restricted\n     * @final\n     */\n    removeAsContainerInternal() {\n      const builder = getSchedulerForDoc(this.getAmpDoc());\n      builder.removeContainer(this);\n    }\n\n    /**\n     * Update the internal ready state.\n     *\n     * @param {!ReadyState} state\n     * @param {*=} opt_failure\n     * @protected\n     * @final\n     */\n    setReadyStateInternal(state, opt_failure) {\n      if (state === this.readyState_) {\n        return;\n      }\n\n      this.readyState_ = state;\n\n      if (!this.R1()) {\n        return;\n      }\n\n      switch (state) {\n        case ReadyState.LOADING:\n          this.signals_.signal(CommonSignals.LOAD_START);\n          this.signals_.reset(CommonSignals.UNLOAD);\n          this.signals_.reset(CommonSignals.LOAD_END);\n          this.classList.add('i-amphtml-layout');\n          // Potentially start the loading indicator.\n          this.toggleLoading(true);\n          this.dispatchCustomEventForTesting(AmpEvents.LOAD_START);\n          return;\n        case ReadyState.COMPLETE:\n          // LOAD_START is set just in case. It won't be overwritten if\n          // it had been set before.\n          this.signals_.signal(CommonSignals.LOAD_START);\n          this.signals_.signal(CommonSignals.LOAD_END);\n          this.signals_.reset(CommonSignals.UNLOAD);\n          this.classList.add('i-amphtml-layout');\n          this.toggleLoading(false);\n          dom.dispatchCustomEvent(this, 'load', null, NO_BUBBLES);\n          this.dispatchCustomEventForTesting(AmpEvents.LOAD_END);\n          return;\n        case ReadyState.ERROR:\n          this.signals_.rejectSignal(\n            CommonSignals.LOAD_END,\n            /** @type {!Error} */ (opt_failure)\n          );\n          this.toggleLoading(false);\n          dom.dispatchCustomEvent(this, 'error', opt_failure, NO_BUBBLES);\n          return;\n      }\n    }\n\n    /**\n     * Called to instruct the element to preconnect to hosts it uses during\n     * layout.\n     * @param {boolean} onLayout Whether this was called after a layout.\n     * TODO(#31915): remove once R1 migration is complete.\n     */\n    preconnect(onLayout) {\n      devAssert(this.isUpgraded());\n      if (onLayout) {\n        this.impl_.preconnectCallback(onLayout);\n      } else {\n        // If we do early preconnects we delay them a bit. This is kind of\n        // an unfortunate trade off, but it seems faster, because the DOM\n        // operations themselves are not free and might delay\n        startupChunk(this.getAmpDoc(), () => {\n          if (!this.ownerDocument || !this.ownerDocument.defaultView) {\n            return;\n          }\n          this.impl_.preconnectCallback(onLayout);\n        });\n      }\n    }\n\n    /**\n     * See `BaseElement.R1()`.\n     *\n     * @return {boolean}\n     * @final\n     */\n    R1() {\n      return this.implClass_ ? this.implClass_.R1() : false;\n    }\n\n    /**\n     * See `BaseElement.deferredMount()`.\n     *\n     * @return {boolean}\n     * @final\n     */\n    deferredMount() {\n      return this.implClass_ ? this.implClass_.deferredMount(this) : false;\n    }\n\n    /**\n     * Whether the custom element declares that it has to be fixed.\n     * @return {boolean}\n     */\n    isAlwaysFixed() {\n      return this.impl_ ? this.impl_.isAlwaysFixed() : false;\n    }\n\n    /**\n     * Updates the layout box of the element.\n     * Should only be called by Resources.\n     * @param {!./layout-rect.LayoutRectDef} layoutBox\n     * @param {boolean} sizeChanged\n     */\n    updateLayoutBox(layoutBox, sizeChanged = false) {\n      if (this.isBuilt()) {\n        this.onMeasure(sizeChanged);\n      }\n    }\n\n    /**\n     * Calls onLayoutMeasure() on the BaseElement implementation.\n     * Should only be called by Resources.\n     */\n    onMeasure() {\n      devAssert(this.isBuilt());\n      try {\n        this.impl_.onLayoutMeasure();\n      } catch (e) {\n        reportError(e, this);\n      }\n    }\n\n    /**\n     * @return {?Element}\n     * @private\n     */\n    getSizer_() {\n      if (\n        this.sizerElement === undefined &&\n        (this.layout_ === Layout.RESPONSIVE ||\n          this.layout_ === Layout.INTRINSIC)\n      ) {\n        // Expect sizer to exist, just not yet discovered.\n        this.sizerElement = this.querySelector('i-amphtml-sizer');\n        this.sizerElement?.setAttribute('slot', 'i-amphtml-svc');\n      }\n      return this.sizerElement || null;\n    }\n\n    /**\n     * @param {Element} sizer\n     * @private\n     */\n    resetSizer_(sizer) {\n      if (this.layout_ === Layout.RESPONSIVE) {\n        setStyle(sizer, 'paddingTop', '0');\n        return;\n      }\n      if (this.layout_ === Layout.INTRINSIC) {\n        const intrinsicSizerImg = sizer.querySelector(\n          '.i-amphtml-intrinsic-sizer'\n        );\n        if (!intrinsicSizerImg) {\n          return;\n        }\n        intrinsicSizerImg.setAttribute('src', '');\n        return;\n      }\n    }\n\n    /** @private */\n    initMediaAttrs_() {\n      const hasMediaAttrs =\n        this.hasAttribute('media') ||\n        (this.hasAttribute('sizes') &&\n          !this.hasAttribute('disable-inline-width')) ||\n        this.hasAttribute('heights');\n      const hadMediaAttrs = !!this.mediaQueryProps_;\n      const win = this.ownerDocument.defaultView;\n      if (hasMediaAttrs != hadMediaAttrs && win) {\n        if (hasMediaAttrs) {\n          this.mediaQueryProps_ = new MediaQueryProps(win, () =>\n            this.applyMediaAttrs_()\n          );\n          this.applyMediaAttrs_();\n        } else {\n          this.disposeMediaAttrs_();\n        }\n      }\n    }\n\n    /** @private */\n    disposeMediaAttrs_() {\n      if (this.mediaQueryProps_) {\n        this.mediaQueryProps_.dispose();\n        this.mediaQueryProps_ = null;\n      }\n    }\n\n    /** @private */\n    applyMediaAttrs_() {\n      const props = this.mediaQueryProps_;\n      if (!props) {\n        return;\n      }\n\n      props.start();\n\n      // Media query.\n      const mediaAttr = this.getAttribute('media') || null;\n      const matchesMedia = mediaAttr\n        ? props.resolveMatchQuery(mediaAttr)\n        : true;\n      this.classList.toggle('i-amphtml-hidden-by-media-query', !matchesMedia);\n\n      // Sizes.\n      const sizesAttr = this.hasAttribute('disable-inline-width')\n        ? null\n        : this.getAttribute('sizes');\n      if (sizesAttr) {\n        setStyle(this, 'width', props.resolveListQuery(sizesAttr));\n      }\n\n      // Heights.\n      const heightsAttr =\n        this.layout_ === Layout.RESPONSIVE\n          ? this.getAttribute('heights')\n          : null;\n      if (heightsAttr) {\n        const sizer = this.getSizer_();\n        if (sizer) {\n          setStyle(sizer, 'paddingTop', props.resolveListQuery(heightsAttr));\n        }\n      }\n\n      props.complete();\n      this.getResource_().requestMeasure();\n    }\n\n    /**\n     * Applies a size change to the element.\n     *\n     * This method is called by Resources and shouldn't be called by anyone\n     * else. This method must always be called in the mutation context.\n     *\n     * @param {number|undefined} newHeight\n     * @param {number|undefined} newWidth\n     * @param {!./layout-rect.LayoutMarginsDef=} opt_newMargins\n     * @final\n     * @package\n     */\n    applySize(newHeight, newWidth, opt_newMargins) {\n      const sizer = this.getSizer_();\n      if (sizer) {\n        // From the moment height is changed the element becomes fully\n        // responsible for managing its height. Aspect ratio is no longer\n        // preserved.\n        this.sizerElement = null;\n        this.resetSizer_(sizer);\n        this.mutateOrInvoke_(() => {\n          if (sizer) {\n            dom.removeElement(sizer);\n          }\n        });\n      }\n      if (newHeight !== undefined) {\n        setStyle(this, 'height', newHeight, 'px');\n      }\n      if (newWidth !== undefined) {\n        setStyle(this, 'width', newWidth, 'px');\n      }\n      if (opt_newMargins) {\n        if (opt_newMargins.top != null) {\n          setStyle(this, 'marginTop', opt_newMargins.top, 'px');\n        }\n        if (opt_newMargins.right != null) {\n          setStyle(this, 'marginRight', opt_newMargins.right, 'px');\n        }\n        if (opt_newMargins.bottom != null) {\n          setStyle(this, 'marginBottom', opt_newMargins.bottom, 'px');\n        }\n        if (opt_newMargins.left != null) {\n          setStyle(this, 'marginLeft', opt_newMargins.left, 'px');\n        }\n      }\n      if (this.isAwaitingSize_()) {\n        this.sizeProvided_();\n      }\n      dom.dispatchCustomEvent(this, AmpEvents.SIZE_CHANGED);\n    }\n\n    /**\n     * Called when the element is first connected to the DOM.\n     *\n     * This callback is guarded by checks to see if the element is still\n     * connected.  Chrome and Safari can trigger connectedCallback even when\n     * the node is disconnected. See #12849, https://crbug.com/821195, and\n     * https://bugs.webkit.org/show_bug.cgi?id=180940. Thankfully,\n     * connectedCallback will later be called when the disconnected root is\n     * connected to the document tree.\n     *\n     * @final\n     */\n    connectedCallback() {\n      if (!isTemplateTagSupported() && this.isInTemplate_ === undefined) {\n        this.isInTemplate_ = !!query.closestAncestorElementBySelector(\n          this,\n          'template'\n        );\n      }\n      if (this.isInTemplate_) {\n        return;\n      }\n\n      if (this.isConnected_ || !dom.isConnectedNode(this)) {\n        return;\n      }\n      this.isConnected_ = true;\n\n      if (!this.everAttached) {\n        this.classList.add(\n          'i-amphtml-element',\n          'i-amphtml-notbuilt',\n          'amp-notbuilt'\n        );\n      }\n\n      if (!this.ampdoc_) {\n        // Ampdoc can now be initialized.\n        const win = getWin(this);\n        const ampdocService = Services.ampdocServiceFor(win);\n        const ampdoc = ampdocService.getAmpDoc(this);\n        this.ampdoc_ = ampdoc;\n        elementConnectedCallback(ampdoc, this, this.implClass_);\n      }\n      if (!this.resources_) {\n        // Resources can now be initialized since the ampdoc is now available.\n        this.resources_ = Services.resourcesForDoc(this.ampdoc_);\n      }\n      this.getResources().add(this);\n\n      if (this.everAttached) {\n        const reconstruct = this.reconstructWhenReparented();\n        if (reconstruct) {\n          this.reset_();\n        }\n        if (this.isUpgraded()) {\n          if (reconstruct && !this.R1()) {\n            this.getResources().upgraded(this);\n          }\n          this.connected_();\n          this.dispatchCustomEventForTesting(AmpEvents.ATTACHED);\n        }\n        if (this.implClass_ && this.R1()) {\n          this.upgradeOrSchedule_();\n        }\n      } else {\n        this.everAttached = true;\n\n        try {\n          this.layout_ = applyStaticLayout(this);\n          this.initMediaAttrs_();\n        } catch (e) {\n          reportError(e, this);\n        }\n\n        if (this.implClass_) {\n          this.upgradeOrSchedule_();\n        } else if (\n          unresolvableExtensions.has('*') ||\n          unresolvableExtensions.has(this.tagName.toLowerCase())\n        ) {\n          this.markUnresolved();\n        }\n\n        if (!this.isUpgraded()) {\n          this.dispatchCustomEventForTesting(AmpEvents.STUBBED);\n        }\n      }\n\n      this.toggleLoading(true);\n    }\n\n    /**\n     * @return {boolean}\n     * @private\n     */\n    isAwaitingSize_() {\n      return this.classList.contains('i-amphtml-layout-awaiting-size');\n    }\n\n    /**\n     * @private\n     */\n    sizeProvided_() {\n      this.classList.remove('i-amphtml-layout-awaiting-size');\n    }\n\n    /**\n     * Upgrade or schedule element based on R1.\n     * @param {boolean=} opt_disablePreload\n     * @private @final\n     */\n    upgradeOrSchedule_(opt_disablePreload) {\n      if (!this.R1()) {\n        this.tryUpgrade_();\n        return;\n      }\n\n      if (this.mountPromise_) {\n        // Already mounting.\n        return;\n      }\n\n      // Schedule build and mount.\n      const scheduler = getSchedulerForDoc(this.getAmpDoc());\n      scheduler.schedule(this);\n      this.classList.remove('amp-unresolved', 'i-amphtml-unresolved');\n\n      if (this.buildingPromise_) {\n        // Already built or building: just needs to be mounted.\n        this.setReadyStateInternal(\n          this.implClass_ && this.implClass_.usesLoading(this)\n            ? ReadyState.LOADING\n            : ReadyState.MOUNTING\n        );\n      } else {\n        // Not built yet: execute prebuild steps.\n        this.setReadyStateInternal(ReadyState.BUILDING);\n\n        // Schedule preconnects.\n        if (!opt_disablePreload) {\n          const urls = this.implClass_.getPreconnects(this);\n          if (urls && urls.length > 0) {\n            // If we do early preconnects we delay them a bit. This is kind of\n            // an unfortunate trade off, but it seems faster, because the DOM\n            // operations themselves are not free and might delay\n            const ampdoc = this.getAmpDoc();\n            startupChunk(ampdoc, () => {\n              const {win} = ampdoc;\n              if (!win) {\n                return;\n              }\n              const preconnect = Services.preconnectFor(win);\n              urls.forEach((url) =>\n                preconnect.url(ampdoc, url, /* alsoConnecting */ false)\n              );\n            });\n          }\n        }\n      }\n    }\n\n    /**\n     * Try to upgrade the element with the provided implementation.\n     * @return {!Promise|undefined}\n     * @private @final\n     */\n    tryUpgrade_() {\n      if (this.isInTemplate_) {\n        return;\n      }\n      if (this.upgradeState_ != UpgradeState.NOT_UPGRADED) {\n        // Already upgraded or in progress or failed.\n        return;\n      }\n\n      const Ctor = devAssert(\n        this.implClass_,\n        'Implementation must not be a stub'\n      );\n\n      const impl = new Ctor(this);\n\n      // The `upgradeCallback` only allows redirect once for the top-level\n      // non-stub class. We may allow nested upgrades later, but they will\n      // certainly be bad for performance.\n      this.upgradeState_ = UpgradeState.UPGRADE_IN_PROGRESS;\n      const startTime = win.Date.now();\n      const res = impl.upgradeCallback();\n      if (!res) {\n        // Nothing returned: the current object is the upgraded version.\n        this.completeUpgrade_(impl, startTime);\n      } else if (typeof res.then == 'function') {\n        // It's a promise: wait until it's done.\n        return res\n          .then((upgrade) => {\n            this.completeUpgrade_(upgrade || impl, startTime);\n          })\n          .catch((reason) => {\n            this.upgradeState_ = UpgradeState.UPGRADE_FAILED;\n            rethrowAsync(reason);\n          });\n      } else {\n        // It's an actual instance: upgrade immediately.\n        this.completeUpgrade_(\n          /** @type {!./base-element.BaseElement} */ (res),\n          startTime\n        );\n      }\n    }\n\n    /**\n     * Called when the element is disconnected from the DOM.\n     *\n     * @final\n     */\n    disconnectedCallback() {\n      this.disconnect(/* pretendDisconnected */ false);\n    }\n\n    /** @private */\n    connected_() {\n      if (this.built_) {\n        this.impl_.attachedCallback();\n      }\n    }\n\n    /**\n     * Called when an element is disconnected from DOM, or when an ampDoc is\n     * being disconnected (the element itself may still be connected to ampDoc).\n     *\n     * This callback is guarded by checks to see if the element is still\n     * connected. See #12849, https://crbug.com/821195, and\n     * https://bugs.webkit.org/show_bug.cgi?id=180940.\n     * If the element is still connected to the document, you'll need to pass\n     * opt_pretendDisconnected.\n     *\n     * @param {boolean} pretendDisconnected Forces disconnection regardless\n     *     of DOM isConnected.\n     */\n    disconnect(pretendDisconnected) {\n      if (this.isInTemplate_ || !this.isConnected_) {\n        return;\n      }\n      if (!pretendDisconnected && dom.isConnectedNode(this)) {\n        return;\n      }\n\n      // This path only comes from Resource#disconnect, which deletes the\n      // Resource instance tied to this element. Therefore, it is no longer\n      // an AMP Element. But, DOM queries for i-amphtml-element assume that\n      // the element is tied to a Resource.\n      if (pretendDisconnected) {\n        this.classList.remove('i-amphtml-element');\n      }\n\n      this.isConnected_ = false;\n      this.getResources().remove(this);\n      if (this.impl_) {\n        this.impl_.detachedCallback();\n      }\n      if (this.R1()) {\n        this.unmount();\n      }\n      this.toggleLoading(false);\n      this.disposeMediaAttrs_();\n    }\n\n    /**\n     * Dispatches a custom event only in testing environment.\n     *\n     * @param {string} name\n     * @param {!Object=} opt_data Event data.\n     * @final\n     */\n    dispatchCustomEventForTesting(name, opt_data) {\n      if (!getMode().test) {\n        return;\n      }\n      dom.dispatchCustomEvent(this, name, opt_data);\n    }\n\n    /**\n     * Whether the element can pre-render.\n     * @return {boolean}\n     * @final\n     */\n    prerenderAllowed() {\n      if (this.hasAttribute('noprerender')) {\n        return false;\n      }\n      return this.implClass_ ? this.implClass_.prerenderAllowed(this) : false;\n    }\n\n    /**\n     * Whether the element has render-blocking service.\n     * @return {boolean}\n     * @final\n     */\n    isBuildRenderBlocking() {\n      return this.impl_ ? this.impl_.isBuildRenderBlocking() : false;\n    }\n\n    /**\n     * Creates a placeholder for the element.\n     * @return {?Element}\n     * @final\n     */\n    createPlaceholder() {\n      return this.impl_ ? this.impl_.createPlaceholderCallback() : null;\n    }\n\n    /**\n     * Creates a loader logo.\n     * @return {{\n     *  content: (!Element|undefined),\n     *  color: (string|undefined),\n     * }}\n     * @final\n     */\n    createLoaderLogo() {\n      return this.implClass_\n        ? this.implClass_.createLoaderLogoCallback(this)\n        : {};\n    }\n\n    /**\n     * Whether the element should ever render when it is not in viewport.\n     * @return {boolean|number}\n     * @final\n     */\n    renderOutsideViewport() {\n      return this.impl_ ? this.impl_.renderOutsideViewport() : false;\n    }\n\n    /**\n     * Whether the element should render outside of renderOutsideViewport when\n     * the scheduler is idle.\n     * @return {boolean|number}\n     * @final\n     */\n    idleRenderOutsideViewport() {\n      return this.impl_ ? this.impl_.idleRenderOutsideViewport() : false;\n    }\n\n    /**\n     * Returns a previously measured layout box adjusted to the viewport. This\n     * mainly affects fixed-position elements that are adjusted to be always\n     * relative to the document position in the viewport.\n     * @return {!./layout-rect.LayoutRectDef}\n     * @final\n     */\n    getLayoutBox() {\n      return this.getResource_().getLayoutBox();\n    }\n\n    /**\n     * Returns a previously measured layout size.\n     * @return {!./layout-rect.LayoutSizeDef}\n     * @final\n     */\n    getLayoutSize() {\n      return this.getResource_().getLayoutSize();\n    }\n\n    /**\n     * @return {?Element}\n     * @final\n     */\n    getOwner() {\n      return this.getResource_().getOwner();\n    }\n\n    /**\n     * Returns a change entry for that should be compatible with\n     * IntersectionObserverEntry.\n     * @return {?IntersectionObserverEntry} A change entry.\n     * @final\n     */\n    getIntersectionChangeEntry() {\n      const box = this.impl_\n        ? this.impl_.getIntersectionElementLayoutBox()\n        : this.getLayoutBox();\n      const owner = this.getOwner();\n      const viewport = Services.viewportForDoc(this.getAmpDoc());\n      const viewportBox = viewport.getRect();\n      // TODO(jridgewell, #4826): We may need to make this recursive.\n      const ownerBox = owner && owner.getLayoutBox();\n      return getIntersectionChangeEntry(box, ownerBox, viewportBox);\n    }\n\n    /**\n     * Returns the resource of the element.\n     * @return {!./service/resource.Resource}\n     * @private\n     */\n    getResource_() {\n      return this.getResources().getResourceForElement(this);\n    }\n\n    /**\n     * Returns the resource ID of the element.\n     * @return {number}\n     */\n    getResourceId() {\n      return this.getResource_().getId();\n    }\n\n    /**\n     * The runtime calls this method to determine if {@link layoutCallback}\n     * should be called again when layout changes.\n     * @return {boolean}\n     * @package @final\n     * TODO(#31915): remove once R1 migration is complete.\n     */\n    isRelayoutNeeded() {\n      return this.impl_ ? this.impl_.isRelayoutNeeded() : false;\n    }\n\n    /**\n     * Returns reference to upgraded implementation.\n     * @param {boolean} waitForBuild If true, waits for element to be built before\n     *   resolving the returned Promise. Default is true.\n     * @return {!Promise<!./base-element.BaseElement>}\n     */\n    getImpl(waitForBuild = true) {\n      const waitFor = waitForBuild ? this.build() : this.createImpl_();\n      return waitFor.then(() => this.impl_);\n    }\n\n    /**\n     * @return {!Promise<!./base-element.BaseElement>}\n     * @private\n     */\n    createImpl_() {\n      return this.signals_\n        .whenSignal(CommonSignals.READY_TO_UPGRADE)\n        .then(() => {\n          this.tryUpgrade_();\n          return this.whenUpgraded();\n        });\n    }\n\n    /**\n     * Returns the object which holds the API surface (the thing we add the\n     * custom methods/properties onto). In Bento, this is the imperative API\n     * object. In AMP, this is the BaseElement instance.\n     *\n     * @return {!Promise<!Object>}\n     */\n    getApi() {\n      return this.getImpl().then((impl) => impl.getApi());\n    }\n\n    /**\n     * Returns the layout of the element.\n     * @return {!Layout}\n     */\n    getLayout() {\n      return this.layout_;\n    }\n\n    /**\n     * Instructs the element to layout its content and load its resources if\n     * necessary by calling the {@link BaseElement.layoutCallback} method that\n     * should be implemented by BaseElement subclasses. Must return a promise\n     * that will yield when the layout and associated loadings are complete.\n     *\n     * This method is always called for the first layout, but for subsequent\n     * layouts the runtime consults {@link isRelayoutNeeded} method.\n     *\n     * Can only be called on a upgraded and built element.\n     *\n     * @param {!AbortSignal} signal\n     * @return {!Promise}\n     * @package @final\n     * TODO(#31915): remove once R1 migration is complete.\n     */\n    layoutCallback(signal) {\n      assertNotTemplate(this);\n      devAssert(this.isBuilt(), 'Must be built to receive viewport events');\n      // A lot of tests call layoutCallback manually, and don't pass a signal.\n      if ((!getMode().test || signal) && signal.aborted) {\n        return Promise.reject(cancellation());\n      }\n\n      this.dispatchCustomEventForTesting(AmpEvents.LOAD_START);\n      const isLoadEvent = this.layoutCount_ == 0; // First layout is \"load\".\n      this.signals_.reset(CommonSignals.UNLOAD);\n      if (isLoadEvent) {\n        this.signals_.signal(CommonSignals.LOAD_START);\n      }\n\n      // Potentially start the loading indicator.\n      this.toggleLoading(true);\n\n      const promise = tryResolve(() => this.impl_.layoutCallback());\n      this.preconnect(/* onLayout */ true);\n      this.classList.add('i-amphtml-layout');\n\n      return promise.then(\n        () => {\n          if ((!getMode().test || signal) && signal.aborted) {\n            throw cancellation();\n          }\n          if (isLoadEvent) {\n            this.signals_.signal(CommonSignals.LOAD_END);\n          }\n          this.setReadyStateInternal(ReadyState.COMPLETE);\n          this.layoutCount_++;\n          this.toggleLoading(false);\n          // Check if this is the first success layout that needs\n          // to call firstLayoutCompleted.\n          if (!this.isFirstLayoutCompleted_) {\n            this.impl_.firstLayoutCompleted();\n            this.isFirstLayoutCompleted_ = true;\n            this.dispatchCustomEventForTesting(AmpEvents.LOAD_END);\n          }\n        },\n        (reason) => {\n          if ((!getMode().test || signal) && signal.aborted) {\n            throw cancellation();\n          }\n          // add layoutCount_ by 1 despite load fails or not\n          if (isLoadEvent) {\n            this.signals_.rejectSignal(\n              CommonSignals.LOAD_END,\n              /** @type {!Error} */ (reason)\n            );\n          }\n          this.setReadyStateInternal(ReadyState.ERROR, reason);\n          this.layoutCount_++;\n          this.toggleLoading(false);\n          throw reason;\n        }\n      );\n    }\n\n    /**\n     * Pauses the element.\n     *\n     * @package @final\n     */\n    pause() {\n      if (!this.isBuilt()) {\n        // Not built yet.\n        return;\n      }\n\n      this.impl_.pauseCallback();\n\n      // Legacy unlayoutOnPause support.\n      if (!this.R1() && this.impl_.unlayoutOnPause()) {\n        this.unlayout_();\n      }\n    }\n\n    /**\n     * Requests the resource to resume its activity when the document returns\n     * from an inactive state. The scope is up to the actual component. Among\n     * other things the active playback of video or audio content may be\n     * resumed.\n     *\n     * @package @final\n     */\n    resume() {\n      if (!this.isBuilt()) {\n        return;\n      }\n      this.impl_.resumeCallback();\n    }\n\n    /**\n     * Requests the element to unload any expensive resources when the element\n     * goes into non-visible state. The scope is up to the actual component.\n     *\n     * Calling this method on unbuilt or unupgraded element has no effect.\n     *\n     * @return {boolean}\n     * @package @final\n     * TODO(#31915): remove once R1 migration is complete.\n     */\n    unlayoutCallback() {\n      assertNotTemplate(this);\n      if (!this.isBuilt()) {\n        return false;\n      }\n      this.signals_.signal(CommonSignals.UNLOAD);\n      const isReLayoutNeeded = this.impl_.unlayoutCallback();\n      if (isReLayoutNeeded) {\n        this.reset_();\n      }\n      this.dispatchCustomEventForTesting(AmpEvents.UNLOAD);\n      return isReLayoutNeeded;\n    }\n\n    /** @private */\n    unlayout_() {\n      this.getResource_().unlayout();\n      if (this.isConnected_ && this.resources_) {\n        this.resources_./*OK*/ schedulePass();\n      }\n    }\n\n    /** @private */\n    reset_() {\n      this.layoutCount_ = 0;\n      this.isFirstLayoutCompleted_ = false;\n      this.signals_.reset(CommonSignals.MOUNTED);\n      this.signals_.reset(CommonSignals.RENDER_START);\n      this.signals_.reset(CommonSignals.LOAD_START);\n      this.signals_.reset(CommonSignals.LOAD_END);\n      this.signals_.reset(CommonSignals.INI_LOAD);\n    }\n\n    /**\n     * Whether the element needs to be reconstructed after it has been\n     * re-parented. Many elements cannot survive fully the reparenting and\n     * are better to be reconstructed from scratch.\n     *\n     * @return {boolean}\n     * @package @final\n     */\n    reconstructWhenReparented() {\n      return this.impl_ ? this.impl_.reconstructWhenReparented() : false;\n    }\n\n    /**\n     * Collapses the element, and notifies its owner (if there is one) that the\n     * element is no longer present.\n     */\n    collapse() {\n      if (this.impl_) {\n        this.impl_./*OK*/ collapse();\n      }\n    }\n\n    /**\n     * Called every time an owned AmpElement collapses itself.\n     * @param {!AmpElement} element\n     */\n    collapsedCallback(element) {\n      if (this.impl_) {\n        this.impl_.collapsedCallback(element);\n      }\n    }\n\n    /**\n     * Expands the element, and notifies its owner (if there is one) that the\n     * element is now present.\n     */\n    expand() {\n      if (this.impl_) {\n        this.impl_./*OK*/ expand();\n      }\n    }\n\n    /**\n     * Called when one or more attributes are mutated.\n     * Note: Must be called inside a mutate context.\n     * Note: Boolean attributes have a value of `true` and `false` when\n     *     present and missing, respectively.\n     * @param {!JsonObject<string, (null|boolean|string|number|Array|Object)>} mutations\n     */\n    mutatedAttributesCallback(mutations) {\n      if (this.impl_) {\n        this.impl_.mutatedAttributesCallback(mutations);\n      }\n    }\n\n    /**\n     * Enqueues the action with the element. If element has been upgraded and\n     * built, the action is dispatched to the implementation right away.\n     * Otherwise the invocation is enqueued until the implementation is ready\n     * to receive actions.\n     * @param {!./service/action-impl.ActionInvocation} invocation\n     * @final\n     */\n    enqueAction(invocation) {\n      assertNotTemplate(this);\n      if (!this.isBuilt()) {\n        if (this.actionQueue_ === undefined) {\n          this.actionQueue_ = [];\n        }\n        devAssert(this.actionQueue_).push(invocation);\n        // Schedule build sooner.\n        this.build();\n      } else {\n        this.executionAction_(invocation, false);\n      }\n    }\n\n    /**\n     * Dequeues events from the queue and dispatches them to the implementation\n     * with \"deferred\" flag.\n     * @private\n     */\n    dequeueActions_() {\n      if (!this.actionQueue_) {\n        return;\n      }\n\n      const actionQueue = devAssert(this.actionQueue_);\n      this.actionQueue_ = null;\n\n      // Notice, the actions are currently not de-duped.\n      actionQueue.forEach((invocation) => {\n        this.executionAction_(invocation, true);\n      });\n    }\n\n    /**\n     * Executes the action immediately. All errors are consumed and reported.\n     * @param {!./service/action-impl.ActionInvocation} invocation\n     * @param {boolean} deferred\n     * @final\n     * @private\n     */\n    executionAction_(invocation, deferred) {\n      try {\n        this.impl_.executeAction(invocation, deferred);\n      } catch (e) {\n        rethrowAsync(\n          'Action execution failed:',\n          e,\n          invocation.node.tagName,\n          invocation.method\n        );\n      }\n    }\n\n    /**\n     * Get the consent policy to follow.\n     * @return {?string}\n     */\n    getConsentPolicy_() {\n      let policyId = this.getAttribute('data-block-on-consent');\n      if (policyId === null) {\n        if (shouldBlockOnConsentByMeta(this)) {\n          policyId = 'default';\n          this.setAttribute('data-block-on-consent', policyId);\n        } else {\n          // data-block-on-consent attribute not set\n          return null;\n        }\n      }\n      if (policyId == '' || policyId == 'default') {\n        // data-block-on-consent value not set, up to individual element\n        // Note: data-block-on-consent and data-block-on-consent='default' is\n        // treated exactly the same\n        return devAssert(this.impl_).getConsentPolicy();\n      }\n      return policyId;\n    }\n\n    /**\n     * Get the purpose consents that should be granted.\n     * @return {Array<string>|undefined}\n     */\n    getPurposesConsent_() {\n      const purposes =\n        this.getAttribute('data-block-on-consent-purposes') || null;\n      return purposes?.replace(/\\s+/g, '')?.split(',');\n    }\n\n    /**\n     * Returns an optional placeholder element for this custom element.\n     * @return {?Element}\n     * @package @final\n     */\n    getPlaceholder() {\n      return query.lastChildElement(this, (el) => {\n        return (\n          el.hasAttribute('placeholder') &&\n          // Denylist elements that has a native placeholder property\n          // like input and textarea. These are not allowed to be AMP\n          // placeholders.\n          !isInputPlaceholder(el)\n        );\n      });\n    }\n\n    /**\n     * Hides or shows the placeholder, if available.\n     * @param {boolean} show\n     * @package @final\n     */\n    togglePlaceholder(show) {\n      assertNotTemplate(this);\n      if (show) {\n        const placeholder = this.getPlaceholder();\n        if (placeholder) {\n          dev().assertElement(placeholder).classList.remove('amp-hidden');\n        }\n      } else {\n        const placeholders = query.childElementsByAttr(this, 'placeholder');\n        for (let i = 0; i < placeholders.length; i++) {\n          // Don't toggle elements with a native placeholder property\n          // e.g. input, textarea\n          if (isInputPlaceholder(placeholders[i])) {\n            continue;\n          }\n          placeholders[i].classList.add('amp-hidden');\n        }\n      }\n    }\n\n    /**\n     * Returns an optional fallback element for this custom element.\n     * @return {?Element}\n     * @package @final\n     */\n    getFallback() {\n      return query.childElementByAttr(this, 'fallback');\n    }\n\n    /**\n     * Hides or shows the fallback, if available. This function must only\n     * be called inside a mutate context.\n     * @param {boolean} show\n     * @package @final\n     */\n    toggleFallback(show) {\n      assertNotTemplate(this);\n      const resourceState = this.getResource_().getState();\n      // Do not show fallback before layout\n      if (\n        !this.R1() &&\n        show &&\n        (resourceState == ResourceState.NOT_BUILT ||\n          resourceState == ResourceState.NOT_LAID_OUT ||\n          resourceState == ResourceState.READY_FOR_LAYOUT)\n      ) {\n        return;\n      }\n      // This implementation is notably less efficient then placeholder\n      // toggling. The reasons for this are: (a) \"not supported\" is the state of\n      // the whole element, (b) some relayout is expected and (c) fallback\n      // condition would be rare.\n      this.classList.toggle('amp-notsupported', show);\n      if (show == true) {\n        const fallbackElement = this.getFallback();\n        if (fallbackElement) {\n          Services.ownersForDoc(this.getAmpDoc()).scheduleLayout(\n            this,\n            fallbackElement\n          );\n        }\n      }\n    }\n\n    /**\n     * An implementation can call this method to signal to the element that\n     * it has started rendering.\n     * @package @final\n     */\n    renderStarted() {\n      this.signals_.signal(CommonSignals.RENDER_START);\n      this.togglePlaceholder(false);\n      this.toggleLoading(false);\n    }\n\n    /**\n     * Whether the loading can be shown for this element.\n     * @param {boolean} force\n     * @return {boolean}\n     * @private\n     */\n    isLoadingEnabled_(force) {\n      // No loading indicator will be shown if either one of these conditions\n      // true:\n      // 1. The document is A4A.\n      // 2. `noloading` attribute is specified;\n      // 3. The element has already been laid out, and does not support reshowing the indicator (include having loading\n      //    error);\n      // 4. The element is too small or has not yet been measured;\n      // 5. The element has not been allowlisted;\n      // 6. The element is an internal node (e.g. `placeholder` or `fallback`);\n      // 7. The element's layout is not nodisplay.\n\n      const laidOut =\n        this.layoutCount_ > 0 || this.signals_.get(CommonSignals.RENDER_START);\n      if (\n        this.layout_ == Layout.NODISPLAY ||\n        this.hasAttribute('noloading') ||\n        (laidOut && !force) ||\n        !isLoadingAllowed(this) ||\n        query.isInternalOrServiceNode(this)\n      ) {\n        return false;\n      }\n\n      return true;\n    }\n\n    /**\n     * Turns the loading indicator on or off.\n     * @param {boolean} state\n     * @param {boolean=} force\n     * @public @final\n     */\n    toggleLoading(state, force = false) {\n      // TODO(dvoytenko, #9177): cleanup `this.ownerDocument.defaultView`\n      // once investigation is complete. It appears that we get a lot of\n      // errors here once the iframe is destroyed due to timer.\n      if (!this.ownerDocument || !this.ownerDocument.defaultView) {\n        return;\n      }\n\n      const loadingIndicator = Services.loadingIndicatorOrNull(\n        this.getAmpDoc()\n      );\n      if (loadingIndicator) {\n        state = state && this.isLoadingEnabled_(force);\n        if (state) {\n          loadingIndicator.track(this);\n        } else {\n          loadingIndicator.untrack(this);\n        }\n      }\n    }\n\n    /**\n     * Returns an optional overflow element for this custom element.\n     * @return {?Element}\n     */\n    getOverflowElement() {\n      if (this.overflowElement_ === undefined) {\n        this.overflowElement_ = query.childElementByAttr(this, 'overflow');\n        if (this.overflowElement_) {\n          if (!this.overflowElement_.hasAttribute('tabindex')) {\n            this.overflowElement_.setAttribute('tabindex', '0');\n          }\n          if (!this.overflowElement_.hasAttribute('role')) {\n            this.overflowElement_.setAttribute('role', 'button');\n          }\n        }\n      }\n      return this.overflowElement_;\n    }\n\n    /**\n     * Hides or shows the overflow, if available. This function must only\n     * be called inside a mutate context.\n     * @param {boolean} overflown\n     * @param {number|undefined} requestedHeight\n     * @param {number|undefined} requestedWidth\n     * @package @final\n     */\n    overflowCallback(overflown, requestedHeight, requestedWidth) {\n      this.getOverflowElement();\n      if (!this.overflowElement_) {\n        if (overflown && this.warnOnMissingOverflow) {\n          user().warn(\n            TAG,\n            'Cannot resize element and overflow is not available',\n            this\n          );\n        }\n      } else {\n        this.overflowElement_.classList.toggle('amp-visible', overflown);\n\n        if (overflown) {\n          this.overflowElement_.onclick = () => {\n            const mutator = Services.mutatorForDoc(this.getAmpDoc());\n            mutator.forceChangeSize(this, requestedHeight, requestedWidth);\n            mutator.mutateElement(this, () => {\n              this.overflowCallback(\n                /* overflown */ false,\n                requestedHeight,\n                requestedWidth\n              );\n            });\n          };\n        } else {\n          this.overflowElement_.onclick = null;\n        }\n      }\n    }\n\n    /**\n     * Mutates the element using resources if available.\n     *\n     * @param {function()} mutator\n     * @param {?Element=} opt_element\n     * @param {boolean=} opt_skipRemeasure\n     */\n    mutateOrInvoke_(mutator, opt_element, opt_skipRemeasure = false) {\n      if (this.ampdoc_) {\n        Services.mutatorForDoc(this.getAmpDoc()).mutateElement(\n          opt_element || this,\n          mutator,\n          opt_skipRemeasure\n        );\n      } else {\n        mutator();\n      }\n    }\n  }\n  win.__AMP_BASE_CE_CLASS = BaseCustomElement;\n  return /** @type {typeof HTMLElement} */ (win.__AMP_BASE_CE_CLASS);\n}\n\n/**\n * @param {!Element} element\n * @return {boolean}\n */\nfunction isInputPlaceholder(element) {\n  return 'placeholder' in element;\n}\n\n/** @param {!Element} element */\nfunction assertNotTemplate(element) {\n  devAssert(!element.isInTemplate_, 'Must never be called in template');\n}\n\n/**\n * Creates a new custom element class prototype.\n *\n * @param {!Window} win The window in which to register the custom element.\n * @param {(typeof ./base-element.BaseElement)=} opt_implementationClass For testing only.\n * @param {function(!./service/ampdoc-impl.AmpDoc, !AmpElement, ?(typeof BaseElement))=} opt_elementConnectedCallback\n * @return {!Object} Prototype of element.\n * @visibleForTesting\n */\nexport function createAmpElementForTesting(\n  win,\n  opt_implementationClass,\n  opt_elementConnectedCallback\n) {\n  const Element = createCustomElementClass(\n    win,\n    opt_elementConnectedCallback || (() => {})\n  );\n  if (getMode().test && opt_implementationClass) {\n    Element.prototype.implementationClassForTesting = opt_implementationClass;\n  }\n  return Element;\n}\n\n/**\n * @visibleForTesting\n */\nexport function resetStubsForTesting() {\n  stubbedElements.length = 0;\n}\n\n/**\n * @param {!AmpElement} element\n * @return {?(typeof BaseElement)}\n * @visibleForTesting\n */\nexport function getImplClassSyncForTesting(element) {\n  return element.implClass_;\n}\n\n/**\n * @param {!AmpElement} element\n * @return {!BaseElement}\n * @visibleForTesting\n */\nexport function getImplSyncForTesting(element) {\n  return element.impl_;\n}\n\n/**\n * @param {!AmpElement} element\n * @return {?Array<!./service/action-impl.ActionInvocation>|undefined}\n * @visibleForTesting\n */\nexport function getActionQueueForTesting(element) {\n  return element.actionQueue_;\n}\n\n/**\n * Marks each element that still stubbed as unresolved.\n * @param {string=} opt_extension\n */\nexport function markUnresolvedElements(opt_extension) {\n  unresolvableExtensions.add(opt_extension || '*');\n  for (const el of stubbedElements) {\n    if (opt_extension == null || el.tagName.toLowerCase() === opt_extension) {\n      el.markUnresolved();\n    }\n  }\n}\n\n/** */\nexport function resetUnresolvedElementsForTesting() {\n  unresolvableExtensions.clear();\n}\n", "import {Services} from '#service';\n\nimport {userAssert} from '#utils/log';\n\nimport {extensionScriptsInNode} from './extension-script';\n\nimport {\n  createCustomElementClass,\n  markUnresolvedElements,\n  stubbedElements,\n} from '../custom-element';\nimport {ElementStub} from '../element-stub';\nimport {reportError} from '../error-reporting';\n\n/** @type {!WeakMap<!./service/ampdoc-impl.AmpDoc, boolean>} */\nconst docInitializedMap = new WeakMap();\n\n/**\n * @param {!Window} win\n * @return {!Object<string, typeof ../base-element.BaseElement>}\n */\nfunction getExtendedElements(win) {\n  if (!win.__AMP_EXTENDED_ELEMENTS) {\n    win.__AMP_EXTENDED_ELEMENTS = {};\n  }\n  return win.__AMP_EXTENDED_ELEMENTS;\n}\n\n/**\n * Registers an element. Upgrades it if has previously been stubbed.\n * @param {!Window} win\n * @param {string} name\n * @param {typeof ../base-element.BaseElement} toClass\n */\nexport function upgradeOrRegisterElement(win, name, toClass) {\n  const waitPromise = waitReadyForUpgrade(win, toClass);\n  if (waitPromise) {\n    waitPromise.then(() => upgradeOrRegisterElementReady(win, name, toClass));\n  } else {\n    upgradeOrRegisterElementReady(win, name, toClass);\n  }\n}\n\n/**\n * Registers an element. Upgrades it if has previously been stubbed.\n * @param {!Window} win\n * @param {string} name\n * @param {typeof ../base-element.BaseElement} toClass\n */\nfunction upgradeOrRegisterElementReady(win, name, toClass) {\n  const knownElements = getExtendedElements(win);\n  if (!knownElements[name]) {\n    registerElement(win, name, toClass);\n    return;\n  }\n  if (knownElements[name] == toClass) {\n    // Already registered this instance.\n    return;\n  }\n  userAssert(\n    knownElements[name] == ElementStub,\n    '%s is already registered. The script tag for ' +\n      '%s is likely included twice in the page.',\n    name,\n    name\n  );\n  knownElements[name] = toClass;\n  for (let i = 0; i < stubbedElements.length; i++) {\n    const element = stubbedElements[i];\n    // There are 3 possible states here:\n    // 1. We never made the stub because the extended impl. loaded first.\n    //    In that case the element won't be in the array.\n    // 2. We made a stub but the browser didn't attach it yet. In\n    //    that case we don't need to upgrade but simply switch to the new\n    //    implementation.\n    // 3. A stub was attached. We upgrade which means we replay the\n    //    implementation.\n    if (\n      element.tagName.toLowerCase() == name &&\n      element.ownerDocument.defaultView == win\n    ) {\n      tryUpgradeElement(element, toClass);\n      // Remove element from array.\n      stubbedElements.splice(i--, 1);\n    }\n  }\n}\n\n/**\n * This method should not be inlined to prevent TryCatch deoptimization.\n * @param {Element} element\n * @param {typeof ../base-element.BaseElement} toClass\n * @private\n */\nfunction tryUpgradeElement(element, toClass) {\n  try {\n    element.upgrade(toClass);\n  } catch (e) {\n    reportError(e, element);\n  }\n}\n\n/**\n * Ensures that the element is ready for upgrade. Either returns immediately\n * with `undefined` indicating that no waiting is necessary, or returns a\n * promise that will resolve when the upgrade can proceed.\n *\n * @param {!Window} win\n * @param {typeof ../base-element.BaseElement} elementClass\n * @return {!Promise|undefind}\n */\nfunction waitReadyForUpgrade(win, elementClass) {\n  // Make sure the polyfill is installed for Shadow DOM if element needs it.\n  if (elementClass.requiresShadowDom() && !win.Element.prototype.attachShadow) {\n    const extensions = Services.extensionsFor(win);\n    return extensions.importUnwrapped(win, 'amp-shadow-dom-polyfill');\n  }\n}\n\n/**\n * Stub extended elements missing an implementation. It can be called multiple\n * times and on partial document in order to start stubbing as early as\n * possible.\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n */\nexport function stubElementsForDoc(ampdoc) {\n  const extensions = extensionScriptsInNode(ampdoc.getHeadNode());\n  extensions.forEach(({extensionId, extensionVersion, script}) => {\n    ampdoc.declareExtension(extensionId, extensionVersion);\n    script.addEventListener('error', () => markUnresolvedElements(extensionId));\n    stubElementIfNotKnown(ampdoc.win, extensionId);\n  });\n  if (ampdoc.isBodyAvailable()) {\n    ampdoc.setExtensionsKnown();\n  }\n}\n\n/**\n * Stub element if not yet known.\n * @param {!Window} win\n * @param {string} name\n */\nexport function stubElementIfNotKnown(win, name) {\n  const knownElements = getExtendedElements(win);\n  if (!knownElements[name]) {\n    registerElement(win, name, ElementStub);\n  }\n}\n\n/**\n * Copies the specified element to child window (friendly iframe). This way\n * all implementations of the AMP elements are shared between all friendly\n * frames.\n * @param {!Window} parentWin\n * @param {!Window} childWin\n * @param {string} name\n */\nexport function copyElementToChildWindow(parentWin, childWin, name) {\n  const toClass = getExtendedElements(parentWin)[name];\n  registerElement(childWin, name, toClass || ElementStub);\n}\n\n/**\n * Registers a new custom element with its implementation class.\n * @param {!Window} win The window in which to register the elements.\n * @param {string} name Name of the custom element\n * @param {typeof ../base-element.BaseElement} implementationClass\n */\nexport function registerElement(win, name, implementationClass) {\n  const knownElements = getExtendedElements(win);\n  knownElements[name] = implementationClass;\n  const klass = createCustomElementClass(win, elementConnectedCallback);\n  win['customElements'].define(name, klass);\n}\n\n/**\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @param {!AmpElement} element\n * @param {?(typeof BaseElement)} implementationClass\n * @visibleForTesting\n */\nexport function elementConnectedCallback(ampdoc, element, implementationClass) {\n  // Make sure that the ampdoc has already been stubbed.\n  if (!docInitializedMap.has(ampdoc)) {\n    docInitializedMap.set(ampdoc, true);\n    stubElementsForDoc(ampdoc);\n  }\n\n  // Load the pre-stubbed legacy extension if needed.\n  const extensionId = element.localName;\n  if (!implementationClass && !ampdoc.declaresExtension(extensionId)) {\n    Services.extensionsFor(ampdoc.win).installExtensionForDoc(\n      ampdoc,\n      extensionId,\n      // The legacy auto-extensions are always 0.1.\n      '0.1'\n    );\n  }\n}\n\n/**\n * In order to provide better error messages we only allow to retrieve\n * services from other elements if those elements are loaded in the page.\n * This makes it possible to mark an element as loaded in a test.\n * @param {!Window} win\n * @param {string} elementName Name of an extended custom element.\n * @visibleForTesting\n */\nexport function markElementScheduledForTesting(win, elementName) {\n  const knownElements = getExtendedElements(win);\n  if (!knownElements[elementName]) {\n    knownElements[elementName] = ElementStub;\n  }\n}\n\n/**\n * Resets our scheduled elements.\n * @param {!Window} win\n * @param {string} elementName Name of an extended custom element.\n * @visibleForTesting\n */\nexport function resetScheduledElementForTesting(win, elementName) {\n  if (win.__AMP_EXTENDED_ELEMENTS) {\n    delete win.__AMP_EXTENDED_ELEMENTS[elementName];\n  }\n}\n\n/**\n * Returns a currently registered element class.\n * @param {!Window} win\n * @param {string} elementName Name of an extended custom element.\n * @return {?function()}\n * @visibleForTesting\n */\nexport function getElementClassForTesting(win, elementName) {\n  const knownElements = win.__AMP_EXTENDED_ELEMENTS;\n  return (knownElements && knownElements[elementName]) || null;\n}\n", "import {removeItem} from '#core/types/array';\n\n/**\n * This class helps to manage observers. Observers can be added, removed or\n * fired through and instance of this class.\n * @template TYPE\n */\nexport class Observable {\n  /**\n   * Creates an instance of Observable.\n   */\n  constructor() {\n    /** @type {?Array<function(TYPE)>} */\n    this.handlers_ = null;\n  }\n\n  /**\n   * Adds the observer to this instance.\n   * @param {function(TYPE)} handler Observer's handler.\n   * @return {!UnlistenDef}\n   */\n  add(handler) {\n    if (!this.handlers_) {\n      this.handlers_ = [];\n    }\n    this.handlers_.push(handler);\n    return () => {\n      this.remove(handler);\n    };\n  }\n\n  /**\n   * Removes the observer from this instance.\n   * @param {function(TYPE)} handler Observer's instance.\n   */\n  remove(handler) {\n    if (!this.handlers_) {\n      return;\n    }\n    removeItem(this.handlers_, handler);\n  }\n\n  /**\n   * Removes all observers.\n   */\n  removeAll() {\n    if (!this.handlers_) {\n      return;\n    }\n    this.handlers_.length = 0;\n  }\n\n  /**\n   * Fires an event. All observers are called.\n   * @param {TYPE=} opt_event\n   */\n  fire(opt_event) {\n    if (!this.handlers_) {\n      return;\n    }\n    for (const handler of this.handlers_) {\n      handler(opt_event);\n    }\n  }\n\n  /**\n   * Returns number of handlers. Mostly needed for tests.\n   * @return {number}\n   */\n  getHandlerCount() {\n    return this.handlers_?.length ?? 0;\n  }\n}\n", "import {Services} from '#service';\n\n/**\n * Pass class helps to manage single-pass process. A pass is scheduled using\n * delay method. Only one pass can be pending at a time. If no pass is pending\n * the process is considered to be \"idle\".\n */\nexport class Pass {\n  /**\n   * Creates a new Pass instance.\n   * @param {!Window} win\n   * @param {function()} handler Handler to be executed when pass is triggered.\n   * @param {number=} opt_defaultDelay Default delay to be used when schedule\n   *   is called without one.\n   */\n  constructor(win, handler, opt_defaultDelay) {\n    this.timer_ = Services.timerFor(win);\n\n    /** @private @const {function()} */\n    this.handler_ = handler;\n\n    /** @private @const {number} */\n    this.defaultDelay_ = opt_defaultDelay || 0;\n\n    /** @private {number|string} */\n    this.scheduled_ = -1;\n\n    /** @private {number} */\n    this.nextTime_ = 0;\n\n    /** @private {boolean} */\n    this.running_ = false;\n\n    /**\n     * @private\n     * @const {function()}\n     */\n    this.boundPass_ = () => {\n      this.pass_();\n    };\n  }\n\n  /**\n   * Whether or not a pass is currently pending.\n   * @return {boolean}\n   */\n  isPending() {\n    return this.scheduled_ != -1;\n  }\n\n  /**\n   * Tries to schedule a new pass optionally with specified delay. If the new\n   * requested pass is requested before the pending pass, the pending pass is\n   * canceled. If the new pass is requested after the pending pass, the newly\n   * requested pass is ignored.\n   *\n   * Returns {@code true} if the pass has been scheduled and {@code false} if\n   * ignored.\n   *\n   * @param {number=} opt_delay Delay to schedule the pass. If not specified\n   *   the default delay is used, falling back to 0.\n   * @return {boolean}\n   */\n  schedule(opt_delay) {\n    let delay = opt_delay || this.defaultDelay_;\n    if (this.running_ && delay < 10) {\n      // If we get called recursively, wait at least 10ms for the next\n      // execution.\n      delay = 10;\n    }\n\n    const nextTime = Date.now() + delay;\n    // Schedule anew if nothing is scheduled currently or if the new time is\n    // sooner then previously requested.\n    if (!this.isPending() || nextTime - this.nextTime_ < -10) {\n      this.cancel();\n      this.nextTime_ = nextTime;\n      this.scheduled_ = this.timer_.delay(this.boundPass_, delay);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   *\n   */\n  pass_() {\n    this.scheduled_ = -1;\n    this.nextTime_ = 0;\n    this.running_ = true;\n    this.handler_();\n    this.running_ = false;\n  }\n\n  /**\n   * Cancels the pending pass if any.\n   */\n  cancel() {\n    if (this.isPending()) {\n      this.timer_.cancel(this.scheduled_);\n      this.scheduled_ = -1;\n    }\n  }\n}\n", "import {VisibilityState} from '#core/constants/visibility-state';\nimport {Observable} from '#core/data-structures/observable';\nimport {Deferred} from '#core/data-structures/promise';\nimport {hasNextNodeInDocumentOrder} from '#core/dom';\n\nimport {Services} from '#service';\nimport {Resource, ResourceState} from '#service/resource';\nimport {READY_SCAN_SIGNAL} from '#service/resources-interface';\n\nimport {dev} from '#utils/log';\n\nimport {getMode} from '../mode';\nimport {Pass} from '../pass';\nimport {registerServiceBuilderForDoc} from '../service-helpers';\n\nconst TAG = 'inabox-resources';\nconst FOUR_FRAME_DELAY = 70;\n\n/**\n * @implements {../service/resources-interface.ResourcesInterface}\n * @implements {../service.Disposable}\n * @visibleForTesting\n */\nexport class InaboxResources {\n  /**\n   * @param {!../service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @const {!../service/ampdoc-impl.AmpDoc} */\n    this.ampdoc_ = ampdoc;\n\n    /** @const {!Window} */\n    this.win = ampdoc.win;\n\n    /** @private @const {!Array<!Resource>} */\n    this.resources_ = [];\n\n    /** @private {number} */\n    this.resourceIdCounter_ = 0;\n\n    /** @const @private {!Pass} */\n    this.pass_ = new Pass(this.win, this.doPass_.bind(this), FOUR_FRAME_DELAY);\n\n    /** @private @const {!Observable} */\n    this.passObservable_ = new Observable();\n\n    /** @const @private {!Deferred} */\n    this.firstPassDone_ = new Deferred();\n\n    /** @private {?IntersectionObserver} */\n    this.inViewportObserver_ = null;\n\n    const input = Services.inputFor(this.win);\n    input.setupInputModeClasses(ampdoc);\n\n    // TODO(#31246): launch the visibility logic in inabox as well.\n    if (getMode(this.win).runtime != 'inabox') {\n      ampdoc.onVisibilityChanged(() => {\n        switch (ampdoc.getVisibilityState()) {\n          case VisibilityState.PAUSED:\n            this.resources_.forEach((r) => r.pause());\n            break;\n          case VisibilityState.VISIBLE:\n            this.resources_.forEach((r) => r.resume());\n            this./*OK*/ schedulePass();\n            break;\n        }\n      });\n    }\n\n    /** @private {!Array<Resource>} */\n    this.pendingBuildResources_ = [];\n\n    /** @private {boolean} */\n    this.documentReady_ = false;\n\n    this.ampdoc_.whenReady().then(() => {\n      this.documentReady_ = true;\n      this.buildReadyResources_();\n      this./*OK*/ schedulePass(1);\n    });\n  }\n\n  /** @override */\n  dispose() {\n    this.resources_.forEach((r) => r.unload());\n    this.resources_.length = 0;\n    if (this.inViewportObserver_) {\n      this.inViewportObserver_.disconnect();\n      this.inViewportObserver_ = null;\n    }\n  }\n\n  /** @override */\n  get() {\n    return this.resources_.slice(0);\n  }\n\n  /** @override */\n  getAmpdoc() {\n    return this.ampdoc_;\n  }\n\n  /** @override */\n  getResourceForElement(element) {\n    return Resource.forElement(element);\n  }\n\n  /** @override */\n  getResourceForElementOptional(element) {\n    return Resource.forElementOptional(element);\n  }\n\n  /** @override */\n  getScrollDirection() {\n    return 1;\n  }\n\n  /** @override */\n  add(element) {\n    const resource = new Resource(++this.resourceIdCounter_, element, this);\n    this.resources_.push(resource);\n    dev().fine(TAG, 'resource added:', resource.debugid);\n  }\n\n  /** @override */\n  upgraded(element) {\n    const resource = Resource.forElement(element);\n    this.pendingBuildResources_.push(resource);\n    this.buildReadyResources_();\n  }\n\n  /** @override */\n  remove(element) {\n    const resource = Resource.forElementOptional(element);\n    if (!resource) {\n      return;\n    }\n    if (this.inViewportObserver_) {\n      this.inViewportObserver_.unobserve(element);\n    }\n    const index = this.resources_.indexOf(resource);\n    if (index !== -1) {\n      this.resources_.splice(index, 1);\n    }\n    dev().fine(TAG, 'element removed:', resource.debugid);\n  }\n\n  /** @override */\n  scheduleLayoutOrPreload(unusedResource) {\n    this.pass_.schedule();\n  }\n\n  /** @override */\n  schedulePass(opt_delay) {\n    return this.pass_.schedule(opt_delay);\n  }\n\n  /** @override */\n  updateOrEnqueueMutateTask(unusedResource, unusedNewRequest) {}\n\n  /** @override */\n  schedulePassVsync() {}\n\n  /** @override */\n  onNextPass(callback) {\n    this.passObservable_.add(callback);\n  }\n\n  /** @override */\n  ampInitComplete() {}\n\n  /** @override */\n  updateLayoutPriority(unusedElement, unusedNewLayoutPriority) {\n    // concept of element priority does not exist in inabox\n  }\n\n  /** @override */\n  setRelayoutTop(unusedRelayoutTop) {}\n\n  /** @override */\n  maybeHeightChanged() {}\n\n  /**\n   * @return {!Promise} when first pass executed.\n   */\n  whenFirstPass() {\n    return this.firstPassDone_.promise;\n  }\n\n  /**\n   * @private\n   */\n  doPass_() {\n    const now = Date.now();\n    dev().fine(TAG, 'doPass');\n    // measure in a batch\n    this.resources_.forEach((resource) => {\n      if (!resource.isLayoutPending() || resource.element.R1()) {\n        return;\n      }\n      resource.measure();\n    });\n    // mutation in a batch\n    this.resources_.forEach((resource) => {\n      if (\n        !resource.element.R1() &&\n        resource.getState() === ResourceState.READY_FOR_LAYOUT &&\n        resource.isDisplayed()\n      ) {\n        resource.layoutScheduled(now);\n        resource.startLayout();\n      }\n    });\n\n    this.ampdoc_.signals().signal(READY_SCAN_SIGNAL);\n    this.passObservable_.fire();\n    this.firstPassDone_.resolve();\n  }\n\n  /**\n   * Builds any pending resouces if document is ready, or next element has been\n   * added to DOM.\n   * @private\n   */\n  buildReadyResources_() {\n    for (let i = this.pendingBuildResources_.length - 1; i >= 0; i--) {\n      const resource = this.pendingBuildResources_[i];\n      if (\n        this.documentReady_ ||\n        hasNextNodeInDocumentOrder(resource.element, this.ampdoc_.getRootNode())\n      ) {\n        this.pendingBuildResources_.splice(i, 1);\n        resource.build().then(() => this./*OK*/ schedulePass());\n        dev().fine(TAG, 'resource upgraded:', resource.debugid);\n      }\n    }\n  }\n}\n\n/**\n * @param {!../service/ampdoc-impl.AmpDoc} ampdoc\n */\nexport function installInaboxResourcesServiceForDoc(ampdoc) {\n  registerServiceBuilderForDoc(ampdoc, 'resources', InaboxResources);\n}\n", "/**\n * @enum {number}\n */\nexport const KeyCodes = {\n  ENTER: 13,\n  ESCAPE: 27,\n  SPACE: 32,\n  LEFT_ARROW: 37,\n  UP_ARROW: 38,\n  RIGHT_ARROW: 39,\n  DOWN_ARROW: 40,\n};\n\n/**\n * @enum {string}\n */\nexport const Keys = {\n  ENTER: 'Enter',\n  ESCAPE: 'Escape',\n  SPACE: ' ',\n  LEFT_ARROW: 'ArrowLeft',\n  UP_ARROW: 'ArrowUp',\n  RIGHT_ARROW: 'ArrowRight',\n  DOWN_ARROW: 'ArrowDown',\n  TAB: 'Tab',\n  BACKSPACE: 'Backspace',\n  HOME: 'Home',\n  END: 'End',\n};\n", "import {\n  ActionTrust,\n  DEFAULT_ACTION,\n  RAW_OBJECT_ARGS_KEY,\n  actionTrustToString,\n} from '#core/constants/action-constants';\nimport {Keys} from '#core/constants/key-codes';\nimport {isAmp4Email} from '#core/document/format';\nimport {isEnabled} from '#core/dom';\nimport {isFiniteNumber} from '#core/types';\nimport {isArray, toArray} from '#core/types/array';\nimport {debounce, throttle} from '#core/types/function';\nimport {dict, getValueForExpr, hasOwn, map} from '#core/types/object';\nimport {getWin} from '#core/window';\n\nimport {Services} from '#service';\n\nimport {getDetail} from '#utils/event-helper';\nimport {dev, devAssert, user, userAssert} from '#utils/log';\n\nimport {reportError} from '../error-reporting';\nimport {getMode} from '../mode';\nimport {registerServiceBuilderForDoc} from '../service-helpers';\n\n/** @const {string} */\nconst TAG_ = 'Action';\n\n/** @const {string} */\nconst ACTION_MAP_ = '__AMP_ACTION_MAP__' + Math.random();\n\n/** @const {string} */\nconst ACTION_QUEUE_ = '__AMP_ACTION_QUEUE__';\n\n/** @const {string} */\nconst ACTION_HANDLER_ = '__AMP_ACTION_HANDLER__';\n\n/** @const {number} */\nconst DEFAULT_DEBOUNCE_WAIT = 300; // ms\n\n/** @const {number} */\nconst DEFAULT_THROTTLE_INTERVAL = 100; // ms\n\n/** @const {!Object<string,!Array<string>>} */\nconst NON_AMP_ELEMENTS_ACTIONS_ = {\n  'form': ['submit', 'clear'],\n};\n\nconst DEFAULT_EMAIL_ALLOWLIST = [\n  {tagOrTarget: 'AMP', method: 'setState'},\n  {tagOrTarget: '*', method: 'focus'},\n  {tagOrTarget: '*', method: 'hide'},\n  {tagOrTarget: '*', method: 'show'},\n  {tagOrTarget: '*', method: 'toggleClass'},\n  {tagOrTarget: '*', method: 'toggleChecked'},\n  {tagOrTarget: '*', method: 'toggleVisibility'},\n];\n\n/**\n * Interactable widgets which should trigger tap events when the user clicks\n * or activates via the keyboard. Not all are here, e.g. progressbar, tabpanel,\n * since they are text inputs, readonly, or composite widgets that shouldn't\n * need to trigger tap events from spacebar or enter on their own.\n * See https://www.w3.org/TR/wai-aria-1.1/#widget_roles\n * @const {!Object<boolean>}\n */\nexport const TAPPABLE_ARIA_ROLES = {\n  'button': true,\n  'checkbox': true,\n  'link': true,\n  'listbox': true,\n  'menuitem': true,\n  'menuitemcheckbox': true,\n  'menuitemradio': true,\n  'option': true,\n  'radio': true,\n  'scrollbar': true,\n  'slider': true,\n  'spinbutton': true,\n  'switch': true,\n  'tab': true,\n  'treeitem': true,\n};\n\n/**\n * An expression arg value, e.g. `foo.bar` in `e:t.m(arg=foo.bar)`.\n * @typedef {{expression: string}}\n */\nlet ActionInfoArgExpressionDef;\n\n/**\n * An arg value.\n * @typedef {(boolean|number|string|ActionInfoArgExpressionDef)}\n */\nlet ActionInfoArgValueDef;\n\n/**\n * Map of arg names to their values, e.g. {arg: 123} in `e:t.m(arg=123)`.\n * @typedef {Object<string, ActionInfoArgValueDef>}\n */\nlet ActionInfoArgsDef;\n\n/**\n * @typedef {{\n *   event: string,\n *   target: string,\n *   method: string,\n *   args: ?ActionInfoArgsDef,\n *   str: string\n * }}\n */\nexport let ActionInfoDef;\n\n/**\n * Function called when an action is invoked.\n *\n * Optionally, takes this action's position within all actions triggered by\n * the same event, as well as said action array, as params.\n *\n * If the action is chainable, returns a Promise which resolves when the\n * action is complete. Otherwise, returns null.\n *\n * @typedef {function(!ActionInvocation, number=, !Array<!ActionInfoDef>=):?Promise}\n */\nlet ActionHandlerDef;\n\n/**\n * @typedef {Event|DeferredEvent}\n */\nexport let ActionEventDef;\n\n/**\n * The structure that contains all details of the action method invocation.\n * @struct @const @package For type.\n */\nexport class ActionInvocation {\n  /**\n   * For example:\n   *\n   *   <div id=\"div\" on=\"tap:myForm.submit(foo=bar)\">\n   *     <button id=\"btn\">Submit</button>\n   *   </div>\n   *\n   * `node` is #myForm.\n   * `method` is \"submit\".\n   * `args` is {'foo': 'bar'}.\n   * `source` is #btn.\n   * `caller` is #div.\n   * `event` is a \"click\" Event object.\n   * `actionEventType` is \"tap\".\n   * `trust` depends on whether this action was a result of a user gesture.\n   * `tagOrTarget` is \"amp-form\".\n   * `sequenceId` is a pseudo-UUID.\n   *\n   * @param {!Node} node Element whose action is being invoked.\n   * @param {string} method Name of the action being invoked.\n   * @param {?JsonObject} args Named action arguments.\n   * @param {?Element} source Element that generated the `event`.\n   * @param {?Element} caller Element containing the on=\"...\" action handler.\n   * @param {?ActionEventDef} event The event object that triggered this action.\n   * @param {!ActionTrust} trust The trust level of this invocation's trigger.\n   * @param {?string} actionEventType The AMP event name that triggered this.\n   * @param {?string} tagOrTarget The global target name or the element tagName.\n   * @param {number} sequenceId An identifier for this action's sequence (all\n   *   actions triggered by one event e.g. \"tap:form1.submit, form2.submit\").\n   */\n  constructor(\n    node,\n    method,\n    args,\n    source,\n    caller,\n    event,\n    trust,\n    actionEventType = '?',\n    tagOrTarget = null,\n    sequenceId = Math.random()\n  ) {\n    /** @type {!Node} */\n    this.node = node;\n    /** @const {string} */\n    this.method = method;\n    /** @const {?JsonObject} */\n    this.args = args;\n    /** @const {?Element} */\n    this.source = source;\n    /** @const {?Element} */\n    this.caller = caller;\n    /** @const {?ActionEventDef} */\n    this.event = event;\n    /** @const {!ActionTrust} */\n    this.trust = trust;\n    /** @const {?string} */\n    this.actionEventType = actionEventType;\n    /** @const {string} */\n    this.tagOrTarget = tagOrTarget || node.tagName;\n    /** @const {number} */\n    this.sequenceId = sequenceId;\n  }\n\n  /**\n   * Returns true if the trigger event has a trust equal to or greater than\n   * `minimumTrust`. Otherwise, logs a user error and returns false.\n   * @param {ActionTrust} minimumTrust\n   * @return {boolean}\n   */\n  satisfiesTrust(minimumTrust) {\n    // Sanity check.\n    if (!isFiniteNumber(this.trust)) {\n      dev().error(TAG_, `Invalid trust for '${this.method}': ${this.trust}`);\n      return false;\n    }\n    if (this.trust < minimumTrust) {\n      const t = actionTrustToString(this.trust);\n      user().error(\n        TAG_,\n        `\"${this.actionEventType}\" event with \"${t}\" trust is not allowed to ` +\n          `invoke \"${this.tagOrTarget.toLowerCase()}.${this.method}\".`\n      );\n      return false;\n    }\n    return true;\n  }\n}\n\n/**\n * TODO(dvoytenko): consider splitting this class into two:\n * 1. A class that has a method \"trigger(element, eventType, data)\" and\n *    simply can search target in DOM and trigger methods on it.\n * 2. A class that configures event recognizers and rules and then\n *    simply calls action.trigger.\n */\nexport class ActionService {\n  /**\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   * @param {(!Document|!ShadowRoot)=} opt_root\n   */\n  constructor(ampdoc, opt_root) {\n    /** @const {!./ampdoc-impl.AmpDoc} */\n    this.ampdoc = ampdoc;\n\n    /** @const {!Document|!ShadowRoot} */\n    this.root_ = opt_root || ampdoc.getRootNode();\n\n    /** @const {boolean} */\n    this.isEmail_ =\n      this.ampdoc.isSingleDoc() &&\n      isAmp4Email(/** @type {!Document} */ (this.root_));\n\n    /**\n     * Optional allowlist of actions, e.g.:\n     *\n     *     [{tagOrTarget: 'AMP', method: 'navigateTo'},\n     *      {tagOrTarget: 'AMP-FORM', method: 'submit'},\n     *      {tagOrTarget: '*', method: 'show'}]\n     *\n     * If not null, any actions that are not in the allowlist will be ignored\n     * and throw a user error at invocation time. Note that `tagOrTarget` is\n     * always the canonical uppercased form (same as\n     * `Element.prototype.tagName`). If `tagOrTarget` is the wildcard '*', then\n     * the allowlisted method is allowed on any tag or target.\n     *\n     * For AMP4Email format documents, allowed actions are autogenerated.\n     * @private {?Array<{tagOrTarget: string, method: string}>}\n     */\n    this.allowlist_ = this.isEmail_ ? DEFAULT_EMAIL_ALLOWLIST : null;\n\n    /** @const @private {!Object<string, ActionHandlerDef>} */\n    this.globalTargets_ = map();\n\n    /**\n     * @const @private {!Object<string, {handler: ActionHandlerDef, minTrust: ActionTrust}>}\n     */\n    this.globalMethodHandlers_ = map();\n\n    // Add core events.\n    this.addEvent('tap');\n    this.addEvent('submit');\n    this.addEvent('change');\n    this.addEvent('input-debounced');\n    this.addEvent('input-throttled');\n    this.addEvent('valid');\n    this.addEvent('invalid');\n  }\n\n  /**\n   * @param {string} name\n   * TODO(dvoytenko): switch to a system where the event recognizers are\n   * registered with Action instead, e.g. \"doubletap\", \"tap to zoom\".\n   */\n  addEvent(name) {\n    if (name == 'tap') {\n      // TODO(dvoytenko): if needed, also configure touch-based tap, e.g. for\n      // fast-click.\n      this.root_.addEventListener('click', (event) => {\n        if (!event.defaultPrevented) {\n          const element = dev().assertElement(event.target);\n          this.trigger(element, name, event, ActionTrust.HIGH);\n        }\n      });\n      this.root_.addEventListener('keydown', (event) => {\n        const {key, target} = event;\n        const element = dev().assertElement(target);\n        if (key == Keys.ENTER || key == Keys.SPACE) {\n          const role = element.getAttribute('role');\n          const isTapEventRole =\n            role && hasOwn(TAPPABLE_ARIA_ROLES, role.toLowerCase());\n          if (!event.defaultPrevented && isTapEventRole) {\n            const hasAction = this.trigger(\n              element,\n              name,\n              event,\n              ActionTrust.HIGH\n            );\n            // Only if the element has an action do we prevent the default.\n            // In the absence of an action, e.g. on=\"[event].method\", we do not\n            // want to stop default behavior.\n            if (hasAction) {\n              event.preventDefault();\n            }\n          }\n        }\n      });\n    } else if (name == 'submit') {\n      this.root_.addEventListener(name, (event) => {\n        const element = dev().assertElement(event.target);\n        // For get requests, the delegating to the viewer needs to happen\n        // before this.\n        this.trigger(element, name, event, ActionTrust.HIGH);\n      });\n    } else if (name == 'change') {\n      this.root_.addEventListener(name, (event) => {\n        const element = dev().assertElement(event.target);\n        this.addTargetPropertiesAsDetail_(event);\n        this.trigger(element, name, event, ActionTrust.HIGH);\n      });\n    } else if (name == 'input-debounced') {\n      const debouncedInput = debounce(\n        this.ampdoc.win,\n        (event) => {\n          const target = dev().assertElement(event.target);\n          this.trigger(\n            target,\n            name,\n            /** @type {!ActionEventDef} */ (event),\n            ActionTrust.HIGH\n          );\n        },\n        DEFAULT_DEBOUNCE_WAIT\n      );\n\n      this.root_.addEventListener('input', (event) => {\n        // Create a DeferredEvent to avoid races where the browser cleans up\n        // the event object before the async debounced function is called.\n        const deferredEvent = new DeferredEvent(event);\n        this.addTargetPropertiesAsDetail_(deferredEvent);\n        debouncedInput(deferredEvent);\n      });\n    } else if (name == 'input-throttled') {\n      const throttledInput = throttle(\n        this.ampdoc.win,\n        (event) => {\n          const target = dev().assertElement(event.target);\n          this.trigger(\n            target,\n            name,\n            /** @type {!ActionEventDef} */ (event),\n            ActionTrust.HIGH\n          );\n        },\n        DEFAULT_THROTTLE_INTERVAL\n      );\n\n      this.root_.addEventListener('input', (event) => {\n        const deferredEvent = new DeferredEvent(event);\n        this.addTargetPropertiesAsDetail_(deferredEvent);\n        throttledInput(deferredEvent);\n      });\n    } else if (name == 'valid' || name == 'invalid') {\n      this.root_.addEventListener(name, (event) => {\n        const element = dev().assertElement(event.target);\n        this.trigger(element, name, event, ActionTrust.HIGH);\n      });\n    }\n  }\n\n  /**\n   * Registers the action target that will receive all designated actions.\n   * @param {string} name\n   * @param {ActionHandlerDef} handler\n   */\n  addGlobalTarget(name, handler) {\n    this.globalTargets_[name] = handler;\n  }\n\n  /**\n   * Registers the action handler for a common method.\n   * @param {string} name\n   * @param {ActionHandlerDef} handler\n   * @param {ActionTrust} minTrust\n   */\n  addGlobalMethodHandler(name, handler, minTrust = ActionTrust.DEFAULT) {\n    this.globalMethodHandlers_[name] = {handler, minTrust};\n  }\n\n  /**\n   * Triggers the specified event on the target element.\n   * @param {!Element} target\n   * @param {string} eventType\n   * @param {?ActionEventDef} event\n   * @param {!ActionTrust} trust\n   * @param {?JsonObject=} opt_args\n   * @return {boolean} true if the target has an action.\n   */\n  trigger(target, eventType, event, trust, opt_args) {\n    return this.action_(target, eventType, event, trust, opt_args);\n  }\n\n  /**\n   * Triggers execution of the method on a target/method.\n   * @param {!Element} target\n   * @param {string} method\n   * @param {?JsonObject} args\n   * @param {?Element} source\n   * @param {?Element} caller\n   * @param {?ActionEventDef} event\n   * @param {ActionTrust} trust\n   */\n  execute(target, method, args, source, caller, event, trust) {\n    const invocation = new ActionInvocation(\n      target,\n      method,\n      args,\n      source,\n      caller,\n      event,\n      trust\n    );\n    this.invoke_(invocation);\n  }\n\n  /**\n   * Installs action handler for the specified element. The action handler is\n   * responsible for checking invocation trust.\n   *\n   * For AMP elements, use base-element.registerAction() instead.\n   *\n   * @param {!Element} target\n   * @param {ActionHandlerDef} handler\n   */\n  installActionHandler(target, handler) {\n    // TODO(dvoytenko, #7063): switch back to `target.id` with form proxy.\n    const targetId = target.getAttribute('id') || '';\n\n    devAssert(\n      isAmpTagName(targetId) ||\n        target.tagName.toLowerCase() in NON_AMP_ELEMENTS_ACTIONS_,\n      'AMP or special element expected: %s',\n      target.tagName + '#' + targetId\n    );\n\n    if (target[ACTION_HANDLER_]) {\n      dev().error(TAG_, `Action handler already installed for ${target}`);\n      return;\n    }\n    target[ACTION_HANDLER_] = handler;\n\n    /** @const {Array<!ActionInvocation>} */\n    const queuedInvocations = target[ACTION_QUEUE_];\n    if (isArray(queuedInvocations)) {\n      // Invoke and clear all queued invocations now handler is installed.\n      Services.timerFor(getWin(target)).delay(() => {\n        // TODO(dvoytenko, #1260): dedupe actions.\n        queuedInvocations.forEach((invocation) => {\n          try {\n            handler(invocation);\n          } catch (e) {\n            dev().error(TAG_, 'Action execution failed:', invocation, e);\n          }\n        });\n        target[ACTION_QUEUE_].length = 0;\n      }, 1);\n    }\n  }\n\n  /**\n   * Checks if the given element has registered a particular action type.\n   * @param {!Element} element\n   * @param {string} actionEventType\n   * @param {!Element=} opt_stopAt\n   * @return {boolean}\n   */\n  hasAction(element, actionEventType, opt_stopAt) {\n    return !!this.findAction_(element, actionEventType, opt_stopAt);\n  }\n\n  /**\n   * Checks if the given element's registered action resolves to at least one\n   * existing element by id or a global target (e.g. \"AMP\").\n   * @param {!Element} element\n   * @param {string} actionEventType\n   * @param {!Element=} opt_stopAt\n   * @return {boolean}\n   */\n  hasResolvableAction(element, actionEventType, opt_stopAt) {\n    const action = this.findAction_(element, actionEventType, opt_stopAt);\n    if (!action) {\n      return false;\n    }\n    return action.actionInfos.some((action) => {\n      const {target} = action;\n      return !!this.getActionNode_(target);\n    });\n  }\n\n  /**\n   * Checks if the given element's registered action resolves to at least one\n   * existing element by id or a global target (e.g. \"AMP\").\n   * @param {!Element} element\n   * @param {string} actionEventType\n   * @param {!Element} targetElement\n   * @param {!Element=} opt_stopAt\n   * @return {boolean}\n   */\n  hasResolvableActionForTarget(\n    element,\n    actionEventType,\n    targetElement,\n    opt_stopAt\n  ) {\n    const action = this.findAction_(element, actionEventType, opt_stopAt);\n    if (!action) {\n      return false;\n    }\n    return action.actionInfos.some((actionInfo) => {\n      const {target} = actionInfo;\n      return this.getActionNode_(target) == targetElement;\n    });\n  }\n\n  /**\n   * For global targets e.g. \"AMP\", returns the document root. Otherwise,\n   * `target` is an element id and the corresponding element is returned.\n   * @param {string} target\n   * @return {?Document|?Element|?ShadowRoot}\n   * @private\n   */\n  getActionNode_(target) {\n    return this.globalTargets_[target]\n      ? this.root_\n      : this.root_.getElementById(target);\n  }\n\n  /**\n   * Sets the action allowlist. Can be used to clear it.\n   * @param {!Array<{tagOrTarget: string, method: string}>} allowlist\n   */\n  setAllowlist(allowlist) {\n    devAssert(\n      allowlist.every((v) => v.tagOrTarget && v.method),\n      'Action allowlist entries should be of shape { tagOrTarget: string, method: string }'\n    );\n    this.allowlist_ = allowlist;\n  }\n\n  /**\n   * Adds an action to the allowlist.\n   * @param {string} tagOrTarget The tag or target to allowlist, e.g.\n   *     'AMP-LIST', '*'.\n   * @param {string|Array<string>} methods The method(s) to allowlist, e.g. 'show', 'hide'.\n   * @param {Array<string>=} opt_forFormat\n   */\n  addToAllowlist(tagOrTarget, methods, opt_forFormat) {\n    // TODO(wg-performance): When it becomes possible to getFormat(),\n    // we can store `format_` instead of `isEmail_` and check\n    // (opt_forFormat && !opt_forFormat.includes(this.format_))\n    if (opt_forFormat && opt_forFormat.includes('email') !== this.isEmail_) {\n      return;\n    }\n    if (!this.allowlist_) {\n      this.allowlist_ = [];\n    }\n    if (!isArray(methods)) {\n      methods = [methods];\n    }\n    methods.forEach((method) => {\n      if (\n        this.allowlist_.some(\n          (v) => v.tagOrTarget == tagOrTarget && v.method == method\n        )\n      ) {\n        return;\n      }\n      this.allowlist_.push({tagOrTarget, method});\n    });\n  }\n\n  /**\n   * @param {!Element} source\n   * @param {string} actionEventType\n   * @param {?ActionEventDef} event\n   * @param {!ActionTrust} trust\n   * @param {?JsonObject=} opt_args\n   * @return {boolean} True if the element has an action.\n   * @private\n   */\n  action_(source, actionEventType, event, trust, opt_args) {\n    const action = this.findAction_(source, actionEventType);\n    if (!action) {\n      return false;\n    }\n    // Use a pseudo-UUID to uniquely identify this sequence of actions.\n    // A sequence is all actions triggered by a single event.\n    const sequenceId = Math.random();\n    // Invoke actions serially, where each action waits for its predecessor\n    // to complete. `currentPromise` is the i'th promise in the chain.\n    /** @type {?Promise} */\n    let currentPromise = null;\n    action.actionInfos.forEach((actionInfo) => {\n      const {args, method, str, target} = actionInfo;\n      const dereferencedArgs = dereferenceArgsVariables(args, event, opt_args);\n      const invokeAction = () => {\n        const node = this.getActionNode_(target);\n        if (!node) {\n          this.error_(`Target \"${target}\" not found for action [${str}].`);\n          return;\n        }\n        const invocation = new ActionInvocation(\n          node,\n          method,\n          dereferencedArgs,\n          source,\n          action.node,\n          event,\n          trust,\n          actionEventType,\n          node.tagName || target,\n          sequenceId\n        );\n        return this.invoke_(invocation);\n      };\n      // Wait for the previous action, if any.\n      currentPromise = currentPromise\n        ? currentPromise.then(invokeAction)\n        : invokeAction();\n    });\n\n    return action.actionInfos.length >= 1;\n  }\n\n  /**\n   * @param {string} message\n   * @param {?Element=} opt_element\n   * @private\n   */\n  error_(message, opt_element) {\n    if (opt_element) {\n      // reportError() supports displaying the element in dev console.\n      const e = user().createError(`[${TAG_}] ${message}`);\n      reportError(e, opt_element);\n      throw e;\n    } else {\n      user().error(TAG_, message);\n    }\n  }\n\n  /**\n   * @param {!ActionInvocation} invocation\n   * @return {?Promise}\n   * @private\n   */\n  invoke_(invocation) {\n    const {method, tagOrTarget} = invocation;\n\n    // Check that this action is allowlisted (if a allowlist is set).\n    if (this.allowlist_) {\n      if (!isActionAllowlisted(invocation, this.allowlist_)) {\n        this.error_(\n          `\"${tagOrTarget}.${method}\" is not allowlisted ${JSON.stringify(\n            this.allowlist_\n          )}.`\n        );\n        return null;\n      }\n    }\n\n    // Handle global targets e.g. \"AMP\".\n    const globalTarget = this.globalTargets_[tagOrTarget];\n    if (globalTarget) {\n      return globalTarget(invocation);\n    }\n\n    // Subsequent handlers assume that invocation target is an Element.\n    const node = dev().assertElement(invocation.node);\n\n    // Handle global actions e.g. \"<any-element-id>.toggle\".\n    const globalMethod = this.globalMethodHandlers_[method];\n    if (globalMethod && invocation.satisfiesTrust(globalMethod.minTrust)) {\n      return globalMethod.handler(invocation);\n    }\n\n    // Handle element-specific actions.\n    const lowerTagName = node.tagName.toLowerCase();\n    if (isAmpTagName(lowerTagName)) {\n      if (node.enqueAction) {\n        node.enqueAction(invocation);\n      } else {\n        this.error_(`Unrecognized AMP element \"${lowerTagName}\".`, node);\n      }\n      return null;\n    }\n\n    // Special non-AMP elements with AMP ID or known supported actions.\n    const nonAmpActions = NON_AMP_ELEMENTS_ACTIONS_[lowerTagName];\n    // TODO(dvoytenko, #7063): switch back to `target.id` with form proxy.\n    const targetId = node.getAttribute('id') || '';\n    if (\n      isAmpTagName(targetId) ||\n      (nonAmpActions && nonAmpActions.indexOf(method) > -1)\n    ) {\n      const handler = node[ACTION_HANDLER_];\n      if (handler) {\n        handler(invocation);\n      } else {\n        node[ACTION_QUEUE_] = node[ACTION_QUEUE_] || [];\n        node[ACTION_QUEUE_].push(invocation);\n      }\n      return null;\n    }\n\n    // Unsupported method.\n    this.error_(\n      `Target (${tagOrTarget}) doesn't support \"${method}\" action.`,\n      invocation.caller\n    );\n\n    return null;\n  }\n\n  /**\n   * @param {!Element} target\n   * @param {string} actionEventType\n   * @param {!Element=} opt_stopAt\n   * @return {?{node: !Element, actionInfos: !Array<!ActionInfoDef>}}\n   */\n  findAction_(target, actionEventType, opt_stopAt) {\n    // Go from target up the DOM tree and find the applicable action.\n    let n = target;\n    while (n) {\n      if (opt_stopAt && n == opt_stopAt) {\n        return null;\n      }\n      const actionInfos = this.matchActionInfos_(n, actionEventType);\n      if (actionInfos && isEnabled(n)) {\n        return {node: n, actionInfos: devAssert(actionInfos)};\n      }\n      n = n.parentElement;\n    }\n    return null;\n  }\n\n  /**\n   * @param {!Element} node\n   * @param {string} actionEventType\n   * @return {?Array<!ActionInfoDef>}\n   */\n  matchActionInfos_(node, actionEventType) {\n    const actionMap = this.getActionMap_(node, actionEventType);\n    if (!actionMap) {\n      return null;\n    }\n    return actionMap[actionEventType] || null;\n  }\n\n  /**\n   * @param {!Element} node\n   * @param {string} actionEventType\n   * @return {?Object<string, !Array<!ActionInfoDef>>}\n   */\n  getActionMap_(node, actionEventType) {\n    let actionMap = node[ACTION_MAP_];\n    if (actionMap === undefined) {\n      actionMap = null;\n      if (node.hasAttribute('on')) {\n        const action = node.getAttribute('on');\n        actionMap = parseActionMap(action, node);\n        node[ACTION_MAP_] = actionMap;\n      } else if (node.hasAttribute('execute')) {\n        const action = node.getAttribute('execute');\n        actionMap = parseActionMap(`${actionEventType}:${action}`, node);\n        node[ACTION_MAP_] = actionMap;\n      }\n    }\n    return actionMap;\n  }\n\n  /**\n   * Resets a node's actions with those defined in the given actions string.\n   * @param {!Element} node\n   * @param {string} actionsStr\n   */\n  setActions(node, actionsStr) {\n    node.setAttribute('on', actionsStr);\n\n    // Clear cache.\n    delete node[ACTION_MAP_];\n  }\n\n  /**\n   * Given a browser 'change' or 'input' event, add `detail` property to it\n   * containing allowlisted properties of the target element. Noop if `detail`\n   * is readonly.\n   * @param {!ActionEventDef} event\n   * @private\n   */\n  addTargetPropertiesAsDetail_(event) {\n    const detail = /** @type {!JsonObject} */ (map());\n    const {target} = event;\n\n    if (target.value !== undefined) {\n      detail['value'] = target.value;\n    }\n\n    // Check tagName instead since `valueAsNumber` isn't supported on IE.\n    if (target.tagName == 'INPUT') {\n      // Probably supported natively but convert anyways for consistency.\n      detail['valueAsNumber'] = Number(target.value);\n    }\n\n    if (target.checked !== undefined) {\n      detail['checked'] = target.checked;\n    }\n\n    if (target.min !== undefined || target.max !== undefined) {\n      detail['min'] = target.min;\n      detail['max'] = target.max;\n    }\n\n    if (target.files) {\n      detail['files'] = toArray(target.files).map((file) => ({\n        'name': file.name,\n        'size': file.size,\n        'type': file.type,\n      }));\n    }\n\n    if (Object.keys(detail).length > 0) {\n      try {\n        event.detail = detail;\n      } catch {} // event.detail is readonly\n    }\n  }\n}\n\n/**\n * @param {string} lowercaseTagName\n * @return {boolean}\n * @private\n */\nfunction isAmpTagName(lowercaseTagName) {\n  return lowercaseTagName.substring(0, 4) === 'amp-';\n}\n\n/**\n * Returns `true` if the given action invocation is allowlisted in the given\n * allowlist. Default actions' alias, 'activate', are automatically\n * allowlisted if their corresponding registered alias is allowlisted.\n * @param {!ActionInvocation} invocation\n * @param {!Array<{tagOrTarget: string, method: string}>} allowlist\n * @return {boolean}\n * @private\n */\nfunction isActionAllowlisted(invocation, allowlist) {\n  let {method} = invocation;\n  const {node, tagOrTarget} = invocation;\n  // Use alias if default action is invoked.\n  if (\n    method === DEFAULT_ACTION &&\n    typeof node.getDefaultActionAlias == 'function'\n  ) {\n    method = node.getDefaultActionAlias();\n  }\n  const lcMethod = method.toLowerCase();\n  const lcTagOrTarget = tagOrTarget.toLowerCase();\n  return allowlist.some((w) => {\n    if (\n      w.tagOrTarget.toLowerCase() === lcTagOrTarget ||\n      w.tagOrTarget === '*'\n    ) {\n      if (w.method.toLowerCase() === lcMethod) {\n        return true;\n      }\n    }\n    return false;\n  });\n}\n\n/**\n * A clone of an event object with its function properties replaced.\n * This is useful e.g. for event objects that need to be passed to an async\n * context, but the browser might have cleaned up the original event object.\n * This clone replaces functions with error throws since they won't behave\n * normally after the original object has been destroyed.\n * @private visible for testing\n */\nexport class DeferredEvent {\n  /**\n   * @param {!Event} event\n   */\n  constructor(event) {\n    /** @type {?Object} */\n    this.detail = null;\n\n    cloneWithoutFunctions(event, this);\n  }\n}\n\n/**\n * Clones an object and replaces its function properties with throws.\n * @param {!T} original\n * @param {!T=} opt_dest\n * @return {!T}\n * @template T\n * @private\n */\nfunction cloneWithoutFunctions(original, opt_dest) {\n  const clone = opt_dest || map();\n  for (const prop in original) {\n    const value = original[prop];\n    if (typeof value === 'function') {\n      clone[prop] = notImplemented;\n    } else {\n      clone[prop] = original[prop];\n    }\n  }\n  return clone;\n}\n\n/** @private */\nfunction notImplemented() {\n  devAssert(null, 'Deferred events cannot access native event functions.');\n}\n\n/**\n * @param {string} action\n * @param {!Element} context\n * @return {?Object<string, !Array<!ActionInfoDef>>}\n * @private Visible for testing only.\n */\nexport function parseActionMap(action, context) {\n  const assertAction = assertActionForParser.bind(null, action, context);\n  const assertToken = assertTokenForParser.bind(null, action, context);\n\n  let actionMap = null;\n\n  const toks = new ParserTokenizer(action);\n  let tok;\n  let peek;\n  do {\n    tok = toks.next();\n    if (\n      tok.type == TokenType.EOF ||\n      (tok.type == TokenType.SEPARATOR && tok.value == ';')\n    ) {\n      // Expected, ignore.\n    } else if (tok.type == TokenType.LITERAL || tok.type == TokenType.ID) {\n      // Format: event:target.method\n\n      // Event: \"event:\"\n      const event = tok.value;\n\n      // Target: \":target.\" separator\n      assertToken(toks.next(), [TokenType.SEPARATOR], ':');\n\n      const actions = [];\n\n      // Handlers for event.\n      do {\n        const target = assertToken(toks.next(), [\n          TokenType.LITERAL,\n          TokenType.ID,\n        ]).value;\n\n        // Method: \".method\". Method is optional.\n        let method = DEFAULT_ACTION;\n        let args = null;\n\n        peek = toks.peek();\n        if (peek.type == TokenType.SEPARATOR && peek.value == '.') {\n          toks.next(); // Skip '.'\n          method =\n            assertToken(toks.next(), [TokenType.LITERAL, TokenType.ID]).value ||\n            method;\n\n          // Optionally, there may be arguments: \"(key = value, key = value)\".\n          peek = toks.peek();\n          if (peek.type == TokenType.SEPARATOR && peek.value == '(') {\n            toks.next(); // Skip '('\n            args = tokenizeMethodArguments(toks, assertToken, assertAction);\n          }\n        }\n\n        actions.push({\n          event,\n          target,\n          method,\n          args:\n            args && getMode().test && Object.freeze\n              ? Object.freeze(args)\n              : args,\n          str: action,\n        });\n\n        peek = toks.peek();\n      } while (\n        peek.type == TokenType.SEPARATOR &&\n        peek.value == ',' &&\n        toks.next()\n      ); // skip \",\" when found\n\n      if (!actionMap) {\n        actionMap = map();\n      }\n\n      actionMap[event] = actions;\n    } else {\n      // Unexpected token.\n      assertAction(false, `; unexpected token [${tok.value || ''}]`);\n    }\n  } while (tok.type != TokenType.EOF);\n\n  return actionMap;\n}\n\n/**\n * Tokenizes and returns method arguments, e.g. target.method(arguments).\n * @param {!ParserTokenizer} toks\n * @param {!Function} assertToken\n * @param {!Function} assertAction\n * @return {?ActionInfoArgsDef}\n * @private\n */\nfunction tokenizeMethodArguments(toks, assertToken, assertAction) {\n  let peek = toks.peek();\n  let tok;\n  let args = null;\n  // Object literal. Format: {...}\n  if (peek.type == TokenType.OBJECT) {\n    // Don't parse object literals. Tokenize as a single expression\n    // fragment and delegate to specific action handler.\n    args = map();\n    const {value} = toks.next();\n    args[RAW_OBJECT_ARGS_KEY] = value;\n    assertToken(toks.next(), [TokenType.SEPARATOR], ')');\n  } else {\n    // Key-value pairs. Format: key = value, ....\n    do {\n      tok = toks.next();\n      const {type, value} = tok;\n      if (type == TokenType.SEPARATOR && (value == ',' || value == ')')) {\n        // Expected: ignore.\n      } else if (type == TokenType.LITERAL || type == TokenType.ID) {\n        // Key: \"key = \"\n        assertToken(toks.next(), [TokenType.SEPARATOR], '=');\n        // Value is either a literal or an expression: \"foo.bar.baz\"\n        tok = assertToken(toks.next(/* convertValue */ true), [\n          TokenType.LITERAL,\n          TokenType.ID,\n        ]);\n        const argValueTokens = [tok];\n        // Expressions have one or more dereferences: \".identifier\"\n        if (tok.type == TokenType.ID) {\n          for (\n            peek = toks.peek();\n            peek.type == TokenType.SEPARATOR && peek.value == '.';\n            peek = toks.peek()\n          ) {\n            toks.next(); // Skip '.'.\n            tok = assertToken(toks.next(false), [TokenType.ID]);\n            argValueTokens.push(tok);\n          }\n        }\n        const argValue = argValueForTokens(argValueTokens);\n        if (!args) {\n          args = map();\n        }\n        args[value] = argValue;\n        peek = toks.peek();\n        assertAction(\n          peek.type == TokenType.SEPARATOR &&\n            (peek.value == ',' || peek.value == ')'),\n          'Expected either [,] or [)]'\n        );\n      } else {\n        // Unexpected token.\n        assertAction(false, `; unexpected token [${tok.value || ''}]`);\n      }\n    } while (!(tok.type == TokenType.SEPARATOR && tok.value == ')'));\n  }\n  return args;\n}\n\n/**\n * @param {Array<!TokenDef>} tokens\n * @return {?ActionInfoArgValueDef}\n * @private\n */\nfunction argValueForTokens(tokens) {\n  if (tokens.length == 0) {\n    return null;\n  } else if (tokens.length == 1) {\n    return /** @type {(boolean|number|string)} */ (tokens[0].value);\n  } else {\n    const values = tokens.map((token) => token.value);\n    const expression = values.join('.');\n    return /** @type {ActionInfoArgExpressionDef} */ ({expression});\n  }\n}\n\n/**\n * Dereferences expression args in `args` using values in data.\n * @param {?ActionInfoArgsDef} args\n * @param {?ActionEventDef} event\n * @param {?JsonObject=} opt_args\n * @return {?JsonObject}\n * @private\n */\nexport function dereferenceArgsVariables(args, event, opt_args) {\n  if (!args) {\n    return args;\n  }\n  const data = opt_args || dict({});\n  if (event) {\n    const detail = getDetail(/** @type {!Event} */ (event));\n    if (detail) {\n      data['event'] = detail;\n    }\n  }\n  const applied = map();\n  Object.keys(args).forEach((key) => {\n    let value = args[key];\n    // Only JSON expression strings that contain dereferences (e.g. `foo.bar`)\n    // are processed as ActionInfoArgExpressionDef. We also support\n    // dereferencing strings like `foo` iff there is a corresponding key in\n    // `data`. Otherwise, `foo` is treated as a string \"foo\".\n    if (typeof value == 'object' && value.expression) {\n      const expr = /** @type {ActionInfoArgExpressionDef} */ (value).expression;\n      const exprValue = getValueForExpr(data, expr);\n      // If expr can't be found in data, use null instead of undefined.\n      value = exprValue === undefined ? null : exprValue;\n    }\n    if (data[value]) {\n      applied[key] = data[value];\n    } else {\n      applied[key] = value;\n    }\n  });\n  return applied;\n}\n\n/**\n * @param {string} s\n * @param {!Element} context\n * @param {?T} condition\n * @param {string=} opt_message\n * @return {T}\n * @template T\n * @private\n */\nfunction assertActionForParser(s, context, condition, opt_message) {\n  return userAssert(\n    condition,\n    'Invalid action definition in %s: [%s] %s',\n    context,\n    s,\n    opt_message || ''\n  );\n}\n\n/**\n * @param {string} s\n * @param {!Element} context\n * @param {!TokenDef} tok\n * @param {Array<TokenType>} types\n * @param {*=} opt_value\n * @return {!TokenDef}\n * @private\n */\nfunction assertTokenForParser(s, context, tok, types, opt_value) {\n  if (opt_value !== undefined) {\n    assertActionForParser(\n      s,\n      context,\n      types.includes(tok.type) && tok.value == opt_value,\n      `; expected [${opt_value}]`\n    );\n  } else {\n    assertActionForParser(s, context, types.includes(tok.type));\n  }\n  return tok;\n}\n\n/**\n * @enum {number}\n */\nconst TokenType = {\n  INVALID: 0,\n  EOF: 1,\n  SEPARATOR: 2,\n  LITERAL: 3,\n  ID: 4,\n  OBJECT: 5,\n};\n\n/**\n * @typedef {{type: TokenType, value: *}}\n */\nlet TokenDef;\n\n/** @private @const {string} */\nconst WHITESPACE_SET = ' \\t\\n\\r\\f\\v\\u00A0\\u2028\\u2029';\n\n/** @private @const {string} */\nconst SEPARATOR_SET = ';:.()=,|!';\n\n/** @private @const {string} */\nconst STRING_SET = '\"\\'';\n\n/** @private @const {string} */\nconst OBJECT_SET = '{}';\n\n/** @private @const {string} */\nconst SPECIAL_SET = WHITESPACE_SET + SEPARATOR_SET + STRING_SET + OBJECT_SET;\n\n/** @private */\nclass ParserTokenizer {\n  /**\n   * @param {string} str\n   */\n  constructor(str) {\n    /** @private @const {string} */\n    this.str_ = str;\n\n    /** @private {number} */\n    this.index_ = -1;\n  }\n\n  /**\n   * Returns the next token and advances the position.\n   * @param {boolean=} opt_convertValues\n   * @return {!TokenDef}\n   */\n  next(opt_convertValues) {\n    const tok = this.next_(opt_convertValues || false);\n    this.index_ = tok.index;\n    return tok;\n  }\n\n  /**\n   * Returns the next token but keeps the current position.\n   * @param {boolean=} opt_convertValues\n   * @return {!TokenDef}\n   */\n  peek(opt_convertValues) {\n    return this.next_(opt_convertValues || false);\n  }\n\n  /**\n   * @param {boolean} convertValues\n   * @return {!{type: TokenType, value: *, index: number}}\n   */\n  next_(convertValues) {\n    let newIndex = this.index_ + 1;\n    if (newIndex >= this.str_.length) {\n      return {type: TokenType.EOF, index: this.index_};\n    }\n\n    let c = this.str_.charAt(newIndex);\n\n    // Whitespace: standard set.\n    if (WHITESPACE_SET.indexOf(c) != -1) {\n      newIndex++;\n      for (; newIndex < this.str_.length; newIndex++) {\n        if (WHITESPACE_SET.indexOf(this.str_.charAt(newIndex)) == -1) {\n          break;\n        }\n      }\n      if (newIndex >= this.str_.length) {\n        return {type: TokenType.EOF, index: newIndex};\n      }\n      c = this.str_.charAt(newIndex);\n    }\n\n    // A numeric. Notice that it steals the `.` from separators.\n    if (\n      convertValues &&\n      (isNum(c) ||\n        (c == '.' &&\n          newIndex + 1 < this.str_.length &&\n          isNum(this.str_[newIndex + 1])))\n    ) {\n      let hasFraction = c == '.';\n      let end = newIndex + 1;\n      for (; end < this.str_.length; end++) {\n        const c2 = this.str_.charAt(end);\n        if (c2 == '.') {\n          hasFraction = true;\n          continue;\n        }\n        if (!isNum(c2)) {\n          break;\n        }\n      }\n      const s = this.str_.substring(newIndex, end);\n      const value = hasFraction ? parseFloat(s) : parseInt(s, 10);\n      newIndex = end - 1;\n      return {type: TokenType.LITERAL, value, index: newIndex};\n    }\n\n    // Different separators.\n    if (SEPARATOR_SET.indexOf(c) != -1) {\n      return {type: TokenType.SEPARATOR, value: c, index: newIndex};\n    }\n\n    // String literal.\n    if (STRING_SET.indexOf(c) != -1) {\n      let end = -1;\n      for (let i = newIndex + 1; i < this.str_.length; i++) {\n        if (this.str_.charAt(i) == c) {\n          end = i;\n          break;\n        }\n      }\n      if (end == -1) {\n        return {type: TokenType.INVALID, index: newIndex};\n      }\n      const value = this.str_.substring(newIndex + 1, end);\n      newIndex = end;\n      return {type: TokenType.LITERAL, value, index: newIndex};\n    }\n\n    // Object literal.\n    if (c == '{') {\n      let numberOfBraces = 1;\n      let end = -1;\n      for (let i = newIndex + 1; i < this.str_.length; i++) {\n        const char = this.str_[i];\n        if (char == '{') {\n          numberOfBraces++;\n        } else if (char == '}') {\n          numberOfBraces--;\n        }\n        if (numberOfBraces <= 0) {\n          end = i;\n          break;\n        }\n      }\n      if (end == -1) {\n        return {type: TokenType.INVALID, index: newIndex};\n      }\n      const value = this.str_.substring(newIndex, end + 1);\n      newIndex = end;\n      return {type: TokenType.OBJECT, value, index: newIndex};\n    }\n\n    // Advance until next special character.\n    let end = newIndex + 1;\n    for (; end < this.str_.length; end++) {\n      if (SPECIAL_SET.indexOf(this.str_.charAt(end)) != -1) {\n        break;\n      }\n    }\n    const s = this.str_.substring(newIndex, end);\n    newIndex = end - 1;\n\n    // Boolean literal.\n    if (convertValues && (s == 'true' || s == 'false')) {\n      const value = s == 'true';\n      return {type: TokenType.LITERAL, value, index: newIndex};\n    }\n\n    // Identifier.\n    if (!isNum(s.charAt(0))) {\n      return {type: TokenType.ID, value: s, index: newIndex};\n    }\n\n    // Key.\n    return {type: TokenType.LITERAL, value: s, index: newIndex};\n  }\n}\n\n/**\n * Tests whether a chacter is a number.\n * @param {string} c\n * @return {boolean}\n */\nfunction isNum(c) {\n  return c >= '0' && c <= '9';\n}\n\n/**\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n */\nexport function installActionServiceForDoc(ampdoc) {\n  registerServiceBuilderForDoc(\n    ampdoc,\n    'action',\n    ActionService,\n    /* opt_instantiate */ true\n  );\n}\n", "import {bytesToString, stringToBytes, utf8Decode, utf8Encode} from './bytes';\n\n/**\n * Character mapping from base64url to base64.\n * @const {!Object<string, string>}\n */\nconst base64UrlDecodeSubs = {'-': '+', '_': '/', '.': '='};\n\n/**\n * Character mapping from base64 to base64url.\n * @const {!Object<string, string>}\n */\nconst base64UrlEncodeSubs = {'+': '-', '/': '_', '=': '.'};\n\n/**\n * Converts a string which is in base64url encoding into a Uint8Array\n * containing the decoded value.\n * @param {string} str\n * @return {!Uint8Array}\n */\nexport function base64UrlDecodeToBytes(str) {\n  const encoded = atob(str.replace(/[-_.]/g, (ch) => base64UrlDecodeSubs[ch]));\n  return stringToBytes(encoded);\n}\n\n/**\n * Converts a string which is in base64 encoding into a Uint8Array\n * containing the decoded value.\n * @param {string} str\n * @return {!Uint8Array}\n */\nexport function base64DecodeToBytes(str) {\n  return stringToBytes(atob(str));\n}\n\n/**\n * Converts a bytes array into base64url encoded string.\n * base64url is defined in RFC 4648. It is sometimes referred to as \"web safe\".\n * @param {!Uint8Array} bytes\n * @return {string}\n */\nexport function base64UrlEncodeFromBytes(bytes) {\n  const str = bytesToString(bytes);\n  return btoa(str).replace(/[+/=]/g, (ch) => base64UrlEncodeSubs[ch]);\n}\n\n/**\n * Converts a string into base64url encoded string.\n * base64url is defined in RFC 4648. It is sometimes referred to as \"web safe\".\n * @param {string} str\n * @return {string}\n */\nexport function base64UrlEncodeFromString(str) {\n  const bytes = utf8Encode(str);\n  return base64UrlEncodeFromBytes(bytes);\n}\n\n/**\n * Decode a base64url encoded string by `base64UrlEncodeFromString`\n * @param {string} str\n * @return {string}\n */\nexport function base64UrlDecodeFromString(str) {\n  const bytes = base64UrlDecodeToBytes(str);\n  return utf8Decode(bytes);\n}\n\n/**\n * Converts a bytes array into base64 encoded string.\n * @param {!Uint8Array} bytes\n * @return {string}\n */\nexport function base64EncodeFromBytes(bytes) {\n  return btoa(bytesToString(bytes));\n}\n", "import {dict} from '#core/types/object';\n\nimport {Services} from '#service';\n\nimport {dev} from '#utils/log';\n\nimport {getSourceOrigin} from '../url';\n\n/**\n * The Client ID service key.\n * @const @private {string}\n */\nconst SERVICE_KEY_ = 'AIzaSyDKtqGxnoeIqVM33Uf7hRSa3GJxuzR7mLc';\n\n/**\n * Tag for debug logging.\n * @const @private {string}\n */\nconst TAG_ = 'CacheCidApi';\n\n/**\n * The URL for the cache-served CID API.\n * @const @private {string}\n */\nconst CACHE_API_URL = 'https://ampcid.google.com/v1/cache:getClientId?key=';\n\n/**\n * The XHR timeout in milliseconds for requests to the CID API.\n * @const @private {number}\n */\nconst TIMEOUT_ = 30000;\n\n/**\n * Exposes CID API for cache-served pages without a viewer.\n */\nexport class CacheCidApi {\n  /** @param {!./ampdoc-impl.AmpDoc} ampdoc */\n  constructor(ampdoc) {\n    /** @private {!./ampdoc-impl.AmpDoc} */\n    this.ampdoc_ = ampdoc;\n\n    /** @private {!./viewer-interface.ViewerInterface} */\n    this.viewer_ = Services.viewerForDoc(this.ampdoc_);\n\n    /** @private {?Promise<?string>} */\n    this.publisherCidPromise_ = null;\n\n    /** @private {!./timer-impl.Timer} */\n    this.timer_ = Services.timerFor(this.ampdoc_.win);\n  }\n\n  /**\n   * Returns true if the page is embedded in CCT and is served by a proxy.\n   * @return {boolean}\n   */\n  isSupported() {\n    return this.viewer_.isCctEmbedded() && this.viewer_.isProxyOrigin();\n  }\n\n  /**\n   * Returns scoped CID retrieved from the Viewer.\n   * @param {string} scope\n   * @return {!Promise<?string>}\n   */\n  getScopedCid(scope) {\n    if (!this.viewer_.isCctEmbedded()) {\n      return /** @type {!Promise<?string>} */ (Promise.resolve(null));\n    }\n\n    if (!this.publisherCidPromise_) {\n      const url = CACHE_API_URL + SERVICE_KEY_;\n      this.publisherCidPromise_ = this.fetchCid_(url);\n    }\n\n    return this.publisherCidPromise_.then((publisherCid) => {\n      return publisherCid ? this.scopeCid_(publisherCid, scope) : null;\n    });\n  }\n\n  /**\n   * Returns scoped CID retrieved from the Viewer.\n   * @param {string} url\n   * @param {boolean=} useAlternate\n   * @return {!Promise<?string>}\n   */\n  fetchCid_(url, useAlternate = true) {\n    const payload = dict({\n      'publisherOrigin': getSourceOrigin(this.ampdoc_.win.location),\n    });\n\n    // Make the XHR request to the cache endpoint.\n    const timeoutMessage = 'fetchCidTimeout';\n    return this.timer_\n      .timeoutPromise(\n        TIMEOUT_,\n        Services.xhrFor(this.ampdoc_.win).fetchJson(url, {\n          method: 'POST',\n          ampCors: false,\n          credentials: 'include',\n          mode: 'cors',\n          body: payload,\n        }),\n        timeoutMessage\n      )\n      .then((res) => {\n        return res.json().then((response) => {\n          if (response['optOut']) {\n            return null;\n          }\n          const cid = response['publisherClientId'];\n          if (!cid && useAlternate && response['alternateUrl']) {\n            // If an alternate url is provided, try again with the alternate url\n            // The client is still responsible for appending API keys to the URL.\n            const alt = `${response['alternateUrl']}?key=${SERVICE_KEY_}`;\n            return this.fetchCid_(dev().assertString(alt), false);\n          }\n          return cid;\n        });\n      })\n      .catch((e) => {\n        if (e && e.response) {\n          e.response.json().then((res) => {\n            dev().error(TAG_, JSON.stringify(res));\n          });\n        } else {\n          const isTimeout = e && e.message == timeoutMessage;\n          if (isTimeout) {\n            dev().expectedError(TAG_, e);\n          } else {\n            dev().error(TAG_, e);\n          }\n        }\n        return null;\n      });\n  }\n\n  /**\n   * Returns scoped CID extracted from the fetched publisherCid.\n   * @param {string} publisherCid\n   * @param {string} scope\n   * @return {!Promise<string>}\n   */\n  scopeCid_(publisherCid, scope) {\n    const text = publisherCid + ';' + scope;\n    return Services.cryptoFor(this.ampdoc_.win)\n      .sha384Base64(text)\n      .then((enc) => {\n        return 'amp-' + enc;\n      });\n  }\n}\n", "import {endsWith} from '#core/types/string';\nimport {tryDecodeUriComponent} from '#core/types/string/url';\n\nimport {userAssert} from '#utils/log';\n\nimport {urls} from './config';\nimport {getSourceOrigin, isProxyOrigin, parseUrlDeprecated} from './url';\n\nconst TEST_COOKIE_NAME = '-test-amp-cookie-tmp';\n\n/** @enum {string} */\nexport const SameSite = {\n  LAX: 'Lax',\n  STRICT: 'Strict',\n  NONE: 'None',\n};\n\n/**\n * Returns the value of the cookie. The cookie access is restricted and must\n * go through the privacy review. Before using this method please file a\n * GitHub issue with \"Privacy Review\" label.\n *\n * Returns the cookie's value or `null`.\n *\n * @param {!Window} win\n * @param {string} name\n * @return {?string}\n */\nexport function getCookie(win, name) {\n  const cookieString = tryGetDocumentCookie_(win);\n  if (!cookieString) {\n    return null;\n  }\n  const cookies = cookieString.split(';');\n  for (let i = 0; i < cookies.length; i++) {\n    const cookie = cookies[i].trim();\n    const eq = cookie.indexOf('=');\n    if (eq == -1) {\n      continue;\n    }\n    if (tryDecodeUriComponent(cookie.substring(0, eq).trim()) == name) {\n      const value = cookie.substring(eq + 1).trim();\n      return tryDecodeUriComponent(value, value);\n    }\n  }\n  return null;\n}\n\n/**\n * This method should not be inlined to prevent TryCatch deoptimization.\n * @param {!Window} win\n * @return {string}\n */\nfunction tryGetDocumentCookie_(win) {\n  try {\n    return win.document.cookie;\n  } catch (e) {\n    // Act as if no cookie is available. Exceptions can be thrown when\n    // AMP docs are opened on origins that do not allow setting\n    // cookies such as null origins.\n    return '';\n  }\n}\n\n/**\n * Sets the value of the cookie. The cookie access is restricted and must\n * go through the privacy review. Before using this method please file a\n * GitHub issue with \"Privacy Review\" label.\n *\n * @param {!Window} win\n * @param {string} name\n * @param {string} value\n * @param {time} expirationTime\n * @param {{\n *   highestAvailableDomain:(boolean|undefined),\n *   domain:(string|undefined),\n *   sameSite: (!SameSite|undefined),\n *   secure: (boolean|undefined),\n * }=} options\n *     - highestAvailableDomain: If true, set the cookie at the widest domain\n *       scope allowed by the browser. E.g. on example.com if we are currently\n *       on www.example.com.\n *     - domain: Explicit domain to set. domain overrides HigestAvailableDomain\n *     - allowOnProxyOrigin: Allow setting a cookie on the AMP Cache.\n *     - sameSite: The SameSite value to use when setting the cookie.\n *     - secure: Whether the cookie should contain Secure (only sent over https).\n */\nexport function setCookie(win, name, value, expirationTime, options = {}) {\n  checkOriginForSettingCookie(win, options, name);\n  let domain = undefined;\n  // Respect explicitly set domain over higestAvailabeDomain\n  if (options.domain) {\n    domain = options.domain;\n  } else if (options.highestAvailableDomain) {\n    domain = /** @type {string} */ (getHighestAvailableDomain(win));\n  }\n  trySetCookie(\n    win,\n    name,\n    value,\n    expirationTime,\n    domain,\n    options.sameSite,\n    options.secure\n  );\n}\n\n/**\n * Attemp to find the HighestAvailableDomain on\n * @param {!Window} win\n * @return {?string}\n */\nexport function getHighestAvailableDomain(win) {\n  // <meta name='amp-cookie-scope'>. Need to respect the meta first.\n\n  // Note: The same logic applies to shadow docs. Where all shadow docs are\n  // considered to be in the same origin. And only the <meta> from\n  // shell will be respected. (Header from shadow doc will be removed)\n  const metaTag =\n    win.document.head &&\n    win.document.head.querySelector(\"meta[name='amp-cookie-scope']\");\n\n  if (metaTag) {\n    // The content value could be an empty string. Return null instead\n    const cookieScope = metaTag.getAttribute('content') || '';\n    // Verify the validness of the amp-cookie-scope meta value\n    const sourceOrigin = getSourceOrigin(win.location.href);\n    // Verify the meta tag content value is valid\n    if (endsWith(sourceOrigin, '.' + cookieScope)) {\n      return cookieScope;\n    } else {\n      // When the amp-cookie-scope value is invalid, fallback to the exact origin\n      // the document is contained in.\n      // sourceOrigin in the format of 'https://xxx or http://xxx'\n      return sourceOrigin.split('://')[1];\n    }\n  }\n\n  if (!isProxyOrigin(win.location.href)) {\n    const parts = win.location.hostname.split('.');\n    let domain = parts[parts.length - 1];\n    const testCookieName = getTempCookieName(win);\n    for (let i = parts.length - 2; i >= 0; i--) {\n      domain = parts[i] + '.' + domain;\n      // Try set a cookie for testing only, expire after 1 sec\n      trySetCookie(win, testCookieName, 'delete', Date.now() + 1000, domain);\n      if (getCookie(win, testCookieName) == 'delete') {\n        // Remove the cookie for testing\n        trySetCookie(win, testCookieName, 'delete', Date.now() - 1000, domain);\n        return domain;\n      }\n    }\n  }\n\n  // Proxy origin w/o <meta name='amp-cookie-scope>\n  // We cannot calculate the etld+1 without the public suffix list.\n  // Return null instead.\n  // Note: This should not affect cookie writing because we don't allow writing\n  // cookie to highestAvailableDomain on proxy origin\n  // In the case of link decoration on proxy origin,\n  // we expect the correct meta tag to be\n  // set by publisher or cache order for AMP runtime to find all subdomains.\n  return null;\n}\n\n/**\n * Attempt to set a cookie with the given params.\n *\n * @param {!Window} win\n * @param {string} name\n * @param {string} value\n * @param {time} expirationTime\n * @param {string|undefined} domain\n * @param {!SameSite=} sameSite\n * @param {boolean|undefined=} secure\n */\nfunction trySetCookie(\n  win,\n  name,\n  value,\n  expirationTime,\n  domain,\n  sameSite,\n  secure\n) {\n  // We do not allow setting cookies on the domain that contains both\n  // the cdn. and www. hosts.\n  // Note: we need to allow cdn.ampproject.org in order to optin to experiments\n  if (domain == 'ampproject.org') {\n    // Actively delete them.\n    value = 'delete';\n    expirationTime = 0;\n  }\n  const cookie =\n    encodeURIComponent(name) +\n    '=' +\n    encodeURIComponent(value) +\n    '; path=/' +\n    (domain ? '; domain=' + domain : '') +\n    '; expires=' +\n    new Date(expirationTime).toUTCString() +\n    getSameSiteString(win, sameSite) +\n    (secure ? '; Secure' : '');\n  try {\n    win.document.cookie = cookie;\n  } catch (ignore) {\n    // Do not throw if setting the cookie failed Exceptions can be thrown\n    // when AMP docs are opened on origins that do not allow setting\n    // cookies such as null origins.\n  }\n}\n\n/**\n * Gets the cookie string to use for SameSite. This only sets the SameSite\n * value if specified, falling back to the browser default. The default value\n * is equivalent to SameSite.NONE, but is planned to be set to SameSite.LAX in\n * Chrome 80.\n *\n * Note: In Safari 12, if the value is set to SameSite.NONE, it is treated by\n * the browser as SameSite.STRICT.\n * @param {Window} win\n * @param {!SameSite|undefined} sameSite\n * @return {string} The string to use when setting the cookie.\n */\nfunction getSameSiteString(win, sameSite) {\n  if (!sameSite) {\n    return '';\n  }\n\n  return `; SameSite=${sameSite}`;\n}\n\n/**\n * Throws if a given cookie should not be set on the given origin.\n * This is a defense-in-depth. Callers should never run into this.\n *\n * @param {!Window} win\n * @param {!Object} options\n * @param {string} name For the error message.\n */\nfunction checkOriginForSettingCookie(win, options, name) {\n  if (options.allowOnProxyOrigin) {\n    userAssert(\n      !options.highestAvailableDomain,\n      'Could not support highestAvailable Domain on proxy origin, ' +\n        'specify domain explicitly'\n    );\n    return;\n  }\n  userAssert(\n    !isProxyOrigin(win.location.href),\n    `Should never attempt to set cookie on proxy origin: ${name}`\n  );\n  const current = parseUrlDeprecated(win.location.href).hostname.toLowerCase();\n  const proxy = parseUrlDeprecated(urls.cdn).hostname.toLowerCase();\n  userAssert(\n    !(current == proxy || endsWith(current, '.' + proxy)),\n    'Should never attempt to set cookie on proxy origin. (in depth check): ' +\n      name\n  );\n}\n\n/**\n * Return a temporary cookie name for testing only\n * @param {!Window} win\n * @return {string}\n */\nfunction getTempCookieName(win) {\n  let testCookieName = TEST_COOKIE_NAME;\n  const counter = 0;\n  while (getCookie(win, testCookieName)) {\n    // test cookie name conflict, append counter to test cookie name\n    testCookieName = TEST_COOKIE_NAME + counter;\n  }\n  return testCookieName;\n}\n", "import {dict} from '#core/types/object';\nimport {WindowInterface} from '#core/window/interface';\n\nimport {Services} from '#service';\n\nimport {dev} from '#utils/log';\n\nimport {getCookie, setCookie} from '../cookies';\nimport {isProxyOrigin, parseUrlDeprecated} from '../url';\n\nconst GOOGLE_API_URL =\n  'https://ampcid.google.com/v1/publisher:getClientId?key=';\n\nconst TAG = 'GoogleCidApi';\nconst AMP_TOKEN = 'AMP_TOKEN';\n\n/** @enum {string} */\nexport const TokenStatus = {\n  RETRIEVING: '$RETRIEVING',\n  OPT_OUT: '$OPT_OUT',\n  NOT_FOUND: '$NOT_FOUND',\n  ERROR: '$ERROR',\n};\n\nconst TIMEOUT = 30000;\nconst HOUR = 60 * 60 * 1000;\nconst DAY = 24 * HOUR;\nconst YEAR = 365 * DAY;\n\n/**\n * Client impl for Google CID API\n */\nexport class GoogleCidApi {\n  /** @param {!./ampdoc-impl.AmpDoc} ampdoc */\n  constructor(ampdoc) {\n    /**\n     * @private {!Window}\n     */\n    this.win_ = ampdoc.win;\n    /**\n     * @private {!./timer-impl.Timer}\n     */\n    this.timer_ = Services.timerFor(this.win_);\n\n    /**\n     * @private {!Object<string, !Promise<?string>>}\n     */\n    this.cidPromise_ = {};\n\n    const {canonicalUrl} = Services.documentInfoForDoc(ampdoc);\n\n    /** @private {?string} */\n    this.canonicalOrigin_ = canonicalUrl\n      ? parseUrlDeprecated(canonicalUrl).origin\n      : null;\n  }\n\n  /**\n   * @param {string} apiKey\n   * @param {string} scope\n   * @return {!Promise<?string>}\n   */\n  getScopedCid(apiKey, scope) {\n    if (this.cidPromise_[scope]) {\n      return this.cidPromise_[scope];\n    }\n    let token;\n    // Block the request if a previous request is on flight\n    // Poll every 200ms. Longer interval means longer latency for the 2nd CID.\n    return (this.cidPromise_[scope] = this.timer_\n      .poll(200, () => {\n        token = getCookie(this.win_, AMP_TOKEN);\n        return token !== TokenStatus.RETRIEVING;\n      })\n      .then(() => {\n        if (token === TokenStatus.OPT_OUT) {\n          return TokenStatus.OPT_OUT;\n        }\n        // If the page referrer is proxy origin, we force to use API even the\n        // token indicates a previous fetch returned nothing\n        const forceFetch =\n          token === TokenStatus.NOT_FOUND && this.isReferrerProxyOrigin_();\n\n        // Token is in a special state, fallback to existing cookie\n        if (!forceFetch && this.isStatusToken_(token)) {\n          return null;\n        }\n\n        if (!token || this.isStatusToken_(token)) {\n          this.persistToken_(TokenStatus.RETRIEVING, TIMEOUT);\n        }\n\n        const url = GOOGLE_API_URL + apiKey;\n        return this.fetchCid_(dev().assertString(url), scope, token)\n          .then((response) => {\n            const cid = this.handleResponse_(response);\n            if (!cid && response['alternateUrl']) {\n              // If an alternate url is provided, try again with the alternate\n              // url The client is still responsible for appending API keys to\n              // the URL.\n              const altUrl = `${response['alternateUrl']}?key=${apiKey}`;\n              return this.fetchCid_(\n                dev().assertString(altUrl),\n                scope,\n                token\n              ).then(this.handleResponse_.bind(this));\n            }\n            return cid;\n          })\n          .catch((e) => {\n            this.persistToken_(TokenStatus.ERROR, TIMEOUT);\n            if (e && e.response) {\n              e.response.json().then((res) => {\n                dev().error(TAG, JSON.stringify(res));\n              });\n            } else {\n              dev().error(TAG, e);\n            }\n            return null;\n          });\n      }));\n  }\n\n  /**\n   * @param {string} url\n   * @param {string} scope\n   * @param {?string} token\n   * @return {!Promise<!JsonObject>}\n   */\n  fetchCid_(url, scope, token) {\n    const payload = dict({\n      'originScope': scope,\n      'canonicalOrigin': this.canonicalOrigin_,\n    });\n    if (token) {\n      payload['securityToken'] = token;\n    }\n    return this.timer_.timeoutPromise(\n      TIMEOUT,\n      Services.xhrFor(this.win_)\n        .fetchJson(url, {\n          method: 'POST',\n          ampCors: false,\n          credentials: 'include',\n          mode: 'cors',\n          body: payload,\n        })\n        .then((res) => res.json())\n    );\n  }\n\n  /**\n   * @param {!JsonObject} res\n   * @return {?string}\n   */\n  handleResponse_(res) {\n    if (res['optOut']) {\n      this.persistToken_(TokenStatus.OPT_OUT, YEAR);\n      return TokenStatus.OPT_OUT;\n    }\n    if (res['clientId']) {\n      this.persistToken_(res['securityToken'], YEAR);\n      return res['clientId'];\n    }\n    if (res['alternateUrl']) {\n      return null;\n    }\n    this.persistToken_(TokenStatus.NOT_FOUND, HOUR);\n    return null;\n  }\n\n  /**\n   * @param {string|undefined} tokenValue\n   * @param {number} expires\n   */\n  persistToken_(tokenValue, expires) {\n    if (tokenValue) {\n      setCookie(this.win_, AMP_TOKEN, tokenValue, this.expiresIn_(expires), {\n        highestAvailableDomain: true,\n      });\n    }\n  }\n\n  /**\n   * @param {number} time\n   * @return {number}\n   */\n  expiresIn_(time) {\n    return this.win_.Date.now() + time;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isReferrerProxyOrigin_() {\n    return isProxyOrigin(WindowInterface.getDocumentReferrer(this.win_));\n  }\n\n  /**\n   * @param {?string} token\n   * @return {boolean}\n   */\n  isStatusToken_(token) {\n    return /** @type {boolean} */ (token && token[0] === '$');\n  }\n}\n", "import {dict} from '#core/types/object';\n\nimport {Services} from '#service';\n\nimport {parseUrlDeprecated} from '../url';\n\n/**\n * Exposes CID API if provided by the Viewer.\n */\nexport class ViewerCidApi {\n  /**\n   * Creates an instance of ViewerCidApi.\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @private {!./ampdoc-impl.AmpDoc} */\n    this.ampdoc_ = ampdoc;\n\n    /** @private {!./viewer-interface.ViewerInterface} */\n    this.viewer_ = Services.viewerForDoc(this.ampdoc_);\n\n    const {canonicalUrl} = Services.documentInfoForDoc(this.ampdoc_);\n\n    /** @private {?string} */\n    this.canonicalOrigin_ = canonicalUrl\n      ? parseUrlDeprecated(canonicalUrl).origin\n      : null;\n  }\n\n  /**\n   * Resolves to true if Viewer is trusted and supports CID API.\n   * @return {!Promise<boolean>}\n   */\n  isSupported() {\n    if (!this.viewer_.hasCapability('cid')) {\n      return Promise.resolve(false);\n    }\n    return this.viewer_.isTrustedViewer();\n  }\n\n  /**\n   * Returns scoped CID retrieved from the Viewer.\n   * @param {string|undefined} apiKey\n   * @param {string} scope\n   * @return {!Promise<?JsonObject|string|undefined>}\n   */\n  getScopedCid(apiKey, scope) {\n    const payload = dict({\n      'scope': scope,\n      'clientIdApi': !!apiKey,\n      'canonicalOrigin': this.canonicalOrigin_,\n    });\n    if (apiKey) {\n      payload['apiKey'] = apiKey;\n    }\n    return this.viewer_.sendMessageAwaitResponse('cid', payload);\n  }\n}\n", "/**\n * @fileoverview Provides per AMP document source origin and use case\n * persistent client identifiers for use in analytics and similar use\n * cases.\n *\n * For details, see https://goo.gl/Mwaacs\n */\n\nimport {tryResolve} from '#core/data-structures/promise';\nimport {isIframed} from '#core/dom';\nimport {rethrowAsync} from '#core/error';\nimport {dict} from '#core/types/object';\nimport {parseJson, tryParseJson} from '#core/types/object/json';\nimport {base64UrlEncodeFromBytes} from '#core/types/string/base64';\nimport {getCryptoRandomBytesArray} from '#core/types/string/bytes';\n\nimport {isExperimentOn} from '#experiments';\n\nimport {Services} from '#service';\n\nimport {dev, user, userAssert} from '#utils/log';\n\nimport {CacheCidApi} from './cache-cid-api';\nimport {GoogleCidApi, TokenStatus} from './cid-api';\nimport {ViewerCidApi} from './viewer-cid-api';\n\nimport {getCookie, setCookie} from '../cookies';\nimport {\n  getServiceForDoc,\n  registerServiceBuilderForDoc,\n} from '../service-helpers';\nimport {getSourceOrigin, isProxyOrigin, parseUrlDeprecated} from '../url';\n\nconst ONE_DAY_MILLIS = 24 * 3600 * 1000;\n\n/**\n * We ignore base cids that are older than (roughly) one year.\n */\nexport const BASE_CID_MAX_AGE_MILLIS = 365 * ONE_DAY_MILLIS;\n\nconst SCOPE_NAME_VALIDATOR = /^[a-zA-Z0-9-_.]+$/;\n\nconst CID_OPTOUT_STORAGE_KEY = 'amp-cid-optout';\n\nconst CID_OPTOUT_VIEWER_MESSAGE = 'cidOptOut';\n\nconst CID_BACKUP_STORAGE_KEY = 'amp-cid:';\n\n/**\n * Tag for debug logging.\n * @const @private {string}\n */\nconst TAG_ = 'CID';\n\n/**\n * The name of the Google CID API as it appears in the meta tag to opt-in.\n * @const @private {string}\n */\nconst GOOGLE_CID_API_META_NAME = 'amp-google-client-id-api';\n\n/**\n * The mapping from analytics providers to CID scopes.\n * @const @private {Object<string, string>}\n */\nconst CID_API_SCOPE_ALLOWLIST = {\n  'googleanalytics': 'AMP_ECID_GOOGLE',\n};\n\n/**\n * The mapping from analytics providers to their CID API service keys.\n * @const @private {Object<string, string>}\n */\nconst API_KEYS = {\n  'googleanalytics': 'AIzaSyA65lEHUEizIsNtlbNo-l2K18dT680nsaM',\n};\n\n/**\n * A base cid string value and the time it was last read / stored.\n * @typedef {{time: time, cid: string}}\n */\nlet BaseCidInfoDef;\n\n/**\n * The \"get CID\" parameters.\n * - createCookieIfNotPresent: Whether CID is allowed to create a cookie when.\n *   Default value is `false`.\n * - cookieName: Name of the cookie to be used if defined for non-proxy case.\n * - disableBackup: Whether CID should not be backed up in Storage.\n *   Default value is `false`.\n * @typedef {{\n *   scope: string,\n *   createCookieIfNotPresent: (boolean|undefined),\n *   cookieName: (string|undefined),\n *   disableBackup: (boolean|undefined),\n * }}\n */\nlet GetCidDef;\n\n/**\n * @interface\n */\nexport class CidDef {\n  /**\n   * @param {!GetCidDef} unusedGetCidStruct an object provides CID scope name for\n   *     proxy case and cookie name for non-proxy case.\n   * @param {!Promise} unusedConsent Promise for when the user has given consent\n   *     (if deemed necessary by the publisher) for use of the client\n   *     identifier.\n   * @param {!Promise=} opt_persistenceConsent Dedicated promise for when\n   *     it is OK to persist a new tracking identifier. This could be\n   *     supplied ONLY by the code that supplies the actual consent\n   *     cookie.\n   *     If this is given, the consent param should be a resolved promise\n   *     because this call should be only made in order to get consent.\n   *     The consent promise passed to other calls should then itself\n   *     depend on the opt_persistenceConsent promise (and the actual\n   *     consent, of course).\n   * @return {!Promise<?string>} A client identifier that should be used\n   *      within the current source origin and externalCidScope. Might be\n   *      null if user has opted out of cid or no identifier was found\n   *      or it could be made.\n   *      This promise may take a long time to resolve if consent isn't\n   *      given.\n   */\n  get(unusedGetCidStruct, unusedConsent, opt_persistenceConsent) {}\n\n  /**\n   * User will be opted out of Cid issuance for all scopes.\n   * When opted-out Cid service will reject all `get` requests.\n   *\n   * @return {!Promise}\n   */\n  optOut() {}\n}\n\n/**\n * @implements {CidDef}\n */\nclass Cid {\n  /** @param {!./ampdoc-impl.AmpDoc} ampdoc */\n  constructor(ampdoc) {\n    /** @const */\n    this.ampdoc = ampdoc;\n\n    /**\n     * Cached base cid once read from storage to avoid repeated\n     * reads.\n     * @private {?Promise<string>}\n     * @restricted\n     */\n    this.baseCid_ = null;\n\n    /**\n     * Cache to store external cids. Scope is used as the key and cookie value\n     * is the value.\n     * @private {!Object<string, !Promise<string>>}\n     * @restricted\n     */\n    this.externalCidCache_ = Object.create(null);\n\n    /**\n     * @private @const {!CacheCidApi}\n     */\n    this.cacheCidApi_ = new CacheCidApi(ampdoc);\n\n    /**\n     * @private {!ViewerCidApi}\n     */\n    this.viewerCidApi_ = new ViewerCidApi(ampdoc);\n\n    this.cidApi_ = new GoogleCidApi(ampdoc);\n\n    /** @private {?Object<string, string>} */\n    this.apiKeyMap_ = null;\n\n    /** @const {boolean} */\n    this.isBackupCidExpOn = isExperimentOn(this.ampdoc.win, 'amp-cid-backup');\n  }\n\n  /** @override */\n  get(getCidStruct, consent, opt_persistenceConsent) {\n    userAssert(\n      SCOPE_NAME_VALIDATOR.test(getCidStruct.scope) &&\n        SCOPE_NAME_VALIDATOR.test(getCidStruct.cookieName),\n      'The CID scope and cookie name must only use the characters ' +\n        '[a-zA-Z0-9-_.]+\\nInstead found: %s',\n      getCidStruct.scope\n    );\n    return consent\n      .then(() => {\n        return this.ampdoc.whenFirstVisible();\n      })\n      .then(() => {\n        // Check if user has globally opted out of CID, we do this after\n        // consent check since user can optout during consent process.\n        return isOptedOutOfCid(this.ampdoc);\n      })\n      .then((optedOut) => {\n        if (optedOut) {\n          return '';\n        }\n        const cidPromise = this.getExternalCid_(\n          getCidStruct,\n          opt_persistenceConsent || consent\n        );\n        // Getting the CID might involve an HTTP request. We timeout after 10s.\n        return Services.timerFor(this.ampdoc.win)\n          .timeoutPromise(\n            10000,\n            cidPromise,\n            `Getting cid for \"${getCidStruct.scope}\" timed out`\n          )\n          .catch((error) => {\n            rethrowAsync(error);\n          });\n      });\n  }\n\n  /** @override */\n  optOut() {\n    return optOutOfCid(this.ampdoc);\n  }\n\n  /**\n   * Returns the \"external cid\". This is a cid for a specific purpose\n   * (Say Analytics provider X). It is unique per user, userAssert, that purpose\n   * and the AMP origin site.\n   * @param {!GetCidDef} getCidStruct\n   * @param {!Promise} persistenceConsent\n   * @return {!Promise<?string>}\n   */\n  getExternalCid_(getCidStruct, persistenceConsent) {\n    const {scope} = getCidStruct;\n    /** @const {!Location} */\n    const url = parseUrlDeprecated(this.ampdoc.win.location.href);\n    if (!isProxyOrigin(url)) {\n      const apiKey = this.isScopeOptedIn_(scope);\n      if (apiKey) {\n        return this.cidApi_.getScopedCid(apiKey, scope).then((scopedCid) => {\n          if (scopedCid == TokenStatus.OPT_OUT) {\n            return null;\n          }\n          if (scopedCid) {\n            const cookieName = getCidStruct.cookieName || scope;\n            setCidCookie(this.ampdoc.win, cookieName, scopedCid);\n            return scopedCid;\n          }\n          return getOrCreateCookie(this, getCidStruct, persistenceConsent);\n        });\n      }\n      return getOrCreateCookie(this, getCidStruct, persistenceConsent);\n    }\n\n    return this.viewerCidApi_.isSupported().then((supported) => {\n      if (supported) {\n        const apiKey = this.isScopeOptedIn_(scope);\n        return this.viewerCidApi_.getScopedCid(apiKey, scope);\n      }\n\n      if (this.cacheCidApi_.isSupported() && this.isScopeOptedIn_(scope)) {\n        return this.cacheCidApi_.getScopedCid(scope).then((scopedCid) => {\n          if (scopedCid) {\n            return scopedCid;\n          }\n          return this.scopeBaseCid_(persistenceConsent, scope, url);\n        });\n      }\n      return this.scopeBaseCid_(persistenceConsent, scope, url);\n    });\n  }\n\n  /**\n   *\n   * @param {!Promise} persistenceConsent\n   * @param {*} scope\n   * @param {!Location} url\n   * @return {*}\n   */\n  scopeBaseCid_(persistenceConsent, scope, url) {\n    return getBaseCid(this, persistenceConsent).then((baseCid) => {\n      return Services.cryptoFor(this.ampdoc.win).sha384Base64(\n        baseCid + getProxySourceOrigin(url) + scope\n      );\n    });\n  }\n\n  /**\n   * Checks if the page has opted in CID API for the given scope.\n   * Returns the API key that should be used, or null if page hasn't opted in.\n   *\n   * @param {string} scope\n   * @return {string|undefined}\n   */\n  isScopeOptedIn_(scope) {\n    if (!this.apiKeyMap_) {\n      this.apiKeyMap_ = this.getOptedInScopes_();\n    }\n    return this.apiKeyMap_[scope];\n  }\n\n  /**\n   * Reads meta tags for opted in scopes.  Meta tags will have the form\n   * <meta name=\"provider-api-name\" content=\"provider-name\">\n   * @return {!Object<string, string>}\n   */\n  getOptedInScopes_() {\n    const apiKeyMap = {};\n    const optInMeta = this.ampdoc.getMetaByName(GOOGLE_CID_API_META_NAME);\n    if (optInMeta) {\n      optInMeta.split(',').forEach((item) => {\n        item = item.trim();\n        if (item.indexOf('=') > 0) {\n          const pair = item.split('=');\n          const scope = pair[0].trim();\n          apiKeyMap[scope] = pair[1].trim();\n        } else {\n          const clientName = item;\n          const scope = CID_API_SCOPE_ALLOWLIST[clientName];\n          if (scope) {\n            apiKeyMap[scope] = API_KEYS[clientName];\n          } else {\n            user().warn(\n              TAG_,\n              `Unsupported client for Google CID API: ${clientName}.` +\n                `Please remove or correct meta[name=\"${GOOGLE_CID_API_META_NAME}\"]`\n            );\n          }\n        }\n      });\n    }\n    return apiKeyMap;\n  }\n}\n\n/**\n * User will be opted out of Cid issuance for all scopes.\n * When opted-out Cid service will reject all `get` requests.\n *\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @return {!Promise}\n * @visibleForTesting\n */\nexport function optOutOfCid(ampdoc) {\n  // Tell the viewer that user has opted out.\n  Services.viewerForDoc(ampdoc)./*OK*/ sendMessage(\n    CID_OPTOUT_VIEWER_MESSAGE,\n    dict()\n  );\n\n  // Store the optout bit in storage\n  return Services.storageForDoc(ampdoc).then((storage) => {\n    return storage.set(CID_OPTOUT_STORAGE_KEY, true);\n  });\n}\n\n/**\n * Whether user has opted out of Cid issuance for all scopes.\n *\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @return {!Promise<boolean>}\n * @visibleForTesting\n */\nexport function isOptedOutOfCid(ampdoc) {\n  return Services.storageForDoc(ampdoc)\n    .then((storage) => {\n      return storage.get(CID_OPTOUT_STORAGE_KEY).then((val) => !!val);\n    })\n    .catch(() => {\n      // If we fail to read the flag, assume not opted out.\n      return false;\n    });\n}\n\n/**\n * Sets a new CID cookie for expire 1 year from now.\n * @param {!Window} win\n * @param {string} scope\n * @param {string} cookie\n */\nfunction setCidCookie(win, scope, cookie) {\n  const expiration = Date.now() + BASE_CID_MAX_AGE_MILLIS;\n  setCookie(win, scope, cookie, expiration, {\n    highestAvailableDomain: true,\n  });\n}\n\n/**\n * Sets a new CID backup in Storage\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @param {string} cookieName\n * @param {string} cookie\n */\nfunction setCidBackup(ampdoc, cookieName, cookie) {\n  Services.storageForDoc(ampdoc).then((storage) => {\n    const isViewerStorage = storage.isViewerStorage();\n    if (!isViewerStorage) {\n      const key = getStorageKey(cookieName);\n      storage.setNonBoolean(key, cookie);\n    }\n  });\n}\n\n/**\n * @param {string} cookieName\n * @return {string}\n */\nfunction getStorageKey(cookieName) {\n  return CID_BACKUP_STORAGE_KEY + cookieName;\n}\n\n/**\n * Maybe gets the CID from cookie or, if allowed, gets backup CID\n * from Storage.\n * @param {!Cid} cid\n * @param {!GetCidDef} getCidStruct\n * @return {!Promise<?string>}\n */\nfunction maybeGetCidFromCookieOrBackup(cid, getCidStruct) {\n  const {ampdoc, isBackupCidExpOn} = cid;\n  const {win} = ampdoc;\n  const {disableBackup, scope} = getCidStruct;\n  const cookieName = getCidStruct.cookieName || scope;\n  const existingCookie = getCookie(win, cookieName);\n\n  if (existingCookie) {\n    return Promise.resolve(existingCookie);\n  }\n  if (isBackupCidExpOn && !disableBackup) {\n    return Services.storageForDoc(ampdoc)\n      .then((storage) => {\n        const key = getStorageKey(cookieName);\n        return storage.get(key, BASE_CID_MAX_AGE_MILLIS);\n      })\n      .then((backupCid) => {\n        if (!backupCid || typeof backupCid != 'string') {\n          return null;\n        }\n        return backupCid;\n      });\n  }\n  return Promise.resolve(null);\n}\n\n/**\n * If cookie exists it's returned immediately. Otherwise, if instructed, the\n * new cookie is created.\n * @param {!Cid} cid\n * @param {!GetCidDef} getCidStruct\n * @param {!Promise} persistenceConsent\n * @return {!Promise<?string>}\n */\nfunction getOrCreateCookie(cid, getCidStruct, persistenceConsent) {\n  const {ampdoc, isBackupCidExpOn} = cid;\n  const {win} = ampdoc;\n  const {disableBackup, scope} = getCidStruct;\n  const cookieName = getCidStruct.cookieName || scope;\n\n  return maybeGetCidFromCookieOrBackup(cid, getCidStruct).then(\n    (existingCookie) => {\n      if (!existingCookie && !getCidStruct.createCookieIfNotPresent) {\n        return /** @type {!Promise<?string>} */ (Promise.resolve(null));\n      }\n\n      if (existingCookie) {\n        // If we created the cookie, update it's expiration time.\n        if (/^amp-/.test(existingCookie)) {\n          setCidCookie(win, cookieName, existingCookie);\n          if (isBackupCidExpOn && !disableBackup) {\n            setCidBackup(ampdoc, cookieName, existingCookie);\n          }\n        }\n        return /** @type {!Promise<?string>} */ (\n          Promise.resolve(existingCookie)\n        );\n      }\n\n      if (cid.externalCidCache_[scope]) {\n        return /** @type {!Promise<?string>} */ (cid.externalCidCache_[scope]);\n      }\n\n      const newCookiePromise = getRandomString64(win)\n        // Create new cookie, always prefixed with \"amp-\", so that we can see from\n        // the value whether we created it.\n        .then((randomStr) => 'amp-' + randomStr);\n\n      // Store it as a cookie based on the persistence consent.\n      Promise.all([newCookiePromise, persistenceConsent]).then((results) => {\n        // The initial CID generation is inherently racy. First one that gets\n        // consent wins.\n        const newCookie = results[0];\n        const relookup = getCookie(win, cookieName);\n        if (!relookup) {\n          setCidCookie(win, cookieName, newCookie);\n          if (isBackupCidExpOn && !disableBackup) {\n            setCidBackup(ampdoc, cookieName, newCookie);\n          }\n        }\n      });\n      return (cid.externalCidCache_[scope] = newCookiePromise);\n    }\n  );\n}\n\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin. Throws an error if the doc is not on a proxy origin.\n * @param {!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n * @visibleForTesting BUT if this is needed elsewhere it could be\n *     factored into its own package.\n */\nexport function getProxySourceOrigin(url) {\n  userAssert(isProxyOrigin(url), 'Expected proxy origin %s', url.origin);\n  return getSourceOrigin(url);\n}\n\n/**\n * Returns the base cid for the current user(). This string must not\n * be exposed to users without hashing with the current source origin\n * and the externalCidScope.\n * On a proxy this value is the same for a user across all source\n * origins.\n * @param {!Cid} cid\n * @param {!Promise} persistenceConsent\n * @return {!Promise<string>}\n */\nfunction getBaseCid(cid, persistenceConsent) {\n  if (cid.baseCid_) {\n    return cid.baseCid_;\n  }\n  const {win} = cid.ampdoc;\n\n  return (cid.baseCid_ = read(cid.ampdoc).then((stored) => {\n    let needsToStore = false;\n    let baseCid;\n\n    // See if we have a stored base cid and whether it is still valid\n    // in terms of expiration.\n    if (stored && !isExpired(stored)) {\n      baseCid = Promise.resolve(stored.cid);\n      if (shouldUpdateStoredTime(stored)) {\n        needsToStore = true;\n      }\n    } else {\n      // We need to make a new one.\n      baseCid = Services.cryptoFor(win).sha384Base64(getEntropy(win));\n      needsToStore = true;\n    }\n\n    if (needsToStore) {\n      baseCid.then((baseCid) => {\n        store(cid.ampdoc, persistenceConsent, baseCid);\n      });\n    }\n\n    return baseCid;\n  }));\n}\n\n/**\n * Stores a new cidString in localStorage. Adds the current time to the\n * stored value.\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @param {!Promise} persistenceConsent\n * @param {string} cidString Actual cid string to store.\n */\nfunction store(ampdoc, persistenceConsent, cidString) {\n  const {win} = ampdoc;\n  if (isIframed(win)) {\n    // If we are being embedded, try to save the base cid to the viewer.\n    viewerBaseCid(ampdoc, createCidData(cidString));\n  } else {\n    // To use local storage, we need user's consent.\n    persistenceConsent.then(() => {\n      try {\n        win.localStorage.setItem('amp-cid', createCidData(cidString));\n      } catch (ignore) {\n        // Setting localStorage may fail. In practice we don't expect that to\n        // happen a lot (since we don't go anywhere near the quota, but\n        // in particular in Safari private browsing mode it always fails.\n        // In that case we just don't store anything, which is just fine.\n      }\n    });\n  }\n}\n\n/**\n * Get/set the Base CID from/to the viewer.\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @param {string=} opt_data Stringified JSON object {cid, time}.\n * @return {!Promise<string|undefined>}\n */\nexport function viewerBaseCid(ampdoc, opt_data) {\n  const viewer = Services.viewerForDoc(ampdoc);\n  return viewer.isTrustedViewer().then((trusted) => {\n    if (!trusted) {\n      return undefined;\n    }\n    // TODO(lannka, #11060): clean up when all Viewers get migrated\n    dev().expectedError('CID', 'Viewer does not provide cap=cid');\n    return viewer.sendMessageAwaitResponse('cid', opt_data).then((data) => {\n      // For backward compatibility: #4029\n      if (data && !tryParseJson(data)) {\n        // TODO(lannka, #11060): clean up when all Viewers get migrated\n        dev().expectedError('CID', 'invalid cid format');\n        return JSON.stringify(\n          dict({\n            'time': Date.now(), // CID returned from old API is always fresh\n            'cid': data,\n          })\n        );\n      }\n      return data;\n    });\n  });\n}\n\n/**\n * Creates a JSON object that contains the given CID and the current time as\n * a timestamp.\n * @param {string} cidString\n * @return {string}\n */\nfunction createCidData(cidString) {\n  return JSON.stringify(\n    dict({\n      'time': Date.now(),\n      'cid': cidString,\n    })\n  );\n}\n\n/**\n * Gets the persisted CID data as a promise. It tries to read from\n * localStorage first then from viewer if it is in embedded mode.\n * Returns null if none was found.\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @return {!Promise<?BaseCidInfoDef>}\n */\nfunction read(ampdoc) {\n  const {win} = ampdoc;\n  let data;\n  try {\n    data = win.localStorage.getItem('amp-cid');\n  } catch (ignore) {\n    // If reading from localStorage fails, we assume it is empty.\n  }\n  let dataPromise = Promise.resolve(data);\n  if (!data && isIframed(win)) {\n    // If we are being embedded, try to get the base cid from the viewer.\n    dataPromise = viewerBaseCid(ampdoc);\n  }\n  return dataPromise.then((data) => {\n    if (!data) {\n      return null;\n    }\n    const item = parseJson(data);\n    return {\n      time: item['time'],\n      cid: item['cid'],\n    };\n  });\n}\n\n/**\n * Whether the retrieved cid object is expired and should be ignored.\n * @param {!BaseCidInfoDef} storedCidInfo\n * @return {boolean}\n */\nfunction isExpired(storedCidInfo) {\n  const createdTime = storedCidInfo.time;\n  const now = Date.now();\n  return createdTime + BASE_CID_MAX_AGE_MILLIS < now;\n}\n\n/**\n * Whether we should write a new timestamp to the stored cid value.\n * We say yes if it is older than 1 day, so we only do this max once\n * per day to avoid writing to localStorage all the time.\n * @param {!BaseCidInfoDef} storedCidInfo\n * @return {boolean}\n */\nfunction shouldUpdateStoredTime(storedCidInfo) {\n  const createdTime = storedCidInfo.time;\n  const now = Date.now();\n  return createdTime + ONE_DAY_MILLIS < now;\n}\n\n/**\n * Returns an array with a total of 128 of random values based on the\n * `win.crypto.getRandomValues` API. If that is not available concatenates\n * a string of other values that might be hard to guess including\n * `Math.random` and the current time.\n * @param {!Window} win\n * @return {!Uint8Array|string} Entropy.\n */\nfunction getEntropy(win) {\n  // Use win.crypto.getRandomValues to get 128 bits of random value\n  const uint8array = getCryptoRandomBytesArray(win, 16); // 128 bit\n  if (uint8array) {\n    return uint8array;\n  }\n\n  // Support for legacy browsers.\n  return String(\n    win.location.href +\n      Date.now() +\n      win.Math.random() +\n      win.screen.width +\n      win.screen.height\n  );\n}\n\n/**\n * Produces an external CID for use in a cookie.\n * @param {!Window} win\n * @return {!Promise<string>} The cid\n */\nexport function getRandomString64(win) {\n  const entropy = getEntropy(win);\n  if (typeof entropy == 'string') {\n    return Services.cryptoFor(win).sha384Base64(entropy);\n  } else {\n    // If our entropy is a pure random number, we can just directly turn it\n    // into base 64\n    const cast = /** @type {!Uint8Array} */ (entropy);\n    return tryResolve(() =>\n      base64UrlEncodeFromBytes(cast)\n        // Remove trailing padding\n        .replace(/\\.+$/, '')\n    );\n  }\n}\n\n/**\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @return {*} TODO(#23582): Specify return type\n */\nexport function installCidService(ampdoc) {\n  return registerServiceBuilderForDoc(ampdoc, 'cid', Cid);\n}\n\n/**\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @return {!Cid}\n * @private visible for testing\n */\nexport function cidServiceForDocForTesting(ampdoc) {\n  registerServiceBuilderForDoc(ampdoc, 'cid', Cid);\n  return getServiceForDoc(ampdoc, 'cid');\n}\n", "import {isArray} from '#core/types';\nimport {map} from '#core/types/object';\nimport {parseQueryString} from '#core/types/string/url';\n\nimport {getRandomString64} from './cid-impl';\n\nimport {registerServiceBuilderForDoc} from '../service-helpers';\nimport {getProxyServingType, getSourceUrl, parseUrlDeprecated} from '../url';\n\n/** @private @const {!Array<string>} */\nconst filteredLinkRels = ['prefetch', 'preload', 'preconnect', 'dns-prefetch'];\n\n/**\n * Properties:\n *     - sourceUrl: the source url of an amp document.\n *     - canonicalUrl: The doc's canonical.\n *     - pageViewId: Id for this page view. Low entropy but should be unique\n *     - pageViewId64: Id for this page view. High entropy but should be unique\n *       for concurrent page views of a user().\n *     - linkRels: A map object of link tag's rel (key) and corresponding\n *       hrefs (value). rel could be 'canonical', 'icon', etc.\n *     - viewport: The global doc's viewport.\n *     - replaceParams: A map object of extra query string parameter names (key)\n *       to corresponding values, used for custom analytics.\n *       Null if not applicable.\n *\n * @typedef {{\n *   sourceUrl: string,\n *   canonicalUrl: string,\n *   pageViewId: string,\n *   pageViewId64: !Promise<string>,\n *   linkRels: !Object<string, string|!Array<string>>,\n *   viewport: ?string,\n *   replaceParams: ?Object<string, string|!Array<string>>\n * }}\n */\nexport let DocumentInfoDef;\n\n/**\n * @param {!Node|!./ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {*} TODO(#23582): Specify return type\n */\nexport function installDocumentInfoServiceForDoc(nodeOrDoc) {\n  return registerServiceBuilderForDoc(nodeOrDoc, 'documentInfo', DocInfo);\n}\n\nexport class DocInfo {\n  /**\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @private @const  */\n    this.ampdoc_ = ampdoc;\n    /** @private {?DocumentInfoDef} */\n    this.info_ = null;\n    /** @private {?Promise<string>} */\n    this.pageViewId64_ = null;\n  }\n\n  /** @return {!DocumentInfoDef} */\n  get() {\n    if (this.info_) {\n      return this.info_;\n    }\n    const ampdoc = this.ampdoc_;\n    const url = ampdoc.getUrl();\n    const sourceUrl = getSourceUrl(url);\n    const rootNode = ampdoc.getRootNode();\n    let canonicalUrl = rootNode && rootNode.AMP && rootNode.AMP.canonicalUrl;\n    if (!canonicalUrl) {\n      const canonicalTag = rootNode.querySelector('link[rel=canonical]');\n      canonicalUrl = canonicalTag\n        ? parseUrlDeprecated(canonicalTag.href).href\n        : sourceUrl;\n    }\n    const pageViewId = getPageViewId(ampdoc.win);\n    const linkRels = getLinkRels(ampdoc.win.document);\n    const viewport = getViewport(ampdoc.win.document);\n    const replaceParams = getReplaceParams(ampdoc);\n\n    return (this.info_ = {\n      /** @return {string} */\n      get sourceUrl() {\n        return getSourceUrl(ampdoc.getUrl());\n      },\n      canonicalUrl,\n      pageViewId,\n      get pageViewId64() {\n        // Must be calculated async since getRandomString64() can load the\n        // amp-crypto-polyfill on some browsers, and extensions service\n        // may not be registered yet.\n        if (!this.pageViewId64_) {\n          this.pageViewId64_ = getRandomString64(ampdoc.win);\n        }\n        return this.pageViewId64_;\n      },\n      linkRels,\n      viewport,\n      replaceParams,\n    });\n  }\n}\n\n/**\n * Returns a relatively low entropy random string.\n * This should be called once per window and then cached for subsequent\n * access to the same value to be persistent per page.\n * @param {!Window} win\n * @return {string}\n */\nfunction getPageViewId(win) {\n  return String(Math.floor(win.Math.random() * 10000));\n}\n\n/**\n * Returns a map object of link tag relations in document head.\n * Key is the link rel, value is a list of corresponding hrefs.\n * @param {!Document} doc\n * @return {!JsonObject<string, string|!Array<string>>}\n */\nfunction getLinkRels(doc) {\n  const linkRels = map();\n  if (doc.head) {\n    const links = doc.head.querySelectorAll('link[rel]');\n    for (let i = 0; i < links.length; i++) {\n      const link = links[i];\n      const {href} = link;\n      const rels = link.getAttribute('rel');\n      if (!rels || !href) {\n        continue;\n      }\n\n      rels.split(/\\s+/).forEach((rel) => {\n        if (filteredLinkRels.indexOf(rel) != -1) {\n          return;\n        }\n\n        let value = linkRels[rel];\n        if (value) {\n          // Change to array if more than one href for the same rel\n          if (!isArray(value)) {\n            value = linkRels[rel] = [value];\n          }\n          value.push(href);\n        } else {\n          linkRels[rel] = href;\n        }\n      });\n    }\n  }\n  return linkRels;\n}\n\n/**\n * Returns the viewport of the document. Note that this is the viewport of the\n * host document for AmpDocShadow instances.\n * @param {!Document} doc\n * @return {?string}\n */\nfunction getViewport(doc) {\n  const viewportEl = doc.head.querySelector('meta[name=\"viewport\"]');\n  return viewportEl ? viewportEl.getAttribute('content') : null;\n}\n\n/**\n * Attempts to retrieve extra parameters from the \"amp_r\" query param,\n * returning null if invalid.\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @return {?JsonObject<string, string|!Array<string>>}\n */\nfunction getReplaceParams(ampdoc) {\n  // The \"amp_r\" parameter is only supported for ads.\n  if (\n    !ampdoc.isSingleDoc() ||\n    getProxyServingType(ampdoc.win.location.href) != 'a'\n  ) {\n    return null;\n  }\n  const url = parseUrlDeprecated(ampdoc.win.location.href);\n  const replaceRaw = parseQueryString(url.search)['amp_r'];\n  if (replaceRaw === undefined) {\n    // Differentiate the case between empty replace params and invalid result\n    return null;\n  }\n  return parseQueryString(replaceRaw);\n}\n", "import {Observable} from '#core/data-structures/observable';\n\nimport {devAssert} from '#utils/log';\n\nimport {registerServiceBuilderForDoc} from '../service-helpers';\n\n/**\n * MutationObserverInit options to listen for mutations to the `hidden`\n * attribute.\n */\nconst OBSERVER_OPTIONS = {\n  attributes: true,\n  attributeFilter: ['hidden'],\n  subtree: true,\n};\n\n/**\n * A document level service that will listen for mutations on the `hidden`\n * attribute and notify listeners. The `hidden` attribute is used to toggle\n * `display: none` on elements.\n * @implements {../service.Disposable}\n */\nexport class HiddenObserver {\n  /**\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @const {!Document|!ShadowRoot} */\n    this.root_ = ampdoc.getRootNode();\n    const doc = this.root_.ownerDocument || this.root_;\n\n    /** @const {!Window} */\n    this.win_ = /** @type {!Window} */ (devAssert(doc.defaultView));\n\n    /** @private {?MutationObserver} */\n    this.mutationObserver_ = null;\n\n    /** @private {?Observable<!Array<!MutationRecord>>} */\n    this.observable_ = null;\n  }\n\n  /**\n   * Adds the observer to this instance.\n   * @param {function(!Array<!MutationRecord>)} handler Observer's handler.\n   * @return {!UnlistenDef}\n   */\n  add(handler) {\n    this.init_();\n\n    const remove = this.observable_.add(handler);\n    return () => {\n      remove();\n      if (this.observable_.getHandlerCount() === 0) {\n        this.dispose();\n      }\n    };\n  }\n\n  /**\n   * Initializes the mutation observer and observable.\n   */\n  init_() {\n    if (this.mutationObserver_) {\n      return;\n    }\n    this.observable_ = new Observable();\n\n    const mo = new this.win_.MutationObserver((mutations) => {\n      if (mutations) {\n        this.observable_.fire(mutations);\n      }\n    });\n    this.mutationObserver_ = mo;\n    mo.observe(this.root_, OBSERVER_OPTIONS);\n  }\n\n  /**\n   * Cleans up the all the mutation observer once the last listener stops\n   * listening, or when the service's doc is disposing.\n   */\n  dispose() {\n    if (!this.mutationObserver_) {\n      return;\n    }\n    this.mutationObserver_.disconnect();\n    this.observable_.removeAll();\n    this.mutationObserver_ = null;\n    this.observable_ = null;\n  }\n}\n\n/**\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n */\nexport function installHiddenObserverForDoc(ampdoc) {\n  registerServiceBuilderForDoc(ampdoc, 'hidden-observer', HiddenObserver);\n}\n", "/**\n * Gets state from History.\n * But IE11 throws if there is no state.\n *\n * @param {!History} history\n * @return {*}\n */\nexport function getHistoryState(history) {\n  try {\n    return history.state;\n  } catch (e) {\n    return null;\n  }\n}\n", "import {Deferred, tryResolve} from '#core/data-structures/promise';\nimport {dict, map} from '#core/types/object';\nimport {getHistoryState} from '#core/window/history';\n\nimport {Services} from '#service';\n\nimport {dev, devAssert} from '#utils/log';\n\nimport {getMode} from '../mode';\nimport {\n  getService,\n  registerServiceBuilder,\n  registerServiceBuilderForDoc,\n} from '../service-helpers';\n\n/** @private @const {string} */\nconst TAG_ = 'History';\n\n/** @private @const {string} */\nconst HISTORY_PROP_ = 'AMP.History';\n\n/** @typedef {number} */\nlet HistoryIdDef;\n\n/**\n * @typedef {{stackIndex: HistoryIdDef, title: string, fragment: string, data: (!JsonObject|undefined)}}\n */\nlet HistoryStateDef;\n\n/**\n * @typedef {{title: (string|undefined), fragment: (string|undefined), url: (string|undefined), canonicalUrl: (string|undefined), data: (!JsonObject|undefined)}}\n */\nlet HistoryStateUpdateDef;\n\n/**\n * Wraps the browser's History API for viewer support and necessary polyfills.\n */\nexport class History {\n  /**\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   * @param {!HistoryBindingInterface} binding\n   */\n  constructor(ampdoc, binding) {\n    /** @private @const {!./ampdoc-impl.AmpDoc} */\n    this.ampdoc_ = ampdoc;\n\n    /** @private @const {!../service/timer-impl.Timer} */\n    this.timer_ = Services.timerFor(ampdoc.win);\n\n    /** @private @const {!HistoryBindingInterface} */\n    this.binding_ = binding;\n\n    /** @private {number} */\n    this.stackIndex_ = 0;\n\n    /** @private {!Array<!Function|undefined>} */\n    this.stackOnPop_ = [];\n\n    /**\n     * @private {!Array<!{\n     *   callback: function():!Promise,\n     *   resolve: !Function,\n     *   reject: !Function,\n     *   trace: (!Error|undefined)\n     * }>} */\n    this.queue_ = [];\n\n    this.binding_.setOnStateUpdated(this.onStateUpdated_.bind(this));\n  }\n\n  /** @visibleForTesting */\n  cleanup() {\n    this.binding_.cleanup();\n  }\n\n  /**\n   * Pushes new state into history stack with an optional callback to be called\n   * when this state is popped as well as an object with updates to be applied\n   * to the state.\n   * @param {!Function=} opt_onPop\n   * @param {!HistoryStateUpdateDef=} opt_stateUpdate\n   * @return {!Promise<!HistoryIdDef>}\n   */\n  push(opt_onPop, opt_stateUpdate) {\n    return this.enque_(() => {\n      return this.binding_.push(opt_stateUpdate).then((historyState) => {\n        this.onStateUpdated_(historyState);\n        if (opt_onPop) {\n          this.stackOnPop_[historyState.stackIndex] = opt_onPop;\n        }\n        return historyState.stackIndex;\n      });\n    }, 'push');\n  }\n\n  /**\n   * Pops a previously pushed state from the history stack. If onPop callback\n   * has been registered, it will be called with the state that was associated\n   * with the new head state within the history stack. All states coming\n   * after the supplied state will also be popped, and their\n   * callbacks executed in the same fashion.\n   * @param {!HistoryIdDef} stateId\n   * @return {!Promise}\n   */\n  pop(stateId) {\n    return this.enque_(() => {\n      return this.binding_.pop(stateId).then((historyState) => {\n        this.onStateUpdated_(historyState);\n      });\n    }, 'pop');\n  }\n\n  /**\n   * Replaces the current state, optionally specifying updates to the state\n   * object to be associated with the replacement.\n   * @param {!HistoryStateUpdateDef=} opt_stateUpdate\n   * @return {!Promise}\n   */\n  replace(opt_stateUpdate) {\n    return this.enque_(() => this.binding_.replace(opt_stateUpdate), 'replace');\n  }\n\n  /**\n   * Retrieves the current state, containing the current fragment, title,\n   * and amp-bind state.\n   * @return {!Promise<!HistoryStateDef>}\n   */\n  get() {\n    return this.enque_(() => this.binding_.get(), 'get');\n  }\n\n  /**\n   * Requests navigation one step back. This first attempts to go back within\n   * the context of this document.\n   *\n   * @param {boolean=} navigate\n   * @return {!Promise}\n   */\n  goBack(navigate) {\n    return this.enque_(() => {\n      if (this.stackIndex_ <= 0 && !navigate) {\n        return Promise.resolve();\n      }\n\n      // Pop the current state. The binding will ignore the request if\n      // it cannot satisfy it.\n      return this.binding_.pop(this.stackIndex_).then((historyState) => {\n        this.onStateUpdated_(historyState);\n      });\n    }, 'goBack');\n  }\n\n  /**\n   * Helper method to handle navigation to a local target, e.g. When a user\n   * clicks an anchor link to a local hash - <a href=\"#section1\">Go to section\n   * 1</a>.\n   *\n   * @param {string} target\n   * @return {!Promise}\n   */\n  replaceStateForTarget(target) {\n    devAssert(target[0] == '#', 'target should start with a #');\n    const previousHash = this.ampdoc_.win.location.hash;\n    return this.push(() => {\n      this.ampdoc_.win.location.replace(previousHash || '#');\n    }).then(() => {\n      this.binding_.replaceStateForTarget(target);\n    });\n  }\n\n  /**\n   * Get the fragment from the url or the viewer.\n   * Strip leading '#' in the fragment\n   * @return {!Promise<string>}\n   */\n  getFragment() {\n    return this.binding_.getFragment();\n  }\n\n  /**\n   * Update the page url fragment\n   * @param {string} fragment\n   * @return {!Promise}\n   */\n  updateFragment(fragment) {\n    if (fragment[0] == '#') {\n      fragment = fragment.substr(1);\n    }\n    return this.binding_.updateFragment(fragment);\n  }\n\n  /**\n   * @param {!HistoryStateDef} historyState\n   * @private\n   */\n  onStateUpdated_(historyState) {\n    this.stackIndex_ = historyState.stackIndex;\n    this.doPop_(historyState);\n  }\n\n  /**\n   * @param {!HistoryStateDef} historyState\n   * @private\n   */\n  doPop_(historyState) {\n    if (this.stackIndex_ >= this.stackOnPop_.length - 1) {\n      return;\n    }\n\n    const toPop = [];\n    for (let i = this.stackOnPop_.length - 1; i > this.stackIndex_; i--) {\n      if (this.stackOnPop_[i]) {\n        toPop.push(this.stackOnPop_[i]);\n        this.stackOnPop_[i] = undefined;\n      }\n    }\n    this.stackOnPop_.splice(this.stackIndex_ + 1);\n\n    if (toPop.length > 0) {\n      for (let i = 0; i < toPop.length; i++) {\n        // With the same delay timeouts must observe the order, although\n        // there's no hard requirement in this case to follow the pop order.\n        this.timer_.delay(() => toPop[i](historyState), 1);\n      }\n    }\n  }\n\n  /**\n   * @param {function():!Promise<RESULT>} callback\n   * @param {string} name\n   * @return {!Promise<RESULT>}\n   * @template RESULT\n   * @private\n   */\n  enque_(callback, name) {\n    const deferred = new Deferred();\n    const {promise, reject, resolve} = deferred;\n\n    // TODO(dvoytenko, #8785): cleanup after tracing.\n    const trace = new Error('history trace for ' + name + ': ');\n    this.queue_.push({callback, resolve, reject, trace});\n    if (this.queue_.length == 1) {\n      this.deque_();\n    }\n    return promise;\n  }\n\n  /**\n   * @private\n   */\n  deque_() {\n    if (this.queue_.length == 0) {\n      return;\n    }\n\n    const task = this.queue_[0];\n    let promise;\n    try {\n      promise = task.callback();\n    } catch (e) {\n      promise = Promise.reject(e);\n    }\n\n    promise\n      .then(\n        (result) => {\n          task.resolve(result);\n        },\n        (reason) => {\n          dev().error(TAG_, 'failed to execute a task:', reason);\n          // TODO(dvoytenko, #8785): cleanup after tracing.\n          if (task.trace) {\n            task.trace.message += reason;\n            dev().error(TAG_, task.trace);\n          }\n          task.reject(reason);\n        }\n      )\n      .then(() => {\n        this.queue_.splice(0, 1);\n        this.deque_();\n      });\n  }\n}\n\n/**\n * HistoryBindingInterface is an interface that defines an underlying technology\n * behind the {@link History}.\n * @interface\n */\nclass HistoryBindingInterface {\n  /** @protected */\n  cleanup() {}\n\n  /**\n   * Configures a callback to be called when the state has been updated.\n   * @param {function(!HistoryStateDef)} unusedCallback\n   * @protected\n   */\n  setOnStateUpdated(unusedCallback) {}\n\n  /**\n   * Pushes a new state onto the history stack, optionally specifying the state\n   * object associated with the current state.\n   * Returns a promise that yields the new state.\n   * @param {!HistoryStateUpdateDef=} opt_stateUpdate\n   * @return {!Promise<!HistoryStateDef>}\n   */\n  push(opt_stateUpdate) {}\n\n  /**\n   * Pops a previously pushed state from the history stack. All history\n   * states coming after this state will also be popped.\n   * Returns a promise that yields the new state.\n   * @param {number} unusedStackIndex\n   * @return {!Promise<!HistoryStateDef>}\n   */\n  pop(unusedStackIndex) {}\n\n  /**\n   * Replaces the current state, optionally specifying updates to the state\n   * object to be associated with the replacement.\n   * Returns a promise that yields the new state.\n   * @param {!HistoryStateUpdateDef=} opt_stateUpdate\n   * @return {!Promise<!HistoryStateDef>}\n   */\n  replace(opt_stateUpdate) {}\n\n  /**\n   * Retrieves the current state, containing the current fragment, title,\n   * and amp-bind state.\n   * @return {!Promise<!HistoryStateDef>}\n   */\n  get() {}\n\n  /**\n   * Replaces the state for local target navigation.\n   * @param {string} unusedTarget\n   */\n  replaceStateForTarget(unusedTarget) {}\n\n  /**\n   * Get the fragment from the url or the viewer.\n   * Strip leading '#' in the fragment\n   * @return {!Promise<string>}\n   */\n  getFragment() {}\n\n  /**\n   * Update the page url fragment\n   * @param {string} unusedFragment\n   * @return {!Promise}\n   */\n  updateFragment(unusedFragment) {}\n}\n\n/**\n * Implementation of HistoryBindingInterface based on the native window. It uses\n * window.history properties and events.\n *\n * Visible for testing.\n *\n * @implements {HistoryBindingInterface}\n */\nexport class HistoryBindingNatural_ {\n  /**\n   * @param {!Window} win\n   */\n  constructor(win) {\n    /** @const {!Window} */\n    this.win = win;\n\n    /** @private @const {!../service/timer-impl.Timer} */\n    this.timer_ = Services.timerFor(win);\n\n    const {history} = this.win;\n\n    /** @private {number} */\n    this.startIndex_ = history.length - 1;\n    const state = getHistoryState(history);\n    if (state && state[HISTORY_PROP_] !== undefined) {\n      this.startIndex_ = Math.min(state[HISTORY_PROP_], this.startIndex_);\n    }\n\n    /** @private {number} */\n    this.stackIndex_ = this.startIndex_;\n\n    /**\n     * @private {{promise: !Promise, resolve: !Function,\n     *   reject: !Function}|undefined}\n     */\n    this.waitingState_;\n\n    /** @private {?function(!HistoryStateDef)} */\n    this.onStateUpdated_ = null;\n\n    // A number of browsers do not support history.state. In this cases,\n    // History will track its own version. See unsupportedState_.\n    /** @private {boolean} @const */\n    this.supportsState_ = 'state' in history;\n\n    /** @private {*} */\n    this.unsupportedState_ = this.historyState_(this.stackIndex_);\n\n    // There are still browsers who do not support push/replaceState.\n    let pushState, replaceState;\n    if (history.pushState && history.replaceState) {\n      /** @private @const {function(*, string=, string=)|undefined} */\n      this.origPushState_ =\n        history.originalPushState || history.pushState.bind(history);\n      /** @private @const {function(*, string=, string=)|undefined} */\n      this.origReplaceState_ =\n        history.originalReplaceState || history.replaceState.bind(history);\n      pushState = (state, opt_title, opt_url) => {\n        this.unsupportedState_ = state;\n        this.origPushState_(\n          state,\n          opt_title,\n          // A bug in edge causes paths to become undefined if URL is\n          // undefined, filed here: https://goo.gl/KlImZu\n          opt_url || null\n        );\n      };\n      replaceState = (state, opt_title, opt_url) => {\n        this.unsupportedState_ = state;\n        // NOTE: check for `undefined` since IE11 and Edge\n        // unexpectedly coerces it into a `string`.\n        if (opt_url !== undefined) {\n          this.origReplaceState_(state, opt_title, opt_url);\n        } else {\n          this.origReplaceState_(state, opt_title);\n        }\n      };\n      if (!history.originalPushState) {\n        history.originalPushState = this.origPushState_;\n      }\n      if (!history.originalReplaceState) {\n        history.originalReplaceState = this.origReplaceState_;\n      }\n    } else {\n      pushState = (state, opt_title, opt_url) => {\n        this.unsupportedState_ = state;\n      };\n      replaceState = (state, opt_title, opt_url) => {\n        this.unsupportedState_ = state;\n      };\n    }\n\n    /** @private @const {!Function} */\n    this.pushState_ = pushState;\n\n    /** @private @const {!Function} */\n    this.replaceState_ = replaceState;\n\n    try {\n      this.replaceState_(\n        this.historyState_(this.stackIndex_, /* replace */ true)\n      );\n    } catch (e) {\n      dev().error(TAG_, 'Initial replaceState failed: ' + e.message);\n    }\n\n    history.pushState = this.historyPushState_.bind(this);\n    history.replaceState = this.historyReplaceState_.bind(this);\n\n    this.popstateHandler_ = (e) => {\n      const event = /** @type {!PopStateEvent} */ (e);\n      const state = /** @type {!JsonObject} */ (event.state);\n      dev().fine(\n        TAG_,\n        'popstate event: ' +\n          this.win.history.length +\n          ', ' +\n          JSON.stringify(state)\n      );\n      this.onHistoryEvent_();\n    };\n    this.win.addEventListener('popstate', this.popstateHandler_);\n  }\n\n  /** @override */\n  cleanup() {\n    if (this.origPushState_) {\n      this.win.history.pushState = this.origPushState_;\n    }\n    if (this.origReplaceState_) {\n      this.win.history.replaceState = this.origReplaceState_;\n    }\n    this.win.removeEventListener('popstate', this.popstateHandler_);\n  }\n\n  /**\n   * @param {number} stackIndex\n   * @param {boolean=} opt_replace\n   * @return {*}\n   * @private\n   */\n  historyState_(stackIndex, opt_replace) {\n    const state = map(opt_replace ? this.getState_() : undefined);\n    state[HISTORY_PROP_] = stackIndex;\n    return state;\n  }\n\n  /** @override */\n  setOnStateUpdated(callback) {\n    this.onStateUpdated_ = callback;\n  }\n\n  /** @override */\n  push(opt_stateUpdate) {\n    return this.whenReady_(() => {\n      const newState = this.mergeStateUpdate_(\n        this.getState_(),\n        opt_stateUpdate || {}\n      );\n      this.historyPushState_(\n        newState,\n        /* title */ undefined,\n        newState.fragment ? '#' + newState.fragment : undefined\n      );\n      return tryResolve(() =>\n        this.mergeStateUpdate_(newState, {stackIndex: this.stackIndex_})\n      );\n    });\n  }\n\n  /** @override */\n  pop(stackIndex) {\n    // On pop, stack is not allowed to go prior to the starting point.\n    stackIndex = Math.max(stackIndex, this.startIndex_);\n    return this.whenReady_(() => {\n      return this.back_(this.stackIndex_ - stackIndex + 1);\n    }).then((newStackIndex) => {\n      return this.mergeStateUpdate_(this.getState_(), {\n        stackIndex: newStackIndex,\n      });\n    });\n  }\n\n  /** @override */\n  replace(opt_stateUpdate = {}) {\n    return this.whenReady_(() => {\n      const newState = this.mergeStateUpdate_(\n        this.getState_(),\n        opt_stateUpdate || {}\n      );\n      const url = (newState.url || '').replace(/#.*/, '');\n      const fragment = newState.fragment ? '#' + newState.fragment : '';\n      this.historyReplaceState_(\n        newState,\n        newState.title,\n        url || fragment ? url + fragment : undefined\n      );\n      return tryResolve(() =>\n        this.mergeStateUpdate_(newState, {stackIndex: this.stackIndex_})\n      );\n    });\n  }\n\n  /** @override */\n  get() {\n    return tryResolve(() =>\n      this.mergeStateUpdate_(this.getState_(), {\n        stackIndex: this.stackIndex_,\n      })\n    );\n  }\n\n  /**\n   * @param {number} stackIndex\n   * @return {!Promise}\n   */\n  backTo(stackIndex) {\n    // On pop, stack is not allowed to go prior to the starting point.\n    stackIndex = Math.max(stackIndex, this.startIndex_);\n    return this.whenReady_(() => {\n      return this.back_(this.stackIndex_ - stackIndex);\n    });\n  }\n\n  /** @private */\n  onHistoryEvent_() {\n    let state = this.getState_();\n    dev().fine(\n      TAG_,\n      'history event: ' + this.win.history.length + ', ' + JSON.stringify(state)\n    );\n    const stackIndex = state ? state[HISTORY_PROP_] : undefined;\n    let newStackIndex = this.stackIndex_;\n    const waitingState = this.waitingState_;\n    this.waitingState_ = undefined;\n\n    if (newStackIndex > this.win.history.length - 2) {\n      // Make sure stack has enough space. Whether we are going forward or\n      // backward, the stack should have at least one extra cell.\n      newStackIndex = this.win.history.length - 2;\n      this.updateHistoryState_(\n        this.mergeStateUpdate_(state, {stackIndex: newStackIndex})\n      );\n    }\n\n    if (stackIndex == undefined) {\n      // A new navigation forward by the user.\n      newStackIndex = newStackIndex + 1;\n    } else if (stackIndex < this.win.history.length) {\n      // A simple trip back.\n      newStackIndex = stackIndex;\n    } else {\n      // Generally not possible, but for posterity.\n      newStackIndex = this.win.history.length - 1;\n    }\n\n    // If state index has been updated as the result replace the state.\n    if (!state) {\n      state = {};\n    }\n    state[HISTORY_PROP_] = newStackIndex;\n    this.replaceState_(state, undefined, undefined);\n\n    // Update the stack, pop squeezed states.\n    if (newStackIndex != this.stackIndex_) {\n      this.updateHistoryState_(\n        this.mergeStateUpdate_(state, {stackIndex: newStackIndex})\n      );\n    }\n\n    // User navigation is allowed to move past the starting point of\n    // the history stack.\n    if (newStackIndex < this.startIndex_) {\n      this.startIndex_ = newStackIndex;\n    }\n\n    if (waitingState) {\n      waitingState.resolve();\n    }\n  }\n\n  /** @private */\n  getState_() {\n    if (this.supportsState_) {\n      return getHistoryState(this.win.history);\n    }\n    return this.unsupportedState_;\n  }\n\n  /** @private */\n  assertReady_() {\n    devAssert(\n      !this.waitingState_,\n      'The history must not be in the waiting state'\n    );\n  }\n\n  /**\n   * @param {function():!Promise<RESULT>} callback\n   * @return {!Promise<RESULT>}\n   * @template RESULT\n   * @private\n   */\n  whenReady_(callback) {\n    if (!this.waitingState_) {\n      return callback();\n    }\n    return this.waitingState_.promise.then(callback, callback);\n  }\n\n  /**\n   * @return {!Promise}\n   * @private\n   */\n  wait_() {\n    this.assertReady_();\n    const deferred = new Deferred();\n    const {reject, resolve} = deferred;\n    const promise = this.timer_.timeoutPromise(500, deferred.promise);\n    this.waitingState_ = {promise, resolve, reject};\n    return promise;\n  }\n\n  /**\n   * @param {number} steps\n   * @return {!Promise}\n   */\n  back_(steps) {\n    this.assertReady_();\n    if (steps <= 0) {\n      return Promise.resolve(this.stackIndex_);\n    }\n    this.unsupportedState_ = this.historyState_(this.stackIndex_ - steps);\n    const promise = this.wait_();\n    this.win.history.go(-steps);\n    return promise.then(() => {\n      return Promise.resolve(this.stackIndex_);\n    });\n  }\n\n  /**\n   * @param {*=} state\n   * @param {(string|undefined)=} title\n   * @param {(string|undefined)=} url\n   * @private\n   */\n  historyPushState_(state, title, url) {\n    this.assertReady_();\n    if (!state) {\n      state = {};\n    }\n    let stackIndex = this.stackIndex_ + 1;\n    state[HISTORY_PROP_] = stackIndex;\n    this.pushState_(state, title, url);\n    if (stackIndex != this.win.history.length - 1) {\n      stackIndex = this.win.history.length - 1;\n      state[HISTORY_PROP_] = stackIndex;\n      this.replaceState_(state);\n    }\n    const newState = this.mergeStateUpdate_(\n      /** @type {!HistoryStateDef} */ (state),\n      {stackIndex}\n    );\n    this.updateHistoryState_(newState);\n  }\n\n  /**\n   * If this is a hash update the choice of `location.replace` vs\n   * `history.replaceState` is important. Due to bugs, not every browser\n   * triggers `:target` pseudo-class when `replaceState` is called.\n   * See http://www.zachleat.com/web/moving-target/ for more details.\n   * location.replace will trigger a `popstate` event, we temporarily\n   * disable handling it.\n   * @param {string} target\n   *\n   * @override\n   */\n  replaceStateForTarget(target) {\n    devAssert(target[0] == '#', 'target should start with a #');\n    this.whenReady_(() => {\n      // location.replace will fire a popstate event which is not a history\n      // event, so temporarily remove the event listener and re-add it after.\n      // As explained above in the function comment, typically we'd just do\n      // replaceState here but in order to trigger :target re-eval we have to\n      // use location.replace.\n      this.win.removeEventListener('popstate', this.popstateHandler_);\n      try {\n        // TODO(mkhatib, #6095): Chrome iOS will add extra states for\n        // location.replace.\n        this.win.location.replace(target);\n      } finally {\n        this.win.addEventListener('popstate', this.popstateHandler_);\n      }\n      this.historyReplaceState_();\n      return Promise.resolve();\n    });\n  }\n\n  /**\n   * @param {*=} state\n   * @param {(string|undefined)=} title\n   * @param {(string|undefined)=} url\n   * @private\n   */\n  historyReplaceState_(state, title, url) {\n    this.assertReady_();\n    if (!state) {\n      state = {};\n    }\n    const stackIndex = Math.min(this.stackIndex_, this.win.history.length - 1);\n    state[HISTORY_PROP_] = stackIndex;\n    this.replaceState_(state, title, url);\n    const newState = this.mergeStateUpdate_(\n      /** @type {!HistoryStateDef} */ (state),\n      {stackIndex}\n    );\n    this.updateHistoryState_(newState);\n  }\n\n  /**\n   * @param {!HistoryStateDef} historyState\n   * @private\n   */\n  updateHistoryState_(historyState) {\n    this.assertReady_();\n    historyState.stackIndex = Math.min(\n      historyState.stackIndex,\n      this.win.history.length - 1\n    );\n    if (this.stackIndex_ != historyState.stackIndex) {\n      dev().fine(\n        TAG_,\n        'stack index changed: ' +\n          this.stackIndex_ +\n          ' -> ' +\n          historyState.stackIndex\n      );\n      this.stackIndex_ = historyState.stackIndex;\n      if (this.onStateUpdated_) {\n        this.onStateUpdated_(historyState);\n      }\n    }\n  }\n\n  /** @override */\n  getFragment() {\n    let {hash} = this.win.location;\n    /* Strip leading '#' */\n    hash = hash.substr(1);\n    return Promise.resolve(hash);\n  }\n\n  /** @override */\n  updateFragment(fragment) {\n    return this.replace({fragment});\n  }\n\n  /**\n   * @param {?HistoryStateDef} state\n   * @param {!HistoryStateUpdateDef} update\n   * @return {!HistoryStateDef}\n   */\n  mergeStateUpdate_(state, update) {\n    const mergedData = /** @type {!JsonObject} */ ({\n      ...((state && state.data) || {}),\n      ...(update.data || {}),\n    });\n    return /** @type {!HistoryStateDef} */ ({\n      ...(state || {}),\n      ...update,\n      data: mergedData,\n    });\n  }\n}\n\n/**\n * Implementation of HistoryBindingInterface that assumes a virtual history that\n * relies on viewer's \"pushHistory\", \"popHistory\" and \"historyPopped\"\n * protocol.\n *\n * Visible for testing.\n *\n * @implements {HistoryBindingInterface}\n */\nexport class HistoryBindingVirtual_ {\n  /**\n   * @param {!Window} win\n   * @param {!./viewer-interface.ViewerInterface} viewer\n   */\n  constructor(win, viewer) {\n    /** @const {!Window} */\n    this.win = win;\n\n    /** @private @const {!./viewer-interface.ViewerInterface} */\n    this.viewer_ = viewer;\n\n    /** @private {number} */\n    this.stackIndex_ = 0;\n\n    /** @private {?function(!HistoryStateDef)} */\n    this.onStateUpdated_ = null;\n\n    /** @private {!UnlistenDef} */\n    this.unlistenOnHistoryPopped_ = this.viewer_.onMessage(\n      'historyPopped',\n      (data) => this.onHistoryPopped_(data)\n    );\n  }\n\n  /** @override */\n  replaceStateForTarget(target) {\n    devAssert(target[0] == '#', 'target should start with a #');\n    this.win.location.replace(target);\n  }\n\n  /** @override */\n  cleanup() {\n    this.unlistenOnHistoryPopped_();\n  }\n\n  /** @override */\n  setOnStateUpdated(callback) {\n    this.onStateUpdated_ = callback;\n  }\n\n  /**\n   * Gets the history state from a response. This checks if `maybeHistoryState`\n   * is a history state, and returns it if so, falling back to `fallbackState`\n   * otherwise.\n   * @param {*} maybeHistoryState\n   * @param {!HistoryStateDef} fallbackState\n   * @param {string} debugId\n   * @return {!HistoryStateDef}\n   * @private\n   */\n  toHistoryState_(maybeHistoryState, fallbackState, debugId) {\n    if (this.isHistoryState_(maybeHistoryState)) {\n      return /** @type {!HistoryStateDef} */ (maybeHistoryState);\n    } else {\n      dev().warn(\n        TAG_,\n        'Ignored unexpected \"%s\" data:',\n        debugId,\n        maybeHistoryState\n      );\n    }\n    return fallbackState;\n  }\n\n  /**\n   * @param {*} maybeHistoryState\n   * @return {boolean}\n   */\n  isHistoryState_(maybeHistoryState) {\n    return !!maybeHistoryState && maybeHistoryState['stackIndex'] !== undefined;\n  }\n\n  /**\n   * `pushHistory`\n   *\n   *   Request:  {'stackIndex': string}\n   *   Response: undefined | {'stackIndex': string}\n   *\n   * @override\n   */\n  push(opt_stateUpdate) {\n    const message = /** @type {!JsonObject} */ ({\n      'stackIndex': this.stackIndex_ + 1,\n      ...(opt_stateUpdate || {}),\n    });\n    const push = 'pushHistory';\n    return this.viewer_\n      .sendMessageAwaitResponse(push, message)\n      .then((response) => {\n        const fallbackState = /** @type {!HistoryStateDef} */ (message);\n        const newState = this.toHistoryState_(response, fallbackState, push);\n        this.updateHistoryState_(newState);\n        return newState;\n      });\n  }\n\n  /**\n   * `popHistory`\n   *\n   *   Request:  {'stackIndex': string}\n   *   Response: undefined | {'stackIndex': string}\n   *\n   * @override\n   */\n  pop(stackIndex) {\n    if (stackIndex > this.stackIndex_) {\n      return this.get();\n    }\n    const message = dict({'stackIndex': this.stackIndex_});\n    const pop = 'popHistory';\n    return this.viewer_\n      .sendMessageAwaitResponse(pop, message)\n      .then((response) => {\n        const fallbackState = /** @type {!HistoryStateDef} */ (\n          dict({\n            'stackIndex': this.stackIndex_ - 1,\n          })\n        );\n        const newState = this.toHistoryState_(response, fallbackState, pop);\n        this.updateHistoryState_(newState);\n        return newState;\n      });\n  }\n\n  /**\n   * `replaceHistory`\n   *\n   *   Request:   {'fragment': string}\n   *   Response:  undefined | {'stackIndex': string}\n   *\n   * @override\n   */\n  replace(opt_stateUpdate) {\n    if (opt_stateUpdate && opt_stateUpdate.url) {\n      if (!this.viewer_.hasCapability('fullReplaceHistory')) {\n        // Full URL replacement requested, but not supported by the viewer.\n        // Don't update, and return the current state.\n        const curState = /** @type {!HistoryStateDef} */ (\n          dict({\n            'stackIndex': this.stackIndex_,\n          })\n        );\n        return Promise.resolve(curState);\n      }\n\n      // replace fragment, only explicit fragment param will be sent.\n      const url = opt_stateUpdate.url.replace(/#.*/, '');\n      opt_stateUpdate.url = url;\n    }\n\n    const message = /** @type {!JsonObject} */ ({\n      'stackIndex': this.stackIndex_,\n      ...(opt_stateUpdate || {}),\n    });\n    const replace = 'replaceHistory';\n    return this.viewer_\n      .sendMessageAwaitResponse(replace, message, /* cancelUnsent */ true)\n      .then((response) => {\n        const fallbackState = /** @type {!HistoryStateDef} */ (message);\n        const newState = this.toHistoryState_(response, fallbackState, replace);\n        this.updateHistoryState_(newState);\n        return newState;\n      });\n  }\n\n  /**\n   * Note: Only returns the current `stackIndex`.\n   * @override\n   */\n  get() {\n    // Not sure why this type coercion is necessary, but CC complains otherwise.\n    return Promise.resolve(\n      /** @type {!HistoryStateDef} */ ({\n        data: undefined,\n        fragment: '',\n        stackIndex: this.stackIndex_,\n        title: '',\n      })\n    );\n  }\n\n  /**\n   * `historyPopped` (from viewer)\n   *\n   *   Request:  {'newStackIndex': number} | {'stackIndex': number}\n   *   Response: undefined\n   *\n   * @param {!JsonObject} data\n   * @private\n   */\n  onHistoryPopped_(data) {\n    if (data['newStackIndex'] !== undefined) {\n      data['stackIndex'] = data['newStackIndex'];\n    }\n    if (this.isHistoryState_(data)) {\n      this.updateHistoryState_(/** @type {!HistoryStateDef} */ (data));\n    } else {\n      dev().warn(TAG_, 'Ignored unexpected \"historyPopped\" data:', data);\n    }\n  }\n\n  /**\n   * @param {!HistoryStateDef} state\n   * @private\n   */\n  updateHistoryState_(state) {\n    const {stackIndex} = state;\n    if (this.stackIndex_ != stackIndex) {\n      dev().fine(TAG_, `stackIndex: ${this.stackIndex_} -> ${stackIndex}`);\n      this.stackIndex_ = stackIndex;\n      if (this.onStateUpdated_) {\n        this.onStateUpdated_(state);\n      }\n    }\n  }\n\n  /**\n   * `getFragment`\n   *\n   *   Request:  undefined\n   *   Response: string\n   *\n   * @override\n   */\n  getFragment() {\n    if (!this.viewer_.hasCapability('fragment')) {\n      return Promise.resolve('');\n    }\n    return this.viewer_\n      .sendMessageAwaitResponse(\n        'getFragment',\n        undefined,\n        /* cancelUnsent */ true\n      )\n      .then((data) => {\n        if (!data) {\n          return '';\n        }\n        let hash = dev().assertString(data);\n        /* Strip leading '#'*/\n        if (hash[0] == '#') {\n          hash = hash.substr(1);\n        }\n        return hash;\n      });\n  }\n\n  /**\n   * `replaceHistory`\n   *\n   *   Request:   {'fragment': string}\n   *   Response:  undefined | {'stackIndex': string}\n   *\n   * @override\n   */\n  updateFragment(fragment) {\n    if (!this.viewer_.hasCapability('fragment')) {\n      return Promise.resolve();\n    }\n    return /** @type {!Promise} */ (\n      this.viewer_.sendMessageAwaitResponse(\n        'replaceHistory',\n        dict({'fragment': fragment}),\n        /* cancelUnsent */ true\n      )\n    );\n  }\n}\n\n/**\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @return {!History}\n * @private\n */\nfunction createHistory(ampdoc) {\n  const viewer = Services.viewerForDoc(ampdoc);\n  let binding;\n  if (\n    viewer.isOvertakeHistory() ||\n    getMode(ampdoc.win).test ||\n    ampdoc.win.__AMP_TEST_IFRAME\n  ) {\n    binding = new HistoryBindingVirtual_(ampdoc.win, viewer);\n  } else {\n    // Only one global \"natural\" binding is allowed since it works with the\n    // global history stack.\n    registerServiceBuilder(\n      ampdoc.win,\n      'global-history-binding',\n      HistoryBindingNatural_\n    );\n    binding = getService(ampdoc.win, 'global-history-binding');\n  }\n  return new History(ampdoc, binding);\n}\n\n/**\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n */\nexport function installHistoryServiceForDoc(ampdoc) {\n  registerServiceBuilderForDoc(ampdoc, 'history', createHistory);\n}\n", "import {Services} from '#service';\n\n/**\n * Gets a Promise for the LoaderService, initiating a request to download the\n * code.\n * @param {!./ampdoc-impl.AmpDoc} ampDoc\n * @param {!Element} element\n * @return {!Promise<!../../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n */\nfunction getLoaderServicePromise(ampDoc, element) {\n  return Services.extensionsFor(ampDoc.win)\n    .installExtensionForDoc(ampDoc, 'amp-loader')\n    .then(() => Services.loaderServiceForDoc(element));\n}\n\n/**\n * Creates a default \"loading indicator\" element based on the new design.\n *\n * Please see https://github.com/ampproject/amphtml/issues/20237 for details,\n * screenshots and various states of the new loader design.\n * @param {!./ampdoc-impl.AmpDoc} ampDoc\n * @param {!AmpElement} element\n * @param {number} elementWidth\n * @param {number} elementHeight\n * @param {number=} startTime\n * @return {!Element} The loader root element.\n */\nexport function createLoaderElement(\n  ampDoc,\n  element,\n  elementWidth,\n  elementHeight,\n  startTime = ampDoc.win.Date.now()\n) {\n  // We create the loader root element up front, since it is needed\n  // synchronously. We create the actual element with animations when the\n  // service is ready.\n  const loaderRoot = element.ownerDocument.createElement('div');\n\n  getLoaderServicePromise(ampDoc, element).then((loaderService) => {\n    const endTime = ampDoc.win.Date.now();\n    const initDelay = endTime - startTime;\n    loaderService.initializeLoader(\n      element,\n      loaderRoot,\n      initDelay,\n      elementWidth,\n      elementHeight\n    );\n  });\n\n  return loaderRoot;\n}\n", "import {removeElement} from '#core/dom';\nimport {createViewportObserver} from '#core/dom/layout/viewport-observer';\nimport {htmlFor} from '#core/dom/static-template';\n\nimport {createLoaderElement} from './loader-element';\n\nimport {registerServiceBuilderForDoc} from '../service-helpers';\n\nconst MIN_SIZE = 20;\n\n/**\n * @typedef {{\n *   shown: boolean,\n *   loader: !Element,\n *   container: !Element,\n * }}\n */\nlet LoadingIndicatorStateDef;\n\n/**\n * @param {!Node|!./ampdoc-impl.AmpDoc} nodeOrDoc\n */\nexport function installLoadingIndicatorForDoc(nodeOrDoc) {\n  registerServiceBuilderForDoc(\n    nodeOrDoc,\n    'loadingIndicator',\n    LoadingIndicatorImpl\n  );\n}\n\n/**\n * @implements {../service.Disposable}\n */\nexport class LoadingIndicatorImpl {\n  /**\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @private @const */\n    this.ampdoc_ = ampdoc;\n\n    const {win} = ampdoc;\n    const inViewport = this.inViewport_.bind(this);\n    const ioCallback = (records) =>\n      /** @type {!Array<!IntersectionObserverEntry>} */ (records).forEach(\n        inViewport\n      );\n    /** @private @const {!IntersectionObserver} */\n    this.io_ = createViewportObserver(ioCallback, win);\n\n    /** @private @const {!WeakMap<!AmpElement, !LoadingIndicatorStateDef>} */\n    this.states_ = new WeakMap();\n  }\n\n  /** @override */\n  dispose() {\n    this.io_.disconnect();\n  }\n\n  /**\n   * @param {!AmpElement} element\n   */\n  track(element) {\n    this.io_.observe(element);\n  }\n\n  /**\n   * @param {!AmpElement} element\n   */\n  untrack(element) {\n    this.io_.unobserve(element);\n    this.cleanup_(element);\n  }\n\n  /**\n   * @param {!IntersectionObserverEntry} record\n   * @private\n   */\n  inViewport_(record) {\n    const {boundingClientRect, isIntersecting, target} = record;\n    const {height, width} = boundingClientRect;\n    const element = /** @type {!AmpElement} */ (target);\n\n    const show = isIntersecting && width > MIN_SIZE && height > MIN_SIZE;\n\n    let state = this.states_.get(element);\n    const isCurrentlyShown = (state && state.shown) || false;\n    if (show === isCurrentlyShown) {\n      // Loading state is the same.\n      return;\n    }\n\n    if (show && !state) {\n      state = this.createLoaderState_(element, width, height);\n      this.states_.set(element, state);\n    }\n    if (state) {\n      state.shown = show;\n      state.container.classList.toggle('amp-hidden', !show);\n      state.loader.classList.toggle('amp-active', show);\n    }\n  }\n\n  /**\n   * @param {!AmpElement} element\n   * @param {number} width\n   * @param {number} height\n   * @return {!LoadingIndicatorStateDef}\n   * @private\n   */\n  createLoaderState_(element, width, height) {\n    const startTime = Date.now();\n\n    const loader = createLoaderElement(\n      this.ampdoc_,\n      element,\n      width,\n      height,\n      startTime\n    );\n\n    const container = htmlFor(this.ampdoc_.win.document)`\n        <div slot=\"i-amphtml-svc\" class=\"i-amphtml-svc i-amphtml-loading-container i-amphtml-fill-content\n            amp-hidden\"></div>\n      `;\n    container.appendChild(loader);\n    element.appendChild(container);\n\n    return /** @type {!LoadingIndicatorStateDef} */ ({\n      shown: false,\n      loader,\n      container,\n    });\n  }\n\n  /**\n   * @param {!AmpElement} element\n   * @private\n   */\n  cleanup_(element) {\n    const state = this.states_.get(element);\n    if (!state) {\n      return;\n    }\n\n    this.states_.delete(element);\n    removeElement(state.container);\n  }\n}\n", "import {Observable} from '#core/data-structures/observable';\nimport {isElement} from '#core/types';\n\nimport {Services} from '#service';\n\nimport {dev} from '#utils/log';\n\n/**\n * FocusHistory keeps track of recent focused elements. This history can be\n * purged using `purgeBefore` method.\n */\nexport class FocusHistory {\n  /**\n   * @param {!Window} win\n   * @param {number} purgeTimeout\n   */\n  constructor(win, purgeTimeout) {\n    /** @const {!Window} */\n    this.win = win;\n\n    /** @private @const {number} */\n    this.purgeTimeout_ = purgeTimeout;\n\n    /** @private @const {!Array<!{el: !Element, time: time}>} */\n    this.history_ = [];\n\n    /** @private @const {!Observable<!Element>} */\n    this.observeFocus_ = new Observable();\n\n    /**\n     * @private\n     * @param {!Event} e\n     */\n    this.captureFocus_ = (e) => {\n      // Hack (#15079) due to Firefox firing focus events on the entire page\n      if (isElement(e.target)) {\n        this.pushFocus_(dev().assertElement(e.target));\n      }\n    };\n\n    /**\n     * @private\n     * @param {*} unusedE\n     */\n    this.captureBlur_ = (unusedE) => {\n      // IFrame elements do not receive `focus` event. An alternative way is\n      // implemented here. We wait for a blur to arrive on the main window\n      // and after a short time check which element is active.\n      Services.timerFor(win).delay(() => {\n        if (this.win.document.activeElement) {\n          this.pushFocus_(this.win.document.activeElement);\n        }\n      }, 500);\n    };\n    this.win.document.addEventListener('focus', this.captureFocus_, true);\n    this.win.addEventListener('blur', this.captureBlur_);\n  }\n\n  /** @visibleForTesting */\n  cleanup_() {\n    this.win.document.removeEventListener('focus', this.captureFocus_, true);\n    this.win.removeEventListener('blur', this.captureBlur_);\n  }\n\n  /**\n   * Add a listener for focus events.\n   * @param {function(!Element)} handler\n   * @return {!UnlistenDef}\n   */\n  onFocus(handler) {\n    return this.observeFocus_.add(handler);\n  }\n\n  /**\n   * @param {!Element} element\n   * @private\n   */\n  pushFocus_(element) {\n    const now = Date.now();\n    if (\n      this.history_.length == 0 ||\n      this.history_[this.history_.length - 1].el != element\n    ) {\n      this.history_.push({el: element, time: now});\n    } else {\n      this.history_[this.history_.length - 1].time = now;\n    }\n    this.purgeBefore(now - this.purgeTimeout_);\n    this.observeFocus_.fire(element);\n  }\n\n  /**\n   * Returns the element that was focused last.\n   * @return {?Element}\n   */\n  getLast() {\n    if (this.history_.length == 0) {\n      return null;\n    }\n    return this.history_[this.history_.length - 1].el;\n  }\n\n  /**\n   * Removes elements from the history older than the specified time.\n   * @param {time} time\n   */\n  purgeBefore(time) {\n    let index = this.history_.length - 1;\n    for (let i = 0; i < this.history_.length; i++) {\n      if (this.history_[i].time >= time) {\n        index = i - 1;\n        break;\n      }\n    }\n    if (index != -1) {\n      this.history_.splice(0, index + 1);\n    }\n  }\n\n  /**\n   * Returns `true` if the specified element contains any of the elements in\n   * the history.\n   * @param {!Element} element\n   * @return {boolean}\n   */\n  hasDescendantsOf(element) {\n    if (this.win.document.activeElement) {\n      this.pushFocus_(this.win.document.activeElement);\n    }\n    for (let i = 0; i < this.history_.length; i++) {\n      if (element.contains(this.history_[i].el)) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n", "import {areMarginsChanged} from '#core/dom/layout/rect';\nimport {closest} from '#core/dom/query';\nimport {computedStyle} from '#core/dom/style';\n\nimport {isExperimentOn} from '#experiments';\n\nimport {Services} from '#service';\n\nimport {dev} from '#utils/log';\n\nimport {MutatorInterface} from './mutator-interface';\nimport {Resource} from './resource';\n\nimport {FocusHistory} from '../focus-history';\nimport {registerServiceBuilderForDoc} from '../service-helpers';\n\nconst FOUR_FRAME_DELAY_ = 70;\nconst FOCUS_HISTORY_TIMEOUT_ = 1000 * 60; // 1min\nconst TAG_ = 'Mutator';\n\n/**\n * @implements {MutatorInterface}\n */\nexport class MutatorImpl {\n  /**\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @const {!./ampdoc-impl.AmpDoc} */\n    this.ampdoc = ampdoc;\n\n    /** @const {!Window} */\n    this.win = ampdoc.win;\n\n    /** @private @const {!./resources-interface.ResourcesInterface} */\n    this.resources_ = Services.resourcesForDoc(ampdoc);\n\n    /** @private @const {!./viewport/viewport-interface.ViewportInterface} */\n    this.viewport_ = Services.viewportForDoc(this.ampdoc);\n\n    /** @private @const {!./vsync-impl.Vsync} */\n    this.vsync_ = Services./*OK*/ vsyncFor(this.win);\n\n    /** @private @const {!FocusHistory} */\n    this.activeHistory_ = new FocusHistory(this.win, FOCUS_HISTORY_TIMEOUT_);\n\n    this.activeHistory_.onFocus((element) => {\n      this.checkPendingChangeSize_(element);\n    });\n  }\n\n  /** @override */\n  forceChangeSize(element, newHeight, newWidth, opt_callback, opt_newMargins) {\n    this.scheduleChangeSize_(\n      Resource.forElement(element),\n      newHeight,\n      newWidth,\n      opt_newMargins,\n      /* event */ undefined,\n      /* force */ true,\n      opt_callback\n    );\n  }\n\n  /** @override */\n  requestChangeSize(element, newHeight, newWidth, opt_newMargins, opt_event) {\n    return new Promise((resolve, reject) => {\n      this.scheduleChangeSize_(\n        Resource.forElement(element),\n        newHeight,\n        newWidth,\n        opt_newMargins,\n        opt_event,\n        /* force */ false,\n        (success) => {\n          if (success) {\n            resolve();\n          } else {\n            reject(new Error('changeSize attempt denied'));\n          }\n        }\n      );\n    });\n  }\n\n  /** @override */\n  expandElement(element) {\n    const resource = Resource.forElement(element);\n    resource.completeExpand();\n    this.resources_.schedulePass(FOUR_FRAME_DELAY_);\n  }\n\n  /** @override */\n  attemptCollapse(element) {\n    return new Promise((resolve, reject) => {\n      this.scheduleChangeSize_(\n        Resource.forElement(element),\n        0,\n        0,\n        /* newMargin */ undefined,\n        /* event */ undefined,\n        /* force */ false,\n        (success) => {\n          if (success) {\n            const resource = Resource.forElement(element);\n            resource.completeCollapse();\n            resolve();\n          } else {\n            reject(dev().createExpectedError('collapse attempt denied'));\n          }\n        }\n      );\n    });\n  }\n\n  /** @override */\n  collapseElement(element) {\n    const box = this.viewport_.getLayoutRect(element);\n    if (box.width != 0 && box.height != 0) {\n      if (isExperimentOn(this.win, 'dirty-collapse-element')) {\n        this.dirtyElement(element);\n      } else {\n        this.resources_.setRelayoutTop(box.top);\n      }\n    }\n\n    const resource = Resource.forElement(element);\n    resource.completeCollapse();\n\n    // Unlike completeExpand(), there's no requestMeasure() call here that\n    // requires another pass (with IntersectionObserver).\n    this.resources_.schedulePass(FOUR_FRAME_DELAY_);\n  }\n\n  /** @override */\n  measureElement(measurer) {\n    return this.vsync_.measurePromise(measurer);\n  }\n\n  /** @override */\n  mutateElement(element, mutator, skipRemeasure) {\n    return this.measureMutateElementResources_(\n      element,\n      null,\n      mutator,\n      skipRemeasure\n    );\n  }\n\n  /** @override */\n  measureMutateElement(element, measurer, mutator) {\n    return this.measureMutateElementResources_(element, measurer, mutator);\n  }\n\n  /**\n   * Returns the layout margins for the resource.\n   * @param {!Resource} resource\n   * @return {!../layout-rect.LayoutMarginsDef}\n   * @private\n   */\n  getLayoutMargins_(resource) {\n    const style = computedStyle(this.win, resource.element);\n    return {\n      top: parseInt(style.marginTop, 10) || 0,\n      right: parseInt(style.marginRight, 10) || 0,\n      bottom: parseInt(style.marginBottom, 10) || 0,\n      left: parseInt(style.marginLeft, 10) || 0,\n    };\n  }\n\n  /**\n   * Handles element mutation (and measurement) APIs in the Resources system.\n   *\n   * @param {!Element} element\n   * @param {?function()} measurer\n   * @param {function()} mutator\n   * @param {boolean} skipRemeasure\n   * @return {!Promise}\n   */\n  measureMutateElementResources_(\n    element,\n    measurer,\n    mutator,\n    skipRemeasure = false\n  ) {\n    const calcRelayoutTop = () => {\n      const box = this.viewport_.getLayoutRect(element);\n      if (box.width != 0 && box.height != 0) {\n        return box.top;\n      }\n      return -1;\n    };\n    let relayoutTop = -1;\n    // TODO(jridgewell): support state\n    return this.vsync_.runPromise({\n      measure: () => {\n        if (measurer) {\n          measurer();\n        }\n\n        if (!skipRemeasure) {\n          relayoutTop = calcRelayoutTop();\n        }\n      },\n      mutate: () => {\n        mutator();\n\n        // `skipRemeasure` is set by callers when we know that `mutator`\n        // cannot cause a change in size/position e.g. toggleLoading().\n        if (skipRemeasure) {\n          return;\n        }\n\n        if (element.classList.contains('i-amphtml-element')) {\n          const r = Resource.forElement(element);\n          r.requestMeasure();\n        }\n        const ampElements = element.getElementsByClassName('i-amphtml-element');\n        for (let i = 0; i < ampElements.length; i++) {\n          const r = Resource.forElement(ampElements[i]);\n          r.requestMeasure();\n        }\n        this.resources_.schedulePass(FOUR_FRAME_DELAY_);\n\n        if (relayoutTop != -1) {\n          this.resources_.setRelayoutTop(relayoutTop);\n        }\n        // Need to measure again in case the element has become visible or\n        // shifted.\n        this.vsync_.measure(() => {\n          const updatedRelayoutTop = calcRelayoutTop();\n          if (updatedRelayoutTop != -1 && updatedRelayoutTop != relayoutTop) {\n            this.resources_.setRelayoutTop(updatedRelayoutTop);\n            this.resources_.schedulePass(FOUR_FRAME_DELAY_);\n          }\n          this.resources_.maybeHeightChanged();\n        });\n      },\n    });\n  }\n\n  /**\n   * Dirties the cached element measurements after a mutation occurs.\n   *\n   * TODO(jridgewell): This API needs to be audited. Common practice is\n   * to pass the amp-element in as the root even though we are only\n   * mutating children. If the amp-element is passed, we invalidate\n   * everything in the parent layer above it, where only invalidating the\n   * amp-element was necessary (only children were mutated, only\n   * amp-element's scroll box is affected).\n   *\n   * @param {!Element} element\n   */\n  dirtyElement(element) {\n    let relayoutAll = false;\n    const isAmpElement = element.classList.contains('i-amphtml-element');\n    if (isAmpElement) {\n      const r = Resource.forElement(element);\n      this.resources_.setRelayoutTop(r.getLayoutBox().top);\n    } else {\n      relayoutAll = true;\n    }\n    this.resources_.schedulePass(FOUR_FRAME_DELAY_, relayoutAll);\n  }\n\n  /**\n   * Reschedules change size request when an overflown element is activated.\n   * @param {!Element} element\n   * @private\n   */\n  checkPendingChangeSize_(element) {\n    const resourceElement = closest(\n      element,\n      (el) => !!Resource.forElementOptional(el)\n    );\n    if (!resourceElement) {\n      return;\n    }\n    const resource = Resource.forElement(resourceElement);\n    const pendingChangeSize = resource.getPendingChangeSize();\n    if (pendingChangeSize !== undefined) {\n      this.scheduleChangeSize_(\n        resource,\n        pendingChangeSize.height,\n        pendingChangeSize.width,\n        pendingChangeSize.margins,\n        /* event */ undefined,\n        /* force */ true\n      );\n    }\n  }\n\n  /**\n   * Schedules change of the element's height.\n   * @param {!Resource} resource\n   * @param {number|undefined} newHeight\n   * @param {number|undefined} newWidth\n   * @param {!../layout-rect.LayoutMarginsChangeDef|undefined} newMargins\n   * @param {?Event|undefined} event\n   * @param {boolean} force\n   * @param {function(boolean)=} opt_callback A callback function\n   * @private\n   */\n  scheduleChangeSize_(\n    resource,\n    newHeight,\n    newWidth,\n    newMargins,\n    event,\n    force,\n    opt_callback\n  ) {\n    if (resource.hasBeenMeasured() && !newMargins) {\n      this.completeScheduleChangeSize_(\n        resource,\n        newHeight,\n        newWidth,\n        undefined,\n        event,\n        force,\n        opt_callback\n      );\n    } else {\n      // This is a rare case since most of times the element itself schedules\n      // resize requests. However, this case is possible when another element\n      // requests resize of a controlled element. This also happens when a\n      // margin size change is requested, since existing margins have to be\n      // measured in this instance.\n      this.vsync_.measure(() => {\n        if (!resource.hasBeenMeasured()) {\n          resource.measure();\n        }\n        const marginChange = newMargins\n          ? {\n              newMargins,\n              currentMargins: this.getLayoutMargins_(resource),\n            }\n          : undefined;\n        this.completeScheduleChangeSize_(\n          resource,\n          newHeight,\n          newWidth,\n          marginChange,\n          event,\n          force,\n          opt_callback\n        );\n      });\n    }\n  }\n\n  /**\n   * @param {!Resource} resource\n   * @param {number|undefined} newHeight\n   * @param {number|undefined} newWidth\n   * @param {!./resources-interface.MarginChangeDef|undefined} marginChange\n   * @param {?Event|undefined} event\n   * @param {boolean} force\n   * @param {function(boolean)=} opt_callback A callback function\n   * @private\n   */\n  completeScheduleChangeSize_(\n    resource,\n    newHeight,\n    newWidth,\n    marginChange,\n    event,\n    force,\n    opt_callback\n  ) {\n    resource.resetPendingChangeSize();\n    const layoutSize = resource.getLayoutSize();\n    if (\n      (newHeight === undefined || newHeight == layoutSize.height) &&\n      (newWidth === undefined || newWidth == layoutSize.width) &&\n      (marginChange === undefined ||\n        !areMarginsChanged(\n          marginChange.currentMargins,\n          marginChange.newMargins\n        ))\n    ) {\n      if (\n        newHeight === undefined &&\n        newWidth === undefined &&\n        marginChange === undefined\n      ) {\n        dev().error(\n          TAG_,\n          'attempting to change size with undefined dimensions',\n          resource.debugid\n        );\n      }\n      // Nothing to do.\n      if (opt_callback) {\n        opt_callback(/* success */ true);\n      }\n      return;\n    }\n\n    this.resources_.updateOrEnqueueMutateTask(\n      resource,\n      /** {!ChangeSizeRequestDef} */ {\n        resource,\n        newHeight,\n        newWidth,\n        marginChange,\n        event,\n        force,\n        callback: opt_callback,\n      }\n    );\n    // With IntersectionObserver, we still want to schedule a pass to execute\n    // the requested measures of the newly resized element(s).\n    this.resources_.schedulePassVsync();\n  }\n}\n\n/**\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n */\nexport function installMutatorServiceForDoc(ampdoc) {\n  registerServiceBuilderForDoc(ampdoc, 'mutator', MutatorImpl);\n}\n", "import {isArray} from '#core/types';\n\nimport {Services} from '#service';\n\nimport {devAssert} from '#utils/log';\n\nimport {OwnersInterface} from './owners-interface';\nimport {Resource} from './resource';\n\nimport {registerServiceBuilderForDoc} from '../service-helpers';\n\n/**\n * @param {!Element|!Array<!Element>} elements\n * @return {!Array<!Element>}\n */\nfunction elements(elements) {\n  return /** @type {!Array<!Element>} */ (\n    isArray(elements) ? elements : [elements]\n  );\n}\n\n/**\n * @implements {OwnersInterface}\n * @visibleForTesting\n */\nexport class OwnersImpl {\n  /**\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @const @private {!./resources-interface.ResourcesInterface} */\n    this.resources_ = Services.resourcesForDoc(ampdoc);\n  }\n\n  /** @override */\n  setOwner(element, owner) {\n    Resource.setOwner(element, owner);\n  }\n\n  /** @override */\n  schedulePreload(parentElement, subElements) {\n    this.scheduleLayoutOrPreloadForSubresources_(\n      this.resources_.getResourceForElement(parentElement),\n      /* layout */ false,\n      elements(subElements)\n    );\n  }\n\n  /** @override */\n  scheduleLayout(parentElement, subElements) {\n    this.scheduleLayoutOrPreloadForSubresources_(\n      this.resources_.getResourceForElement(parentElement),\n      /* layout */ true,\n      elements(subElements)\n    );\n  }\n\n  /** @override */\n  schedulePause(parentElement, subElements) {\n    const parentResource = this.resources_.getResourceForElement(parentElement);\n    subElements = elements(subElements);\n\n    this.findResourcesInElements_(parentResource, subElements, (resource) => {\n      resource.pause();\n    });\n  }\n\n  /** @override */\n  scheduleResume(parentElement, subElements) {\n    const parentResource = this.resources_.getResourceForElement(parentElement);\n    subElements = elements(subElements);\n\n    this.findResourcesInElements_(parentResource, subElements, (resource) => {\n      resource.resume();\n    });\n  }\n\n  /** @override */\n  scheduleUnlayout(parentElement, subElements) {\n    const parentResource = this.resources_.getResourceForElement(parentElement);\n    subElements = elements(subElements);\n\n    this.findResourcesInElements_(parentResource, subElements, (resource) => {\n      resource.unlayout();\n    });\n  }\n\n  /** @override */\n  requireLayout(element, opt_parentPriority) {\n    const promises = [];\n    this.discoverResourcesForElement_(element, (resource) => {\n      promises.push(resource.element.ensureLoaded());\n    });\n    return Promise.all(promises);\n  }\n\n  /**\n   * Finds resources within the parent resource's shallow subtree.\n   * @param {!Resource} parentResource\n   * @param {!Array<!Element>} elements\n   * @param {function(!Resource)} callback\n   * @private\n   */\n  findResourcesInElements_(parentResource, elements, callback) {\n    for (const element of elements) {\n      devAssert(parentResource.element.contains(element));\n      this.discoverResourcesForElement_(element, callback);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {function(!Resource)} callback\n   */\n  discoverResourcesForElement_(element, callback) {\n    // Breadth-first search.\n    if (element.classList.contains('i-amphtml-element')) {\n      callback(this.resources_.getResourceForElement(element));\n      // Also schedule amp-element that is a placeholder for the element.\n      const placeholder = element.getPlaceholder();\n      if (placeholder) {\n        this.discoverResourcesForElement_(placeholder, callback);\n      }\n    } else {\n      const ampElements = element.getElementsByClassName('i-amphtml-element');\n      const seen = [];\n      for (let i = 0; i < ampElements.length; i++) {\n        const ampElement = ampElements[i];\n        let covered = false;\n        for (let j = 0; j < seen.length; j++) {\n          if (seen[j].contains(ampElement)) {\n            covered = true;\n            break;\n          }\n        }\n        if (!covered) {\n          seen.push(ampElement);\n          callback(this.resources_.getResourceForElement(ampElement));\n        }\n      }\n    }\n  }\n\n  /**\n   * Schedules layout or preload for the sub-resources of the specified\n   * resource.\n   * @param {!Resource} parentResource\n   * @param {boolean} layout\n   * @param {!Array<!Element>} subElements\n   * @private\n   */\n  scheduleLayoutOrPreloadForSubresources_(parentResource, layout, subElements) {\n    this.findResourcesInElements_(parentResource, subElements, (resource) => {\n      resource.element.ensureLoaded(parentResource.getLayoutPriority());\n    });\n  }\n}\n\n/**\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n */\nexport function installOwnersServiceForDoc(ampdoc) {\n  registerServiceBuilderForDoc(ampdoc, 'owners', OwnersImpl);\n}\n", "import {devAssert} from '#core/assert';\nimport {map} from '#core/types/object';\n\n/** @template STATE */\nexport class FiniteStateMachine {\n  /**\n   * Constructs a FSM using the bits defined in initialState as changeable\n   * states.\n   * @param {STATE} initialState\n   */\n  constructor(initialState) {\n    /**\n     * The current state of the FSM\n     * @private {STATE}\n     */\n    this.state_ = initialState;\n\n    /**\n     * Callbacks that are invoked when transitioning from an old state\n     * to the new.\n     * @private {Object<string, function()>}\n     */\n    this.transitions_ = map();\n  }\n\n  /**\n   * Adds a transition callback that will be called when the oldState\n   * transitions to the newState.\n   * @param {STATE} oldState\n   * @param {STATE} newState\n   * @param {function()} callback\n   */\n  addTransition(oldState, newState, callback) {\n    const transition = this.statesToTransition_(oldState, newState);\n    devAssert(\n      !this.transitions_[transition],\n      'cannot define a duplicate transition callback'\n    );\n    this.transitions_[transition] = callback;\n  }\n\n  /**\n   * Transitions to the newState and invokes the registered transition\n   * callback, if one is defined.\n   * @param {STATE} newState\n   */\n  setState(newState) {\n    const oldState = this.state_;\n    this.state_ = newState;\n\n    const transition = this.statesToTransition_(oldState, newState);\n    const callback = this.transitions_[transition];\n    callback?.();\n  }\n\n  /**\n   * Transforms the state transition into a key which identifies a callback.\n   * @private\n   * @param {STATE} oldState\n   * @param {STATE} newState\n   * @return {string}\n   */\n  statesToTransition_(oldState, newState) {\n    return `${oldState}|${newState}`;\n  }\n}\n", "import {devAssert} from '#utils/log';\n\n/**\n * The internal structure for the task.\n * @typedef {{\n *   id: string,\n *   resource: !./resource.Resource,\n *   priority: number,\n *   forceOutsideViewport: boolean,\n *   callback: function(),\n *   scheduleTime: time,\n *   startTime: time,\n *   promise: (?Promise|undefined)\n * }}\n */\nexport let TaskDef;\n\n/**\n * A scheduling queue for Resources.\n *\n * @package\n */\nexport class TaskQueue {\n  /**\n   * Creates an instance of TaskQueue.\n   */\n  constructor() {\n    /** @private @const {!Array<!TaskDef>} */\n    this.tasks_ = [];\n\n    /** @private @const {!Object<string, !TaskDef>} */\n    this.taskIdMap_ = {};\n\n    /** @private {!time} */\n    this.lastEnqueueTime_ = 0;\n\n    /** @private {!time} */\n    this.lastDequeueTime_ = 0;\n  }\n\n  /**\n   * Size of the queue.\n   * @return {number}\n   */\n  getSize() {\n    return this.tasks_.length;\n  }\n\n  /**\n   * Last time a task was enqueued.\n   * @return {!time}\n   */\n  getLastEnqueueTime() {\n    return this.lastEnqueueTime_;\n  }\n\n  /**\n   * Last time a task was dequeued.\n   * @return {!time}\n   */\n  getLastDequeueTime() {\n    return this.lastDequeueTime_;\n  }\n\n  /**\n   * Returns the task with the specified ID or null.\n   * @param {string} taskId\n   * @return {?TaskDef}\n   */\n  getTaskById(taskId) {\n    return this.taskIdMap_[taskId] || null;\n  }\n\n  /**\n   * Enqueues the task. If the task is already in the queue, the error is\n   * thrown.\n   * @param {!TaskDef} task\n   */\n  enqueue(task) {\n    devAssert(!this.taskIdMap_[task.id], 'Task already enqueued: %s', task.id);\n    this.tasks_.push(task);\n    this.taskIdMap_[task.id] = task;\n    this.lastEnqueueTime_ = Date.now();\n  }\n\n  /**\n   * Dequeues the task and returns \"true\" if dequeueing is successful. Otherwise\n   * returns \"false\", e.g. when this task is not currently enqueued.\n   * @param {!TaskDef} task\n   * @return {boolean}\n   */\n  dequeue(task) {\n    const existing = this.taskIdMap_[task.id];\n    const dequeued = this.removeAtIndex(task, this.tasks_.indexOf(existing));\n    if (!dequeued) {\n      return false;\n    }\n    this.lastDequeueTime_ = Date.now();\n    return true;\n  }\n\n  /**\n   * Returns the task with the minimal score based on the provided scoring\n   * callback.\n   * @param {function(!TaskDef):number} scorer\n   * @return {?TaskDef}\n   */\n  peek(scorer) {\n    let minScore = 1e6;\n    let minTask = null;\n    for (let i = 0; i < this.tasks_.length; i++) {\n      const task = this.tasks_[i];\n      const score = scorer(task);\n      if (score < minScore) {\n        minScore = score;\n        minTask = task;\n      }\n    }\n    return minTask;\n  }\n\n  /**\n   * Iterates over all tasks in queue in the insertion order.\n   * @param {function(!TaskDef)} callback\n   */\n  forEach(callback) {\n    this.tasks_.forEach(callback);\n  }\n\n  /**\n   * Removes the task and returns \"true\" if dequeueing is successful. Otherwise\n   * returns \"false\", e.g. when this task is not currently enqueued.\n   * @param {!TaskDef} task\n   * @param {number} index of the task to remove.\n   * @return {boolean}\n   */\n  removeAtIndex(task, index) {\n    const existing = this.taskIdMap_[task.id];\n    if (!existing || this.tasks_[index] != existing) {\n      return false;\n    }\n    this.tasks_.splice(index, 1);\n    delete this.taskIdMap_[task.id];\n    return true;\n  }\n\n  /**\n   * Removes tasks in queue that pass the callback test.\n   * @param {function(!TaskDef):boolean} callback Return true to remove the task.\n   */\n  purge(callback) {\n    let index = this.tasks_.length;\n    while (index--) {\n      if (callback(this.tasks_[index])) {\n        this.removeAtIndex(this.tasks_[index], index);\n      }\n    }\n  }\n}\n", "import {VisibilityState} from '#core/constants/visibility-state';\nimport {FiniteStateMachine} from '#core/data-structures/finite-state-machine';\nimport {Deferred} from '#core/data-structures/promise';\nimport {hasNextNodeInDocumentOrder} from '#core/dom';\nimport {expandLayoutRect} from '#core/dom/layout/rect';\nimport * as mode from '#core/mode';\nimport {remove} from '#core/types/array';\nimport {throttle} from '#core/types/function';\nimport {dict} from '#core/types/object';\n\nimport {Services} from '#service';\n\nimport {listen, loadPromise} from '#utils/event-helper';\nimport {dev, devAssert} from '#utils/log';\n\nimport {Resource, ResourceState} from './resource';\nimport {READY_SCAN_SIGNAL, ResourcesInterface} from './resources-interface';\nimport {TaskQueue} from './task-queue';\n\nimport {startupChunk} from '../chunk';\nimport {isBlockedByConsent, reportError} from '../error-reporting';\nimport {FocusHistory} from '../focus-history';\nimport {Pass} from '../pass';\nimport {registerServiceBuilderForDoc} from '../service-helpers';\nimport {getSourceUrl} from '../url';\n\nconst TAG_ = 'Resources';\nconst LAYOUT_TASK_ID_ = 'L';\nconst LAYOUT_TASK_OFFSET_ = 0;\nconst PRELOAD_TASK_ID_ = 'P';\nconst PRELOAD_TASK_OFFSET_ = 2;\nconst PRIORITY_BASE_ = 10;\nconst PRIORITY_PENALTY_TIME_ = 1000;\nconst POST_TASK_PASS_DELAY_ = 1000;\nconst MUTATE_DEFER_DELAY_ = 500;\nconst FOCUS_HISTORY_TIMEOUT_ = 1000 * 60; // 1min\nconst FOUR_FRAME_DELAY_ = 70;\n\n/**\n * @implements {ResourcesInterface}\n */\nexport class ResourcesImpl {\n  /**\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @const {!./ampdoc-impl.AmpDoc} */\n    this.ampdoc = ampdoc;\n\n    /** @const {!Window} */\n    this.win = ampdoc.win;\n\n    /** @const @private {!./viewer-interface.ViewerInterface} */\n    this.viewer_ = Services.viewerForDoc(ampdoc);\n\n    /** @private {boolean} */\n    this.isRuntimeOn_ = this.viewer_.isRuntimeOn();\n\n    /**\n     * Used primarily for testing to allow build phase to proceed.\n     * @const @private {boolean}\n     */\n    this.isBuildOn_ = false;\n\n    /** @private {number} */\n    this.resourceIdCounter_ = 0;\n\n    /** @private @const {!Array<!Resource>} */\n    this.resources_ = [];\n\n    /** @private {number} */\n    this.addCount_ = 0;\n\n    /** @private {number} */\n    this.buildAttemptsCount_ = 0;\n\n    /** @private {number} */\n    this.buildsThisPass_ = 0;\n\n    /** @private {boolean} */\n    this.visible_ = this.ampdoc.isVisible();\n\n    /** @private {boolean} */\n    this.documentReady_ = false;\n\n    /**\n     * We want to do some work in the first pass after\n     * the document is ready.\n     * @private {boolean}\n     */\n    this.firstPassAfterDocumentReady_ = true;\n\n    /**\n     * Whether AMP has been fully initialized.\n     * @private {boolean}\n     */\n    this.ampInitialized_ = false;\n\n    /**\n     * We also adjust the timeout penalty shortly after the first pass.\n     * @private {number}\n     */\n    this.firstVisibleTime_ = -1;\n\n    /** @private {boolean} */\n    this.relayoutAll_ = true;\n\n    /**\n     * @private {number}\n     */\n    this.relayoutTop_ = -1;\n\n    /** @private {time} */\n    this.lastScrollTime_ = 0;\n\n    /** @private {number} */\n    this.lastVelocity_ = 0;\n\n    /** @const @private {!Pass} */\n    this.pass_ = new Pass(this.win, () => this.doPass());\n\n    /** @const @private {!Pass} */\n    this.remeasurePass_ = new Pass(this.win, () => {\n      this.relayoutAll_ = true;\n      this.schedulePass();\n    });\n\n    /** @const {!TaskQueue} */\n    this.exec_ = new TaskQueue();\n\n    /** @const {!TaskQueue} */\n    this.queue_ = new TaskQueue();\n\n    /** @const {function(./task-queue.TaskDef):number} */\n    this.boundTaskScorer_ = this.calcTaskScore_.bind(this);\n\n    /**\n     * @private {!Array<!./resources-interface.ChangeSizeRequestDef>}\n     */\n    this.requestsChangeSize_ = [];\n\n    /** @private {?Array<!Resource>} */\n    this.pendingBuildResources_ = [];\n\n    /** @private {boolean} */\n    this.isCurrentlyBuildingPendingResources_ = false;\n\n    /** @private @const {!./viewport/viewport-interface.ViewportInterface} */\n    this.viewport_ = Services.viewportForDoc(this.ampdoc);\n\n    /** @private @const {!./vsync-impl.Vsync} */\n    this.vsync_ = Services./*OK*/ vsyncFor(this.win);\n\n    /** @private @const {!FocusHistory} */\n    this.activeHistory_ = new FocusHistory(this.win, FOCUS_HISTORY_TIMEOUT_);\n\n    /** @private {boolean} */\n    this.vsyncScheduled_ = false;\n\n    /** @private {number} */\n    this.contentHeight_ = 0;\n\n    /** @private {boolean} */\n    this.maybeChangeHeight_ = false;\n\n    /** @const @private {!Array<function()>} */\n    this.passCallbacks_ = [];\n\n    /** @const @private {!Array<!Element>} */\n    this.elementsThatScrolled_ = [];\n\n    /** @const @private {!Deferred} */\n    this.firstPassDone_ = new Deferred();\n\n    /** @private @const {!FiniteStateMachine<!VisibilityState>} */\n    this.visibilityStateMachine_ = new FiniteStateMachine(\n      this.ampdoc.getVisibilityState()\n    );\n\n    // When user scrolling stops, run pass to check newly in-viewport elements.\n    // When viewport is resized, we have to re-measure everything.\n    this.viewport_.onChanged((event) => {\n      this.lastScrollTime_ = this.win.Date.now();\n      this.lastVelocity_ = event.velocity;\n      if (event.relayoutAll) {\n        this.relayoutAll_ = true;\n        this.maybeChangeHeight_ = true;\n      }\n\n      this.schedulePass();\n    });\n    this.viewport_.onScroll(() => {\n      this.lastScrollTime_ = this.win.Date.now();\n    });\n\n    // When document becomes visible, e.g. from \"prerender\" mode, do a\n    // simple pass.\n    this.ampdoc.onVisibilityChanged(() => {\n      if (this.firstVisibleTime_ == -1 && this.ampdoc.isVisible()) {\n        this.firstVisibleTime_ = this.win.Date.now();\n      }\n      this.schedulePass();\n    });\n\n    this.viewer_.onRuntimeState((state) => {\n      dev().fine(TAG_, 'Runtime state:', state);\n      this.isRuntimeOn_ = state;\n      this.schedulePass(1);\n    });\n\n    // Schedule initial passes. This must happen in a startup task\n    // to avoid blocking body visible.\n    startupChunk(this.ampdoc, () => {\n      this.setupVisibilityStateMachine_(this.visibilityStateMachine_);\n      this.schedulePass(0);\n    });\n\n    this.rebuildDomWhenReady_();\n\n    /** @private @const */\n    this.throttledScroll_ = throttle(this.win, (e) => this.scrolled_(e), 250);\n\n    listen(this.win.document, 'scroll', this.throttledScroll_, {\n      capture: true,\n      passive: true,\n    });\n  }\n\n  /** @private */\n  rebuildDomWhenReady_() {\n    // Ensure that we attempt to rebuild things when DOM is ready.\n    this.ampdoc.whenReady().then(() => {\n      this.documentReady_ = true;\n      this.buildReadyResources_();\n      this.pendingBuildResources_ = null;\n\n      const input = Services.inputFor(this.win);\n      input.setupInputModeClasses(this.ampdoc);\n\n      if (mode.isEsm()) {\n        return;\n      }\n\n      const remeasure = () => this.remeasurePass_.schedule();\n      remeasure();\n\n      // Safari 10 and under incorrectly estimates font spacing for\n      // `@font-face` fonts. This leads to wild measurement errors. The best\n      // course of action is to remeasure everything on window.onload or font\n      // timeout (3s), whichever is earlier. This has to be done on the global\n      // window because this is where the fonts are always added.\n      // Unfortunately, `document.fonts.ready` cannot be used here due to\n      // https://bugs.webkit.org/show_bug.cgi?id=174030.\n      // See https://bugs.webkit.org/show_bug.cgi?id=174031 for more details.\n      Promise.race([\n        loadPromise(this.win),\n        Services.timerFor(this.win).promise(3100),\n      ]).then(remeasure);\n\n      // Remeasure the document when all fonts loaded.\n      if (\n        this.win.document.fonts &&\n        this.win.document.fonts.status != 'loaded'\n      ) {\n        this.win.document.fonts.ready.then(remeasure);\n      }\n    });\n  }\n\n  /** @override */\n  get() {\n    return this.resources_.slice(0);\n  }\n\n  /** @override */\n  getAmpdoc() {\n    return this.ampdoc;\n  }\n\n  /** @override */\n  getResourceForElement(element) {\n    return Resource.forElement(element);\n  }\n\n  /** @override */\n  getResourceForElementOptional(element) {\n    return Resource.forElementOptional(element);\n  }\n\n  /** @override */\n  getScrollDirection() {\n    return Math.sign(this.lastVelocity_) || 1;\n  }\n\n  /** @override */\n  add(element) {\n    // Ensure the viewport is ready to accept the first element.\n    this.addCount_++;\n    if (this.addCount_ == 1) {\n      this.viewport_.ensureReadyForElements();\n    }\n\n    // First check if the resource is being reparented and if it requires\n    // reconstruction. Only already built elements are eligible.\n    let resource = Resource.forElementOptional(element);\n    if (\n      resource &&\n      resource.getState() != ResourceState.NOT_BUILT &&\n      !element.reconstructWhenReparented()\n    ) {\n      resource.requestMeasure();\n      dev().fine(TAG_, 'resource reused:', resource.debugid);\n    } else {\n      // Create and add a new resource.\n      resource = new Resource(++this.resourceIdCounter_, element, this);\n      dev().fine(TAG_, 'resource added:', resource.debugid);\n    }\n    this.resources_.push(resource);\n    this.remeasurePass_.schedule(1000);\n  }\n\n  /**\n   * Limits the number of elements being build in pre-render phase to\n   * a finite number. Returns false if the number has been reached.\n   * @return {boolean}\n   */\n  isUnderBuildQuota_() {\n    // For pre-render we want to limit the amount of CPU used, so we limit\n    // the number of elements build. For pre-render to \"seem complete\"\n    // we only need to build elements in the first viewport. We can't know\n    // which are actually in the viewport (because the decision is pre-layout,\n    // so we use a heuristic instead.\n    // Most documents have 10 or less AMP tags. By building 20 we should not\n    // change the behavior for the vast majority of docs, and almost always\n    // catch everything in the first viewport.\n    return this.buildAttemptsCount_ < 20 || this.ampdoc.hasBeenVisible();\n  }\n\n  /**\n   * Builds the element if ready to be built, otherwise adds it to pending\n   * resources.\n   * @param {!Resource} resource\n   * @param {boolean=} checkForDupes\n   * @param {boolean=} ignoreQuota\n   * @private\n   */\n  buildOrScheduleBuildForResource_(\n    resource,\n    checkForDupes = false,\n    ignoreQuota = false\n  ) {\n    const buildingEnabled = this.isRuntimeOn_ || this.isBuildOn_;\n    if (!buildingEnabled) {\n      return;\n    }\n\n    // During prerender mode, don't build elements that aren't allowed to be\n    // prerendered. This avoids wasting our prerender build quota.\n    // See isUnderBuildQuota_() for more details.\n    const shouldBuildResource =\n      this.ampdoc.getVisibilityState() != VisibilityState.PRERENDER ||\n      resource.prerenderAllowed();\n    if (!shouldBuildResource) {\n      return;\n    }\n\n    if (this.documentReady_) {\n      // Build resource immediately, the document has already been parsed.\n      this.buildResourceUnsafe_(resource, ignoreQuota);\n    } else if (!resource.isBuilt() && !resource.isBuilding()) {\n      if (!checkForDupes || !this.pendingBuildResources_.includes(resource)) {\n        // Otherwise add to pending resources and try to build any ready ones.\n        this.pendingBuildResources_.push(resource);\n        this.buildReadyResources_();\n      }\n    }\n  }\n\n  /**\n   * Builds resources that are ready to be built.\n   * @private\n   */\n  buildReadyResources_() {\n    // Avoid cases where elements add more elements inside of them\n    // and cause an infinite loop of building - see #3354 for details.\n    if (this.isCurrentlyBuildingPendingResources_) {\n      return;\n    }\n    try {\n      this.isCurrentlyBuildingPendingResources_ = true;\n      this.buildReadyResourcesUnsafe_();\n    } finally {\n      this.isCurrentlyBuildingPendingResources_ = false;\n    }\n  }\n\n  /**\n   * @private\n   */\n  buildReadyResourcesUnsafe_() {\n    // This will loop over all current pending resources and those that\n    // get added by other resources build-cycle, this will make sure all\n    // elements get a chance to be built.\n    for (let i = 0; i < this.pendingBuildResources_.length; i++) {\n      const resource = this.pendingBuildResources_[i];\n      if (\n        this.documentReady_ ||\n        hasNextNodeInDocumentOrder(resource.element, this.ampdoc.getRootNode())\n      ) {\n        // Remove resource before build to remove it from the pending list\n        // in either case the build succeed or throws an error.\n        this.pendingBuildResources_.splice(i--, 1);\n        this.buildResourceUnsafe_(resource);\n      }\n    }\n  }\n\n  /**\n   * @param {!Resource} resource\n   * @param {boolean=} ignoreQuota\n   * @return {?Promise}\n   * @private\n   */\n  buildResourceUnsafe_(resource, ignoreQuota = false) {\n    if (\n      !ignoreQuota &&\n      !this.isUnderBuildQuota_() &&\n      // Special case: amp-experiment is allowed to bypass prerender build quota.\n      !resource.isBuildRenderBlocking()\n    ) {\n      return null;\n    }\n\n    const promise = resource.build();\n    if (!promise) {\n      return null;\n    }\n    dev().fine(TAG_, 'build resource:', resource.debugid);\n    this.buildAttemptsCount_++;\n    this.buildsThisPass_++;\n    return promise.then(\n      () => this.schedulePass(),\n      (error) => {\n        // Build failed: remove the resource. No other state changes are\n        // needed.\n        this.removeResource_(resource);\n        if (!isBlockedByConsent(error)) {\n          throw error;\n        }\n      }\n    );\n  }\n\n  /** @override */\n  remove(element) {\n    const resource = Resource.forElementOptional(element);\n    if (!resource) {\n      return;\n    }\n    this.removeResource_(resource);\n  }\n\n  /**\n   * @param {!Resource} resource\n   * @private\n   */\n  removeResource_(resource) {\n    const index = this.resources_.indexOf(resource);\n    if (index != -1) {\n      this.resources_.splice(index, 1);\n    }\n    if (resource.isBuilt()) {\n      resource.pauseOnRemove();\n    }\n\n    if (resource.getState() === ResourceState.LAYOUT_SCHEDULED) {\n      resource.layoutCanceled();\n    }\n    this.cleanupTasks_(resource, /* opt_removePending */ true);\n    dev().fine(TAG_, 'resource removed:', resource.debugid);\n  }\n\n  /** @override */\n  upgraded(element) {\n    const resource = Resource.forElement(element);\n    this.buildOrScheduleBuildForResource_(resource);\n    dev().fine(TAG_, 'resource upgraded:', resource.debugid);\n  }\n\n  /** @override */\n  updateLayoutPriority(element, newLayoutPriority) {\n    const resource = Resource.forElement(element);\n\n    resource.updateLayoutPriority(newLayoutPriority);\n\n    // Update affected tasks\n    this.queue_.forEach((task) => {\n      if (task.resource == resource) {\n        task.priority = newLayoutPriority;\n      }\n    });\n\n    this.schedulePass();\n  }\n\n  /** @override */\n  schedulePass(opt_delay) {\n    return this.pass_.schedule(opt_delay);\n  }\n\n  /** @override */\n  updateOrEnqueueMutateTask(resource, newRequest) {\n    let request = null;\n    for (let i = 0; i < this.requestsChangeSize_.length; i++) {\n      if (this.requestsChangeSize_[i].resource == resource) {\n        request = this.requestsChangeSize_[i];\n        break;\n      }\n    }\n    if (request) {\n      request.newHeight = newRequest.newHeight;\n      request.newWidth = newRequest.newWidth;\n      request.marginChange = newRequest.marginChange;\n      request.event = newRequest.event;\n      request.force = newRequest.force || request.force;\n      request.callback = newRequest.callback;\n    } else {\n      this.requestsChangeSize_.push(newRequest);\n    }\n  }\n\n  /** @override */\n  schedulePassVsync() {\n    if (this.vsyncScheduled_) {\n      return;\n    }\n    this.vsyncScheduled_ = true;\n    this.vsync_.mutate(() => this.doPass());\n  }\n\n  /** @override */\n  ampInitComplete() {\n    this.ampInitialized_ = true;\n    dev().fine(TAG_, 'ampInitComplete');\n    this.schedulePass();\n  }\n\n  /** @override */\n  setRelayoutTop(relayoutTop) {\n    if (this.relayoutTop_ == -1) {\n      this.relayoutTop_ = relayoutTop;\n    } else {\n      this.relayoutTop_ = Math.min(relayoutTop, this.relayoutTop_);\n    }\n  }\n\n  /** @override */\n  maybeHeightChanged() {\n    this.maybeChangeHeight_ = true;\n  }\n\n  /** @override */\n  onNextPass(callback) {\n    this.passCallbacks_.push(callback);\n  }\n\n  /**\n   * Runs a pass immediately.\n   *\n   * @visibleForTesting\n   */\n  doPass() {\n    if (!this.isRuntimeOn_) {\n      dev().fine(TAG_, 'runtime is off');\n      return;\n    }\n\n    this.visible_ = this.ampdoc.isVisible();\n    this.buildsThisPass_ = 0;\n\n    const firstPassAfterDocumentReady =\n      this.documentReady_ &&\n      this.firstPassAfterDocumentReady_ &&\n      this.ampInitialized_;\n    if (firstPassAfterDocumentReady) {\n      this.firstPassAfterDocumentReady_ = false;\n      const doc = this.win.document;\n      const documentInfo = Services.documentInfoForDoc(this.ampdoc);\n\n      // TODO(choumx, #26687): Update viewers to read data.viewport instead of\n      // data.metaTags.viewport from 'documentLoaded' message.\n      this.viewer_.sendMessage(\n        'documentLoaded',\n        dict({\n          'title': doc.title,\n          'sourceUrl': getSourceUrl(this.ampdoc.getUrl()),\n          'isStory': doc.body.firstElementChild?.tagName === 'AMP-STORY',\n          'serverLayout': doc.documentElement.hasAttribute('i-amphtml-element'),\n          'linkRels': documentInfo.linkRels,\n          'metaTags': {'viewport': documentInfo.viewport} /* deprecated */,\n          'viewport': documentInfo.viewport,\n        }),\n        /* cancelUnsent */ true\n      );\n\n      this.contentHeight_ = this.viewport_.getContentHeight();\n      this.viewer_.sendMessage(\n        'documentHeight',\n        dict({'height': this.contentHeight_}),\n        /* cancelUnsent */ true\n      );\n      dev().fine(TAG_, 'document height on load: %s', this.contentHeight_);\n    }\n\n    // Once we know the document is fully parsed, we check to see if every AMP Element has been built\n    const firstPassAfterAllBuilt =\n      !this.firstPassAfterDocumentReady_ &&\n      this.firstPassAfterAllBuilt_ &&\n      this.resources_.every(\n        (r) => r.getState() != Resource.NOT_BUILT || r.element.R1()\n      );\n    if (firstPassAfterAllBuilt) {\n      this.firstPassAfterAllBuilt_ = false;\n      this.maybeChangeHeight_ = true;\n    }\n\n    const viewportSize = this.viewport_.getSize();\n    dev().fine(\n      TAG_,\n      'PASS: visible=',\n      this.visible_,\n      ', relayoutAll=',\n      this.relayoutAll_,\n      ', relayoutTop=',\n      this.relayoutTop_,\n      ', viewportSize=',\n      viewportSize.width,\n      viewportSize.height\n    );\n    this.pass_.cancel();\n    this.vsyncScheduled_ = false;\n\n    this.visibilityStateMachine_.setState(this.ampdoc.getVisibilityState());\n\n    this.signalIfReady_();\n\n    if (this.maybeChangeHeight_) {\n      this.maybeChangeHeight_ = false;\n      this.vsync_.measure(() => {\n        const measuredContentHeight = this.viewport_.getContentHeight();\n        if (measuredContentHeight != this.contentHeight_) {\n          this.viewer_.sendMessage(\n            'documentHeight',\n            dict({'height': measuredContentHeight}),\n            /* cancelUnsent */ true\n          );\n          this.contentHeight_ = measuredContentHeight;\n          dev().fine(TAG_, 'document height changed: %s', this.contentHeight_);\n          this.viewport_.contentHeightChanged();\n        }\n      });\n    }\n\n    for (let i = 0; i < this.passCallbacks_.length; i++) {\n      const fn = this.passCallbacks_[i];\n      fn();\n    }\n    this.passCallbacks_.length = 0;\n  }\n\n  /**\n   * If (1) the document is fully parsed, (2) the AMP runtime (services etc.)\n   * is initialized, and (3) we did a first pass on element measurements,\n   * then fire the \"ready\" signal.\n   * @private\n   */\n  signalIfReady_() {\n    if (\n      this.documentReady_ &&\n      this.ampInitialized_ &&\n      !this.ampdoc.signals().get(READY_SCAN_SIGNAL)\n    ) {\n      // This signal mainly signifies that most of elements have been measured\n      // by now. This is mostly used to avoid measuring too many elements\n      // individually. May not be called in shadow mode.\n      this.ampdoc.signals().signal(READY_SCAN_SIGNAL);\n      dev().fine(TAG_, 'signal: ready-scan');\n    }\n  }\n\n  /**\n   * Returns `true` when there's mutate work currently batched.\n   * @return {boolean}\n   * @private\n   */\n  hasMutateWork_() {\n    return this.requestsChangeSize_.length > 0;\n  }\n\n  /**\n   * Performs pre-discovery mutates.\n   * @private\n   */\n  mutateWork_() {\n    // Read all necessary data before mutates.\n    // The height changing depends largely on the target element's position\n    // in the active viewport. When not in prerendering, we also consider the\n    // active viewport the part of the visible viewport below 10% from the top\n    // and above 25% from the bottom.\n    // This is basically the portion of the viewport where the reader is most\n    // likely focused right now. The main goal is to avoid drastic UI changes\n    // in that part of the content. The elements below the active viewport are\n    // freely resized. The elements above the viewport are resized and request\n    // scroll adjustment to avoid active viewport changing without user's\n    // action. The elements in the active viewport are not resized and instead\n    // the overflow callbacks are called.\n    const now = this.win.Date.now();\n    const viewportRect = this.viewport_.getRect();\n    const topOffset = viewportRect.height / 10;\n    const bottomOffset = viewportRect.height / 10;\n    const isScrollingStopped =\n      (Math.abs(this.lastVelocity_) < 1e-2 &&\n        now - this.lastScrollTime_ > MUTATE_DEFER_DELAY_) ||\n      now - this.lastScrollTime_ > MUTATE_DEFER_DELAY_ * 2;\n\n    if (this.requestsChangeSize_.length > 0) {\n      dev().fine(\n        TAG_,\n        'change size requests:',\n        this.requestsChangeSize_.length\n      );\n      const requestsChangeSize = this.requestsChangeSize_;\n      this.requestsChangeSize_ = [];\n\n      // Find minimum top position and run all mutates.\n      let minTop = -1;\n      const scrollAdjSet = [];\n      let aboveVpHeightChange = 0;\n      for (let i = 0; i < requestsChangeSize.length; i++) {\n        const request = requestsChangeSize[i];\n        const {event, resource} =\n          /** @type {!./resources-interface.ChangeSizeRequestDef} */ (request);\n        const box = resource.getLayoutBox();\n\n        let topMarginDiff = 0;\n        let bottomMarginDiff = 0;\n        let leftMarginDiff = 0;\n        let rightMarginDiff = 0;\n        let {bottom: bottomDisplacedBoundary, top: topUnchangedBoundary} = box;\n        let newMargins = undefined;\n        if (request.marginChange) {\n          newMargins = request.marginChange.newMargins;\n          const margins = request.marginChange.currentMargins;\n          if (newMargins.top != undefined) {\n            topMarginDiff = newMargins.top - margins.top;\n          }\n          if (newMargins.bottom != undefined) {\n            bottomMarginDiff = newMargins.bottom - margins.bottom;\n          }\n          if (newMargins.left != undefined) {\n            leftMarginDiff = newMargins.left - margins.left;\n          }\n          if (newMargins.right != undefined) {\n            rightMarginDiff = newMargins.right - margins.right;\n          }\n          if (topMarginDiff) {\n            topUnchangedBoundary = box.top - margins.top;\n          }\n          if (bottomMarginDiff) {\n            // The lowest boundary of the element that would appear to be\n            // resized as a result of this size change. If the bottom margin is\n            // being changed then it is the bottom edge of the margin box,\n            // otherwise it is the bottom edge of the layout box as set above.\n            bottomDisplacedBoundary = box.bottom + margins.bottom;\n          }\n        }\n        const heightDiff = request.newHeight - box.height;\n        const widthDiff = request.newWidth - box.width;\n\n        // Check resize rules. It will either resize element immediately, or\n        // wait until scrolling stops or will call the overflow callback.\n        let resize = false;\n        if (\n          heightDiff == 0 &&\n          topMarginDiff == 0 &&\n          bottomMarginDiff == 0 &&\n          widthDiff == 0 &&\n          leftMarginDiff == 0 &&\n          rightMarginDiff == 0\n        ) {\n          // 1. Nothing to resize.\n        } else if (request.force || !this.visible_) {\n          // 2. An immediate execution requested or the document is hidden.\n          resize = true;\n        } else if (\n          this.activeHistory_.hasDescendantsOf(resource.element) ||\n          (event && event.userActivation && event.userActivation.hasBeenActive)\n        ) {\n          // 3. Active elements are immediately resized. The assumption is that\n          // the resize is triggered by the user action or soon after.\n          resize = true;\n        } else if (\n          topUnchangedBoundary >= viewportRect.bottom - bottomOffset ||\n          (topMarginDiff == 0 &&\n            box.bottom + Math.min(heightDiff, 0) >=\n              viewportRect.bottom - bottomOffset)\n        ) {\n          // 4. Elements under viewport are resized immediately, but only if\n          // an element's boundary is not changed above the viewport after\n          // resize.\n          resize = true;\n        } else if (\n          viewportRect.top > 1 &&\n          bottomDisplacedBoundary <= viewportRect.top + topOffset\n        ) {\n          // 5. Elements above the viewport can only be resized if we are able\n          // to compensate the height change by setting scrollTop and only if\n          // the page has already been scrolled by some amount (1px due to iOS).\n          // Otherwise the scrolling might move important things like the menu\n          // bar out of the viewport at initial page load.\n          if (\n            heightDiff < 0 &&\n            viewportRect.top + aboveVpHeightChange < -heightDiff\n          ) {\n            // Do nothing if height abobe viewport height can't compensate\n            // height decrease\n            continue;\n          }\n          // Can only resized when scrolling has stopped,\n          // otherwise defer util next cycle.\n          if (isScrollingStopped) {\n            // These requests will be executed in the next animation cycle and\n            // adjust the scroll position.\n            aboveVpHeightChange = aboveVpHeightChange + heightDiff;\n            scrollAdjSet.push(request);\n          } else {\n            // Defer till next cycle.\n            this.requestsChangeSize_.push(request);\n          }\n          continue;\n        } else if (this.elementNearBottom_(resource, box)) {\n          // 6. Elements close to the bottom of the document (not viewport)\n          // are resized immediately.\n          resize = true;\n        } else if (\n          heightDiff < 0 ||\n          topMarginDiff < 0 ||\n          bottomMarginDiff < 0\n        ) {\n          // 7. The new height (or one of the margins) is smaller than the\n          // current one.\n        } else if (request.newHeight == box.height) {\n          // 8. Element is in viewport, but this is a width-only expansion.\n          // Check whether this should be reflow-free, in which case,\n          // schedule a size change.\n          this.vsync_.run(\n            {\n              measure: (state) => {\n                state.resize = false;\n                const parent = resource.element.parentElement;\n                if (!parent) {\n                  return;\n                }\n\n                // If the element has siblings, it's possible that a width-expansion will\n                // cause some of them to be pushed down.\n                const parentWidth =\n                  (parent.getLayoutSize && parent.getLayoutSize().width) ||\n                  parent./*OK*/ offsetWidth;\n                let cumulativeWidth = widthDiff;\n                for (let i = 0; i < parent.childElementCount; i++) {\n                  cumulativeWidth += parent.children[i]./*OK*/ offsetWidth;\n                  if (cumulativeWidth > parentWidth) {\n                    return;\n                  }\n                }\n                state.resize = true;\n              },\n              mutate: (state) => {\n                if (state.resize) {\n                  request.resource.changeSize(\n                    request.newHeight,\n                    request.newWidth,\n                    newMargins\n                  );\n                }\n                request.resource.overflowCallback(\n                  /* overflown */ !state.resize,\n                  request.newHeight,\n                  request.newWidth,\n                  newMargins\n                );\n              },\n            },\n            {}\n          );\n        } else {\n          // 9. Element is in viewport don't resize and try overflow callback\n          // instead.\n          request.resource.overflowCallback(\n            /* overflown */ true,\n            request.newHeight,\n            request.newWidth,\n            newMargins\n          );\n        }\n\n        if (resize) {\n          if (box.top >= 0) {\n            minTop = minTop == -1 ? box.top : Math.min(minTop, box.top);\n          }\n          request.resource.changeSize(\n            request.newHeight,\n            request.newWidth,\n            newMargins\n          );\n          request.resource.overflowCallback(\n            /* overflown */ false,\n            request.newHeight,\n            request.newWidth,\n            newMargins\n          );\n          this.maybeChangeHeight_ = true;\n        }\n\n        if (request.callback) {\n          request.callback(/* hasSizeChanged */ resize);\n        }\n      }\n\n      if (minTop != -1) {\n        this.setRelayoutTop(minTop);\n      }\n\n      // Execute scroll-adjusting resize requests, if any.\n      if (scrollAdjSet.length > 0) {\n        this.vsync_.run(\n          {\n            measure: (state) => {\n              state./*OK*/ scrollHeight =\n                this.viewport_./*OK*/ getScrollHeight();\n              state./*OK*/ scrollTop = this.viewport_./*OK*/ getScrollTop();\n            },\n            mutate: (state) => {\n              let minTop = -1;\n              scrollAdjSet.forEach((request) => {\n                const box = request.resource.getLayoutBox();\n                minTop = minTop == -1 ? box.top : Math.min(minTop, box.top);\n                request.resource.changeSize(\n                  request.newHeight,\n                  request.newWidth,\n                  request.marginChange\n                    ? request.marginChange.newMargins\n                    : undefined\n                );\n                if (request.callback) {\n                  request.callback(/* hasSizeChanged */ true);\n                }\n              });\n              if (minTop != -1) {\n                this.setRelayoutTop(minTop);\n              }\n              // Sync is necessary here to avoid UI jump in the next frame.\n              const newScrollHeight = this.viewport_./*OK*/ getScrollHeight();\n              if (newScrollHeight != state./*OK*/ scrollHeight) {\n                this.viewport_.setScrollTop(\n                  state./*OK*/ scrollTop +\n                    (newScrollHeight - state./*OK*/ scrollHeight)\n                );\n              }\n              this.maybeChangeHeight_ = true;\n            },\n          },\n          {}\n        );\n      }\n    }\n  }\n\n  /**\n   * Returns true if element is within 15% and 1000px of document bottom.\n   * Caller can provide current/initial layout boxes as an optimization.\n   * @param {!./resource.Resource} resource\n   * @param {!../layout-rect.LayoutRectDef=} opt_layoutBox\n   * @param {!../layout-rect.LayoutRectDef=} opt_initialLayoutBox\n   * @return {boolean}\n   * @private\n   */\n  elementNearBottom_(resource, opt_layoutBox, opt_initialLayoutBox) {\n    const contentHeight = this.viewport_.getContentHeight();\n    const threshold = Math.max(contentHeight * 0.85, contentHeight - 1000);\n\n    const box = opt_layoutBox || resource.getLayoutBox();\n    const initialBox = opt_initialLayoutBox || resource.getInitialLayoutBox();\n    return box.bottom >= threshold || initialBox.bottom >= threshold;\n  }\n\n  /**\n   * Always returns true unless the resource was previously displayed but is\n   * not displayed now (i.e. the resource should be unloaded).\n   * @param {!Resource} r\n   * @return {boolean}\n   * @private\n   */\n  measureResource_(r) {\n    const wasDisplayed = r.isDisplayed();\n    r.measure();\n    return !(wasDisplayed && !r.isDisplayed());\n  }\n\n  /**\n   * Unloads given resources in an async mutate phase.\n   * @param {!Array<!Resource>} resources\n   * @private\n   */\n  unloadResources_(resources) {\n    if (resources.length) {\n      this.vsync_.mutate(() => {\n        resources.forEach((r) => {\n          r.unload();\n          this.cleanupTasks_(r);\n        });\n        dev().fine(TAG_, 'unload:', resources);\n      });\n    }\n  }\n\n  /**\n   * Discovers work that needs to be done since the last pass. If viewport\n   * has changed, it will try to build new elements, measure changed elements,\n   * and schedule layouts and preloads within a reasonable distance of the\n   * current viewport. Finally, this process also updates inViewport state\n   * of changed elements.\n   *\n   * Layouts and preloads are not executed immediately, but instead scheduled\n   * in the queue with different priorities.\n   *\n   * @private\n   */\n  discoverWork_() {\n    // TODO(dvoytenko): vsync separation may be needed for different phases\n\n    const now = this.win.Date.now();\n\n    // Ensure all resources layout phase complete; when relayoutAll is requested\n    // force re-layout.\n    const {\n      elementsThatScrolled_: elementsThatScrolled,\n      relayoutAll_: relayoutAll,\n      relayoutTop_: relayoutTop,\n    } = this;\n    this.relayoutAll_ = false;\n    this.relayoutTop_ = -1;\n\n    // Phase 1: Build and relayout as needed. All mutations happen here.\n    let relayoutCount = 0;\n    let remeasureCount = 0;\n    for (let i = 0; i < this.resources_.length; i++) {\n      const r = this.resources_[i];\n      if (\n        r.getState() == ResourceState.NOT_BUILT &&\n        !r.isBuilding() &&\n        !r.element.R1()\n      ) {\n        this.buildOrScheduleBuildForResource_(r, /* checkForDupes */ true);\n      }\n\n      if (\n        relayoutAll ||\n        !r.hasBeenMeasured() ||\n        // NOT_LAID_OUT is the state after build() but before measure().\n        r.getState() == ResourceState.NOT_LAID_OUT\n      ) {\n        relayoutCount++;\n      }\n      if (r.isMeasureRequested()) {\n        remeasureCount++;\n      }\n    }\n\n    // Phase 2: Remeasure if there were any relayouts. Unfortunately, currently\n    // there's no way to optimize this. All reads happen here.\n    let toUnload;\n    if (\n      relayoutCount > 0 ||\n      remeasureCount > 0 ||\n      relayoutAll ||\n      relayoutTop != -1 ||\n      elementsThatScrolled.length > 0\n    ) {\n      for (let i = 0; i < this.resources_.length; i++) {\n        const r = this.resources_[i];\n        if ((r.hasOwner() && !r.isMeasureRequested()) || r.element.R1()) {\n          // If element has owner, and measure is not requested, do nothing.\n          continue;\n        }\n        let needsMeasure =\n          relayoutAll ||\n          r.getState() == ResourceState.NOT_LAID_OUT ||\n          !r.hasBeenMeasured() ||\n          r.isMeasureRequested() ||\n          (relayoutTop != -1 && r.getLayoutBox().bottom >= relayoutTop);\n\n        if (!needsMeasure) {\n          for (let i = 0; i < elementsThatScrolled.length; i++) {\n            // TODO(jridgewell): Need to figure out how ShadowRoots and FIEs\n            // should behave in this model. If the ShadowRoot's host scrolls,\n            // do we need to invalidate inside the shadow or light tree? Or if\n            // the FIE's iframe parent scrolls, do we?\n            if (elementsThatScrolled[i].contains(r.element)) {\n              needsMeasure = true;\n              break;\n            }\n          }\n        }\n\n        if (needsMeasure) {\n          const isDisplayed = this.measureResource_(r);\n          if (!isDisplayed) {\n            if (!toUnload) {\n              toUnload = [];\n            }\n            toUnload.push(r);\n          }\n        }\n      }\n    }\n    elementsThatScrolled.length = 0;\n\n    // Unload all in one cycle.\n    if (toUnload) {\n      this.unloadResources_(toUnload);\n    }\n\n    const viewportRect = this.viewport_.getRect();\n    // Load viewport = viewport + 3x up/down when document is visible.\n    let loadRect;\n    if (this.visible_) {\n      loadRect = expandLayoutRect(viewportRect, 0.25, 2);\n    } else {\n      loadRect = viewportRect;\n    }\n\n    const visibleRect = this.visible_\n      ? // When the doc is visible, consider the viewport to be 25% larger,\n        // to minimize effect from small scrolling and notify things that\n        // they are in viewport just before they are actually visible.\n        expandLayoutRect(viewportRect, 0.25, 0.25)\n      : viewportRect;\n\n    // Phase 3: Set inViewport status for resources.\n    for (let i = 0; i < this.resources_.length; i++) {\n      const r = this.resources_[i];\n      if (\n        r.getState() == ResourceState.NOT_BUILT ||\n        r.hasOwner() ||\n        r.element.R1()\n      ) {\n        continue;\n      }\n      // Note that when the document is not visible, neither are any of its\n      // elements to reduce CPU cycles.\n      // TODO(dvoytenko, #3434): Reimplement the use of `isFixed` with\n      // layers. This is currently a short-term fix to the problem that\n      // the fixed elements get incorrect top coord.\n      const shouldBeInViewport =\n        this.visible_ && r.isDisplayed() && r.overlaps(visibleRect);\n      r.setInViewport(shouldBeInViewport);\n    }\n\n    // Phase 4: Schedule elements for layout within a reasonable distance from\n    // current viewport.\n    if (loadRect) {\n      for (let i = 0; i < this.resources_.length; i++) {\n        const r = this.resources_[i];\n        // TODO(dvoytenko): This extra build has to be merged with the\n        // scheduleLayoutOrPreload method below.\n        // Build all resources visible, measured, and in the viewport.\n        if (\n          !r.isBuilt() &&\n          !r.isBuilding() &&\n          !r.hasOwner() &&\n          !r.element.R1() &&\n          r.hasBeenMeasured() &&\n          r.isDisplayed() &&\n          r.overlaps(loadRect)\n        ) {\n          this.buildOrScheduleBuildForResource_(\n            r,\n            /* checkForDupes */ true,\n            /* ignoreQuota */ true\n          );\n        }\n        if (r.getState() != ResourceState.READY_FOR_LAYOUT || r.hasOwner()) {\n          continue;\n        }\n        // TODO(dvoytenko, #3434): Reimplement the use of `isFixed` with\n        // layers. This is currently a short-term fix to the problem that\n        // the fixed elements get incorrect top coord.\n        if (r.isDisplayed() && r.overlaps(loadRect)) {\n          this.scheduleLayoutOrPreload(r, /* layout */ true);\n        }\n      }\n    }\n\n    if (this.visible_ && this.isIdle_(now)) {\n      // Phase 5: Idle Render Outside Viewport layout: layout up to 4 items\n      // with idleRenderOutsideViewport true\n      let idleScheduledCount = 0;\n      for (\n        let i = 0;\n        i < this.resources_.length && idleScheduledCount < 4;\n        i++\n      ) {\n        const r = this.resources_[i];\n        if (\n          r.getState() == ResourceState.READY_FOR_LAYOUT &&\n          !r.hasOwner() &&\n          !r.element.R1() &&\n          r.isDisplayed() &&\n          r.idleRenderOutsideViewport()\n        ) {\n          dev().fine(TAG_, 'idleRenderOutsideViewport layout:', r.debugid);\n          this.scheduleLayoutOrPreload(r, /* layout */ false);\n          idleScheduledCount++;\n        }\n      }\n      // Phase 6: Idle layout: layout more if we are otherwise not doing much.\n      // TODO(dvoytenko): document/estimate IDLE timeouts and other constants\n      for (\n        let i = 0;\n        i < this.resources_.length && idleScheduledCount < 4;\n        i++\n      ) {\n        const r = this.resources_[i];\n        if (\n          r.getState() == ResourceState.READY_FOR_LAYOUT &&\n          !r.hasOwner() &&\n          !r.element.R1() &&\n          r.isDisplayed()\n        ) {\n          dev().fine(TAG_, 'idle layout:', r.debugid);\n          this.scheduleLayoutOrPreload(r, /* layout */ false);\n          idleScheduledCount++;\n        }\n      }\n    }\n  }\n\n  /**\n   * Whether the page is relatively \"idle\". For now, it's checking if it's been\n   * a while since the last element received a layoutCallback.\n   *\n   * @param {number} now\n   * @return {boolean}\n   * @private\n   */\n  isIdle_(now = Date.now()) {\n    const lastDequeueTime = this.exec_.getLastDequeueTime();\n    return (\n      this.exec_.getSize() == 0 &&\n      this.queue_.getSize() == 0 &&\n      now > lastDequeueTime + 5000 &&\n      lastDequeueTime > 0\n    );\n  }\n\n  /**\n   * Dequeues layout and preload tasks from the queue and initiates their\n   * execution.\n   *\n   * There are two main drivers to dequeueing: a task's score and timeout. The\n   * score is built based on the resource's priority and viewport location\n   * (see {@link calcTaskScore_}). Timeout depends on the priority and age\n   * of tasks currently in the execution pool (see {@link calcTaskTimeout_}).\n   *\n   * @return {!time}\n   * @private\n   */\n  work_() {\n    const now = this.win.Date.now();\n\n    let timeout = -1;\n    let task = this.queue_.peek(this.boundTaskScorer_);\n    while (task) {\n      timeout = this.calcTaskTimeout_(task);\n      dev().fine(\n        TAG_,\n        'peek from queue:',\n        task.id,\n        'sched at',\n        task.scheduleTime,\n        'score',\n        this.boundTaskScorer_(task),\n        'timeout',\n        timeout\n      );\n      if (timeout > 16) {\n        break;\n      }\n\n      this.queue_.dequeue(task);\n\n      // Do not override a task in execution. This task will have to wait\n      // until the current one finished the execution.\n      const executing = this.exec_.getTaskById(task.id);\n      if (executing) {\n        // Reschedule post execution.\n        const reschedule = this.reschedule_.bind(this, task);\n        executing.promise.then(reschedule, reschedule);\n      } else {\n        const {resource} = task;\n\n        const stillDisplayed = true;\n        // Remeasure can only update isDisplayed(), not in-viewport state.\n        resource.measure();\n\n        // Check if the element has exited the viewport or the page has changed\n        // visibility since the layout was scheduled.\n        if (\n          stillDisplayed &&\n          this.isLayoutAllowed_(resource, task.forceOutsideViewport)\n        ) {\n          task.promise = task.callback();\n          task.startTime = now;\n          dev().fine(TAG_, 'exec:', task.id, 'at', task.startTime);\n          this.exec_.enqueue(task);\n          task.promise\n            .then(\n              this.taskComplete_.bind(this, task, true),\n              this.taskComplete_.bind(this, task, false)\n            )\n            .catch(/** @type {function (*)} */ (reportError));\n        } else {\n          dev().fine(TAG_, 'cancelled', task.id);\n          resource.layoutCanceled();\n        }\n      }\n\n      task = this.queue_.peek(this.boundTaskScorer_);\n      timeout = -1;\n    }\n\n    dev().fine(\n      TAG_,\n      'queue size:',\n      this.queue_.getSize(),\n      'exec size:',\n      this.exec_.getSize()\n    );\n\n    if (timeout >= 0) {\n      // Still tasks in the queue, but we took too much time.\n      // Schedule the next work pass.\n      return timeout;\n    }\n\n    // No tasks left in the queue.\n    // Schedule the next idle pass.\n    let nextPassDelay = (now - this.exec_.getLastDequeueTime()) * 2;\n    nextPassDelay = Math.max(Math.min(30000, nextPassDelay), 5000);\n    return nextPassDelay;\n  }\n\n  /**\n   * Calculates the task's score. A task with the lowest score will be dequeued\n   * from the queue the first.\n   *\n   * There are three components of the score: element's priority, operation or\n   * offset priority and viewport priority.\n   *\n   * Element's priority is constant of the element's name. E.g. amp-img has a\n   * priority of 0, while amp-ad has a priority of 2.\n   *\n   * The operation (offset) priority is the priority of the task. A layout is\n   * a high-priority task while preload is a lower-priority task.\n   *\n   * Viewport priority is a function of the distance of the element from the\n   * currently visible viewports. The elements in the visible viewport get\n   * higher priority and further away from the viewport get lower priority.\n   * This priority also depends on whether or not the user is scrolling towards\n   * this element or away from it.\n   *\n   * @param {!./task-queue.TaskDef} task\n   * @return {number}\n   * @private\n   */\n  calcTaskScore_(task) {\n    // TODO(jridgewell): these should be taking into account the active\n    // scroller, which may not be the root scroller. Maybe a weighted average\n    // of \"scroller scrolls necessary\" to see the element.\n    // Demo at https://output.jsbin.com/hicigom/quiet\n    const viewport = this.viewport_.getRect();\n    const box = task.resource.getLayoutBox();\n    let posPriority = Math.floor((box.top - viewport.top) / viewport.height);\n    if (Math.sign(posPriority) != this.getScrollDirection()) {\n      posPriority *= 2;\n    }\n    posPriority = Math.abs(posPriority);\n    return task.priority * PRIORITY_BASE_ + posPriority;\n  }\n\n  /**\n   * Calculates the timeout of a task. The timeout depends on two main factors:\n   * the priorities of the tasks currently in the execution pool and their age.\n   * The timeout is calculated against each task in the execution pool and the\n   * maximum value is returned.\n   *\n   * A task is penalized with higher timeout values when it's lower in priority\n   * than the task in the execution pool. However, this penalty is judged\n   * against the age of the executing task. If it has been in executing for\n   * some time, the penalty is reduced.\n   *\n   * @param {!./task-queue.TaskDef} task\n   * @private\n   */\n  calcTaskTimeout_(task) {\n    const now = this.win.Date.now();\n\n    if (this.exec_.getSize() == 0) {\n      // If we've never been visible, return 0. This follows the previous\n      // behavior of not delaying tasks when there's nothing to do.\n      if (this.firstVisibleTime_ === -1) {\n        return 0;\n      }\n\n      // Scale off the first visible time, so penalized tasks must wait a\n      // second or two to run. After we have been visible for a time, we no\n      // longer have to wait.\n      const penalty = task.priority * PRIORITY_PENALTY_TIME_;\n      return Math.max(penalty - (now - this.firstVisibleTime_), 0);\n    }\n\n    let timeout = 0;\n    this.exec_.forEach((other) => {\n      // Higher priority tasks get the head start. Currently 500ms per a drop\n      // in priority (note that priority is 10-based).\n      const penalty = Math.max(\n        (task.priority - other.priority) * PRIORITY_PENALTY_TIME_,\n        0\n      );\n      // TODO(dvoytenko): Consider running total and not maximum.\n      timeout = Math.max(timeout, penalty - (now - other.startTime));\n    });\n\n    return timeout;\n  }\n\n  /**\n   * @param {!./task-queue.TaskDef} task\n   * @private\n   */\n  reschedule_(task) {\n    if (!this.queue_.getTaskById(task.id)) {\n      this.queue_.enqueue(task);\n    }\n  }\n\n  /**\n   * @param {!./task-queue.TaskDef} task\n   * @param {boolean} success\n   * @param {*=} opt_reason\n   * @return {!Promise|undefined}\n   * @private\n   */\n  taskComplete_(task, success, opt_reason) {\n    this.exec_.dequeue(task);\n    this.schedulePass(POST_TASK_PASS_DELAY_);\n    if (!success) {\n      dev().info(\n        TAG_,\n        'task failed:',\n        task.id,\n        task.resource.debugid,\n        opt_reason\n      );\n      return Promise.reject(opt_reason);\n    }\n  }\n\n  /**\n   * Returns whether the resource should be preloaded at this time.\n   * The element must be measured by this time.\n   * @param {!Resource} resource\n   * @param {boolean} forceOutsideViewport\n   * @return {boolean}\n   * @private\n   */\n  isLayoutAllowed_(resource, forceOutsideViewport) {\n    // Only built and displayed elements can be loaded.\n    if (\n      resource.getState() == ResourceState.NOT_BUILT ||\n      !resource.isDisplayed()\n    ) {\n      return false;\n    }\n\n    // Don't schedule elements when we're not visible, or in prerender mode\n    // (and they can't prerender).\n    if (!this.visible_) {\n      if (\n        this.ampdoc.getVisibilityState() != VisibilityState.PRERENDER ||\n        !resource.prerenderAllowed()\n      ) {\n        return false;\n      }\n    }\n\n    // The element has to be in its rendering corridor.\n    if (\n      !forceOutsideViewport &&\n      !resource.isInViewport() &&\n      !resource.renderOutsideViewport() &&\n      !resource.idleRenderOutsideViewport()\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /** @override */\n  scheduleLayoutOrPreload(\n    resource,\n    layout,\n    opt_parentPriority,\n    opt_forceOutsideViewport\n  ) {\n    if (resource.element.R1()) {\n      return;\n    }\n    const isBuilt = resource.getState() != ResourceState.NOT_BUILT;\n    const isDisplayed = resource.isDisplayed();\n    if (!isBuilt || !isDisplayed) {\n      devAssert(\n        false,\n        'Not ready for layout: %s (%s)',\n        resource.debugid,\n        resource.getState()\n      );\n    }\n    const forceOutsideViewport = opt_forceOutsideViewport || false;\n    if (!this.isLayoutAllowed_(resource, forceOutsideViewport)) {\n      return;\n    }\n\n    if (layout) {\n      this.schedule_(\n        resource,\n        LAYOUT_TASK_ID_,\n        LAYOUT_TASK_OFFSET_,\n        opt_parentPriority || 0,\n        forceOutsideViewport,\n        resource.startLayout.bind(resource)\n      );\n    } else {\n      this.schedule_(\n        resource,\n        PRELOAD_TASK_ID_,\n        PRELOAD_TASK_OFFSET_,\n        opt_parentPriority || 0,\n        forceOutsideViewport,\n        resource.startLayout.bind(resource)\n      );\n    }\n  }\n\n  /**\n   * Schedules a task.\n   * @param {!Resource} resource\n   * @param {string} localId\n   * @param {number} priorityOffset\n   * @param {number} parentPriority\n   * @param {boolean} forceOutsideViewport\n   * @param {function():!Promise} callback\n   * @private\n   */\n  schedule_(\n    resource,\n    localId,\n    priorityOffset,\n    parentPriority,\n    forceOutsideViewport,\n    callback\n  ) {\n    const taskId = resource.getTaskId(localId);\n\n    const task = {\n      id: taskId,\n      resource,\n      priority:\n        Math.max(resource.getLayoutPriority(), parentPriority) + priorityOffset,\n      forceOutsideViewport,\n      callback,\n      scheduleTime: this.win.Date.now(),\n      startTime: 0,\n      promise: null,\n    };\n    dev().fine(TAG_, 'schedule:', task.id, 'at', task.scheduleTime);\n\n    // Only schedule a new task if there's no one enqueued yet or if this task\n    // has a higher priority.\n    const queued = this.queue_.getTaskById(taskId);\n    if (!queued || task.priority < queued.priority) {\n      if (queued) {\n        this.queue_.dequeue(queued);\n      }\n      this.queue_.enqueue(task);\n      this.schedulePass(this.calcTaskTimeout_(task));\n    }\n    task.resource.layoutScheduled(task.scheduleTime);\n  }\n\n  /**\n   * @return {!Promise} when first pass executed.\n   */\n  whenFirstPass() {\n    return this.firstPassDone_.promise;\n  }\n\n  /**\n   * Calls iterator on each sub-resource\n   * @param {!FiniteStateMachine<!VisibilityState>} vsm\n   */\n  setupVisibilityStateMachine_(vsm) {\n    const {\n      HIDDEN: hidden,\n      INACTIVE: inactive,\n      PAUSED: paused,\n      PRERENDER: prerender,\n      VISIBLE: visible,\n    } = VisibilityState;\n    const doWork = () => {\n      // If viewport size is 0, the manager will wait for the resize event.\n      const viewportSize = this.viewport_.getSize();\n      if (viewportSize.height > 0 && viewportSize.width > 0) {\n        // 1. Handle all size-change requests. 1x mutate (+1 vsync measure/mutate for above-fold resizes).\n        if (this.hasMutateWork_()) {\n          this.mutateWork_();\n        }\n        // 2. Build/measure/in-viewport/schedule layouts. 1x mutate & measure.\n        this.discoverWork_();\n        // 3. Execute scheduled layouts and preloads. 1x mutate.\n        let delay = this.work_();\n        // 4. Deferred size-change requests (waiting for scrolling to stop) will shorten delay until next pass.\n        if (this.hasMutateWork_()) {\n          // Overflow mutate work.\n          delay = Math.min(delay, MUTATE_DEFER_DELAY_);\n        }\n        if (this.visible_) {\n          if (this.schedulePass(delay)) {\n            dev().fine(TAG_, 'next pass:', delay);\n          } else {\n            dev().fine(TAG_, 'pass already scheduled');\n          }\n        } else {\n          dev().fine(TAG_, 'document is not visible: no scheduling');\n        }\n        this.firstPassDone_.resolve();\n      }\n    };\n    const noop = () => {};\n    const pause = () => {\n      this.resources_.forEach((r) => r.pause());\n    };\n    const unload = () => {\n      this.resources_.forEach((r) => {\n        r.unload();\n        this.cleanupTasks_(r);\n      });\n      this.unselectText_();\n    };\n    const resume = () => {\n      this.resources_.forEach((r) => r.resume());\n      doWork();\n    };\n\n    vsm.addTransition(prerender, prerender, doWork);\n    vsm.addTransition(prerender, visible, doWork);\n    vsm.addTransition(prerender, hidden, doWork);\n    vsm.addTransition(prerender, inactive, doWork);\n    vsm.addTransition(prerender, paused, doWork);\n\n    vsm.addTransition(visible, visible, doWork);\n    vsm.addTransition(visible, hidden, doWork);\n    vsm.addTransition(visible, inactive, unload);\n    vsm.addTransition(visible, paused, pause);\n\n    vsm.addTransition(hidden, visible, doWork);\n    vsm.addTransition(hidden, hidden, doWork);\n    vsm.addTransition(hidden, inactive, unload);\n    vsm.addTransition(hidden, paused, pause);\n\n    vsm.addTransition(inactive, visible, resume);\n    vsm.addTransition(inactive, hidden, resume);\n    vsm.addTransition(inactive, inactive, noop);\n    vsm.addTransition(inactive, paused, doWork);\n\n    vsm.addTransition(paused, visible, resume);\n    vsm.addTransition(paused, hidden, doWork);\n    vsm.addTransition(paused, inactive, unload);\n    vsm.addTransition(paused, paused, noop);\n  }\n\n  /**\n   * Unselects any selected text\n   * @private\n   */\n  unselectText_() {\n    try {\n      this.win.getSelection().removeAllRanges();\n    } catch (e) {\n      // Selection API not supported.\n    }\n  }\n\n  /**\n   * Cleanup task queues from tasks for elements that has been unloaded.\n   * @param {Resource} resource\n   * @param {boolean=} opt_removePending Whether to remove from pending\n   *     build resources.\n   * @private\n   */\n  cleanupTasks_(resource, opt_removePending) {\n    if (\n      resource.getState() == ResourceState.NOT_LAID_OUT ||\n      resource.getState() == ResourceState.READY_FOR_LAYOUT\n    ) {\n      // If the layout promise for this resource has not resolved yet, remove\n      // it from the task queues to make sure this resource can be rescheduled\n      // for layout again later on.\n      // TODO(mkhatib): Think about how this might affect preload tasks once the\n      // prerender change is in.\n      this.queue_.purge((task) => {\n        return task.resource == resource;\n      });\n      this.exec_.purge((task) => {\n        return task.resource == resource;\n      });\n      remove(this.requestsChangeSize_, (request) => {\n        return request.resource === resource;\n      });\n    }\n\n    if (\n      resource.getState() == ResourceState.NOT_BUILT &&\n      opt_removePending &&\n      this.pendingBuildResources_\n    ) {\n      const pendingIndex = this.pendingBuildResources_.indexOf(resource);\n      if (pendingIndex != -1) {\n        this.pendingBuildResources_.splice(pendingIndex, 1);\n      }\n    }\n  }\n\n  /**\n   * Listens for scroll events on elements (not the root scroller), and marks\n   * them for invalidating all child layout boxes. This is to support native\n   * scrolling elements outside amp-components.\n   *\n   * @param {!Event} event\n   */\n  scrolled_(event) {\n    const {target} = event;\n    // If the target of the scroll event is an element, that means that element\n    // is an overflow scroller.\n    // If the target is the document itself, that means the native root\n    // scroller (`document.scrollingElement`) did the scrolling.\n    if (target.nodeType !== Node.ELEMENT_NODE) {\n      return;\n    }\n    // In iOS <= 12, the scroll hacks cause the scrolling element to be\n    // reported as the target, instead of the document.\n    if (target === this.viewport_.getScrollingElement()) {\n      return;\n    }\n\n    const scrolled = dev().assertElement(target);\n    if (!this.elementsThatScrolled_.includes(scrolled)) {\n      this.elementsThatScrolled_.push(scrolled);\n      this.schedulePass(FOUR_FRAME_DELAY_);\n    }\n  }\n}\n\n/**\n * The internal structure of a ChangeHeightRequest.\n * @typedef {{\n *   height: (number|undefined),\n *   width: (number|undefined),\n *   margins: (!../layout-rect.LayoutMarginsChangeDef|undefined)\n * }}\n */\nexport let SizeDef;\n\n/**\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n */\nexport function installResourcesServiceForDoc(ampdoc) {\n  registerServiceBuilderForDoc(ampdoc, 'resources', ResourcesImpl);\n}\n", "import {ActionTrust} from '#core/constants/action-constants';\nimport {tryFocus} from '#core/dom';\nimport {Layout, getLayoutClass} from '#core/dom/layout';\nimport {computedStyle, toggle} from '#core/dom/style';\nimport {isFiniteNumber} from '#core/types';\nimport {getWin} from '#core/window';\n\nimport {Services} from '#service';\n\nimport {dev, user, userAssert} from '#utils/log';\n\nimport {getAmpdoc, registerServiceBuilderForDoc} from '../service-helpers';\n\n/**\n * @param {!Element} element\n * @return {boolean}\n */\nfunction isShowable(element) {\n  return element.hasAttribute('hidden');\n}\n\n/**\n * @param {!Element} element\n * @return {?Element}\n * @visibleForTesting\n */\nexport function getAutofocusElementForShowAction(element) {\n  if (element.hasAttribute('autofocus')) {\n    return element;\n  }\n  return element.querySelector('[autofocus]');\n}\n\n/** @const {string} */\nconst TAG = 'STANDARD-ACTIONS';\n\n/**\n * Regular expression that identifies AMP CSS classes with 'i-amphtml-' prefixes.\n * @type {!RegExp}\n */\nconst AMP_CSS_RE = /^i-amphtml-/;\n\n/**\n * This service contains implementations of some of the most typical actions,\n * such as hiding DOM elements.\n * @visibleForTesting\n */\nexport class StandardActions {\n  /**\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @const {!./ampdoc-impl.AmpDoc} */\n    this.ampdoc = ampdoc;\n\n    const context = ampdoc.getHeadNode();\n\n    /** @const @private {!./mutator-interface.MutatorInterface} */\n    this.mutator_ = Services.mutatorForDoc(ampdoc);\n\n    /** @const @private {!./viewport/viewport-interface.ViewportInterface} */\n    this.viewport_ = Services.viewportForDoc(ampdoc);\n\n    // Explicitly not setting `Action` as a member to scope installation to one\n    // method and for bundle size savings. \uD83D\uDCB0\n    this.installActions_(Services.actionServiceForDoc(context));\n  }\n\n  /**\n   * @param {!./action-impl.ActionService} actionService\n   * @private\n   */\n  installActions_(actionService) {\n    actionService.addGlobalTarget('AMP', this.handleAmpTarget_.bind(this));\n\n    // All standard actions require high trust by default via\n    // addGlobalMethodHandler.\n\n    actionService.addGlobalMethodHandler('hide', this.handleHide_.bind(this));\n\n    actionService.addGlobalMethodHandler('show', this.handleShow_.bind(this));\n\n    actionService.addGlobalMethodHandler(\n      'toggleVisibility',\n      this.handleToggle_.bind(this)\n    );\n\n    actionService.addGlobalMethodHandler(\n      'scrollTo',\n      this.handleScrollTo_.bind(this)\n    );\n\n    actionService.addGlobalMethodHandler('focus', this.handleFocus_.bind(this));\n\n    actionService.addGlobalMethodHandler(\n      'toggleClass',\n      this.handleToggleClass_.bind(this)\n    );\n\n    actionService.addGlobalMethodHandler(\n      'toggleChecked',\n      this.handleToggleChecked_.bind(this)\n    );\n  }\n\n  /**\n   * Handles global `AMP` actions.\n   * See `amp-actions-and-events.md` for details.\n   * @param {!./action-impl.ActionInvocation} invocation\n   * @return {?Promise}\n   * @throws If the invocation method is unrecognized.\n   * @private Visible to tests only.\n   */\n  handleAmpTarget_(invocation) {\n    // All global `AMP` actions require default trust.\n    if (!invocation.satisfiesTrust(ActionTrust.DEFAULT)) {\n      return null;\n    }\n    const {args, method, node} = invocation;\n    const win = getWin(node);\n    switch (method) {\n      case 'pushState':\n      case 'setState':\n        const element =\n          node.nodeType === Node.DOCUMENT_NODE\n            ? /** @type {!Document} */ (node).documentElement\n            : dev().assertElement(node);\n        return Services.bindForDocOrNull(element).then((bind) => {\n          userAssert(bind, 'AMP-BIND is not installed.');\n          return bind.invoke(invocation);\n        });\n\n      case 'navigateTo':\n        return this.handleNavigateTo_(invocation);\n\n      case 'closeOrNavigateTo':\n        return this.handleCloseOrNavigateTo_(invocation);\n\n      case 'scrollTo':\n        userAssert(args['id'], 'AMP.scrollTo must provide element ID');\n        invocation.node = dev().assertElement(\n          getAmpdoc(node).getElementById(args['id']),\n          'scrollTo element ID must exist on page'\n        );\n        return this.handleScrollTo_(invocation);\n\n      case 'goBack':\n        Services.historyForDoc(this.ampdoc).goBack(\n          /* navigate */ !!(args && args['navigate'] === true)\n        );\n        return null;\n\n      case 'print':\n        win.print();\n        return null;\n\n      case 'optoutOfCid':\n        return Services.cidForDoc(this.ampdoc)\n          .then((cid) => cid.optOut())\n          .catch((reason) => {\n            dev().error(TAG, 'Failed to opt out of CID', reason);\n          });\n    }\n    throw user().createError('Unknown AMP action ', method);\n  }\n\n  /**\n   * Handles the `navigateTo` action.\n   * @param {!./action-impl.ActionInvocation} invocation\n   * @return {!Promise}\n   * @private Visible to tests only.\n   */\n  handleNavigateTo_(invocation) {\n    const {args, caller, method, node} = invocation;\n    const win = getWin(node);\n    // Some components have additional constraints on allowing navigation.\n    let permission = Promise.resolve();\n    if (caller.tagName.startsWith('AMP-')) {\n      const ampElement = /** @type {!AmpElement} */ (caller);\n      permission = ampElement.getImpl().then((impl) => {\n        if (typeof impl.throwIfCannotNavigate == 'function') {\n          impl.throwIfCannotNavigate();\n        }\n      });\n    }\n    return permission.then(\n      () => {\n        Services.navigationForDoc(this.ampdoc).navigateTo(\n          win,\n          args['url'],\n          `AMP.${method}`,\n          {target: args['target'], opener: args['opener']}\n        );\n      },\n      /* onrejected */ (e) => {\n        user().error(TAG, e);\n      }\n    );\n  }\n\n  /**\n   * Handles the `handleCloseOrNavigateTo_` action.\n   * This action tries to close the requesting window if allowed, otherwise\n   * navigates the window.\n   *\n   * Window can be closed only from top-level documents that have an opener.\n   * Without an opener or if embedded, it will deny the close method.\n   * @param {!./action-impl.ActionInvocation} invocation\n   * @return {!Promise}\n   * @private Visible to tests only.\n   */\n  handleCloseOrNavigateTo_(invocation) {\n    const {node} = invocation;\n    const win = getWin(node);\n\n    // Don't allow closing if embedded in iframe or does not have an opener or\n    // embedded in a multi-doc shadowDOM case.\n    // Note that browser denies win.close in some of these cases already anyway,\n    // so not every check here is strictly needed but works as a short-circuit.\n    const hasParent = win.parent != win;\n    const canBeClosed = win.opener && this.ampdoc.isSingleDoc() && !hasParent;\n\n    let wasClosed = false;\n    if (canBeClosed) {\n      // Browser may still deny win.close() call, that would be reflected\n      // synchronously in win.closed\n      win.close();\n      wasClosed = win.closed;\n    }\n\n    if (!wasClosed) {\n      return this.handleNavigateTo_(invocation);\n    }\n\n    return Promise.resolve();\n  }\n  /**\n   * Handles the `scrollTo` action where given an element, we smooth scroll to\n   * it with the given animation duration.\n   * @param {!./action-impl.ActionInvocation} invocation\n   * @return {?Promise}\n   * @private Visible to tests only.\n   */\n  handleScrollTo_(invocation) {\n    const node = dev().assertElement(invocation.node);\n    const {args} = invocation;\n\n    // Duration and position are optional.\n    // Default values are set by the viewport service, so they're passed through\n    // when undefined or invalid.\n    let posOrUndef = args && args['position'];\n    let durationOrUndef = args && args['duration'];\n\n    if (posOrUndef && !['top', 'bottom', 'center'].includes(posOrUndef)) {\n      posOrUndef = undefined;\n    }\n\n    if (!isFiniteNumber(durationOrUndef)) {\n      durationOrUndef = undefined;\n    }\n\n    // Animate the scroll\n    // Should return a promise instead of null\n    return this.viewport_.animateScrollIntoView(\n      node,\n      posOrUndef,\n      durationOrUndef\n    );\n  }\n\n  /**\n   * Handles the `focus` action where given an element, we give it focus\n   * @param {!./action-impl.ActionInvocation} invocation\n   * @return {?Promise}\n   * @private Visible to tests only.\n   */\n  handleFocus_(invocation) {\n    const node = dev().assertElement(invocation.node);\n\n    // Set focus\n    tryFocus(node);\n\n    return null;\n  }\n\n  /**\n   * Handles \"hide\" action. This is a very simple action where \"display: none\"\n   * is applied to the target element.\n   * @param {!./action-impl.ActionInvocation} invocation\n   * @return {?Promise}\n   * @private Visible to tests only.\n   */\n  handleHide_(invocation) {\n    const target = dev().assertElement(invocation.node);\n\n    if (target.classList.contains('i-amphtml-element')) {\n      const ampElement = /** @type {!AmpElement} */ (target);\n      this.mutator_.mutateElement(\n        ampElement,\n        () => ampElement./*OK*/ collapse(),\n        // It is safe to skip measuring, because `mutator-impl.collapseElement`\n        // will set the size of the element as well as trigger a remeasure of\n        // everything below the collapsed element.\n        /* skipRemeasure */ true\n      );\n    } else {\n      this.mutator_.mutateElement(target, () => toggle(target, false));\n    }\n\n    return null;\n  }\n\n  /**\n   * Handles \"show\" action. This is a very simple action where \"display: none\"\n   * is removed from the target element.\n   * @param {!./action-impl.ActionInvocation} invocation\n   * @return {?Promise}\n   * @private Visible to tests only.\n   */\n  handleShow_(invocation) {\n    const {node} = invocation;\n    const target = dev().assertElement(node);\n    const ownerWindow = getWin(target);\n\n    if (target.classList.contains(getLayoutClass(Layout.NODISPLAY))) {\n      user().warn(\n        TAG,\n        'Elements with layout=nodisplay cannot be dynamically shown.',\n        target\n      );\n      return null;\n    }\n\n    this.mutator_.measureElement(() => {\n      if (\n        computedStyle(ownerWindow, target).display == 'none' &&\n        !isShowable(target)\n      ) {\n        user().warn(\n          TAG,\n          'Elements can only be dynamically shown when they have the ' +\n            '\"hidden\" attribute set or when they were dynamically hidden.',\n          target\n        );\n      }\n    });\n\n    const autofocusElOrNull = getAutofocusElementForShowAction(target);\n\n    // iOS only honors focus in sync operations.\n    if (autofocusElOrNull && Services.platformFor(ownerWindow).isIos()) {\n      this.handleShowSync_(target, autofocusElOrNull);\n      this.mutator_.mutateElement(target, () => {}); // force a remeasure\n    } else {\n      this.mutator_.mutateElement(target, () => {\n        this.handleShowSync_(target, autofocusElOrNull);\n      });\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {!Element} target\n   * @param {?Element} autofocusElOrNull\n   * @private Visible to tests only.\n   */\n  handleShowSync_(target, autofocusElOrNull) {\n    if (target.classList.contains('i-amphtml-element')) {\n      const ampElement = /** @type {!AmpElement} */ (target);\n      ampElement./*OK*/ expand();\n    } else {\n      toggle(target, true);\n    }\n    if (autofocusElOrNull) {\n      tryFocus(autofocusElOrNull);\n    }\n  }\n\n  /**\n   * Handles \"toggle\" action.\n   * @param {!./action-impl.ActionInvocation} invocation\n   * @return {?Promise}\n   * @private Visible to tests only.\n   */\n  handleToggle_(invocation) {\n    if (isShowable(dev().assertElement(invocation.node))) {\n      return this.handleShow_(invocation);\n    }\n    return this.handleHide_(invocation);\n  }\n\n  /**\n   * Handles \"toggleClass\" action.\n   * @param {!./action-impl.ActionInvocation} invocation\n   * @return {?Promise}\n   * @private Visible to tests only.\n   */\n  handleToggleClass_(invocation) {\n    const target = dev().assertElement(invocation.node);\n    const {args} = invocation;\n    const className = user().assertString(\n      args['class'],\n      \"Argument 'class' must be a string.\"\n    );\n    // prevent toggling of amp internal classes\n    if (AMP_CSS_RE.test(className)) {\n      return null;\n    }\n\n    this.mutator_.mutateElement(target, () => {\n      if (args['force'] !== undefined) {\n        // must be boolean, won't do type conversion\n        const shouldForce = user().assertBoolean(\n          args['force'],\n          \"Optional argument 'force' must be a boolean.\"\n        );\n        target.classList.toggle(className, shouldForce);\n      } else {\n        target.classList.toggle(className);\n      }\n    });\n\n    return null;\n  }\n\n  /**\n   * Handles \"toggleChecked\" action.\n   * @param {!./action-impl.ActionInvocation} invocation\n   * @return {?Promise}\n   * @private Visible to tests only.\n   */\n  handleToggleChecked_(invocation) {\n    const target = dev().assertElement(invocation.node);\n    const {args} = invocation;\n\n    this.mutator_.mutateElement(target, () => {\n      if (args['force'] !== undefined) {\n        // must be boolean, won't do type conversion\n        const shouldForce = user().assertBoolean(\n          args['force'],\n          \"Optional argument 'force' must be a boolean.\"\n        );\n        target.checked = shouldForce;\n      } else {\n        if (target.checked === true) {\n          target.checked = false;\n        } else {\n          target.checked = true;\n        }\n      }\n    });\n\n    return null;\n  }\n}\n\n/**\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n */\nexport function installStandardActionsForDoc(ampdoc) {\n  registerServiceBuilderForDoc(\n    ampdoc,\n    'standard-actions',\n    StandardActions,\n    /* opt_instantiate */ true\n  );\n}\n", "import {dict, recreateNonProtoObject} from '#core/types/object';\nimport {parseJson} from '#core/types/object/json';\n\nimport {Services} from '#service';\n\nimport {dev, devAssert} from '#utils/log';\n\nimport {registerServiceBuilderForDoc} from '../service-helpers';\nimport {getSourceOrigin} from '../url';\n\n/** @const */\nconst TAG = 'Storage';\n\n/** @const */\nconst MAX_VALUES_PER_ORIGIN = 8;\n\n/**\n * The storage API. This is an API equivalent to the Web LocalStorage API but\n * extended to all AMP embedding scenarios.\n *\n * The storage is done per source origin. See `get`, `set` and `remove` methods\n * for more info.\n *\n * @see https://html.spec.whatwg.org/multipage/webstorage.html\n * @private Visible for testing only.\n */\nexport class Storage {\n  /**\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   * @param {!../service/viewer-interface.ViewerInterface} viewer\n   * @param {!StorageBindingDef} binding\n   */\n  constructor(ampdoc, viewer, binding) {\n    /** @const {!./ampdoc-impl.AmpDoc} */\n    this.ampdoc = ampdoc;\n\n    /** @private @const {!../service/viewer-interface.ViewerInterface} */\n    this.viewer_ = viewer;\n\n    /** @private @const {!StorageBindingDef} */\n    this.binding_ = binding;\n\n    /** @private @const {boolean} */\n    this.isViewerStorage_ = binding instanceof ViewerStorageBinding;\n\n    /** @const @private {string} */\n    this.origin_ = getSourceOrigin(this.ampdoc.win.location);\n\n    /** @private {?Promise<!Store>} */\n    this.storePromise_ = null;\n  }\n\n  /**\n   * @return {!Storage}\n   * @protected\n   */\n  start_() {\n    this.listenToBroadcasts_();\n    return this;\n  }\n\n  /**\n   * Returns the promise that yields the value of the property for the specified\n   * key.\n   * @param {string} name\n   * @param {number=} opt_duration\n   * @return {!Promise<*>}\n   */\n  get(name, opt_duration) {\n    return this.getStore_().then((store) => store.get(name, opt_duration));\n  }\n\n  /**\n   * Saves the value (restricted to boolean value) of the specified property.\n   * Returns the promise that's resolved when the operation completes.\n   * @param {string} name\n   * @param {*} value\n   * @param {boolean=} opt_isUpdate\n   * @return {!Promise}\n   */\n  set(name, value, opt_isUpdate) {\n    devAssert(typeof value == 'boolean', 'Only boolean values accepted');\n    return this.setNonBoolean(name, value, opt_isUpdate);\n  }\n\n  /**\n   * Saves the value of the specified property. Returns the promise that's\n   * resolved when the operation completes.\n   * Note: More restrict privacy review is required to store non boolean value.\n   * @param {string} name\n   * @param {*} value\n   * @param {boolean=} opt_isUpdate\n   * @return {!Promise}\n   */\n  setNonBoolean(name, value, opt_isUpdate) {\n    return this.saveStore_((store) => store.set(name, value, opt_isUpdate));\n  }\n\n  /**\n   * Removes the specified property. Returns the promise that's resolved when\n   * the operation completes.\n   * @param {string} name\n   * @return {!Promise}\n   */\n  remove(name) {\n    return this.saveStore_((store) => store.remove(name));\n  }\n\n  /**\n   * Returns if this.binding is an instance of ViewerStorageBinding\n   * @return {boolean}\n   */\n  isViewerStorage() {\n    return this.isViewerStorage_;\n  }\n\n  /**\n   * @return {!Promise<!Store>}\n   * @private\n   */\n  getStore_() {\n    if (!this.storePromise_) {\n      this.storePromise_ = this.binding_\n        .loadBlob(this.origin_)\n        .then((blob) => (blob ? parseJson(atob(blob)) : {}))\n        .catch((reason) => {\n          dev().expectedError(TAG, 'Failed to load store: ', reason);\n          return {};\n        })\n        .then((obj) => new Store(obj));\n    }\n    return this.storePromise_;\n  }\n\n  /**\n   * @param {function(!Store)} mutator\n   * @return {!Promise}\n   * @private\n   */\n  saveStore_(mutator) {\n    return this.getStore_()\n      .then((store) => {\n        mutator(store);\n        // Need to encode stored object to avoid plain text,\n        // but doesn't need to be base64encode. Can convert to some other\n        // encoding method for further improvement.\n        const blob = btoa(JSON.stringify(store.obj));\n        return this.binding_.saveBlob(this.origin_, blob);\n      })\n      .then(this.broadcastReset_.bind(this));\n  }\n\n  /** @private */\n  listenToBroadcasts_() {\n    this.viewer_.onBroadcast((message) => {\n      if (\n        message['type'] == 'amp-storage-reset' &&\n        message['origin'] == this.origin_\n      ) {\n        dev().fine(TAG, 'Received reset message');\n        this.storePromise_ = null;\n      }\n    });\n  }\n\n  /** @private */\n  broadcastReset_() {\n    dev().fine(TAG, 'Broadcasted reset message');\n    this.viewer_.broadcast(\n      /** @type {!JsonObject} */ ({\n        'type': 'amp-storage-reset',\n        'origin': this.origin_,\n      })\n    );\n  }\n}\n\n/**\n * The implementation of store logic for get, set and remove.\n *\n * The structure of the store is equivalent to the following typedef:\n * ```\n * {\n *   vv: !Object<key(string), !{\n *     v: *,\n *     t: time\n *   }>\n * }\n * ```\n *\n * @private Visible for testing only.\n */\nexport class Store {\n  /**\n   * @param {!JsonObject} obj\n   * @param {number=} opt_maxValues\n   */\n  constructor(obj, opt_maxValues) {\n    /** @const {!JsonObject} */\n    this.obj = /** @type {!JsonObject} */ (recreateNonProtoObject(obj));\n\n    /** @private @const {number} */\n    this.maxValues_ = opt_maxValues || MAX_VALUES_PER_ORIGIN;\n\n    /** @private @const {!Object<string, !JsonObject>} */\n    this.values_ = this.obj['vv'] || Object.create(null);\n    if (!this.obj['vv']) {\n      this.obj['vv'] = this.values_;\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @param {number|undefined} opt_duration\n   * @return {*|undefined}\n   */\n  get(name, opt_duration) {\n    // The structure is {key: {v: *, t: time}}\n    const item = this.values_[name];\n    const timestamp = item ? item['t'] : undefined;\n    const isNotExpired =\n      opt_duration && timestamp != undefined\n        ? timestamp + opt_duration > Date.now()\n        : true;\n    const value = item && isNotExpired ? item['v'] : undefined;\n    return value;\n  }\n\n  /**\n   * Set the storage value along with the current timestamp.\n   * When opt_isUpdated is true, timestamp will be the creation timestamp,\n   * the stored value will be updated w/o updating timestamp.\n   * @param {string} name\n   * @param {*} value\n   * @param {boolean=} opt_isUpdate\n   */\n  set(name, value, opt_isUpdate) {\n    devAssert(\n      name != '__proto__' && name != 'prototype',\n      'Name is not allowed: %s',\n      name\n    );\n    // The structure is {key: {v: *, t: time}}\n    if (this.values_[name] !== undefined) {\n      const item = this.values_[name];\n      let timestamp = Date.now();\n      if (opt_isUpdate) {\n        // Update value w/o timestamp\n        timestamp = item['t'];\n      }\n      item['v'] = value;\n      item['t'] = timestamp;\n    } else {\n      this.values_[name] = dict({\n        'v': value,\n        't': Date.now(),\n      });\n    }\n\n    // Purge old values.\n    const keys = Object.keys(this.values_);\n    if (keys.length > this.maxValues_) {\n      let minTime = Infinity;\n      let minKey = null;\n      for (let i = 0; i < keys.length; i++) {\n        const item = this.values_[keys[i]];\n        if (item['t'] < minTime) {\n          minKey = keys[i];\n          minTime = item['t'];\n        }\n      }\n      if (minKey) {\n        delete this.values_[minKey];\n      }\n    }\n  }\n\n  /**\n   * @param {string} name\n   */\n  remove(name) {\n    // The structure is {key: {v: *, t: time}}\n    delete this.values_[name];\n  }\n}\n\n/**\n * A binding provides the specific implementation of storage technology.\n * @interface\n */\nclass StorageBindingDef {\n  /**\n   * Returns the promise that yields the store blob for the specified origin.\n   * @param {string} unusedOrigin\n   * @return {!Promise<?string>}\n   */\n  loadBlob(unusedOrigin) {}\n\n  /**\n   * Saves the store blob for the specified origin and returns the promise\n   * that's resolved when the operation completes.\n   * @param {string} unusedOrigin\n   * @param {string} unusedBlob\n   * @return {!Promise}\n   */\n  saveBlob(unusedOrigin, unusedBlob) {}\n}\n\n/**\n * Storage implementation using Web LocalStorage API.\n * @implements {StorageBindingDef}\n * @private Visible for testing only.\n */\nexport class LocalStorageBinding {\n  /**\n   * @param {!Window} win\n   */\n  constructor(win) {\n    /** @const {!Window} */\n    this.win = win;\n\n    /** @private @const {boolean} */\n    this.isLocalStorageSupported_ = this.checkIsLocalStorageSupported_();\n\n    if (!this.isLocalStorageSupported_) {\n      const error = new Error('localStorage not supported.');\n      dev().expectedError(TAG, error);\n    }\n  }\n\n  /**\n   * Determines whether localStorage API is supported by ensuring it is declared\n   * and does not throw an exception when used.\n   * @return {boolean}\n   * @private\n   */\n  checkIsLocalStorageSupported_() {\n    try {\n      if (!('localStorage' in this.win)) {\n        return false;\n      }\n\n      // We do not care about the value fetched from local storage; we only care\n      // whether the call throws an exception or not.  As such, we can look up\n      // any arbitrary key.\n      this.win.localStorage.getItem('test');\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * @param {string} origin\n   * @return {string}\n   * @private\n   */\n  getKey_(origin) {\n    return `amp-store:${origin}`;\n  }\n\n  /** @override */\n  loadBlob(origin) {\n    return new Promise((resolve) => {\n      if (!this.isLocalStorageSupported_) {\n        resolve(null);\n        return;\n      }\n      resolve(this.win.localStorage.getItem(this.getKey_(origin)));\n    });\n  }\n\n  /** @override */\n  saveBlob(origin, blob) {\n    return new Promise((resolve) => {\n      if (!this.isLocalStorageSupported_) {\n        resolve();\n        return;\n      }\n      this.win.localStorage.setItem(this.getKey_(origin), blob);\n      resolve();\n    });\n  }\n}\n\n/**\n * Storage implementation delegated to the Viewer.\n * @implements {StorageBindingDef}\n * @private Visible for testing only.\n */\nexport class ViewerStorageBinding {\n  /**\n   * @param {!../service/viewer-interface.ViewerInterface} viewer\n   */\n  constructor(viewer) {\n    /** @private @const {!../service/viewer-interface.ViewerInterface} */\n    this.viewer_ = viewer;\n  }\n\n  /** @override */\n  loadBlob(origin) {\n    return this.viewer_\n      .sendMessageAwaitResponse('loadStore', dict({'origin': origin}))\n      .then((response) => response['blob']);\n  }\n\n  /** @override */\n  saveBlob(origin, blob) {\n    return /** @type {!Promise} */ (\n      this.viewer_\n        .sendMessageAwaitResponse(\n          'saveStore',\n          dict({'origin': origin, 'blob': blob})\n        )\n        .catch((reason) => {\n          throw dev().createExpectedError(\n            TAG,\n            'Failed to save store: ',\n            reason\n          );\n        })\n    );\n  }\n}\n\n/**\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n */\nexport function installStorageServiceForDoc(ampdoc) {\n  registerServiceBuilderForDoc(\n    ampdoc,\n    'storage',\n    function () {\n      const viewer = Services.viewerForDoc(ampdoc);\n      const overrideStorage = parseInt(viewer.getParam('storage'), 10);\n      const binding = overrideStorage\n        ? new ViewerStorageBinding(viewer)\n        : new LocalStorageBinding(ampdoc.win);\n      return new Storage(ampdoc, viewer, binding).start_();\n    },\n    /* opt_instantiate */ true\n  );\n}\n", "import {Deferred} from '#core/data-structures/promise';\nimport {rootNodeFor} from '#core/dom';\nimport {scopedQuerySelector} from '#core/dom/query';\n\nimport {userAssert} from '#utils/log';\n\nimport {\n  getServiceForDoc,\n  registerServiceBuilderForDoc,\n} from '../service-helpers';\n\n/**\n * @fileoverview\n * For the set of decisions made on templating see:\n * {@link https://docs.google.com/document/d/1q-5MPQHnOHLF_uL7lQsGZdzuBgrPTkCy2PdRP-YCbOw/edit#}\n */\n\n/** @private @const {string} */\nconst PROP_ = '__AMP_IMPL_';\n\n/** @private @const {string} */\nconst PROP_PROMISE_ = '__AMP_WAIT_';\n\n/** @private @const {function()} */\nconst EMPTY_FUNC = () => {};\n\n/**\n */\nexport class Templates {\n  /** @param {!./ampdoc-impl.AmpDoc} ampdoc */\n  constructor(ampdoc) {\n    /** @private @const */\n    this.ampdoc_ = ampdoc;\n\n    /**\n     * A map from template type to template's class promise.\n     * @private @const {!Object<string, !Promise<typeof ../base-template.BaseTemplate>>}\n     */\n    this.templateClassMap_ = {};\n\n    /**\n     * A map from template type to template's class promise. This is a transient\n     * storage. As soon as the template class loaded, the entry is removed.\n     * @private @const {!Object<string, function(typeof ../base-template.BaseTemplate)>}\n     */\n    this.templateClassResolvers_ = {};\n  }\n\n  /**\n   * Waits for template to be fully initialized.\n   * @param {!Element} templateElement\n   * @return {!Promise}\n   */\n  whenReady(templateElement) {\n    return this.getImplementation_(templateElement).then(EMPTY_FUNC);\n  }\n\n  /**\n   * Inserts the specified template element.\n   * @param {!Element} templateElement\n   * @param {string} html\n   * @return {!Promise<(!Element|!Array<!Element>)>}\n   */\n  setHtmlForTemplate(templateElement, html) {\n    return this.getImplementation_(templateElement).then((impl) => {\n      return this.setHtml_(impl, html);\n    });\n  }\n\n  /**\n   * Renders the specified template element using the supplied data.\n   * @param {!Element} templateElement\n   * @param {!JsonObject} data\n   * @return {!Promise<!Element>}\n   */\n  renderTemplate(templateElement, data) {\n    return this.getImplementation_(templateElement).then((impl) => {\n      return this.render_(impl, data);\n    });\n  }\n\n  /**\n   * Renders the specified template element using the supplied data.\n   * @param {!Element} templateElement\n   * @param {!JsonObject} data\n   * @return {!Promise<!Element>}\n   */\n  renderTemplateAsString(templateElement, data) {\n    return this.getImplementation_(templateElement).then((impl) => {\n      return impl.renderAsString(data);\n    });\n  }\n\n  /**\n   * Renders the specified template element using the supplied array of data\n   * and returns an array of resulting elements.\n   * @param {!Element} templateElement\n   * @param {!Array<!JsonObject>} array\n   * @return {!Promise<!Array<!Element>>}\n   */\n  renderTemplateArray(templateElement, array) {\n    if (array.length == 0) {\n      return Promise.resolve([]);\n    }\n    return this.getImplementation_(templateElement).then((impl) => {\n      return array.map((item) => {\n        return this.render_(impl, item);\n      });\n    });\n  }\n\n  /**\n   * Discovers the template for the specified parent and renders it using the\n   * supplied data. The template can be specified either via \"template\"\n   * attribute  or as a child \"template\" element. When specified via \"template\"\n   * attribute, the value indicates the ID of the template element.\n   * @param {!Element} parent\n   * @param {!JsonObject} data\n   * @param {string=} opt_querySelector\n   * @return {!Promise<!Element>}\n   */\n  findAndRenderTemplate(parent, data, opt_querySelector) {\n    return this.renderTemplate(\n      this.findTemplate(parent, opt_querySelector),\n      data\n    );\n  }\n\n  /**\n   * Discovers the already rendered template for the specified parent and\n   * inserts it in the DOM. The template can be specified either via \"template\"\n   * attribute  or as a child \"template\" element. When specified via \"template\"\n   * attribute, the value indicates the ID of the template element.\n   * @param {!Element} parent\n   * @param {string} html\n   * @param {string=} opt_querySelector\n   * @return {!Promise<(!Element|!Array<!Element>)>}\n   */\n  findAndSetHtmlForTemplate(parent, html, opt_querySelector) {\n    return this.setHtmlForTemplate(\n      this.findTemplate(parent, opt_querySelector),\n      html\n    );\n  }\n\n  /**\n   * Discovers the template for the specified parent and renders it using the\n   * supplied array of data. The template can be specified either via \"template\"\n   * attribute or as a child \"template\" element. When specified via \"template\"\n   * attribute, the value indicates the ID of the template element. Returns\n   * the array of the rendered elements.\n   * @param {!Element} parent\n   * @param {!Array<!JsonObject>} array\n   * @param {string=} opt_querySelector\n   * @return {!Promise<!Array<!Element>>}\n   */\n  findAndRenderTemplateArray(parent, array, opt_querySelector) {\n    return this.renderTemplateArray(\n      this.findTemplate(parent, opt_querySelector),\n      array\n    );\n  }\n\n  /**\n   * Detect if a template is present inside the parent.\n   * @param {!Element} parent\n   * @param {string=} opt_querySelector\n   * @return {boolean}\n   */\n  hasTemplate(parent, opt_querySelector) {\n    return !!this.maybeFindTemplate(parent, opt_querySelector);\n  }\n\n  /**\n   * Find a specified template inside the parent. Fail if the template is\n   * not present.\n   * @param {!Element} parent\n   * @param {string=} opt_querySelector\n   * @return {!Element}\n   */\n  findTemplate(parent, opt_querySelector) {\n    const templateElement = this.maybeFindTemplate(parent, opt_querySelector);\n    userAssert(templateElement, 'Template not found for %s', parent);\n    const templateTagName = templateElement.tagName;\n    userAssert(\n      templateTagName == 'TEMPLATE' ||\n        (templateTagName == 'SCRIPT' &&\n          templateElement.getAttribute('type') === 'text/plain'),\n      'Template must be defined in a <template> or ' +\n        '<script type=\"text/plain\"> tag'\n    );\n    return templateElement;\n  }\n\n  /**\n   * Find a specified template inside the parent. Returns null if not present.\n   * The template can be specified either via \"template\" attribute or as a\n   * child \"template\" element. When specified via \"template\" attribute,\n   * the value indicates the ID of the template element. The template\n   * can be defined either via the <template> or <script> tag.\n   * @param {!Element} parent\n   * @param {string=} opt_querySelector\n   * @return {?Element}\n   */\n  maybeFindTemplate(parent, opt_querySelector) {\n    const templateId = parent.getAttribute('template');\n    if (templateId) {\n      const rootNode = /** @type {!Document|!ShadowRoot} */ (\n        rootNodeFor(parent)\n      );\n      return rootNode.getElementById(templateId);\n    } else if (opt_querySelector) {\n      return scopedQuerySelector(parent, opt_querySelector);\n    } else {\n      return parent.querySelector('template[type], script[type=\"text/plain\"]');\n    }\n  }\n\n  /**\n   * Returns the promise that will eventually yield the template implementation\n   * for the specified template element.\n   * @param {!Element} element\n   * @return {!Promise<!../base-template.BaseTemplate>}\n   * @private\n   */\n  getImplementation_(element) {\n    /** @const {!../base-template.BaseTemplate} */\n    const impl = element[PROP_];\n    if (impl) {\n      return Promise.resolve(impl);\n    }\n\n    let type = '';\n    const {tagName} = element;\n    if (tagName == 'TEMPLATE') {\n      type = element.getAttribute('type');\n    } else if (tagName == 'SCRIPT') {\n      type = element.getAttribute('template');\n    }\n    userAssert(type, 'Type must be specified: %s', element);\n\n    let promise = element[PROP_PROMISE_];\n    if (promise) {\n      return promise;\n    }\n\n    promise = this.waitForTemplateClass_(element, type).then(\n      (templateClass) => {\n        // This is ugly workaround for https://github.com/google/closure-compiler/issues/2630.\n        const Constr = /** @type {function(new:Object, !Element, !Window)} */ (\n          templateClass\n        );\n        const impl = (element[PROP_] = new Constr(element, this.ampdoc_.win));\n        delete element[PROP_PROMISE_];\n        return impl;\n      }\n    );\n    element[PROP_PROMISE_] = promise;\n    return promise;\n  }\n\n  /**\n   * Returns the promise that will eventually yield the template class. This\n   * will wait until the actual template script has been downloaded and parsed.\n   * @param {!Element} element\n   * @param {string} type\n   * @return {!Promise<typeof ../base-template.BaseTemplate>}\n   * @private\n   */\n  waitForTemplateClass_(element, type) {\n    if (this.templateClassMap_[type]) {\n      return this.templateClassMap_[type];\n    }\n\n    const deferred = new Deferred();\n    const {promise, resolve} = deferred;\n\n    this.templateClassMap_[type] = promise;\n    this.templateClassResolvers_[type] = resolve;\n    return promise;\n  }\n\n  /**\n   * Registers an extended template. This function should typically be called\n   * through the registerTemplate method on the AMP runtime.\n   * @param {string} type\n   * @param {typeof ../base-template.BaseTemplate} templateClass\n   * @private\n   * @restricted\n   */\n  registerTemplate_(type, templateClass) {\n    if (!this.templateClassMap_[type]) {\n      this.templateClassMap_[type] = Promise.resolve(templateClass);\n    } else {\n      const resolver = this.templateClassResolvers_[type];\n      userAssert(resolver, 'Duplicate template type: %s', type);\n      delete this.templateClassResolvers_[type];\n      resolver(templateClass);\n    }\n  }\n\n  /**\n   * @param {!../base-template.BaseTemplate} impl\n   * @param {!JsonObject} data\n   * @return {!Element}\n   * @private\n   */\n  render_(impl, data) {\n    return impl.render(data);\n  }\n\n  /**\n   * @param {!../base-template.BaseTemplate} impl\n   * @param {string} html\n   * @return {!Element|!Array<!Element>}\n   * @private\n   */\n  setHtml_(impl, html) {\n    return impl.setHtml(html);\n  }\n}\n\n/**\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n */\nexport function installTemplatesServiceForDoc(ampdoc) {\n  registerServiceBuilderForDoc(ampdoc, 'templates', Templates);\n}\n\n/**\n * Registers an extended template. This function should typically be called\n * through the registerTemplate method on the AMP runtime.\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @param {string} type\n * @param {typeof ../base-template.BaseTemplate} templateClass\n * @return {undefined}\n */\nexport function registerExtendedTemplateForDoc(ampdoc, type, templateClass) {\n  const templatesService = getServiceForDoc(ampdoc, 'templates');\n  return templatesService.registerTemplate_(type, templateClass);\n}\n\n/**\n * @param {!Templates} templates\n * @param {string} type\n * @return {!Promise<typeof ../base-template.BaseTemplate>|undefined}\n * @visibleForTesting\n */\nexport function getTemplateClassForTesting(templates, type) {\n  return templates.templateClassMap_[type];\n}\n", "import {user} from '#utils/log';\n\nimport {reportError} from '../error-reporting';\nimport {getMode} from '../mode';\nimport {\n  registerServiceBuilder,\n  registerServiceBuilderInEmbedWin,\n} from '../service-helpers';\n\nconst TAG = 'timer';\nlet timersForTesting;\n\n/**\n * Helper with all things Timer.\n */\nexport class Timer {\n  /**\n   * @param {!Window} win\n   */\n  constructor(win) {\n    /** @const {!Window} */\n    this.win = win;\n\n    /** @private @const {!Promise}  */\n    this.resolved_ = this.win.Promise.resolve();\n\n    this.taskCount_ = 0;\n\n    this.canceled_ = {};\n\n    /** @const {number} */\n    this.startTime_ = Date.now();\n  }\n\n  /**\n   * Returns time since start in milliseconds.\n   * @return {number}\n   */\n  timeSinceStart() {\n    return Date.now() - this.startTime_;\n  }\n\n  /**\n   * Runs the provided callback after the specified delay. This uses a micro\n   * task for 0 or no specified time. This means that the delay will actually\n   * be close to 0 and this will NOT yield to the event queue.\n   *\n   * Returns the timer ID that can be used to cancel the timer (cancel method).\n   * @param {function()} callback\n   * @param {number=} opt_delay\n   * @return {number|string}\n   */\n  delay(callback, opt_delay) {\n    if (!opt_delay) {\n      // For a delay of zero,  schedule a promise based micro task since\n      // they are predictably fast.\n      const id = 'p' + this.taskCount_++;\n      this.resolved_\n        .then(() => {\n          if (this.canceled_[id]) {\n            delete this.canceled_[id];\n            return;\n          }\n          callback();\n        })\n        .catch(reportError);\n      return id;\n    }\n    const wrapped = () => {\n      try {\n        callback();\n      } catch (e) {\n        reportError(e);\n        throw e;\n      }\n    };\n    const index = this.win.setTimeout(wrapped, opt_delay);\n    if (getMode().test) {\n      if (!timersForTesting) {\n        timersForTesting = [];\n      }\n      timersForTesting.push(index);\n    }\n    return index;\n  }\n\n  /**\n   * Cancels the previously scheduled callback.\n   * @param {number|string|null} timeoutId\n   */\n  cancel(timeoutId) {\n    if (typeof timeoutId == 'string') {\n      this.canceled_[timeoutId] = true;\n      return;\n    }\n    this.win.clearTimeout(timeoutId);\n  }\n\n  /**\n   * Returns a promise that will resolve after the delay. Optionally, the\n   * resolved value can be provided as opt_result argument.\n   * @param {number=} opt_delay\n   * @return {!Promise}\n   */\n  promise(opt_delay) {\n    return new this.win.Promise((resolve) => {\n      // Avoid wrapping in closure if no specific result is produced.\n      const timerKey = this.delay(resolve, opt_delay);\n      if (timerKey == -1) {\n        throw new Error('Failed to schedule timer.');\n      }\n    });\n  }\n\n  /**\n   * Returns a promise that will fail after the specified delay. Optionally,\n   * this method can take opt_racePromise parameter. In this case, the\n   * resulting promise will either fail when the specified delay expires or\n   * will resolve based on the opt_racePromise, whichever happens first.\n   * @param {number} delay\n   * @param {?Promise<RESULT>|undefined} opt_racePromise\n   * @param {string=} opt_message\n   * @return {!Promise<RESULT>}\n   * @template RESULT\n   */\n  timeoutPromise(delay, opt_racePromise, opt_message) {\n    let timerKey;\n    const delayPromise = new this.win.Promise((_resolve, reject) => {\n      timerKey = this.delay(() => {\n        reject(user().createError(opt_message || 'timeout'));\n      }, delay);\n\n      if (timerKey == -1) {\n        throw new Error('Failed to schedule timer.');\n      }\n    });\n    if (!opt_racePromise) {\n      return delayPromise;\n    }\n    const cancel = () => {\n      this.cancel(timerKey);\n    };\n    opt_racePromise.then(cancel, cancel);\n    return this.win.Promise.race([delayPromise, opt_racePromise]);\n  }\n\n  /**\n   * Returns a promise that resolves after `predicate` returns true.\n   * Polls with interval `delay`\n   * @param {number} delay\n   * @param {function():boolean} predicate\n   * @return {!Promise}\n   */\n  poll(delay, predicate) {\n    return new this.win.Promise((resolve) => {\n      const interval = this.win.setInterval(() => {\n        if (predicate()) {\n          this.win.clearInterval(interval);\n          resolve();\n        }\n      }, delay);\n    });\n  }\n}\n\n/**\n * @param {!Window} window\n */\nexport function installTimerService(window) {\n  registerServiceBuilder(window, TAG, Timer);\n}\n\n/**\n * @param {!Window} embedWin\n */\nexport function installTimerInEmbedWindow(embedWin) {\n  registerServiceBuilderInEmbedWin(embedWin, TAG, Timer);\n}\n\n/**\n * Cancels all timers scheduled during the current test\n */\nexport function cancelTimersForTesting() {\n  if (!timersForTesting) {\n    return;\n  }\n  timersForTesting.forEach(clearTimeout);\n  timersForTesting = null;\n}\n", "import {LruCache} from '#core/data-structures/lru-cache';\nimport * as mode from '#core/mode';\n\nimport {urls} from '../config';\nimport {registerServiceBuilderForDoc} from '../service-helpers';\nimport {\n  assertAbsoluteHttpOrHttpsUrl,\n  assertHttpsUrl,\n  getSourceOrigin,\n  getSourceUrl,\n  isProtocolValid,\n  isProxyOrigin,\n  isSecureUrlDeprecated,\n  parseUrlWithA,\n  resolveRelativeUrl,\n} from '../url';\n\nconst SERVICE = 'url';\n\n/**\n */\nexport class Url {\n  /**\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    const root = ampdoc.getRootNode();\n    const doc = root.ownerDocument || root;\n\n    /** @private @const {!HTMLAnchorElement} */\n    this.anchor_ = /** @type {!HTMLAnchorElement} */ (doc.createElement('a'));\n\n    /** @private @const {?LruCache} */\n    this.cache_ = mode.isEsm() ? null : new LruCache(100);\n  }\n\n  /**\n   * Parses the URL in the context of the current document.\n   *\n   * @param {string} url\n   * @param {boolean=} opt_nocache\n   *   Cache is always ignored on ESM builds, see https://go.amp.dev/pr/31594\n   * @return {!Location}\n   */\n  parse(url, opt_nocache) {\n    return parseUrlWithA(\n      this.anchor_,\n      url,\n      mode.isEsm() || opt_nocache ? null : this.cache_\n    );\n  }\n\n  /**\n   * @param {string|!Location} url\n   * @return {!Location}\n   * @private\n   */\n  parse_(url) {\n    if (typeof url !== 'string') {\n      return url;\n    }\n    return this.parse(url);\n  }\n\n  /**\n   * Returns whether the URL has valid protocol.\n   * Deep link protocol is valid, but not javascript etc.\n   * @param {string|!Location} url\n   * @return {boolean}\n   */\n  isProtocolValid(url) {\n    return isProtocolValid(url);\n  }\n\n  /**\n   * Returns the source origin of an AMP document for documents served\n   * on a proxy origin or directly.\n   * @param {string|!Location} url URL of an AMP document.\n   * @return {string} The source origin of the URL.\n   */\n  getSourceOrigin(url) {\n    return getSourceOrigin(this.parse_(url));\n  }\n\n  /**\n   * Returns the source URL of an AMP document for documents served\n   * on a proxy origin or directly.\n   * @param {string|!Location} url URL of an AMP document.\n   * @return {string}\n   */\n  getSourceUrl(url) {\n    return getSourceUrl(this.parse_(url));\n  }\n\n  /**\n   * Returns absolute URL resolved based on the relative URL and the base.\n   * @param {string} relativeUrlString\n   * @param {string|!Location} baseUrl\n   * @return {string}\n   */\n  resolveRelativeUrl(relativeUrlString, baseUrl) {\n    return resolveRelativeUrl(relativeUrlString, this.parse_(baseUrl));\n  }\n\n  /**\n   * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n   * assert.\n   *\n   * Provides an exception for localhost.\n   *\n   * @param {?string|undefined} urlString\n   * @param {!Element|string} elementContext Element where the url was found.\n   * @param {string=} sourceName Used for error messages.\n   * @return {string}\n   */\n  assertHttpsUrl(urlString, elementContext, sourceName = 'source') {\n    return assertHttpsUrl(urlString, elementContext, sourceName);\n  }\n\n  /**\n   * Asserts that a given url is an absolute HTTP or HTTPS URL.\n   * @param {string} urlString\n   * @return {string}\n   */\n  assertAbsoluteHttpOrHttpsUrl(urlString) {\n    return assertAbsoluteHttpOrHttpsUrl(urlString);\n  }\n\n  /**\n   * Returns whether the URL has the origin of a proxy.\n   * @param {string|!Location} url URL of an AMP document.\n   * @return {boolean}\n   */\n  isProxyOrigin(url) {\n    return isProxyOrigin(this.parse_(url));\n  }\n\n  /**\n   * Returns `true` if the URL is secure: either HTTPS or localhost (for\n   * testing).\n   * @param {string} url\n   * @return {boolean}\n   */\n  isSecure(url) {\n    return isSecureUrlDeprecated(this.parse_(url));\n  }\n\n  /**\n   * Returns the correct origin for a given window.\n   * @param {!Window} win\n   * @return {string} origin\n   */\n  getWinOrigin(win) {\n    return win.origin || this.parse_(win.location.href).origin;\n  }\n\n  /**\n   * If the resource URL is referenced from the publisher's origin,\n   * convert the URL to be referenced from the cache.\n   * @param {string} resourceUrl The URL of the document to load\n   * @return {string}\n   */\n  getCdnUrlOnOrigin(resourceUrl) {\n    if (isProxyOrigin(resourceUrl)) {\n      return resourceUrl;\n    }\n\n    const {hash, host, pathname, search} = this.parse_(resourceUrl);\n    const encodedHost = encodeURIComponent(host);\n    return `${urls.cdn}/c/${encodedHost}${pathname}${search}${hash}`;\n  }\n}\n\n/**\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n */\nexport function installUrlForDoc(ampdoc) {\n  registerServiceBuilderForDoc(\n    ampdoc,\n    SERVICE,\n    Url,\n    /* opt_instantiate */ true\n  );\n}\n", "import {VisibilityState} from '#core/constants/visibility-state';\nimport {Observable} from '#core/data-structures/observable';\nimport {Deferred, tryResolve} from '#core/data-structures/promise';\nimport {isIframed} from '#core/dom';\nimport {duplicateErrorIfNecessary} from '#core/error';\nimport {stripUserError} from '#core/error/message-helpers';\nimport {isEnumValue} from '#core/types';\nimport {findIndex} from '#core/types/array';\nimport {map} from '#core/types/object';\nimport {endsWith} from '#core/types/string';\nimport {parseQueryString} from '#core/types/string/url';\n\nimport {Services} from '#service';\n\nimport {listen} from '#utils/event-helper';\nimport {dev, devAssert} from '#utils/log';\n\nimport {ViewerInterface} from './viewer-interface';\n\nimport {urls} from '../config';\nimport {reportError} from '../error-reporting';\nimport {registerServiceBuilderForDoc} from '../service-helpers';\nimport {\n  getSourceOrigin,\n  isProxyOrigin,\n  parseUrlDeprecated,\n  removeFragment,\n  serializeQueryString,\n} from '../url';\n\nconst TAG_ = 'Viewer';\n\n/** @enum {string} */\nexport const Capability = {\n  VIEWER_RENDER_TEMPLATE: 'viewerRenderTemplate',\n};\n\n/**\n * Max length for each array of the received message queue.\n * @const @private {number}\n */\nconst RECEIVED_MESSAGE_QUEUE_MAX_LENGTH = 50;\n\n/**\n * Duration in milliseconds to wait for viewerOrigin to be set before an empty\n * string is returned.\n * @const\n * @private {number}\n */\nconst VIEWER_ORIGIN_TIMEOUT_ = 1000;\n\n/**\n * Prefixes to remove when trimming a hostname for comparison.\n * @const\n * @private {!RegExp}\n */\nconst TRIM_ORIGIN_PATTERN_ =\n  /^(https?:\\/\\/)((www[0-9]*|web|ftp|wap|home|mobile|amp|m)\\.)+/i;\n\n/**\n * An AMP representation of the Viewer. This class doesn't do any work itself\n * but instead delegates everything to the actual viewer. This class and the\n * actual Viewer are connected via \"AMP.viewer\" using three methods:\n * {@link getParam}, {@link receiveMessage} and {@link setMessageDeliverer}.\n * @implements {ViewerInterface}\n * @package Visible for type.\n */\nexport class ViewerImpl {\n  /**\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @const {!./ampdoc-impl.AmpDoc} */\n    this.ampdoc = ampdoc;\n\n    /** @const {!Window} */\n    this.win = ampdoc.win;\n\n    /** @private @const {boolean} */\n    this.isIframed_ = isIframed(this.win);\n\n    /** @private {boolean} */\n    this.isRuntimeOn_ = true;\n\n    /** @private {boolean} */\n    this.overtakeHistory_ = false;\n\n    /** @private {!Object<string, !Observable<!JsonObject>>} */\n    this.messageObservables_ = map();\n\n    /** @private {!Object<string, !./viewer-interface.RequestResponderDef>} */\n    this.messageResponders_ = map();\n\n    /** @private {!Observable<boolean>} */\n    this.runtimeOnObservable_ = new Observable();\n\n    /** @private {!Observable<!JsonObject>} */\n    this.broadcastObservable_ = new Observable();\n\n    /**\n     * @private {?function(string, (?JsonObject|string|undefined), boolean):\n     *     (Promise<*>|undefined)}\n     */\n    this.messageDeliverer_ = null;\n\n    /** @private {?string} */\n    this.messagingOrigin_ = null;\n\n    /**\n     * @private {!Array<!{\n     *   eventType: string,\n     *   data: (?JsonObject|string|undefined),\n     *   awaitResponse: boolean,\n     *   responsePromise: (Promise<*>|undefined),\n     *   responseResolver: function(*)\n     * }>}\n     */\n    this.messageQueue_ = [];\n\n    /**\n     * @private {!Object<string, !Array<!{\n     *   data: !JsonObject,\n     *   deferred: !Deferred\n     * }>>}\n     */\n    this.receivedMessageQueue_ = map();\n\n    /**\n     * Subset of this.params_ that only contains parameters in the URL hash,\n     * e.g. \"#foo=bar\".\n     * @const @private {!Object<string, string>}\n     */\n    this.hashParams_ = map();\n\n    if (ampdoc.isSingleDoc()) {\n      Object.assign(this.hashParams_, parseQueryString(this.win.location.hash));\n    }\n\n    this.isRuntimeOn_ = !parseInt(ampdoc.getParam('off'), 10);\n    dev().fine(TAG_, '- runtimeOn:', this.isRuntimeOn_);\n\n    this.overtakeHistory_ = !!(\n      parseInt(ampdoc.getParam('history'), 10) || this.overtakeHistory_\n    );\n    dev().fine(TAG_, '- history:', this.overtakeHistory_);\n\n    dev().fine(TAG_, '- visibilityState:', this.ampdoc.getVisibilityState());\n\n    /**\n     * Whether the AMP document is embedded in a Chrome Custom Tab.\n     * @private {?boolean}\n     */\n    this.isCctEmbedded_ = null;\n\n    /**\n     * Whether the AMP document was served by a proxy.\n     * @private @const {boolean}\n     */\n    this.isProxyOrigin_ = isProxyOrigin(\n      parseUrlDeprecated(this.ampdoc.win.location.href)\n    );\n\n    const messagingDeferred = new Deferred();\n    /** @const @private {!Function} */\n    this.messagingReadyResolver_ = messagingDeferred.resolve;\n    /** @const @private {?Promise} */\n    this.messagingReadyPromise_ = this.initMessagingChannel_(\n      messagingDeferred.promise\n    );\n\n    /** @private {?Promise<boolean>} */\n    this.isTrustedViewer_ = null;\n\n    /** @private {?Promise<string>} */\n    this.viewerOrigin_ = null;\n\n    const referrerParam = ampdoc.getParam('referrer');\n    /** @private {string} */\n    this.unconfirmedReferrerUrl_ =\n      this.isEmbedded() &&\n      referrerParam != null &&\n      this.isTrustedAncestorOrigins_() !== false\n        ? referrerParam\n        : this.win.document.referrer;\n\n    /** @const @private {!Promise<string>} */\n    this.referrerUrl_ = new Promise((resolve) => {\n      if (this.isEmbedded() && ampdoc.getParam('referrer') != null) {\n        // Viewer override, but only for allowlisted viewers. Only allowed for\n        // iframed documents.\n        this.isTrustedViewer().then((isTrusted) => {\n          if (isTrusted) {\n            resolve(ampdoc.getParam('referrer'));\n          } else {\n            resolve(this.win.document.referrer);\n            if (this.unconfirmedReferrerUrl_ != this.win.document.referrer) {\n              dev().expectedError(\n                TAG_,\n                'Untrusted viewer referrer override: ' +\n                  this.unconfirmedReferrerUrl_ +\n                  ' at ' +\n                  this.messagingOrigin_\n              );\n              this.unconfirmedReferrerUrl_ = this.win.document.referrer;\n            }\n          }\n        });\n      } else {\n        resolve(this.win.document.referrer);\n      }\n    });\n\n    /** @private {string} */\n    this.resolvedViewerUrl_ = removeFragment(this.win.location.href || '');\n\n    /** @const @private {!Promise<string>} */\n    this.viewerUrl_ = new Promise((resolve) => {\n      /** @const {?string} */\n      const viewerUrlOverride = ampdoc.getParam('viewerUrl');\n      if (this.isEmbedded() && viewerUrlOverride) {\n        // Viewer override, but only for allowlisted viewers. Only allowed for\n        // iframed documents.\n        this.isTrustedViewer().then((isTrusted) => {\n          if (isTrusted) {\n            this.resolvedViewerUrl_ = devAssert(viewerUrlOverride);\n          } else {\n            dev().expectedError(\n              TAG_,\n              'Untrusted viewer url override: ' +\n                viewerUrlOverride +\n                ' at ' +\n                this.messagingOrigin_\n            );\n          }\n          resolve(this.resolvedViewerUrl_);\n        });\n      } else {\n        resolve(this.resolvedViewerUrl_);\n      }\n    });\n\n    // Remove hash when we have an incoming click tracking string\n    // (see impression.js).\n    if (this.hashParams_['click']) {\n      const newUrl = removeFragment(this.win.location.href);\n      if (newUrl != this.win.location.href && this.win.history.replaceState) {\n        // Persist the hash that we removed has location.originalHash.\n        // This is currently used by mode.js to infer development mode.\n        if (!this.win.location['originalHash']) {\n          this.win.location['originalHash'] = this.win.location.hash;\n        }\n        this.win.history.replaceState({}, '', newUrl);\n        delete this.hashParams_['click'];\n        dev().fine(TAG_, 'replace fragment:' + this.win.location.href);\n      }\n    }\n\n    // This fragment may get cleared by impression tracking. If so, it will be\n    // restored afterward.\n    this.ampdoc.whenFirstVisible().then(() => {\n      this.maybeUpdateFragmentForCct();\n    });\n\n    if (this.ampdoc.isSingleDoc()) {\n      this.visibleOnUserAction_();\n    }\n  }\n\n  /**\n   * Initialize messaging channel with Viewer host.\n   * This promise will resolve when communications channel has been\n   * established or timeout in 20 seconds. The timeout is needed to avoid\n   * this promise becoming a memory leak with accumulating undelivered\n   * messages. The promise is only available when the document is embedded.\n   *\n   * @param {!Promise} messagingPromise\n   * @return {?Promise}\n   * @private\n   */\n  initMessagingChannel_(messagingPromise) {\n    const isEmbedded = !!(\n      (this.isIframed_ &&\n        !this.win.__AMP_TEST_IFRAME &&\n        // Checking param \"origin\", as we expect all viewers to provide it.\n        // See https://github.com/ampproject/amphtml/issues/4183\n        // There appears to be a bug under investigation where the\n        // origin is sometimes failed to be detected. Since failure mode\n        // if we fail to initialize communication is very bad, we also check\n        // for visibilityState.\n        // After https://github.com/ampproject/amphtml/issues/6070\n        // is fixed we should probably only keep the amp_js_v check here.\n        (this.ampdoc.getParam('origin') ||\n          this.ampdoc.getParam('visibilityState') ||\n          // Parent asked for viewer JS. We must be embedded.\n          this.win.location.search.indexOf('amp_js_v') != -1)) ||\n      this.isWebviewEmbedded() ||\n      this.isCctEmbedded() ||\n      !this.ampdoc.isSingleDoc()\n    );\n\n    if (!isEmbedded) {\n      return null;\n    }\n    const timeoutMessage = 'initMessagingChannel timeout';\n    return Services.timerFor(this.win)\n      .timeoutPromise(20000, messagingPromise, timeoutMessage)\n      .catch((reason) => {\n        let error = getChannelError(\n          /** @type {!Error|string|undefined} */ (reason)\n        );\n        if (error && endsWith(error.message, timeoutMessage)) {\n          error = dev().createExpectedError(error);\n        }\n        reportError(error);\n        throw error;\n      });\n  }\n\n  /** @override */\n  getAmpDoc() {\n    return this.ampdoc;\n  }\n\n  /** @override */\n  getParam(name) {\n    return this.ampdoc.getParam(name);\n  }\n\n  /** @override */\n  hasCapability(name) {\n    const capabilities = this.ampdoc.getParam('cap');\n    if (!capabilities) {\n      return false;\n    }\n    // TODO(@cramforce): Consider caching the split.\n    return capabilities.split(',').indexOf(name) != -1;\n  }\n\n  /** @override */\n  isEmbedded() {\n    return !!this.messagingReadyPromise_;\n  }\n\n  /** @override */\n  isWebviewEmbedded() {\n    return !this.isIframed_ && this.ampdoc.getParam('webview') == '1';\n  }\n\n  /** @override */\n  isCctEmbedded() {\n    if (this.isCctEmbedded_ != null) {\n      return this.isCctEmbedded_;\n    }\n    this.isCctEmbedded_ = false;\n    if (!this.isIframed_) {\n      const queryParams = parseQueryString(this.win.location.search);\n      this.isCctEmbedded_ =\n        queryParams['amp_gsa'] === '1' &&\n        (queryParams['amp_js_v'] || '').startsWith('a');\n    }\n    return this.isCctEmbedded_;\n  }\n\n  /** @override */\n  isProxyOrigin() {\n    return this.isProxyOrigin_;\n  }\n\n  /** @override */\n  maybeUpdateFragmentForCct() {\n    if (!this.isCctEmbedded()) {\n      return;\n    }\n    // CCT only works with versions of Chrome that support the history API.\n    if (!this.win.history.replaceState) {\n      return;\n    }\n    const sourceOrigin = getSourceOrigin(this.win.location.href);\n    const {canonicalUrl} = Services.documentInfoForDoc(this.ampdoc);\n    const canonicalSourceOrigin = getSourceOrigin(canonicalUrl);\n    if (this.hasRoughlySameOrigin_(sourceOrigin, canonicalSourceOrigin)) {\n      this.hashParams_['ampshare'] = canonicalUrl;\n      this.win.history.replaceState(\n        {},\n        '',\n        '#' +\n          serializeQueryString(/** @type {!JsonObject} */ (this.hashParams_))\n      );\n    }\n  }\n\n  /**\n   * Compares URLs to determine if they match once common subdomains are\n   * removed. Everything else must match.\n   * @param {string} first Origin to compare.\n   * @param {string} second Origin to compare.\n   * @return {boolean} Whether the origins match without subdomains.\n   * @private\n   */\n  hasRoughlySameOrigin_(first, second) {\n    const trimOrigin = (origin) => {\n      if (origin.split('.').length > 2) {\n        return origin.replace(TRIM_ORIGIN_PATTERN_, '$1');\n      }\n      return origin;\n    };\n    return trimOrigin(first) == trimOrigin(second);\n  }\n\n  /** @override */\n  isRuntimeOn() {\n    return this.isRuntimeOn_;\n  }\n\n  /** @override */\n  toggleRuntime() {\n    this.isRuntimeOn_ = !this.isRuntimeOn_;\n    dev().fine(TAG_, 'Runtime state:', this.isRuntimeOn_);\n    this.runtimeOnObservable_.fire(this.isRuntimeOn_);\n  }\n\n  /** @override */\n  onRuntimeState(handler) {\n    return this.runtimeOnObservable_.add(handler);\n  }\n\n  /** @override */\n  isOvertakeHistory() {\n    return this.overtakeHistory_;\n  }\n\n  /**\n   * Passthrough for ampdoc visibility state. Only to be used by viewer\n   * integration.\n   * @restricted\n   * TODO(#22733): remove if no longer used by the viewer.\n   */\n  getVisibilityState() {\n    return this.ampdoc.getVisibilityState();\n  }\n\n  /**\n   * Passthrough for ampdoc visibility state. Only to be used by viewer\n   * integration.\n   * @restricted\n   * TODO(#22733): remove if no longer used by the viewer.\n   */\n  isVisible() {\n    return this.ampdoc.isVisible();\n  }\n\n  /**\n   * Passthrough for ampdoc visibility state. Only to be used by viewer\n   * integration.\n   * @restricted\n   * TODO(#22733): remove if no longer used by the viewer.\n   */\n  hasBeenVisible() {\n    return this.ampdoc.hasBeenVisible();\n  }\n\n  /**\n   * Passthrough for ampdoc visibility state. Only to be used by viewer\n   * integration.\n   * @restricted\n   * TODO(#22733): remove if no longer used by the viewer.\n   */\n  whenFirstVisible() {\n    return this.ampdoc.whenFirstVisible();\n  }\n\n  /**\n   * Passthrough for ampdoc visibility state. Only to be used by viewer\n   * integration.\n   * @restricted\n   * TODO(#22733): remove if no longer used by the viewer.\n   */\n  whenNextVisible() {\n    return this.ampdoc.whenNextVisible();\n  }\n\n  /**\n   * Passthrough for ampdoc visibility state. Only to be used by viewer\n   * integration.\n   * @restricted\n   * TODO(#22733): remove if no longer used by the viewer.\n   */\n  getFirstVisibleTime() {\n    return this.ampdoc.getFirstVisibleTime();\n  }\n\n  /**\n   * Passthrough for ampdoc visibility state. Only to be used by viewer\n   * integration.\n   * @restricted\n   * TODO(#22733): remove if no longer used by the viewer.\n   */\n  getLastVisibleTime() {\n    return this.ampdoc.getLastVisibleTime();\n  }\n\n  /**\n   * Passthrough for ampdoc visibility state. Only to be used by viewer\n   * integration.\n   * @restricted\n   * TODO(#22733): remove if no longer used by the viewer.\n   */\n  onVisibilityChanged(handler) {\n    return this.ampdoc.onVisibilityChanged(handler);\n  }\n\n  /**\n   * Sets the viewer defined visibility state.\n   * @param {?string|undefined} state\n   * @private\n   */\n  setVisibilityState_(state) {\n    if (!state) {\n      return;\n    }\n\n    devAssert(isEnumValue(VisibilityState, state));\n\n    // The viewer is informing us we are not currently active because we are\n    // being pre-rendered, or the user swiped to another doc (or closed the\n    // viewer). Unfortunately, the viewer sends HIDDEN instead of PRERENDER or\n    // INACTIVE, though we know better.\n    if (state === VisibilityState.HIDDEN) {\n      state =\n        this.ampdoc.getLastVisibleTime() != null\n          ? VisibilityState.INACTIVE\n          : VisibilityState.PRERENDER;\n    }\n\n    this.ampdoc.overrideVisibilityState(state);\n    dev().fine(\n      TAG_,\n      'visibilitychange event:',\n      this.ampdoc.getVisibilityState()\n    );\n  }\n\n  /** @override */\n  getResolvedViewerUrl() {\n    return this.resolvedViewerUrl_;\n  }\n\n  /**\n   * Returns the promise that will yield the viewer URL value. It's by default\n   * the current page's URL. The trusted viewers are allowed to override this\n   * value.\n   * @return {!Promise<string>}\n   * @visibleForTesting\n   */\n  getViewerUrl() {\n    return this.viewerUrl_;\n  }\n\n  /** @override */\n  maybeGetMessagingOrigin() {\n    return this.messagingOrigin_;\n  }\n\n  /** @override */\n  getUnconfirmedReferrerUrl() {\n    return this.unconfirmedReferrerUrl_;\n  }\n\n  /** @override */\n  getReferrerUrl() {\n    return this.referrerUrl_;\n  }\n\n  /** @override */\n  isTrustedViewer() {\n    if (!this.isTrustedViewer_) {\n      const isTrustedAncestorOrigins = this.isTrustedAncestorOrigins_();\n      this.isTrustedViewer_ =\n        isTrustedAncestorOrigins !== undefined\n          ? Promise.resolve(isTrustedAncestorOrigins)\n          : this.messagingReadyPromise_.then((origin) => {\n              return origin ? this.isTrustedViewerOrigin_(origin) : false;\n            });\n    }\n    return /** @type {!Promise<boolean>} */ (this.isTrustedViewer_);\n  }\n\n  /**\n   * Whether the viewer is has been allowlisted for more sensitive operations\n   * by looking at the ancestorOrigins.\n   * @return {boolean|undefined}\n   */\n  isTrustedAncestorOrigins_() {\n    if (!this.isEmbedded()) {\n      // Not embedded in IFrame - can't trust the viewer.\n      return false;\n    } else if (\n      this.win.location.ancestorOrigins &&\n      !this.isWebviewEmbedded() &&\n      !this.isCctEmbedded()\n    ) {\n      // Ancestors when available take precedence. This is the main API used\n      // for this determination. Fallback is only done when this API is not\n      // supported by the browser.\n      return (\n        this.win.location.ancestorOrigins.length > 0 &&\n        this.isTrustedViewerOrigin_(this.win.location.ancestorOrigins[0])\n      );\n    }\n  }\n\n  /** @override */\n  getViewerOrigin() {\n    if (!this.viewerOrigin_) {\n      let origin;\n      if (!this.isEmbedded()) {\n        // Viewer is only determined for iframed documents at this time.\n        origin = '';\n      } else if (\n        this.win.location.ancestorOrigins &&\n        this.win.location.ancestorOrigins.length > 0\n      ) {\n        origin = this.win.location.ancestorOrigins[0];\n      }\n      this.viewerOrigin_ =\n        origin !== undefined\n          ? Promise.resolve(origin)\n          : Services.timerFor(this.win)\n              .timeoutPromise(\n                VIEWER_ORIGIN_TIMEOUT_,\n                this.messagingReadyPromise_\n              )\n              .catch(() => '');\n    }\n    return /** @type {!Promise<string>} */ (this.viewerOrigin_);\n  }\n\n  /**\n   * @param {string} urlString\n   * @return {boolean}\n   * @private\n   */\n  isTrustedViewerOrigin_(urlString) {\n    /** @const {!Location} */\n    const url = parseUrlDeprecated(urlString);\n    const {protocol} = url;\n    // Mobile WebView x-thread is allowed.\n    if (protocol == 'x-thread:') {\n      return true;\n    }\n    if (protocol != 'https:') {\n      // Non-https origins are never trusted.\n      return false;\n    }\n    return urls.trustedViewerHosts.some((th) => th.test(url.hostname));\n  }\n\n  /** @override */\n  onMessage(eventType, handler) {\n    let observable = this.messageObservables_[eventType];\n    if (!observable) {\n      observable = new Observable();\n      this.messageObservables_[eventType] = observable;\n    }\n    const unlistenFn = observable.add(handler);\n    if (this.receivedMessageQueue_[eventType]) {\n      this.receivedMessageQueue_[eventType].forEach((message) => {\n        observable.fire(message.data);\n        message.deferred.resolve();\n      });\n      this.receivedMessageQueue_[eventType] = [];\n    }\n    return unlistenFn;\n  }\n\n  /** @override */\n  onMessageRespond(eventType, responder) {\n    this.messageResponders_[eventType] = responder;\n    if (this.receivedMessageQueue_[eventType]) {\n      this.receivedMessageQueue_[eventType].forEach((message) => {\n        message.deferred.resolve(responder(message.data));\n      });\n      this.receivedMessageQueue_[eventType] = [];\n    }\n    return () => {\n      if (this.messageResponders_[eventType] === responder) {\n        delete this.messageResponders_[eventType];\n      }\n    };\n  }\n\n  /** @override */\n  receiveMessage(eventType, data, unusedAwaitResponse) {\n    if (eventType == 'visibilitychange') {\n      this.setVisibilityState_(data['state']);\n      return Promise.resolve();\n    }\n    if (eventType == 'broadcast') {\n      this.broadcastObservable_.fire(\n        /** @type {!JsonObject|undefined} */ (data)\n      );\n      return Promise.resolve();\n    }\n    const observable = this.messageObservables_[eventType];\n    const responder = this.messageResponders_[eventType];\n\n    // Queue the message if there are no handlers. Returns a pending promise to\n    // be resolved once a handler/responder is registered.\n    if (!observable && !responder) {\n      this.receivedMessageQueue_[eventType] =\n        this.receivedMessageQueue_[eventType] || [];\n      if (\n        this.receivedMessageQueue_[eventType].length >=\n        RECEIVED_MESSAGE_QUEUE_MAX_LENGTH\n      ) {\n        return undefined;\n      }\n      const deferred = new Deferred();\n      this.receivedMessageQueue_[eventType].push({data, deferred});\n      return deferred.promise;\n    }\n    if (observable) {\n      observable.fire(data);\n    }\n    if (responder) {\n      return responder(data);\n    } else if (observable) {\n      return Promise.resolve();\n    }\n  }\n\n  /** @override */\n  setMessageDeliverer(deliverer, origin) {\n    if (this.messageDeliverer_) {\n      throw new Error('message channel can only be initialized once');\n    }\n    if (origin == null) {\n      throw new Error('message channel must have an origin');\n    }\n    dev().fine(TAG_, 'message channel established with origin: ', origin);\n    this.messageDeliverer_ = deliverer;\n    this.messagingOrigin_ = origin;\n    this.messagingReadyResolver_(origin);\n\n    if (this.messageQueue_.length > 0) {\n      const queue = this.messageQueue_.slice(0);\n      this.messageQueue_ = [];\n      queue.forEach((message) => {\n        const responsePromise = this.messageDeliverer_(\n          message.eventType,\n          message.data,\n          message.awaitResponse\n        );\n\n        if (message.awaitResponse) {\n          message.responseResolver(responsePromise);\n        }\n      });\n    }\n  }\n\n  /** @override */\n  maybeGetMessageDeliverer() {\n    return this.messageDeliverer_;\n  }\n\n  /** @override */\n  sendMessage(eventType, data, cancelUnsent = false) {\n    this.sendMessageInternal_(eventType, data, cancelUnsent, false);\n  }\n\n  /** @override */\n  sendMessageAwaitResponse(eventType, data, cancelUnsent = false) {\n    return this.sendMessageInternal_(eventType, data, cancelUnsent, true);\n  }\n\n  /**\n   * Sends the message to the viewer.\n   *\n   * @param {string} eventType\n   * @param {?JsonObject|string|undefined} data\n   * @param {boolean} cancelUnsent\n   * @param {boolean} awaitResponse\n   * @return {!Promise<(?JsonObject|string|undefined)>} the response promise\n   */\n  sendMessageInternal_(eventType, data, cancelUnsent, awaitResponse) {\n    if (this.messageDeliverer_) {\n      // Certain message deliverers return fake \"Promise\" instances called\n      // \"Thenables\". Convert from these values into trusted Promise instances,\n      // assimilating with the resolved (or rejected) internal value.\n      return /** @type {!Promise<?JsonObject|string|undefined>} */ (\n        tryResolve(() =>\n          this.messageDeliverer_(\n            eventType,\n            /** @type {?JsonObject|string|undefined} */ (data),\n            awaitResponse\n          )\n        )\n      );\n    }\n\n    if (!this.messagingReadyPromise_) {\n      if (awaitResponse) {\n        return Promise.reject(getChannelError());\n      } else {\n        return Promise.resolve();\n      }\n    }\n\n    if (!cancelUnsent) {\n      return this.messagingReadyPromise_.then(() => {\n        return this.messageDeliverer_(eventType, data, awaitResponse);\n      });\n    }\n\n    const found = findIndex(\n      this.messageQueue_,\n      (m) => m.eventType == eventType\n    );\n\n    let message;\n    if (found != -1) {\n      message = this.messageQueue_.splice(found, 1)[0];\n      message.data = data;\n      message.awaitResponse = message.awaitResponse || awaitResponse;\n    } else {\n      const deferred = new Deferred();\n      const {promise: responsePromise, resolve: responseResolver} = deferred;\n\n      message = {\n        eventType,\n        data,\n        awaitResponse,\n        responsePromise,\n        responseResolver,\n      };\n    }\n    this.messageQueue_.push(message);\n    return message.responsePromise;\n  }\n\n  /** @override */\n  broadcast(message) {\n    if (!this.messagingReadyPromise_) {\n      // Messaging is not expected.\n      return Promise.resolve(false);\n    }\n\n    return this.sendMessageInternal_('broadcast', message, false, false).then(\n      () => true,\n      () => false\n    );\n  }\n\n  /** @override */\n  onBroadcast(handler) {\n    return this.broadcastObservable_.add(handler);\n  }\n\n  /** @override */\n  whenMessagingReady() {\n    return this.messagingReadyPromise_;\n  }\n\n  /** @override */\n  replaceUrl(newUrl) {\n    if (\n      !newUrl ||\n      !this.ampdoc.isSingleDoc() ||\n      !this.win.history.replaceState\n    ) {\n      return;\n    }\n\n    try {\n      // The origin and source origin must match.\n      const url = parseUrlDeprecated(this.win.location.href);\n      const replaceUrl = parseUrlDeprecated(\n        removeFragment(newUrl) + this.win.location.hash\n      );\n      if (\n        url.origin == replaceUrl.origin &&\n        getSourceOrigin(url) == getSourceOrigin(replaceUrl)\n      ) {\n        this.win.history.replaceState({}, '', replaceUrl.href);\n        this.win.location['originalHref'] = url.href;\n        dev().fine(TAG_, 'replace url:' + replaceUrl.href);\n      }\n    } catch (e) {\n      dev().error(TAG_, 'replaceUrl failed', e);\n    }\n  }\n\n  /**\n   * Defense in-depth against viewer communication issues: Will make the\n   * document visible if it receives a user action without having been\n   * made visible by the viewer.\n   */\n  visibleOnUserAction_() {\n    if (this.ampdoc.getVisibilityState() == VisibilityState.VISIBLE) {\n      return;\n    }\n    const unlisten = [];\n    const doUnlisten = () => unlisten.forEach((fn) => fn());\n    const makeVisible = () => {\n      this.setVisibilityState_(VisibilityState.VISIBLE);\n      doUnlisten();\n      dev().expectedError(TAG_, 'Received user action in non-visible doc');\n    };\n    const options = {\n      capture: true,\n      passive: true,\n    };\n    unlisten.push(\n      listen(this.win, 'keydown', makeVisible, options),\n      listen(this.win, 'touchstart', makeVisible, options),\n      listen(this.win, 'mousedown', makeVisible, options)\n    );\n    this.whenFirstVisible().then(doUnlisten);\n  }\n}\n\n/**\n * Creates a dev error for the case where a channel cannot be established.\n * @param {*=} opt_reason\n * @return {!Error}\n */\nfunction getChannelError(opt_reason) {\n  let channelError;\n  if (opt_reason instanceof Error) {\n    opt_reason = duplicateErrorIfNecessary(opt_reason);\n    opt_reason.message = 'No messaging channel: ' + opt_reason.message;\n    channelError = opt_reason;\n  } else {\n    channelError = new Error('No messaging channel: ' + opt_reason);\n  }\n  // Force convert user error to dev error\n  channelError.message = stripUserError(channelError.message);\n  return channelError;\n}\n\n/**\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n */\nexport function installViewerServiceForDoc(ampdoc) {\n  registerServiceBuilderForDoc(\n    ampdoc,\n    'viewer',\n    ViewerImpl,\n    /* opt_instantiate */ true\n  );\n}\n", "import {isString} from '#core/types';\n\nimport {\n  assertNotDisplay,\n  setStyle,\n  px as stylePx,\n  scale as styleScale,\n  translate as styleTranslate,\n} from './style';\n\n/**\n * TransitionDef function that accepts normtime, typically between 0 and 1 and\n * performs an arbitrary animation action. Notice that sometimes normtime can\n * dip above 1 or below 0. This is an acceptable case for some curves. The\n * second argument is a boolean value that equals \"true\" for the completed\n * transition and \"false\" for ongoing.\n * @typedef {function(number, boolean):?|function(number):?}\n */\nlet TransitionDef;\n\n/** @type {!TransitionDef<null>} */\nexport const NOOP = (unusedTime) => null;\n\n/**\n * Returns a transition that combines the string result of other string-based\n * transitions such as transform and scale using the given opt_delimiter.\n * @param {!Array<!TransitionDef<string>>} transitions\n * @param {string=} opt_delimiter Defaults to a single whitespace.\n * @return {!TransitionDef<string>}\n */\nexport function concat(transitions, opt_delimiter = ' ') {\n  return (time, complete) =>\n    transitions\n      .map((tr) => tr(time, complete))\n      .filter(isString)\n      .join(opt_delimiter);\n}\n\n/**\n * A transition that sets the CSS style of the specified element. The styles\n * a specified as a map from CSS property names to transition functions for\n * each of these properties.\n * @param {!Element} element\n * @param {!Object<string, !TransitionDef>} styles\n * @return {!TransitionDef<void>}\n */\nexport function setStyles(element, styles) {\n  return (time, complete) => {\n    for (const k in styles) {\n      setStyle(element, assertNotDisplay(k), styles[k](time, complete));\n    }\n  };\n}\n\n/**\n * A basic numeric interpolation.\n * @param {number} start\n * @param {number} end\n * @return {!TransitionDef<number>}\n */\nexport function numeric(start, end) {\n  return (time) => start + (end - start) * time;\n}\n\n/**\n * Adds \"px\" units.\n * @param {!TransitionDef<number>} transition\n * @return {!TransitionDef<string>}\n */\nexport function px(transition) {\n  return (time) => stylePx(transition(time));\n}\n\n/**\n * A transition for \"translate(x, y)\" of CSS \"transform\" property.\n * @param {!TransitionDef<number|string>} transitionX\n * @param {!TransitionDef<number|string>|undefined} opt_transitionY\n * @return {!TransitionDef<string>}\n */\nexport function translate(transitionX, opt_transitionY) {\n  return (time) => styleTranslate(transitionX(time), opt_transitionY?.(time));\n}\n\n/**\n * A transition for \"scale\" of CSS \"transform\" property.\n * @param {!TransitionDef<number|string>} transition\n * @return {!TransitionDef<string>}\n */\nexport function scale(transition) {\n  return (time) => styleScale(transition(time));\n}\n", "import {isString} from '#core/types';\n\n/**\n * Number between 0 and 1 that designates normalized time, as in \"from start to\n * end\".\n * @typedef {number}\n */\nexport let NormTimeDef;\n\n/**\n * A CurveDef is a function that returns a normtime value (0 to 1) for another\n * normtime value.\n * @typedef {function(NormTimeDef): NormTimeDef}\n */\nexport let CurveDef;\n\n/**\n * Returns a cubic bezier curve.\n * @param {number} x1 X coordinate of the first control point.\n * @param {number} y1 Y coordinate of the first control point.\n * @param {number} x2 X coordinate of the second control point.\n * @param {number} y2 Y coordinate of the second control point.\n * @return {!CurveDef}\n */\nexport function bezierCurve(x1, y1, x2, y2) {\n  return (xVal) =>\n    Bezier.solveYValueFromXValue(xVal, 0, 0, x1, y1, x2, y2, 1, 1);\n}\n\n/**\n * Thanks to\n * https://closure-library.googlecode.com/git-history/docs/local_closure_goog_math_bezier.js.source.html\n */\nclass Bezier {\n  /**\n   * Computes the y coordinate of a point on the curve given its x coordinate.\n   * @param {number} xVal The x coordinate of the point on the curve.\n   * @param {number} x0 X coordinate of the start point.\n   * @param {number} y0 Y coordinate of the start point.\n   * @param {number} x1 X coordinate of the first control point.\n   * @param {number} y1 Y coordinate of the first control point.\n   * @param {number} x2 X coordinate of the second control point.\n   * @param {number} y2 Y coordinate of the second control point.\n   * @param {number} x3 X coordinate of the end point.\n   * @param {number} y3 Y coordinate of the end point.\n   * @return {number} The y coordinate of the point on the curve.\n   */\n  static solveYValueFromXValue(xVal, x0, y0, x1, y1, x2, y2, x3, y3) {\n    return Bezier.getPointY_(\n      Bezier.solvePositionFromXValue_(xVal, x0, x1, x2, x3),\n      y0,\n      y1,\n      y2,\n      y3\n    );\n  }\n\n  /**\n   * Computes the position t of a point on the curve given its x coordinate.\n   * That is, for an input xVal, finds t s.t. getPointX(t) = xVal.\n   * As such, the following should always be true up to some small epsilon:\n   * t ~ solvePositionFromXValue(getPointX(t)) for t in [0, 1].\n   * @param {number} xVal The x coordinate of the point to find on the curve.\n   * @param {number} x0 X coordinate of the start point.\n   * @param {number} x1 X coordinate of the first control point.\n   * @param {number} x2 X coordinate of the second control point.\n   * @param {number} x3 X coordinate of the end point.\n   * @return {number} The position t.\n   * @private\n   */\n  static solvePositionFromXValue_(xVal, x0, x1, x2, x3) {\n    // Desired precision on the computation.\n    const epsilon = 1e-6;\n\n    // Initial estimate of t using linear interpolation.\n    let t = (xVal - x0) / (x3 - x0);\n    if (t <= 0) {\n      return 0;\n    } else if (t >= 1) {\n      return 1;\n    }\n\n    // Try gradient descent to solve for t. If it works, it is very fast.\n    let tMin = 0;\n    let tMax = 1;\n    let value = 0;\n    for (let i = 0; i < 8; i++) {\n      value = Bezier.getPointX_(t, x0, x1, x2, x3);\n      const derivative =\n        (Bezier.getPointX_(t + epsilon, x0, x1, x2, x3) - value) / epsilon;\n      if (Math.abs(value - xVal) < epsilon) {\n        return t;\n      } else if (Math.abs(derivative) < epsilon) {\n        break;\n      } else {\n        if (value < xVal) {\n          tMin = t;\n        } else {\n          tMax = t;\n        }\n        t -= (value - xVal) / derivative;\n      }\n    }\n\n    // If the gradient descent got stuck in a local minimum, e.g. because\n    // the derivative was close to 0, use a Dichotomy refinement instead.\n    // We limit the number of iterations to 8.\n    for (let i = 0; Math.abs(value - xVal) > epsilon && i < 8; i++) {\n      if (value < xVal) {\n        tMin = t;\n        t = (t + tMax) / 2;\n      } else {\n        tMax = t;\n        t = (t + tMin) / 2;\n      }\n      value = Bezier.getPointX_(t, x0, x1, x2, x3);\n    }\n    return t;\n  }\n\n  /**\n   * Computes the curve's X coordinate at a point between 0 and 1.\n   * @param {number} t The point on the curve to find.\n   * @param {number} x0 X coordinate of the start point.\n   * @param {number} x1 X coordinate of the first control point.\n   * @param {number} x2 X coordinate of the second control point.\n   * @param {number} x3 X coordinate of the end point.\n   * @return {number} The computed coordinate.\n   * @private\n   */\n  static getPointX_(t, x0, x1, x2, x3) {\n    // Special case start and end.\n    if (t == 0) {\n      return x0;\n    } else if (t == 1) {\n      return x3;\n    }\n\n    // Step one - from 4 points to 3\n    let ix0 = Bezier.lerp_(x0, x1, t);\n    let ix1 = Bezier.lerp_(x1, x2, t);\n    const ix2 = Bezier.lerp_(x2, x3, t);\n\n    // Step two - from 3 points to 2\n    ix0 = Bezier.lerp_(ix0, ix1, t);\n    ix1 = Bezier.lerp_(ix1, ix2, t);\n\n    // Final step - last point\n    return Bezier.lerp_(ix0, ix1, t);\n  }\n\n  /**\n   * Computes the curve's Y coordinate at a point between 0 and 1.\n   * @param {number} t The point on the curve to find.\n   * @param {number} y0 Y coordinate of the start point.\n   * @param {number} y1 Y coordinate of the first control point.\n   * @param {number} y2 Y coordinate of the second control point.\n   * @param {number} y3 Y coordinate of the end point.\n   * @return {number} The computed coordinate.\n   * @private\n   */\n  static getPointY_(t, y0, y1, y2, y3) {\n    // Special case start and end.\n    if (t == 0) {\n      return y0;\n    } else if (t == 1) {\n      return y3;\n    }\n\n    // Step one - from 4 points to 3\n    let iy0 = Bezier.lerp_(y0, y1, t);\n    let iy1 = Bezier.lerp_(y1, y2, t);\n    const iy2 = Bezier.lerp_(y2, y3, t);\n\n    // Step two - from 3 points to 2\n    iy0 = Bezier.lerp_(iy0, iy1, t);\n    iy1 = Bezier.lerp_(iy1, iy2, t);\n\n    // Final step - last point\n    return Bezier.lerp_(iy0, iy1, t);\n  }\n\n  /**\n   * Performs linear interpolation between values a and b. Returns the value\n   * between a and b proportional to x (when x is between 0 and 1. When x is\n   * outside this range, the return value is a linear extrapolation).\n   * @param {number} a A number.\n   * @param {number} b A number.\n   * @param {number} x The proportion between a and b.\n   * @return {number} The interpolated value between a and b.\n   * @private\n   */\n  static lerp_(a, b, x) {\n    return a + x * (b - a);\n  }\n}\n\n/**\n * A collection of common curves.\n * See https://developer.mozilla.org/en-US/docs/Web/CSS/timing-function\n * @enum {!CurveDef}\n */\nexport const Curves = {\n  /**\n   * linear\n   * @param {!NormTimeDef} xVal\n   * @return {!NormTimeDef}\n   */\n  LINEAR(xVal) {\n    return xVal;\n  },\n\n  /**\n   * ease\n   * @param {!NormTimeDef} xVal\n   * @return {!NormTimeDef}\n   */\n  EASE(xVal) {\n    return Bezier.solveYValueFromXValue(xVal, 0, 0, 0.25, 0.1, 0.25, 1.0, 1, 1);\n  },\n\n  /**\n   * ease-in: slow out, fast in\n   * @param {!NormTimeDef} xVal\n   * @return {!NormTimeDef}\n   */\n  EASE_IN(xVal) {\n    return Bezier.solveYValueFromXValue(xVal, 0, 0, 0.42, 0.0, 1.0, 1.0, 1, 1);\n  },\n\n  /**\n   * ease-out: fast out, slow in\n   * @param {!NormTimeDef} xVal\n   * @return {!NormTimeDef}\n   */\n  EASE_OUT(xVal) {\n    return Bezier.solveYValueFromXValue(xVal, 0, 0, 0.0, 0.0, 0.58, 1.0, 1, 1);\n  },\n\n  /**\n   * ease-in-out\n   * @param {!NormTimeDef} xVal\n   * @return {!NormTimeDef}\n   */\n  EASE_IN_OUT(xVal) {\n    return Bezier.solveYValueFromXValue(xVal, 0, 0, 0.42, 0.0, 0.58, 1.0, 1, 1);\n  },\n};\n\n/**\n * @const {!Object<string, !CurveDef>}\n */\nconst NAME_MAP = {\n  'linear': Curves.LINEAR,\n  'ease': Curves.EASE,\n  'ease-in': Curves.EASE_IN,\n  'ease-out': Curves.EASE_OUT,\n  'ease-in-out': Curves.EASE_IN_OUT,\n};\n\n/**\n * If the argument is a string, this methods matches an existing curve by name.\n * @param {?CurveDef|string|undefined} curve\n * @return {?CurveDef}\n */\nexport function getCurve(curve) {\n  if (!curve) {\n    return null;\n  }\n  if (isString(curve)) {\n    curve = /** @type {string} */ (curve);\n    // If the curve is a custom cubic-bezier curve\n    if (curve.indexOf('cubic-bezier') != -1) {\n      const match = curve.match(/cubic-bezier\\((.+)\\)/);\n      if (match) {\n        const values = match[1].split(',').map(parseFloat);\n        if (values.length == 4) {\n          for (let i = 0; i < 4; i++) {\n            if (isNaN(values[i])) {\n              return null;\n            }\n          }\n          return bezierCurve(values[0], values[1], values[2], values[3]);\n        }\n      }\n      return null;\n    }\n    return NAME_MAP[curve];\n  }\n  return /** @type {!CurveDef} */ (curve);\n}\n", "import {NormTimeDef, getCurve} from '#core/data-structures/curve';\nimport {Deferred} from '#core/data-structures/promise';\nimport {TimestampDef} from '#core/types/date';\n\nimport {Services} from '#service';\n\nimport {dev} from '#utils/log';\n\nconst TAG_ = 'Animation';\n\nconst NOOP_CALLBACK = function () {};\n\n/**\n * The animation class allows construction of arbitrary animation processes.\n * The main method is \"add\" that adds a segment of animation at particular\n * time offset (delay) and duration. All animation segments are simply functions\n * of type Transition which are iterated from 0 to 1 in animation frames to\n * achieve the desired effect.\n */\nexport class Animation {\n  /**\n   * Creates and starts animation with a single segment. Returns AnimationPlayer\n   * object that can be used to monitor or control animation.\n   *\n   * @param {!Node} contextNode The context node.\n   * @param {!TransitionDef<?>} transition Transition to animate.\n   * @param {TimestampDef} duration Duration in milliseconds.\n   * @param {(!./core/data-structures/curve.CurveDef|string)=} opt_curve Optional curve to use for\n   *   animation. Default is the linear animation.\n   * @return {!AnimationPlayer}\n   */\n  static animate(contextNode, transition, duration, opt_curve) {\n    return new Animation(contextNode)\n      .setCurve(opt_curve)\n      .add(0, transition, 1)\n      .start(duration);\n  }\n\n  /**\n   * @param {!Node} contextNode\n   * @param {!./service/vsync-impl.Vsync=} opt_vsync\n   */\n  constructor(contextNode, opt_vsync) {\n    /** @private @const {!Node} */\n    this.contextNode_ = contextNode;\n\n    /** @private @const {!./service/vsync-impl.Vsync} */\n    this.vsync_ = opt_vsync || Services.vsyncFor(self);\n\n    /** @private {?./core/data-structures/curve.CurveDef} */\n    this.curve_ = null;\n\n    /**\n     * @private @const {!Array<!SegmentDef>}\n     */\n    this.segments_ = [];\n  }\n\n  /**\n   * Sets the default curve for the animation. Each segment is allowed to have\n   * its own curve, but this curve will be used if a segment doesn't specify\n   * its own.\n   * @param {!./core/data-structures/curve.CurveDef|string|undefined} curve\n   * @return {!Animation}\n   */\n  setCurve(curve) {\n    if (curve) {\n      this.curve_ = getCurve(curve);\n    }\n    return this;\n  }\n\n  /**\n   * Adds a segment to the animation. Each segment starts at offset (delay) and\n   * runs for a portion of the overall animation (duration). Note that both\n   * delay and duration and NormTimeDef types which accept values from 0 to 1.\n   * Optionally, the time is pushed through a curve. If curve is not specified,\n   * the default animation curve will be used. The specified transition is\n   * animated over the specified duration from 0 to 1.\n   *\n   * @param {!NormTimeDef} delay\n   * @param {!TransitionDef<?>} transition\n   * @param {!NormTimeDef} duration\n   * @param {(!./core/data-structures/curve.CurveDef|string)=} opt_curve\n   * @return {!Animation}\n   */\n  add(delay, transition, duration, opt_curve) {\n    this.segments_.push({\n      delay,\n      func: transition,\n      duration,\n      curve: getCurve(opt_curve),\n    });\n    return this;\n  }\n\n  /**\n   * Starts the animation and returns the AnimationPlayer object that can be\n   * used to monitor and control the animation.\n   *\n   * @param {!TimestampDef} duration Absolute time in milliseconds.\n   * @return {!AnimationPlayer}\n   */\n  start(duration) {\n    const player = new AnimationPlayer(\n      this.vsync_,\n      this.contextNode_,\n      this.segments_,\n      this.curve_,\n      duration\n    );\n    return player;\n  }\n}\n\n/**\n * AnimationPlayer allows tracking and monitoring of the running animation.\n * Most importantly it exposes methods \"then\" and \"thenAlways\" that have the\n * semantics of a Promise and signal when the animation completed or failed.\n * Additionally, it exposes the method \"halt\" which allows to stop/reset the\n * animation.\n * // TODO(@cramforce) Actually fully implement.\n * implements {IThenable}\n */\nclass AnimationPlayer {\n  /**\n   * @param {!./service/vsync-impl.Vsync} vsync\n   * @param {!Node} contextNode\n   * @param {!Array<!SegmentDef>} segments\n   * @param {?./core/data-structures/curve.CurveDef} defaultCurve\n   * @param {!TimestampDef} duration\n   */\n  constructor(vsync, contextNode, segments, defaultCurve, duration) {\n    /** @private @const {!./service/vsync-impl.Vsync} */\n    this.vsync_ = vsync;\n\n    /** @private @const {!Node} */\n    this.contextNode_ = contextNode;\n\n    /** @private @const {!Array<!SegmentRuntimeDef>} */\n    this.segments_ = [];\n    for (let i = 0; i < segments.length; i++) {\n      const segment = segments[i];\n      this.segments_.push({\n        delay: segment.delay,\n        func: segment.func,\n        duration: segment.duration,\n        curve: segment.curve || defaultCurve,\n        started: false,\n        completed: false,\n      });\n    }\n\n    /** @private @const */\n    this.duration_ = duration;\n\n    /** @private {!TimestampDef} */\n    this.startTime_ = Date.now();\n\n    /** @private {!NormTimeDef} */\n    // this.normLinearTime_ = 0;\n\n    /** @private {!NormTimeDef} */\n    // this.normTime_ = 0;\n\n    /** @private {boolean} */\n    this.running_ = true;\n\n    /** @private {!Object<string, *>} */\n    this.state_ = {};\n\n    const deferred = new Deferred();\n\n    /** @const @private */\n    this.promise_ = deferred.promise;\n\n    /** @const @private */\n    this.resolve_ = deferred.resolve;\n\n    /** @const @private */\n    this.reject_ = deferred.reject;\n\n    /** @const */\n    this.task_ = this.vsync_.createAnimTask(this.contextNode_, {\n      mutate: this.stepMutate_.bind(this),\n    });\n\n    if (this.vsync_.canAnimate(this.contextNode_)) {\n      this.task_(this.state_);\n    } else {\n      dev().warn(TAG_, 'cannot animate');\n      this.complete_(/* success */ false, /* dir */ 0);\n    }\n  }\n\n  /**\n   * Chains to the animation's promise that will resolve when the animation has\n   * completed or will reject if animation has failed or was interrupted.\n   * @param {!Function=} opt_resolve\n   * @param {!Function=} opt_reject\n   * @return {!Promise}\n   */\n  then(opt_resolve, opt_reject) {\n    if (!opt_resolve && !opt_reject) {\n      return this.promise_;\n    }\n    return this.promise_.then(opt_resolve, opt_reject);\n  }\n\n  /**\n   * Callback for regardless whether the animation succeeds or fails.\n   * @param {!Function=} opt_callback\n   * @return {!Promise}\n   */\n  thenAlways(opt_callback) {\n    const callback = opt_callback || NOOP_CALLBACK;\n    return this.then(callback, callback);\n  }\n\n  /**\n   * Halts the animation. Depending on the opt_dir value, the following actions\n   * can be performed:\n   * 0: No action. The state will be as at the moment of halting (default)\n   * 1: Final state. Transitionable will be set to state = 1.\n   * -1: Reset state. Transitionable will be reset to state = 0.\n   * The animation's promise will be rejected since the transition has been\n   * interrupted.\n   * @param {number=} opt_dir\n   */\n  halt(opt_dir) {\n    this.complete_(/* success */ false, /* dir */ opt_dir || 0);\n  }\n\n  /**\n   * @param {boolean} success\n   * @param {number} dir\n   * @private\n   */\n  complete_(success, dir) {\n    if (!this.running_) {\n      return;\n    }\n    this.running_ = false;\n    if (dir != 0) {\n      // Sort in the completion order.\n      if (this.segments_.length > 1) {\n        this.segments_.sort((s1, s2) => {\n          return s1.delay + s1.duration - (s2.delay + s2.duration);\n        });\n      }\n      try {\n        if (dir > 0) {\n          // Natural order - all set to 1.\n          for (let i = 0; i < this.segments_.length; i++) {\n            this.segments_[i].func(1, true);\n          }\n        } else {\n          // Reverse order - all set to 0.\n          for (let i = this.segments_.length - 1; i >= 0; i--) {\n            this.segments_[i].func(0, false);\n          }\n        }\n      } catch (e) {\n        dev().error(TAG_, 'completion failed: ' + e, e);\n        success = false;\n      }\n    }\n    if (success) {\n      this.resolve_();\n    } else {\n      this.reject_();\n    }\n  }\n\n  /**\n   * @param {!Object<string, *>} unusedState\n   * @private\n   */\n  stepMutate_(unusedState) {\n    if (!this.running_) {\n      return;\n    }\n    const currentTime = Date.now();\n    const normLinearTime = Math.min(\n      (currentTime - this.startTime_) / this.duration_,\n      1\n    );\n\n    // Start segments due to be started\n    for (let i = 0; i < this.segments_.length; i++) {\n      const segment = this.segments_[i];\n      if (!segment.started && normLinearTime >= segment.delay) {\n        segment.started = true;\n      }\n    }\n\n    // Execute all pending segments.\n    for (let i = 0; i < this.segments_.length; i++) {\n      const segment = this.segments_[i];\n      if (!segment.started || segment.completed) {\n        continue;\n      }\n      this.mutateSegment_(segment, normLinearTime);\n    }\n\n    // Complete or start next cycle.\n    if (normLinearTime == 1) {\n      this.complete_(/* success */ true, /* dir */ 0);\n    } else {\n      if (this.vsync_.canAnimate(this.contextNode_)) {\n        this.task_(this.state_);\n      } else {\n        dev().warn(TAG_, 'cancel animation');\n        this.complete_(/* success */ false, /* dir */ 0);\n      }\n    }\n  }\n\n  /**\n   * @param {!SegmentRuntimeDef} segment\n   * @param {number} totalLinearTime\n   */\n  mutateSegment_(segment, totalLinearTime) {\n    let normLinearTime;\n    let normTime;\n    if (segment.duration > 0) {\n      normLinearTime = Math.min(\n        (totalLinearTime - segment.delay) / segment.duration,\n        1\n      );\n      normTime = normLinearTime;\n      if (segment.curve && normTime != 1) {\n        try {\n          normTime = segment.curve(normLinearTime);\n        } catch (e) {\n          dev().error(TAG_, 'step curve failed: ' + e, e);\n          this.complete_(/* success */ false, /* dir */ 0);\n          return;\n        }\n      }\n    } else {\n      normLinearTime = 1;\n      normTime = 1;\n    }\n    if (normLinearTime == 1) {\n      segment.completed = true;\n    }\n    try {\n      segment.func(normTime, segment.completed);\n    } catch (e) {\n      dev().error(TAG_, 'step mutate failed: ' + e, e);\n      this.complete_(/* success */ false, /* dir */ 0);\n      return;\n    }\n  }\n}\n\n/**\n * @typedef {{\n *   delay: NormTimeDef,\n *   func: !TransitionDef,\n *   duration: NormTimeDef,\n *   curve: ?./core/data-structures/curve.CurveDef\n * }}\n */\nlet SegmentDef;\n\n/**\n * @typedef {{\n *   delay: NormTimeDef,\n *   func: !TransitionDef,\n *   duration: NormTimeDef,\n *   curve: ?./core/data-structures/curve.CurveDef,\n *   started: boolean,\n *   completed: boolean\n * }}\n */\nlet SegmentRuntimeDef;\n", "import {computedStyle} from '#core/dom/style';\n\n/**\n * ViewportBindingDef is an interface that defines an underlying technology\n * behind the {@link ViewportInterface}.\n * @interface\n */\nexport class ViewportBindingDef {\n  /**\n   * Called before a first AMP element is added to resources. The final\n   * preparations must be completed here. Called in the mutate context.\n   */\n  ensureReadyForElements() {}\n\n  /**\n   * Add listeners for global resources.\n   */\n  connect() {}\n\n  /**\n   * Remove listeners for global resources.\n   */\n  disconnect() {}\n\n  /**\n   * Returns the width of top border if this type of viewport needs border\n   * offsetting. This is currently only needed for iOS to avoid scroll freeze.\n   * @return {number}\n   */\n  getBorderTop() {}\n\n  /**\n   * Whether the binding requires fixed elements to be transfered to a\n   * independent fixed layer.\n   * @return {boolean}\n   */\n  requiresFixedLayerTransfer() {}\n\n  /**\n   * Whether the binding requires the global window's `scrollTo` to be\n   * indirected via methods of this binding.\n   * @return {boolean}\n   */\n  overrideGlobalScrollTo() {}\n\n  /**\n   * Whether the binding supports fix-positioned elements.\n   * @return {boolean}\n   */\n  supportsPositionFixed() {}\n\n  /**\n   * Register a callback for scroll events.\n   * @param {function()} unusedCallback\n   */\n  onScroll(unusedCallback) {}\n\n  /**\n   * Register a callback for resize events.\n   * @param {function()} unusedCallback\n   */\n  onResize(unusedCallback) {}\n\n  /**\n   * Updates binding with the new padding.\n   * @param {number} unusedPaddingTop\n   */\n  updatePaddingTop(unusedPaddingTop) {}\n\n  /**\n   * Updates binding with the new padding when hiding viewer header.\n   * @param {boolean} unusedTransient\n   * @param {number} unusedLastPaddingTop\n   */\n  hideViewerHeader(unusedTransient, unusedLastPaddingTop) {}\n\n  /**\n   * Updates binding with the new padding when showing viewer header.\n   * @param {boolean} unusedTransient\n   * @param {number} unusedPaddingTop\n   */\n  showViewerHeader(unusedTransient, unusedPaddingTop) {}\n\n  /**\n   * Disable the scrolling by setting overflow: hidden.\n   * Should only be used for temporarily disabling scroll.\n   */\n  disableScroll() {}\n\n  /**\n   * Reset the scrolling by removing overflow: hidden.\n   */\n  resetScroll() {}\n\n  /**\n   * Updates the viewport whether it's currently in the lightbox or a normal\n   * mode.\n   * @param {boolean} unusedLightboxMode\n   * @return {!Promise}\n   */\n  updateLightboxMode(unusedLightboxMode) {}\n\n  /**\n   * Returns the size of the viewport.\n   * @return {!{width: number, height: number}}\n   */\n  getSize() {}\n\n  /**\n   * Returns the top scroll position for the viewport.\n   * @return {number}\n   */\n  getScrollTop() {}\n\n  /**\n   * Sets scroll top position to the specified value or the nearest possible.\n   * @param {number} unusedScrollTop\n   */\n  setScrollTop(unusedScrollTop) {}\n\n  /**\n   * Returns the left scroll position for the viewport.\n   * @return {number}\n   */\n  getScrollLeft() {}\n\n  /**\n   * Returns the scroll width of the content of the document.\n   * @return {number}\n   */\n  getScrollWidth() {}\n\n  /**\n   * Returns the scroll height of the content of the document, including the\n   * padding top for the viewer header.\n   * The scrollHeight will be the viewport height if there's not enough content\n   * to fill up the viewport.\n   * @return {number}\n   */\n  getScrollHeight() {}\n\n  /**\n   * Returns the height of the content of the document, including the\n   * padding top for the viewer header.\n   * contentHeight will match scrollHeight in all cases unless the viewport is\n   * taller than the content.\n   * @return {number}\n   */\n  getContentHeight() {}\n\n  /**\n   * Resource manager signals to the viewport that content height is changed\n   * and some action may need to be taken.\n   * @restricted Use is restricted due to potentially very heavy performance\n   *   impact. Can only be called when not actively scrolling.\n   */\n  contentHeightChanged() {}\n\n  /**\n   * Returns the rect of the element within the document.\n   * @param {!Element} unusedEl\n   * @param {number=} unusedScrollLeft Optional arguments that the caller may\n   *     pass in, if they cached these values and would like to avoid\n   *     remeasure. Requires appropriate updating the values on scroll.\n   * @param {number=} unusedScrollTop Same comment as above.\n   * @return {!../../layout-rect.LayoutRectDef}\n   */\n  getLayoutRect(unusedEl, unusedScrollLeft, unusedScrollTop) {}\n\n  /**\n   * Returns the client rect of the current window.\n   * @return {Promise<null>|Promise<!../../layout-rect.LayoutRectDef>}\n   */\n  getRootClientRectAsync() {}\n\n  /**\n   * Returns the element considered the root scroller for this binding.\n   * @return {!Element}\n   */\n  getScrollingElement() {}\n\n  /**\n   * Whether the root scroller is a native root scroller (behaves like a\n   * viewport), or an overflow scroller (scrolls like an element).\n   * @return {boolean}\n   */\n  getScrollingElementScrollsLikeViewport() {}\n}\n\n/**\n * Returns the margin-bottom of the last child of `element` that affects\n * document height (is static/relative position with non-zero height),\n * if any. Otherwise, returns 0.\n *\n * TODO(choumx): This is a weird location, so refactor to improve code sharing\n * among implementations of ViewportBindingDef generally.\n *\n * @param {!Window} win\n * @param {!Element} element\n * @return {number}\n */\nexport function marginBottomOfLastChild(win, element) {\n  let style;\n  for (let n = element.lastElementChild; n; n = n.previousElementSibling) {\n    const r = n./*OK*/ getBoundingClientRect();\n    if (r.height > 0) {\n      const s = computedStyle(win, n);\n      if (s.position == 'static' || s.position == 'relative') {\n        style = s;\n        break;\n      }\n    }\n  }\n  return style ? parseInt(style.marginBottom, 10) : 0;\n}\n", "import {Observable} from '#core/data-structures/observable';\nimport {whenDocumentReady} from '#core/document/ready';\nimport {waitForBodyOpen} from '#core/dom';\nimport {layoutRectLtwh} from '#core/dom/layout/rect';\nimport {computedStyle, px, setImportantStyles} from '#core/dom/style';\n\nimport {isExperimentOn} from '#experiments';\n\nimport {Services} from '#service';\n\nimport {dev} from '#utils/log';\n\nimport {\n  ViewportBindingDef,\n  marginBottomOfLastChild,\n} from './viewport-binding-def';\n\nconst TAG_ = 'Viewport';\n\n/**\n * Implementation of ViewportBindingDef based for iframed iOS case where iframes\n * are not scrollable. Scrolling accomplished here by inserting a scrollable\n * wrapper `<html id=\"i-amphtml-wrapper\">` inside the `<html>` element and\n * reparenting the original `<body>` inside.\n *\n * @implements {ViewportBindingDef}\n * @visibleForTesting\n */\nexport class ViewportBindingIosEmbedWrapper_ {\n  /**\n   * @param {!Window} win\n   */\n  constructor(win) {\n    /** @const {!Window} */\n    this.win = win;\n\n    /** @protected {!../vsync-impl.Vsync} */\n    this.vsync_ = Services.vsyncFor(win);\n\n    const doc = this.win.document;\n    const {documentElement} = doc;\n    const topClasses = documentElement.className;\n    documentElement.classList.add('i-amphtml-ios-embed');\n\n    const wrapper = doc.createElement('html');\n    /** @private @const {!Element} */\n    this.wrapper_ = wrapper;\n    wrapper.id = 'i-amphtml-wrapper';\n    wrapper.className = topClasses;\n\n    /** @private @const {!Observable} */\n    this.scrollObservable_ = new Observable();\n\n    /** @private @const {!Observable} */\n    this.resizeObservable_ = new Observable();\n\n    /** @const {function()} */\n    this.boundScrollEventListener_ = this.onScrolled_.bind(this);\n\n    /** @const {function()} */\n    this.boundResizeEventListener_ = () => this.resizeObservable_.fire();\n\n    /** @private {number} */\n    this.paddingTop_ = 0;\n\n    // Setup UI.\n    /** @private {boolean} */\n    this.setupDone_ = false;\n    waitForBodyOpen(doc, this.setup_.bind(this));\n\n    // Set overscroll (`-webkit-overflow-scrolling: touch`) later to avoid\n    // iOS rendering bugs. See #8798 for details.\n    whenDocumentReady(doc).then(() => {\n      documentElement.classList.add('i-amphtml-ios-overscroll');\n    });\n\n    dev().fine(TAG_, 'initialized ios-embed-wrapper viewport');\n  }\n\n  /** @override */\n  ensureReadyForElements() {\n    this.setup_();\n  }\n\n  /** @private */\n  setup_() {\n    if (this.setupDone_) {\n      return;\n    }\n    this.setupDone_ = true;\n\n    // Embedded scrolling on iOS is rather complicated. IFrames cannot be sized\n    // and be scrollable. Sizing iframe by scrolling height has a big negative\n    // that \"fixed\" position is essentially impossible. The only option we\n    // found is to reset scrolling on the AMP doc, which wraps the natural BODY\n    // inside the `overflow:auto` element. For reference, here are related\n    // iOS issues (Chrome issues are also listed for reference):\n    // - https://code.google.com/p/chromium/issues/detail?id=2891\n    // - https://code.google.com/p/chromium/issues/detail?id=157855\n    // - https://bugs.webkit.org/show_bug.cgi?id=106133\n    // - https://bugs.webkit.org/show_bug.cgi?id=149264\n    const doc = this.win.document;\n    const body = dev().assertElement(doc.body, 'body is not available');\n    doc.documentElement.appendChild(this.wrapper_);\n    this.wrapper_.appendChild(body);\n    // Redefine `document.body`, otherwise it'd be `null`.\n    Object.defineProperty(doc, 'body', {\n      get: () => body,\n    });\n\n    // Make sure the scroll position is adjusted correctly.\n    this.onScrolled_();\n  }\n\n  /** @override */\n  connect() {\n    this.win.addEventListener('resize', this.boundResizeEventListener_);\n    this.wrapper_.addEventListener('scroll', this.boundScrollEventListener_);\n  }\n\n  /** @override */\n  disconnect() {\n    this.win.removeEventListener('resize', this.boundResizeEventListener_);\n    this.wrapper_.removeEventListener('scroll', this.boundScrollEventListener_);\n  }\n\n  /** @override */\n  getBorderTop() {\n    // iOS needs an extra pixel to avoid scroll freezing.\n    return 1;\n  }\n\n  /** @override */\n  requiresFixedLayerTransfer() {\n    if (!isExperimentOn(this.win, 'ios-fixed-no-transfer')) {\n      return true;\n    }\n    // The jumping fixed elements have been fixed in iOS 12.2.\n    const iosVersion = parseFloat(\n      Services.platformFor(this.win).getIosVersionString()\n    );\n    return iosVersion < 12.2;\n  }\n\n  /** @override */\n  overrideGlobalScrollTo() {\n    return true;\n  }\n\n  /** @override */\n  supportsPositionFixed() {\n    return true;\n  }\n\n  /** @override */\n  onScroll(callback) {\n    this.scrollObservable_.add(callback);\n  }\n\n  /** @override */\n  onResize(callback) {\n    this.resizeObservable_.add(callback);\n  }\n\n  /** @override */\n  updatePaddingTop(paddingTop) {\n    this.paddingTop_ = paddingTop;\n    setImportantStyles(this.wrapper_, {\n      'padding-top': px(paddingTop),\n    });\n  }\n\n  /** @override */\n  hideViewerHeader(transient, unusedLastPaddingTop) {\n    if (!transient) {\n      this.updatePaddingTop(0);\n    }\n  }\n\n  /** @override */\n  showViewerHeader(transient, paddingTop) {\n    if (!transient) {\n      this.updatePaddingTop(paddingTop);\n    }\n  }\n\n  /** @override */\n  disableScroll() {\n    // TODO(jridgewell): Recursively disable scroll\n    this.wrapper_.classList.add('i-amphtml-scroll-disabled');\n  }\n\n  /** @override */\n  resetScroll() {\n    // TODO(jridgewell): Recursively disable scroll\n    this.wrapper_.classList.remove('i-amphtml-scroll-disabled');\n  }\n\n  /** @override */\n  updateLightboxMode(unusedLightboxMode) {\n    // The layout is always accurate.\n    return Promise.resolve();\n  }\n\n  /** @override */\n  getSize() {\n    return {\n      width: this.win./*OK*/ innerWidth,\n      height: this.win./*OK*/ innerHeight,\n    };\n  }\n\n  /** @override */\n  getScrollTop() {\n    return this.wrapper_./*OK*/ scrollTop;\n  }\n\n  /** @override */\n  getScrollLeft() {\n    // The wrapper is set to overflow-x: hidden so the document cannot be\n    // scrolled horizontally. The scrollLeft will always be 0.\n    return 0;\n  }\n\n  /** @override */\n  getScrollWidth() {\n    return this.wrapper_./*OK*/ scrollWidth;\n  }\n\n  /** @override */\n  getScrollHeight() {\n    return this.wrapper_./*OK*/ scrollHeight;\n  }\n\n  /** @override */\n  getContentHeight() {\n    // The wrapped body, not this.wrapper_ itself, will have the correct height.\n    const content = this.win.document.body;\n    const {height} = content./*OK*/ getBoundingClientRect();\n\n    // Unlike other viewport bindings, there's no need to include the\n    // rect top since the wrapped body accounts for the top margin of children.\n    // However, the parent's padding-top (this.paddingTop_) must be added.\n\n    // As of Safari 12.1.1, the getBoundingClientRect().height does not include\n    // the bottom margin of children and there's no other API that does.\n    const childMarginBottom = marginBottomOfLastChild(this.win, content);\n\n    const style = computedStyle(this.win, content);\n    return (\n      parseInt(style.marginTop, 10) +\n      this.paddingTop_ +\n      height +\n      childMarginBottom +\n      parseInt(style.marginBottom, 10)\n    );\n  }\n\n  /** @override */\n  contentHeightChanged() {}\n\n  /** @override */\n  getLayoutRect(el, opt_scrollLeft, opt_scrollTop) {\n    const b = el./*OK*/ getBoundingClientRect();\n    const scrollTop =\n      opt_scrollTop != undefined ? opt_scrollTop : this.getScrollTop();\n    const scrollLeft =\n      opt_scrollLeft != undefined ? opt_scrollLeft : this.getScrollLeft();\n    return layoutRectLtwh(\n      Math.round(b.left + scrollLeft),\n      Math.round(b.top + scrollTop),\n      Math.round(b.width),\n      Math.round(b.height)\n    );\n  }\n\n  /** @override */\n  getRootClientRectAsync() {\n    return Promise.resolve(null);\n  }\n\n  /** @override */\n  setScrollTop(scrollTop) {\n    // If scroll top is 0, it's set to 1 to avoid scroll-freeze issue. See\n    // `onScrolled_` for more details.\n    this.wrapper_./*OK*/ scrollTop = scrollTop || 1;\n  }\n\n  /**\n   * @param {!Event=} opt_event\n   * @private\n   */\n  onScrolled_(opt_event) {\n    // Scroll document into a safe position to avoid scroll freeze on iOS.\n    // This means avoiding scrollTop to be minimum (0) or maximum value.\n    // This is very sad but very necessary. See #330 for more details.\n    // Unfortunately, the same is very expensive to do on the bottom, due to\n    // costly scrollHeight.\n    if (this.wrapper_./*OK*/ scrollTop == 0) {\n      this.wrapper_./*OK*/ scrollTop = 1;\n      if (opt_event) {\n        opt_event.preventDefault();\n      }\n    }\n    if (opt_event) {\n      this.scrollObservable_.fire();\n    }\n  }\n\n  /** @override */\n  getScrollingElement() {\n    return this.wrapper_;\n  }\n\n  /** @override */\n  getScrollingElementScrollsLikeViewport() {\n    return false;\n  }\n}\n", "import {Observable} from '#core/data-structures/observable';\nimport {layoutRectLtwh} from '#core/dom/layout/rect';\nimport {computedStyle, px, setImportantStyles} from '#core/dom/style';\n\nimport {Services} from '#service';\n\nimport {dev} from '#utils/log';\n\nimport {\n  ViewportBindingDef,\n  marginBottomOfLastChild,\n} from './viewport-binding-def';\n\nconst TAG_ = 'Viewport';\n\n/**\n * Implementation of ViewportBindingDef based on the native window. It assumes\n * that the native window is sized properly and events represent the actual\n * scroll/resize events. This mode is applicable to a standalone document\n * display or when an iframe has a fixed size.\n *\n * Visible for testing.\n *\n * @implements {ViewportBindingDef}\n */\nexport class ViewportBindingNatural_ {\n  /**\n   * @param {!../ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @const {!../ampdoc-impl.AmpDoc} */\n    this.ampdoc = ampdoc;\n\n    /** @const {!Window} */\n    this.win = ampdoc.win;\n\n    /** @const {!../../service/platform-impl.Platform} */\n    this.platform_ = Services.platformFor(this.win);\n\n    /** @private @const {!Observable} */\n    this.scrollObservable_ = new Observable();\n\n    /** @private @const {!Observable} */\n    this.resizeObservable_ = new Observable();\n\n    /** @const {function()} */\n    this.boundScrollEventListener_ = this.handleScrollEvent_.bind(this);\n\n    /** @const {function()} */\n    this.boundResizeEventListener_ = () => this.resizeObservable_.fire();\n\n    dev().fine(TAG_, 'initialized natural viewport');\n  }\n\n  /** @private */\n  handleScrollEvent_() {\n    this.scrollObservable_.fire();\n  }\n\n  /** @override */\n  connect() {\n    this.win.addEventListener('scroll', this.boundScrollEventListener_);\n    this.win.addEventListener('resize', this.boundResizeEventListener_);\n  }\n\n  /** @override */\n  disconnect() {\n    this.win.removeEventListener('scroll', this.boundScrollEventListener_);\n    this.win.removeEventListener('resize', this.boundResizeEventListener_);\n  }\n\n  /** @override */\n  ensureReadyForElements() {\n    // Nothing.\n  }\n\n  /** @override */\n  getBorderTop() {\n    return 0;\n  }\n\n  /** @override */\n  requiresFixedLayerTransfer() {\n    return false;\n  }\n\n  /** @override */\n  overrideGlobalScrollTo() {\n    return false;\n  }\n\n  /** @override */\n  supportsPositionFixed() {\n    return true;\n  }\n\n  /** @override */\n  onScroll(callback) {\n    this.scrollObservable_.add(callback);\n  }\n\n  /** @override */\n  onResize(callback) {\n    this.resizeObservable_.add(callback);\n  }\n\n  /** @override */\n  updatePaddingTop(paddingTop) {\n    setImportantStyles(this.win.document.documentElement, {\n      'padding-top': px(paddingTop),\n    });\n  }\n\n  /** @override */\n  hideViewerHeader(transient, unusedLastPaddingTop) {\n    if (!transient) {\n      this.updatePaddingTop(0);\n    }\n  }\n\n  /** @override */\n  showViewerHeader(transient, paddingTop) {\n    if (!transient) {\n      this.updatePaddingTop(paddingTop);\n    }\n  }\n\n  /** @override */\n  disableScroll() {\n    // TODO(jridgewell): Recursively disable scroll\n    this.win.document.documentElement.classList.add(\n      'i-amphtml-scroll-disabled'\n    );\n  }\n\n  /** @override */\n  resetScroll() {\n    // TODO(jridgewell): Recursively disable scroll\n    this.win.document.documentElement.classList.remove(\n      'i-amphtml-scroll-disabled'\n    );\n  }\n\n  /** @override */\n  updateLightboxMode(unusedLightboxMode) {\n    // The layout is always accurate.\n    return Promise.resolve();\n  }\n\n  /** @override */\n  getSize() {\n    // Prefer window innerWidth/innerHeight but fall back to\n    // documentElement clientWidth/clientHeight.\n    // documentElement./*OK*/clientHeight is buggy on iOS Safari\n    // and thus cannot be used.\n    const winWidth = this.win./*OK*/ innerWidth;\n    const winHeight = this.win./*OK*/ innerHeight;\n    if (winWidth && winHeight) {\n      return {width: winWidth, height: winHeight};\n    }\n    const el = this.win.document.documentElement;\n    return {width: el./*OK*/ clientWidth, height: el./*OK*/ clientHeight};\n  }\n\n  /** @override */\n  getScrollTop() {\n    const pageScrollTop =\n      this.getScrollingElement()./*OK*/ scrollTop ||\n      this.win./*OK*/ pageYOffset;\n    const {host} = this.ampdoc.getRootNode();\n    return host\n      ? pageScrollTop - /** @type {!HTMLElement} */ (host)./*OK*/ offsetTop\n      : pageScrollTop;\n  }\n\n  /** @override */\n  getScrollLeft() {\n    // The html is set to overflow-x: hidden so the document cannot be\n    // scrolled horizontally. The scrollLeft will always be 0.\n    return 0;\n  }\n\n  /** @override */\n  getScrollWidth() {\n    return this.getScrollingElement()./*OK*/ scrollWidth;\n  }\n\n  /** @override */\n  getScrollHeight() {\n    return this.getScrollingElement()./*OK*/ scrollHeight;\n  }\n\n  /** @override */\n  getContentHeight() {\n    // Don't use scrollHeight, since it returns `MAX(viewport_height,\n    // document_height)` (we only want the latter), and it doesn't account\n    // for margins. Also, don't use documentElement's rect height because\n    // there's no workable analog for either ios-embed-* modes.\n    const content = this.getScrollingElement();\n    const rect = content./*OK*/ getBoundingClientRect();\n\n    // The Y-position of `content` can be offset by the vertical margin\n    // of its first child, and this is _not_ accounted for in `rect.height`.\n    // This causes smaller than expected content height, so add it manually.\n    // Note this \"top\" value already includes padding-top of ancestor elements\n    // and getBorderTop().\n    const top = rect.top + this.getScrollTop();\n\n    // As of Safari 12.1.1, the getBoundingClientRect().height does not include\n    // the bottom margin of children and there's no other API that does.\n    const childMarginBottom = Services.platformFor(this.win).isSafari()\n      ? marginBottomOfLastChild(this.win, content)\n      : 0;\n\n    const style = computedStyle(this.win, content);\n    return (\n      top +\n      parseInt(style.marginTop, 10) +\n      rect.height +\n      childMarginBottom +\n      parseInt(style.marginBottom, 10)\n    );\n  }\n\n  /** @override */\n  contentHeightChanged() {\n    // Nothing to do here.\n  }\n\n  /** @override */\n  getLayoutRect(el, opt_scrollLeft, opt_scrollTop) {\n    const b = el./*OK*/ getBoundingClientRect();\n    const scrollTop =\n      opt_scrollTop != undefined ? opt_scrollTop : this.getScrollTop();\n    const scrollLeft =\n      opt_scrollLeft != undefined ? opt_scrollLeft : this.getScrollLeft();\n    return layoutRectLtwh(\n      Math.round(b.left + scrollLeft),\n      Math.round(b.top + scrollTop),\n      Math.round(b.width),\n      Math.round(b.height)\n    );\n  }\n\n  /** @override */\n  getRootClientRectAsync() {\n    return Promise.resolve(null);\n  }\n\n  /** @override */\n  setScrollTop(scrollTop) {\n    this.getScrollingElement()./*OK*/ scrollTop = scrollTop;\n  }\n\n  /** @override */\n  getScrollingElement() {\n    const doc = this.win.document;\n    if (doc./*OK*/ scrollingElement) {\n      return doc./*OK*/ scrollingElement;\n    }\n    if (\n      doc.body &&\n      // Due to https://bugs.webkit.org/show_bug.cgi?id=106133, WebKit\n      // browsers have to use `body` and NOT `documentElement` for\n      // scrolling purposes. This has mostly being resolved via\n      // `scrollingElement` property, but this branch is still necessary\n      // for backward compatibility purposes.\n      this.platform_.isWebKit()\n    ) {\n      return doc.body;\n    }\n    return doc.documentElement;\n  }\n\n  /** @override */\n  getScrollingElementScrollsLikeViewport() {\n    return true;\n  }\n}\n", "import {VisibilityState} from '#core/constants/visibility-state';\nimport {Observable} from '#core/data-structures/observable';\nimport {tryResolve} from '#core/data-structures/promise';\nimport {getVerticalScrollbarWidth, isIframed} from '#core/dom';\nimport {\n  layoutRectFromDomRect,\n  layoutRectLtwh,\n  moveLayoutRect,\n} from '#core/dom/layout/rect';\nimport {closestAncestorElementBySelector} from '#core/dom/query';\nimport {computedStyle, setStyle} from '#core/dom/style';\nimport {numeric} from '#core/dom/transition';\nimport {clamp} from '#core/math';\nimport {dict} from '#core/types/object';\n\nimport {isExperimentOn} from '#experiments';\n\nimport {Services} from '#service';\n\nimport {Animation} from '#utils/animation';\nimport {dev, devAssert} from '#utils/log';\n\nimport {ViewportBindingDef} from './viewport-binding-def';\nimport {ViewportBindingIosEmbedWrapper_} from './viewport-binding-ios-embed-wrapper';\nimport {ViewportBindingNatural_} from './viewport-binding-natural';\nimport {ViewportInterface} from './viewport-interface';\n\nimport {getFriendlyIframeEmbedOptional} from '../../iframe-helper';\nimport {getMode} from '../../mode';\nimport {\n  getParentWindowFrameElement,\n  registerServiceBuilderForDoc,\n} from '../../service-helpers';\n\nconst TAG_ = 'Viewport';\nconst SCROLL_POS_TO_BLOCK = {\n  'top': 'start',\n  'center': 'center',\n  'bottom': 'end',\n};\nconst SMOOTH_SCROLL_DELAY_ = 300;\n\n/**\n * @param {!Window} win\n * @param {!Element} element\n * @param {string=} property\n * @return {number}\n */\nfunction getComputedStylePropertyPixels(win, element, property) {\n  const value = parseInt(computedStyle(win, element)[property], 10);\n  return isNaN(value) ? 0 : value;\n}\n\n/**\n * @param {!Window} win\n * @param {!Element} element\n * @param {string=} property\n * @return {number}\n */\nfunction getScrollPadding(win, element, property) {\n  // Due to https://bugs.webkit.org/show_bug.cgi?id=106133, WebKit browsers use\n  // use `body` and NOT `documentElement` for scrolling purposes.\n  // (We get this node from `ViewportBindingNatural`.)\n  // However, `scroll-padding-*` properties are effective only on the `html`\n  // selector across browsers, thus we use the `documentElement`.\n  const effectiveElement =\n    element === win.document.body ? win.document.documentElement : element;\n  return getComputedStylePropertyPixels(win, effectiveElement, property);\n}\n\n/**\n * @param {!Window} win\n * @param {!Element} element\n * @return {number}\n */\nfunction getScrollPaddingTop(win, element) {\n  return getScrollPadding(win, element, 'scrollPaddingTop');\n}\n\n/**\n * @param {!Window} win\n * @param {!Element} element\n * @return {number}\n */\nfunction getScrollPaddingBottom(win, element) {\n  return getScrollPadding(win, element, 'scrollPaddingBottom');\n}\n\n/**\n * This object represents the viewport. It tracks scroll position, resize\n * and other events and notifies interesting parties when viewport has changed\n * and how.\n *\n * @implements {ViewportInterface}\n */\nexport class ViewportImpl {\n  /**\n   * @param {!../ampdoc-impl.AmpDoc} ampdoc\n   * @param {!ViewportBindingDef} binding\n   * @param {!../viewer-interface.ViewerInterface} viewer\n   */\n  constructor(ampdoc, binding, viewer) {\n    const {win} = ampdoc;\n\n    /** @const {!../ampdoc-impl.AmpDoc} */\n    this.ampdoc = ampdoc;\n\n    /**\n     * Some viewport operations require the global document.\n     * @private @const {!Document}\n     */\n    this.globalDoc_ = this.ampdoc.win.document;\n\n    /** @const {!ViewportBindingDef} */\n    this.binding_ = binding;\n\n    /** @const {!../viewer-interface.ViewerInterface} */\n    this.viewer_ = viewer;\n\n    /**\n     * Used to cache the rect of the viewport.\n     * @private {?../../layout-rect.LayoutRectDef}\n     */\n    this.rect_ = null;\n\n    /**\n     * Used to cache the size of the viewport. Also used as last known size,\n     * so users should call getSize early on to get a value. The timing should\n     * be chosen to avoid extra style recalcs.\n     * @private {{width: number, height: number}|null}\n     */\n    this.size_ = null;\n\n    /** @private {?number} */\n    this./*OK*/ scrollTop_ = null;\n\n    /** @private {boolean} */\n    this.scrollAnimationFrameThrottled_ = false;\n\n    /** @private {?number} */\n    this./*OK*/ scrollLeft_ = null;\n\n    /** @private {number} */\n    this.paddingTop_ = Number(viewer.getParam('paddingTop') || 0);\n\n    /** @private {number} */\n    this.lastPaddingTop_ = 0;\n\n    /** @private {!../timer-impl.Timer} */\n    this.timer_ = Services.timerFor(win);\n\n    /** @private {!../vsync-impl.Vsync} */\n    this.vsync_ = Services.vsyncFor(win);\n\n    /** @private {boolean} */\n    this.scrollTracking_ = false;\n\n    /** @private {Element} */\n    this.scrollingElement_ = null;\n\n    /** @private {number} */\n    this.scrollCount_ = 0;\n\n    /** @private @const {!Observable<!./viewport-interface.ViewportChangedEventDef>} */\n    this.changeObservable_ = new Observable();\n\n    /** @private @const {!Observable} */\n    this.scrollObservable_ = new Observable();\n\n    /** @private @const {!Observable<!./viewport-interface.ViewportResizedEventDef>} */\n    this.resizeObservable_ = new Observable();\n\n    /** @private {?HTMLMetaElement|undefined} */\n    this.viewportMeta_ = undefined;\n\n    /** @private {string|undefined} */\n    this.originalViewportMetaString_ = undefined;\n\n    /** @private {?../fixed-layer.FixedLayer} */\n    this.fixedLayer_ = null;\n\n    this.viewer_.onMessage('viewport', this.updateOnViewportEvent_.bind(this));\n    this.viewer_.onMessage('scroll', this.viewerSetScrollTop_.bind(this));\n    this.viewer_.onMessage(\n      'disableScroll',\n      this.disableScrollEventHandler_.bind(this)\n    );\n    if (this.viewer_.isEmbedded()) {\n      this.binding_.updatePaddingTop(this.paddingTop_);\n    }\n\n    this.binding_.onScroll(this.scroll_.bind(this));\n    this.binding_.onResize(this.resize_.bind(this));\n\n    this.onScroll(this.sendScrollMessage_.bind(this));\n\n    /** @private {boolean} */\n    this.visible_ = false;\n    this.ampdoc.onVisibilityChanged(this.updateVisibility_.bind(this));\n    this.updateVisibility_();\n\n    // Top-level mode classes.\n    const globalDocElement = this.globalDoc_.documentElement;\n    if (ampdoc.isSingleDoc()) {\n      globalDocElement.classList.add('i-amphtml-singledoc');\n    }\n    if (viewer.isEmbedded()) {\n      globalDocElement.classList.add('i-amphtml-embedded');\n    } else {\n      globalDocElement.classList.add('i-amphtml-standalone');\n    }\n    if (isIframed(win)) {\n      globalDocElement.classList.add('i-amphtml-iframed');\n    }\n    if (viewer.getParam('webview') === '1') {\n      globalDocElement.classList.add('i-amphtml-webview');\n    }\n\n    // To avoid browser restore scroll position when traverse history\n    if (isIframed(win) && 'scrollRestoration' in win.history) {\n      win.history.scrollRestoration = 'manual';\n    }\n\n    // Override global scrollTo if requested.\n    if (this.binding_.overrideGlobalScrollTo()) {\n      try {\n        Object.defineProperty(win, 'scrollTo', {\n          value: (x, y) => this.setScrollTop(y),\n        });\n        ['pageYOffset', 'scrollY'].forEach((prop) => {\n          Object.defineProperty(win, prop, {\n            get: () => this.getScrollTop(),\n          });\n        });\n      } catch (e) {\n        // Ignore errors.\n      }\n    }\n\n    // BF-cache navigation sometimes breaks clicks in an iframe on iOS. See\n    // https://github.com/ampproject/amphtml/issues/30838 for more details.\n    // The solution is to make a \"fake\" scrolling API call.\n    const isIframedIos = Services.platformFor(win).isIos() && isIframed(win);\n    // We dont want to scroll if we're in a shadow doc, so check that we're\n    // in a single doc. Fix for\n    // https://github.com/ampproject/amphtml/issues/32165.\n    if (isIframedIos && this.ampdoc.isSingleDoc()) {\n      this.ampdoc.whenReady().then(() => {\n        win./*OK*/ scrollTo(-0.1, 0);\n      });\n    }\n  }\n\n  /** @override */\n  dispose() {\n    this.binding_.disconnect();\n  }\n\n  /** @override */\n  ensureReadyForElements() {\n    this.binding_.ensureReadyForElements();\n  }\n\n  /** @private */\n  updateVisibility_() {\n    const visible = this.ampdoc.isVisible();\n    if (visible != this.visible_) {\n      this.visible_ = visible;\n      if (visible) {\n        this.binding_.connect();\n        if (this.size_) {\n          // If the size has already been intialized, check it again in case\n          // the size has changed between `disconnect` and `connect`.\n          this.resize_();\n        }\n        if (this.scrollTop_) {\n          // Remeasure scrollTop when resource becomes visible to fix #11983\n          this./*OK*/ scrollTop_ = null;\n          this.getScrollTop();\n        }\n      } else {\n        this.binding_.disconnect();\n      }\n    }\n  }\n\n  /** @override */\n  getPaddingTop() {\n    return this.paddingTop_;\n  }\n\n  /** @override */\n  getScrollTop() {\n    if (this./*OK*/ scrollTop_ == null) {\n      this./*OK*/ scrollTop_ = this.binding_.getScrollTop();\n    }\n    return this./*OK*/ scrollTop_;\n  }\n\n  /** @override */\n  getScrollLeft() {\n    if (this./*OK*/ scrollLeft_ == null) {\n      this./*OK*/ scrollLeft_ = this.binding_.getScrollLeft();\n    }\n    return this./*OK*/ scrollLeft_;\n  }\n\n  /** @override */\n  setScrollTop(scrollPos) {\n    this./*OK*/ scrollTop_ = null;\n    this.binding_.setScrollTop(scrollPos);\n  }\n\n  /** @override */\n  updatePaddingBottom(paddingBottom) {\n    this.ampdoc.waitForBodyOpen().then((body) => {\n      setStyle(body, 'borderBottom', `${paddingBottom}px solid transparent`);\n    });\n  }\n\n  /** @override */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    this.size_ = this.binding_.getSize();\n    if (this.size_.width == 0 || this.size_.height == 0) {\n      // Only report when the visibility is \"visible\" or \"prerender\".\n      const visibilityState = this.ampdoc.getVisibilityState();\n      if (\n        visibilityState == VisibilityState.PRERENDER ||\n        visibilityState == VisibilityState.VISIBLE\n      ) {\n        if (Math.random() < 0.01) {\n          dev().error(TAG_, 'viewport has zero dimensions');\n        }\n      }\n    }\n    return this.size_;\n  }\n\n  /** @override */\n  getHeight() {\n    return this.getSize().height;\n  }\n\n  /** @override */\n  getWidth() {\n    return this.getSize().width;\n  }\n\n  /** @override */\n  getScrollWidth() {\n    return this.binding_.getScrollWidth();\n  }\n\n  /** @override */\n  getScrollHeight() {\n    return this.binding_.getScrollHeight();\n  }\n\n  /** @override */\n  getContentHeight() {\n    return this.binding_.getContentHeight();\n  }\n\n  /** @override */\n  contentHeightChanged() {\n    this.binding_.contentHeightChanged();\n  }\n\n  /** @override */\n  getRect() {\n    if (this.rect_ == null) {\n      const scrollTop = this.getScrollTop();\n      const scrollLeft = this.getScrollLeft();\n      const size = this.getSize();\n      this.rect_ = layoutRectLtwh(\n        scrollLeft,\n        scrollTop,\n        size.width,\n        size.height\n      );\n    }\n    return this.rect_;\n  }\n\n  /** @override */\n  getLayoutRect(el) {\n    const scrollLeft = this.getScrollLeft();\n    const scrollTop = this.getScrollTop();\n\n    // Go up the window hierarchy through friendly iframes.\n    const frameElement = getParentWindowFrameElement(el, this.ampdoc.win);\n    if (frameElement) {\n      const b = this.binding_.getLayoutRect(el, 0, 0);\n      const c = this.binding_.getLayoutRect(\n        frameElement,\n        scrollLeft,\n        scrollTop\n      );\n      return layoutRectLtwh(\n        Math.round(b.left + c.left),\n        Math.round(b.top + c.top),\n        Math.round(b.width),\n        Math.round(b.height)\n      );\n    }\n\n    return this.binding_.getLayoutRect(el, scrollLeft, scrollTop);\n  }\n\n  /** @override */\n  getClientRectAsync(el) {\n    const local = this.vsync_.measurePromise(() => {\n      return el./*OK*/ getBoundingClientRect();\n    });\n\n    let root = this.binding_.getRootClientRectAsync();\n    const frameElement = getParentWindowFrameElement(el, this.ampdoc.win);\n    if (frameElement) {\n      root = this.vsync_.measurePromise(() => {\n        return frameElement./*OK*/ getBoundingClientRect();\n      });\n    }\n\n    return Promise.all([local, root]).then((values) => {\n      const l = values[0];\n      const r = values[1];\n      if (!r) {\n        return layoutRectFromDomRect(l);\n      }\n      return moveLayoutRect(l, r.left, r.top);\n    });\n  }\n\n  /** @override */\n  supportsPositionFixed() {\n    return this.binding_.supportsPositionFixed();\n  }\n\n  /** @override */\n  isDeclaredFixed(element) {\n    if (!this.fixedLayer_) {\n      return false;\n    }\n    return this.fixedLayer_.isDeclaredFixed(element);\n  }\n\n  /** @override */\n  scrollIntoView(element) {\n    if (IS_SXG) {\n      element./* OK */ scrollIntoView();\n      return Promise.resolve();\n    } else {\n      return this.getScrollingContainerFor_(element).then((parent) =>\n        this.scrollIntoViewInternal_(element, parent)\n      );\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {!Element} parent\n   */\n  scrollIntoViewInternal_(element, parent) {\n    const elementTop = this.binding_.getLayoutRect(element).top;\n    const scrollPaddingTop = getScrollPaddingTop(this.ampdoc.win, parent);\n    const newScrollTopPromise = tryResolve(() =>\n      Math.max(0, elementTop - this.paddingTop_ - scrollPaddingTop)\n    );\n\n    newScrollTopPromise.then((newScrollTop) =>\n      this.setElementScrollTop_(parent, newScrollTop)\n    );\n  }\n\n  /** @override */\n  animateScrollIntoView(element, pos = 'top', opt_duration, opt_curve) {\n    if (IS_SXG) {\n      return new Promise((resolve, opt_) => {\n        element./* OK */ scrollIntoView({\n          block: SCROLL_POS_TO_BLOCK[pos],\n          behavior: 'smooth',\n        });\n        setTimeout(resolve, SMOOTH_SCROLL_DELAY_);\n      });\n    } else {\n      devAssert(\n        !opt_curve || opt_duration !== undefined,\n        \"Curve without duration doesn't make sense.\"\n      );\n\n      return this.getScrollingContainerFor_(element).then((parent) =>\n        this.animateScrollWithinParent(\n          element,\n          parent,\n          dev().assertString(pos),\n          opt_duration,\n          opt_curve\n        )\n      );\n    }\n  }\n\n  /** @override */\n  animateScrollWithinParent(element, parent, pos, opt_duration, opt_curve) {\n    devAssert(\n      !opt_curve || opt_duration !== undefined,\n      \"Curve without duration doesn't make sense.\"\n    );\n\n    const elementRect = this.binding_.getLayoutRect(element);\n\n    const {height: parentHeight} = this.isScrollingElement_(parent)\n      ? this.getSize()\n      : this.getLayoutRect(parent);\n\n    const {win} = this.ampdoc;\n    const scrollPaddingTop = getScrollPaddingTop(win, parent);\n    const scrollPaddingBottom = getScrollPaddingBottom(win, parent);\n\n    let offset = -scrollPaddingTop; // default pos === 'top'\n\n    if (pos === 'bottom') {\n      offset = -parentHeight + scrollPaddingBottom + elementRect.height;\n    } else if (pos === 'center') {\n      const effectiveParentHeight =\n        parentHeight - scrollPaddingTop - scrollPaddingBottom;\n      offset = -effectiveParentHeight / 2 + elementRect.height / 2;\n    }\n\n    return this.getElementScrollTop_(parent).then((curScrollTop) => {\n      const calculatedScrollTop = elementRect.top - this.paddingTop_ + offset;\n      const newScrollTop = Math.max(0, calculatedScrollTop);\n      if (newScrollTop == curScrollTop) {\n        return;\n      }\n      return this.interpolateScrollIntoView_(\n        parent,\n        curScrollTop,\n        newScrollTop,\n        opt_duration,\n        opt_curve\n      );\n    });\n  }\n\n  /**\n   * @param {!Element} parent\n   * @param {number} curScrollTop\n   * @param {number} newScrollTop\n   * @param {number=} opt_duration\n   * @param {string=} curve\n   * @private\n   */\n  interpolateScrollIntoView_(\n    parent,\n    curScrollTop,\n    newScrollTop,\n    opt_duration,\n    curve = 'ease-in'\n  ) {\n    const duration =\n      opt_duration !== undefined\n        ? dev().assertNumber(opt_duration)\n        : getDefaultScrollAnimationDuration(curScrollTop, newScrollTop);\n\n    /** @const {!TransitionDef<number>} */\n    const interpolate = numeric(curScrollTop, newScrollTop);\n    return Animation.animate(\n      parent,\n      (position) => {\n        this.setElementScrollTop_(parent, interpolate(position));\n      },\n      duration,\n      curve\n    ).thenAlways(() => {\n      this.setElementScrollTop_(parent, newScrollTop);\n    });\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {!Promise<!Element>}\n   */\n  getScrollingContainerFor_(element) {\n    return this.vsync_.measurePromise(\n      () =>\n        closestAncestorElementBySelector(element, '.i-amphtml-scrollable') ||\n        this.binding_.getScrollingElement()\n    );\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {number} scrollTop\n   */\n  setElementScrollTop_(element, scrollTop) {\n    if (this.isScrollingElement_(element)) {\n      this.binding_.setScrollTop(scrollTop);\n      return;\n    }\n    this.vsync_.mutate(() => {\n      element./*OK*/ scrollTop = scrollTop;\n    });\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {!Promise<number>}\n   */\n  getElementScrollTop_(element) {\n    if (this.isScrollingElement_(element)) {\n      return tryResolve(() => this.getScrollTop());\n    }\n    return this.vsync_.measurePromise(() => element./*OK*/ scrollTop);\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {boolean}\n   */\n  isScrollingElement_(element) {\n    return element == this.binding_.getScrollingElement();\n  }\n\n  /** @override */\n  getScrollingElement() {\n    if (this.scrollingElement_) {\n      return this.scrollingElement_;\n    }\n    return (this.scrollingElement_ = this.binding_.getScrollingElement());\n  }\n\n  /** @override */\n  onChanged(handler) {\n    return this.changeObservable_.add(handler);\n  }\n\n  /** @override */\n  onScroll(handler) {\n    return this.scrollObservable_.add(handler);\n  }\n\n  /** @override */\n  onResize(handler) {\n    return this.resizeObservable_.add(handler);\n  }\n\n  /** @override */\n  enterLightboxMode(opt_requestingElement, opt_onComplete) {\n    this.viewer_.sendMessage(\n      'requestFullOverlay',\n      dict(),\n      /* cancelUnsent */ true\n    );\n\n    this.enterOverlayMode();\n    if (this.fixedLayer_) {\n      this.fixedLayer_.enterLightbox(opt_requestingElement, opt_onComplete);\n    }\n\n    if (opt_requestingElement) {\n      this.maybeEnterFieLightboxMode(\n        dev().assertElement(opt_requestingElement)\n      );\n    }\n\n    return this.binding_.updateLightboxMode(true);\n  }\n\n  /** @override */\n  leaveLightboxMode(opt_requestingElement) {\n    this.viewer_.sendMessage(\n      'cancelFullOverlay',\n      dict(),\n      /* cancelUnsent */ true\n    );\n\n    if (this.fixedLayer_) {\n      this.fixedLayer_.leaveLightbox();\n    }\n    this.leaveOverlayMode();\n\n    if (opt_requestingElement) {\n      this.maybeLeaveFieLightboxMode(\n        dev().assertElement(opt_requestingElement)\n      );\n    }\n\n    return this.binding_.updateLightboxMode(false);\n  }\n\n  /**\n   * @return {boolean}\n   * @visibleForTesting\n   */\n  isLightboxExperimentOn() {\n    return isExperimentOn(this.ampdoc.win, 'amp-lightbox-a4a-proto');\n  }\n\n  /**\n   * Enters frame lightbox mode if under a Friendly Iframe Embed.\n   * @param {!Element} requestingElement\n   * @visibleForTesting\n   */\n  maybeEnterFieLightboxMode(requestingElement) {\n    const fieOptional = this.getFriendlyIframeEmbed_(requestingElement);\n\n    if (fieOptional) {\n      devAssert(\n        this.isLightboxExperimentOn(),\n        'Lightbox mode for A4A is only available when ' +\n          \"'amp-lightbox-a4a-proto' experiment is on\"\n      );\n\n      fieOptional.enterFullOverlayMode();\n    }\n  }\n\n  /**\n   * Leaves frame lightbox mode if under a Friendly Iframe Embed.\n   * @param {!Element} requestingElement\n   * @visibleForTesting\n   */\n  maybeLeaveFieLightboxMode(requestingElement) {\n    const fieOptional = this.getFriendlyIframeEmbed_(requestingElement);\n\n    if (fieOptional) {\n      devAssert(fieOptional).leaveFullOverlayMode();\n    }\n  }\n\n  /**\n   * Get FriendlyIframeEmbed if available.\n   * @param {!Element} element Element supposedly inside the FIE.\n   * @return {?../../friendly-iframe-embed.FriendlyIframeEmbed}\n   * @private\n   */\n  getFriendlyIframeEmbed_(element) {\n    const iframeOptional = getParentWindowFrameElement(\n      element,\n      this.ampdoc.win\n    );\n\n    return (\n      iframeOptional &&\n      getFriendlyIframeEmbedOptional(\n        /** @type {!HTMLIFrameElement} */\n        (dev().assertElement(iframeOptional))\n      )\n    );\n  }\n\n  /** @override */\n  enterOverlayMode() {\n    this.disableTouchZoom();\n    this.disableScroll();\n  }\n\n  /** @override */\n  leaveOverlayMode() {\n    this.resetScroll();\n    this.restoreOriginalTouchZoom();\n  }\n\n  /** @override */\n  disableScroll() {\n    const {win} = this.ampdoc;\n    const {documentElement} = win.document;\n    let requestedMarginRight;\n\n    // Calculate the scrollbar width so we can set it as a right margin. This\n    // is so that we do not cause content to shift when we disable scroll on\n    // platforms that have a width-taking scrollbar.\n    this.vsync_.measure(() => {\n      const existingMargin = computedStyle(win, documentElement).marginRight;\n      const scrollbarWidth = getVerticalScrollbarWidth(this.ampdoc.win);\n\n      requestedMarginRight = parseInt(existingMargin, 10) + scrollbarWidth;\n    });\n\n    this.vsync_.mutate(() => {\n      setStyle(documentElement, 'margin-right', requestedMarginRight, 'px');\n      this.binding_.disableScroll();\n    });\n  }\n\n  /** @override */\n  resetScroll() {\n    const {win} = this.ampdoc;\n    const {documentElement} = win.document;\n\n    this.vsync_.mutate(() => {\n      setStyle(documentElement, 'margin-right', '');\n      this.binding_.resetScroll();\n    });\n  }\n\n  /** @override */\n  resetTouchZoom() {\n    const windowHeight = this.ampdoc.win./*OK*/ innerHeight;\n    const documentHeight = this.globalDoc_.documentElement./*OK*/ clientHeight;\n    if (windowHeight && documentHeight && windowHeight === documentHeight) {\n      // This code only works when scrollbar overlay content and take no space,\n      // which is fine on mobile. For non-mobile devices this code is\n      // irrelevant.\n      return;\n    }\n    if (this.disableTouchZoom()) {\n      this.timer_.delay(() => {\n        this.restoreOriginalTouchZoom();\n      }, 50);\n    }\n  }\n\n  /** @override */\n  disableTouchZoom() {\n    const viewportMeta = this.getViewportMeta_();\n    if (!viewportMeta) {\n      // This should never happen in a valid AMP document, thus shortcircuit.\n      return false;\n    }\n    // Setting maximum-scale=1 and user-scalable=no zooms page back to normal\n    // and prohibit further default zooming.\n    const newValue = updateViewportMetaString(viewportMeta.content, {\n      'maximum-scale': '1',\n      'user-scalable': 'no',\n    });\n    return this.setViewportMetaString_(newValue);\n  }\n\n  /** @override */\n  restoreOriginalTouchZoom() {\n    if (this.originalViewportMetaString_ !== undefined) {\n      return this.setViewportMetaString_(this.originalViewportMetaString_);\n    }\n    return false;\n  }\n\n  /** @override */\n  updateFixedLayer() {\n    if (!this.fixedLayer_) {\n      return Promise.resolve();\n    }\n    return this.fixedLayer_.update();\n  }\n\n  /** @override */\n  addToFixedLayer(element, opt_forceTransfer) {\n    if (!this.fixedLayer_) {\n      return Promise.resolve();\n    }\n    return this.fixedLayer_.addElement(element, opt_forceTransfer);\n  }\n\n  /** @override */\n  removeFromFixedLayer(element) {\n    if (!this.fixedLayer_) {\n      return;\n    }\n    this.fixedLayer_.removeElement(element);\n  }\n\n  /** @override */\n  createFixedLayer(constructor) {\n    this.fixedLayer_ = new constructor(\n      this.ampdoc,\n      this.vsync_,\n      this.binding_.getBorderTop(),\n      this.paddingTop_,\n      this.binding_.requiresFixedLayerTransfer()\n    );\n    this.ampdoc.whenReady().then(() => this.fixedLayer_.setup());\n  }\n\n  /**\n   * Updates touch zoom meta data. Returns `true` if any actual\n   * changes have been done.\n   * @param {string} viewportMetaString\n   * @return {boolean}\n   */\n  setViewportMetaString_(viewportMetaString) {\n    const viewportMeta = this.getViewportMeta_();\n    if (viewportMeta && viewportMeta.content != viewportMetaString) {\n      dev().fine(TAG_, 'changed viewport meta to:', viewportMetaString);\n      viewportMeta.content = viewportMetaString;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {?HTMLMetaElement}\n   * @private\n   */\n  getViewportMeta_() {\n    if (isIframed(this.ampdoc.win)) {\n      // An embedded document does not control its viewport meta tag.\n      return null;\n    }\n    if (this.viewportMeta_ === undefined) {\n      this.viewportMeta_ = /** @type {?HTMLMetaElement} */ (\n        this.globalDoc_.querySelector('meta[name=viewport]')\n      );\n      if (this.viewportMeta_) {\n        this.originalViewportMetaString_ = this.viewportMeta_.content;\n      }\n    }\n    return this.viewportMeta_;\n  }\n\n  /**\n   * @param {!JsonObject} data\n   * @private\n   */\n  viewerSetScrollTop_(data) {\n    const targetScrollTop = data['scrollTop'];\n    this.setScrollTop(targetScrollTop);\n  }\n\n  /**\n   * @param {!JsonObject} data\n   * @private\n   */\n  updateOnViewportEvent_(data) {\n    const paddingTop = data['paddingTop'];\n    const duration = data['duration'] || 0;\n    const curve = data['curve'];\n    /** @const {boolean} */\n    const transient = data['transient'];\n\n    if (paddingTop == undefined || paddingTop == this.paddingTop_) {\n      return;\n    }\n\n    this.lastPaddingTop_ = this.paddingTop_;\n    this.paddingTop_ = paddingTop;\n\n    if (this.fixedLayer_) {\n      const animPromise = this.fixedLayer_.animateFixedElements(\n        this.paddingTop_,\n        this.lastPaddingTop_,\n        duration,\n        curve,\n        transient\n      );\n      if (paddingTop < this.lastPaddingTop_) {\n        this.binding_.hideViewerHeader(transient, this.lastPaddingTop_);\n      } else {\n        animPromise.then(() => {\n          this.binding_.showViewerHeader(transient, paddingTop);\n        });\n      }\n    }\n  }\n\n  /**\n   * @param {!JsonObject} data\n   * @private\n   */\n  disableScrollEventHandler_(data) {\n    if (!!data) {\n      this.disableScroll();\n    } else {\n      this.resetScroll();\n    }\n  }\n\n  /**\n   * @param {boolean} relayoutAll\n   * @param {number} velocity\n   * @private\n   */\n  changed_(relayoutAll, velocity) {\n    const size = this.getSize();\n    const scrollTop = this.getScrollTop();\n    const scrollLeft = this.getScrollLeft();\n    dev().fine(\n      TAG_,\n      'changed event:',\n      'relayoutAll=',\n      relayoutAll,\n      'top=',\n      scrollTop,\n      'left=',\n      scrollLeft,\n      'bottom=',\n      scrollTop + size.height,\n      'velocity=',\n      velocity\n    );\n    this.changeObservable_.fire({\n      relayoutAll,\n      top: scrollTop,\n      left: scrollLeft,\n      width: size.width,\n      height: size.height,\n      velocity,\n    });\n  }\n\n  /** @private */\n  scroll_() {\n    this.rect_ = null;\n    this.scrollCount_++;\n    this.scrollLeft_ = this.binding_.getScrollLeft();\n    const newScrollTop = this.binding_.getScrollTop();\n    if (newScrollTop < 0) {\n      // iOS and some other browsers use negative values of scrollTop for\n      // overscroll. Overscroll does not affect the viewport and thus should\n      // be ignored here.\n      return;\n    }\n    this.scrollTop_ = newScrollTop;\n    if (!this.scrollTracking_) {\n      this.scrollTracking_ = true;\n      const now = Date.now();\n      // Wait 2 frames and then request an animation frame.\n      this.timer_.delay(() => {\n        this.vsync_.measure(() => {\n          this.throttledScroll_(now, newScrollTop);\n        });\n      }, 36);\n    }\n    this.scrollObservable_.fire();\n  }\n\n  /**\n   * This method is called about every 3 frames (assuming 60hz) and it\n   * is called in a vsync measure task.\n   * @param {number} referenceTime Time when the scroll measurement, that\n   *     triggered this call made, was made.\n   * @param {number} referenceTop Scrolltop at that time.\n   * @private\n   */\n  throttledScroll_(referenceTime, referenceTop) {\n    this.scrollTop_ = this.binding_.getScrollTop();\n    /**  @const {number} */\n    const newScrollTop = this.scrollTop_;\n    const now = Date.now();\n    let velocity = 0;\n    if (now != referenceTime) {\n      velocity = (newScrollTop - referenceTop) / (now - referenceTime);\n    }\n    dev().fine(\n      TAG_,\n      'scroll: scrollTop=' + newScrollTop + '; velocity=' + velocity\n    );\n    if (Math.abs(velocity) < 0.03) {\n      this.changed_(/* relayoutAll */ false, velocity);\n      this.scrollTracking_ = false;\n    } else {\n      this.timer_.delay(\n        () =>\n          this.vsync_.measure(\n            this.throttledScroll_.bind(this, now, newScrollTop)\n          ),\n        20\n      );\n    }\n  }\n\n  /**\n   * Send scroll message via the viewer per animation frame\n   * @private\n   */\n  sendScrollMessage_() {\n    if (!this.scrollAnimationFrameThrottled_) {\n      this.scrollAnimationFrameThrottled_ = true;\n      this.vsync_.measure(() => {\n        this.scrollAnimationFrameThrottled_ = false;\n        this.viewer_.sendMessage(\n          'scroll',\n          dict({'scrollTop': this.getScrollTop()}),\n          /* cancelUnsent */ true\n        );\n      });\n    }\n  }\n\n  /** @private */\n  resize_() {\n    this.rect_ = null;\n    const oldSize = this.size_;\n    this.size_ = null; // Need to recalc.\n    const newSize = this.getSize();\n    this.updateFixedLayer().then(() => {\n      const widthChanged = !oldSize || oldSize.width != newSize.width;\n      this.changed_(/*relayoutAll*/ widthChanged, 0);\n      const sizeChanged = widthChanged || oldSize.height != newSize.height;\n      if (sizeChanged) {\n        this.resizeObservable_.fire({\n          relayoutAll: widthChanged,\n          width: newSize.width,\n          height: newSize.height,\n        });\n      }\n    });\n  }\n}\n\n/**\n * Parses viewport meta value. It usually looks like:\n * ```\n * width=device-width,initial-scale=1,minimum-scale=1\n * ```\n * @param {string} content\n * @return {!Object<string, (string|undefined)>}\n * @private Visible for testing only.\n */\nexport function parseViewportMeta(content) {\n  // Ex: width=device-width,initial-scale=1,minimal-ui\n  const params = Object.create(null);\n  if (!content) {\n    return params;\n  }\n  const pairs = content.split(/,|;/);\n  for (let i = 0; i < pairs.length; i++) {\n    const pair = pairs[i];\n    const split = pair.split('=');\n    const name = split[0].trim();\n    let value = split[1];\n    value = (value || '').trim();\n    if (name) {\n      params[name] = value;\n    }\n  }\n  return params;\n}\n\n/**\n * Stringifies viewport meta value based on the provided map. It usually looks\n * like:\n * ```\n * width=device-width,initial-scale=1,minimum-scale=1\n * ```\n * @param {!Object<string, string>} params\n * @return {string}\n * @private Visible for testing only.\n */\nexport function stringifyViewportMeta(params) {\n  // Ex: width=device-width,initial-scale=1,minimal-ui\n  let content = '';\n  for (const k in params) {\n    if (content.length > 0) {\n      content += ',';\n    }\n    if (params[k]) {\n      content += k + '=' + params[k];\n    } else {\n      content += k;\n    }\n  }\n  return content;\n}\n\n/**\n * This method makes a minimal effort to keep the original viewport string\n * unchanged if in fact none of the values have been updated. Returns the\n * updated string or the `currentValue` if no changes were necessary.\n *\n * @param {string} currentValue\n * @param {!Object<string, string|undefined>} updateParams\n * @return {string}\n * @private Visible for testing only.\n */\nexport function updateViewportMetaString(currentValue, updateParams) {\n  const params = parseViewportMeta(currentValue);\n  let changed = false;\n  for (const k in updateParams) {\n    if (params[k] !== updateParams[k]) {\n      changed = true;\n      if (updateParams[k] !== undefined) {\n        params[k] = /** @type {string} */ (updateParams[k]);\n      } else {\n        delete params[k];\n      }\n    }\n  }\n  if (!changed) {\n    return currentValue;\n  }\n  return stringifyViewportMeta(params);\n}\n\n/**\n * Calculates a default duration for a scrollTop animation.\n * @param {number} scrollTopA commutative with b.\n * @param {number} scrollTopB commutative with a.\n * @param {number=} max in ms. default 500ms.\n * @return {number}\n */\nfunction getDefaultScrollAnimationDuration(scrollTopA, scrollTopB, max = 500) {\n  // 65% of scroll \u0394 to ms, eg 1000px -> 650ms, integer between 0 and max\n  return Math.floor(clamp(0.65 * Math.abs(scrollTopA - scrollTopB), 0, max));\n}\n\n/**\n * @param {!../ampdoc-impl.AmpDoc} ampdoc\n * @return {!ViewportImpl}\n * @private\n */\nfunction createViewport(ampdoc) {\n  const viewer = Services.viewerForDoc(ampdoc);\n  const {win} = ampdoc;\n  let binding;\n  if (\n    ampdoc.isSingleDoc() &&\n    getViewportType(win, viewer) == ViewportType.NATURAL_IOS_EMBED &&\n    !IS_SXG\n  ) {\n    binding = new ViewportBindingIosEmbedWrapper_(win);\n  } else {\n    binding = new ViewportBindingNatural_(ampdoc);\n  }\n  return new ViewportImpl(ampdoc, binding, viewer);\n}\n\n/**\n * The type of the viewport.\n * @enum {string}\n */\nconst ViewportType = {\n  /**\n   * Viewer leaves sizing and scrolling up to the AMP document's window.\n   */\n  NATURAL: 'natural',\n\n  /**\n   * This is AMP-specific type and doesn't come from viewer. This is the type\n   * that AMP sets when Viewer has requested \"natural\" viewport on a iOS\n   * device.\n   * See:\n   * https://github.com/ampproject/amphtml/blob/main/docs/spec/amp-html-layout.md\n   */\n  NATURAL_IOS_EMBED: 'natural-ios-embed',\n};\n\n/**\n * @param {!Window} win\n * @param {!../viewer-interface.ViewerInterface} viewer\n * @return {string}\n */\nfunction getViewportType(win, viewer) {\n  const isIframedIos = Services.platformFor(win).isIos() && isIframed(win);\n\n  // Enable iOS Embedded mode for iframed tests (e.g. integration tests).\n  if (getMode(win).test && isIframedIos) {\n    return ViewportType.NATURAL_IOS_EMBED;\n  }\n\n  // Override to ios-embed for iframe-viewer mode.\n  if (\n    isIframedIos &&\n    viewer.isEmbedded() &&\n    !viewer.hasCapability('iframeScroll')\n  ) {\n    return ViewportType.NATURAL_IOS_EMBED;\n  }\n  return ViewportType.NATURAL;\n}\n\n/**\n * @param {!../ampdoc-impl.AmpDoc} ampdoc\n */\nexport function installViewportServiceForDoc(ampdoc) {\n  registerServiceBuilderForDoc(\n    ampdoc,\n    'viewport',\n    createViewport,\n    /* opt_instantiate */ true\n  );\n}\n", "import {ActionTrust} from '#core/constants/action-constants';\n\nimport {Services} from '#service';\n\nimport {dev, user, userAssert} from '#utils/log';\n\nimport {\n  SOURCE_ORIGIN_PARAM,\n  assertHttpsUrl,\n  checkCorsUrl,\n  isProxyOrigin,\n} from './url';\n\n/**\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @return {!Promise}\n */\nexport function installGlobalSubmitListenerForDoc(ampdoc) {\n  // Register global submit event listener only if the amp-form\n  // extension is used. Allowing the usage of native forms, otherwise.\n  return ampdoc.whenExtensionsKnown().then(() => {\n    if (ampdoc.declaresExtension('amp-form')) {\n      ampdoc\n        .getRootNode()\n        .addEventListener('submit', onDocumentFormSubmit_, true);\n    }\n  });\n}\n\n/**\n * Intercept any submit on the current document and prevent invalid submits from\n * going through.\n *\n * @param {!Event} e\n */\nexport function onDocumentFormSubmit_(e) {\n  if (e.defaultPrevented) {\n    return;\n  }\n\n  const form = dev().assertElement(e.target);\n  if (!form || form.tagName != 'FORM') {\n    return;\n  }\n\n  // amp-form extension will add novalidate to all forms to manually trigger\n  // validation. In that case `novalidate` doesn't have the same meaning.\n  const isAmpFormMarked = form.classList.contains('i-amphtml-form');\n  let shouldValidate;\n  if (isAmpFormMarked) {\n    shouldValidate = !form.hasAttribute('amp-novalidate');\n  } else {\n    shouldValidate = !form.hasAttribute('novalidate');\n  }\n\n  // Safari does not trigger validation check on submission, hence we\n  // trigger it manually. In other browsers this would never execute since\n  // the submit event wouldn't be fired if the form is invalid.\n  if (shouldValidate && form.checkValidity && !form.checkValidity()) {\n    e.preventDefault();\n  }\n\n  const inputs = form.elements;\n  for (let i = 0; i < inputs.length; i++) {\n    userAssert(\n      !inputs[i].name || inputs[i].name != SOURCE_ORIGIN_PARAM,\n      'Illegal input name, %s found: %s',\n      SOURCE_ORIGIN_PARAM,\n      inputs[i]\n    );\n  }\n\n  const action = form.getAttribute('action');\n  const actionXhr = form.getAttribute('action-xhr');\n  const method = (form.getAttribute('method') || 'GET').toUpperCase();\n\n  if (actionXhr) {\n    assertHttpsUrl(actionXhr, form, 'action-xhr');\n    userAssert(\n      !isProxyOrigin(actionXhr),\n      'form action-xhr should not be on AMP CDN: %s',\n      form\n    );\n    checkCorsUrl(actionXhr);\n  }\n  if (action) {\n    assertHttpsUrl(action, form, 'action');\n    userAssert(\n      !isProxyOrigin(action),\n      'form action should not be on AMP CDN: %s',\n      form\n    );\n    checkCorsUrl(action);\n  }\n\n  if (method == 'GET') {\n    userAssert(\n      actionXhr || action,\n      'form action-xhr or action attribute is required for method=GET: %s',\n      form\n    );\n  } else if (method == 'POST') {\n    if (action) {\n      const TAG = 'form';\n      user().error(\n        TAG,\n        'action attribute is invalid for method=POST: %s',\n        form\n      );\n    }\n\n    if (!actionXhr) {\n      e.preventDefault();\n      userAssert(\n        false,\n        'Only XHR based (via action-xhr attribute) submissions are support ' +\n          'for POST requests. %s',\n        form\n      );\n    }\n  }\n\n  const target = form.getAttribute('target');\n  if (target) {\n    userAssert(\n      target == '_blank' || target == '_top',\n      'form target=%s is invalid can only be _blank or _top: %s',\n      target,\n      form\n    );\n  } else {\n    form.setAttribute('target', '_top');\n  }\n\n  // For xhr submissions relay the submission event through action service to\n  // allow us to wait for amp-form (and possibly its dependencies) to execute\n  // the actual submission. For non-XHR GET we let the submission go through\n  // to allow _blank target to work.\n  if (actionXhr) {\n    e.preventDefault();\n\n    // It's important to stop propagation of the submission to avoid double\n    // handling of the event in cases were we are delegating to action service\n    // to deliver the submission event.\n    e.stopImmediatePropagation();\n\n    const actions = Services.actionServiceForDoc(form);\n    actions.execute(\n      form,\n      'submit',\n      /*args*/ null,\n      /*source*/ form,\n      /*caller*/ form,\n      e,\n      ActionTrust.HIGH\n    );\n  }\n}\n", "/**\n * @fileoverview Provides a services to preconnect to a url to warm up the\n * connection before the real request can be made.\n */\n\nimport {whenDocumentComplete} from '#core/document/ready';\nimport {htmlFor} from '#core/dom/static-template';\n\nimport {Services} from '#service';\n\nimport {dev} from '#utils/log';\n\nimport {registerServiceBuilder} from './service-helpers';\nimport {parseUrlDeprecated} from './url';\n\nconst ACTIVE_CONNECTION_TIMEOUT_MS = 180 * 1000;\nconst PRECONNECT_TIMEOUT_MS = 10 * 1000;\n\n/**\n * @typedef {{\n *   preload: (boolean|undefined),\n *   preconnect: (boolean|undefined)\n * }}\n */\nlet PreconnectFeaturesDef;\n\n/** @private {?PreconnectFeaturesDef} */\nlet preconnectFeatures = null;\n\n/**\n * Detect related features if feature detection is supported by the\n * browser. Even if this fails, the browser may support the feature.\n * @param {!Window} win\n * @return {!PreconnectFeaturesDef}\n */\nfunction getPreconnectFeatures(win) {\n  if (!preconnectFeatures) {\n    const linkTag = win.document.createElement('link');\n    const tokenList = linkTag['relList'];\n    linkTag.as = 'invalid-value';\n    if (!tokenList || !tokenList.supports) {\n      return {};\n    }\n    preconnectFeatures = {\n      preconnect: tokenList.supports('preconnect'),\n      preload: tokenList.supports('preload'),\n      onlyValidAs: linkTag.as != 'invalid-value',\n    };\n  }\n  return preconnectFeatures;\n}\n\n/**\n * @param {?PreconnectFeaturesDef} features\n */\nexport function setPreconnectFeaturesForTesting(features) {\n  preconnectFeatures = features;\n}\n\nexport class PreconnectService {\n  /**\n   * @param {!Window} win\n   */\n  constructor(win) {\n    /** @private @const {!Document} */\n    this.document_ = win.document;\n\n    /** @private @const {!Element} */\n    this.head_ = dev().assertElement(win.document.head);\n    /**\n     * Origin we've preconnected to and when that connection\n     * expires as a timestamp in MS.\n     * @private @const {!Object<string, number>}\n     */\n    this.origins_ = {};\n    /**\n     * Urls we've prefetched.\n     * @private @const {!Object<string, boolean>}\n     */\n    this.urls_ = {};\n    /** @private @const {!./service/platform-impl.Platform}  */\n    this.platform_ = Services.platformFor(win);\n    // Mark current origin as preconnected.\n    this.origins_[parseUrlDeprecated(win.location.href).origin] = true;\n\n    /**\n     * Detect support for the given resource hints.\n     * Unfortunately not all browsers support this, so this can only\n     * be used as an affirmative signal.\n     * @private @const {!PreconnectFeaturesDef}\n     */\n    this.features_ = getPreconnectFeatures(win);\n\n    /** @private @const {!./service/timer-impl.Timer} */\n    this.timer_ = Services.timerFor(win);\n  }\n\n  /**\n   * Preconnects to a URL. Always also does a dns-prefetch because\n   * browser support for that is better.\n   *\n   * It is safe to call this method during prerender with any value,\n   * because no action will be performed until the doc is visible.\n   *\n   * It is safe to call this method with non-HTTP(s) URLs as other URLs\n   * are skipped.\n   *\n   * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n   * @param {string} url\n   * @param {boolean=} opt_alsoConnecting Set this flag if you also just\n   *    did or are about to connect to this host. This is for the case\n   *    where preconnect is issued immediate before or after actual connect\n   *    and preconnect is used to flatten a deep HTTP request chain.\n   *    E.g. when you preconnect to a host that an embed will connect to\n   *    when it is more fully rendered, you already know that the connection\n   *    will be used very soon.\n   */\n  url(ampdoc, url, opt_alsoConnecting) {\n    ampdoc.whenFirstVisible().then(() => {\n      this.url_(ampdoc, url, opt_alsoConnecting);\n    });\n  }\n\n  /**\n   * Preconnects to a URL. Always also does a dns-prefetch because\n   * browser support for that is better.\n   * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n   * @param {string} url\n   * @param {boolean=} opt_alsoConnecting Set this flag if you also just\n   *    did or are about to connect to this host. This is for the case\n   *    where preconnect is issued immediate before or after actual connect\n   *    and preconnect is used to flatten a deep HTTP request chain.\n   *    E.g. when you preconnect to a host that an embed will connect to\n   *    when it is more fully rendered, you already know that the connection\n   *    will be used very soon.\n   * @private\n   */\n  url_(ampdoc, url, opt_alsoConnecting) {\n    if (!this.isInterestingUrl_(url)) {\n      return;\n    }\n    const {origin} = parseUrlDeprecated(url);\n    const now = Date.now();\n    const lastPreconnectTimeout = this.origins_[origin];\n    if (lastPreconnectTimeout && now < lastPreconnectTimeout) {\n      if (opt_alsoConnecting) {\n        this.origins_[origin] = now + ACTIVE_CONNECTION_TIMEOUT_MS;\n      }\n      return;\n    }\n    // If we are about to use the connection, don't re-preconnect for\n    // 180 seconds.\n    const timeout = opt_alsoConnecting\n      ? ACTIVE_CONNECTION_TIMEOUT_MS\n      : PRECONNECT_TIMEOUT_MS;\n    this.origins_[origin] = now + timeout;\n    // If we know that preconnect is supported, there is no need to do\n    // dedicated dns-prefetch.\n    let dns;\n    if (!this.features_.preconnect) {\n      dns = this.document_.createElement('link');\n      dns.setAttribute('rel', 'dns-prefetch');\n      dns.setAttribute('href', origin);\n      this.head_.appendChild(dns);\n    }\n    const preconnect = this.document_.createElement('link');\n    preconnect.setAttribute('rel', 'preconnect');\n    preconnect.setAttribute('href', origin);\n    preconnect.setAttribute('referrerpolicy', 'origin');\n    this.head_.appendChild(preconnect);\n\n    // Remove the tags eventually to free up memory.\n    this.timer_.delay(() => {\n      if (dns && dns.parentNode) {\n        dns.parentNode.removeChild(dns);\n      }\n      if (preconnect.parentNode) {\n        preconnect.parentNode.removeChild(preconnect);\n      }\n    }, 10000);\n\n    this.preconnectPolyfill_(ampdoc, origin);\n  }\n\n  /**\n   * Asks the browser to preload a URL. Always also does a preconnect\n   * because browser support for that is better.\n   *\n   * It is safe to call this method during prerender with any value,\n   * because no action will be performed until the doc is visible.\n   *\n   * It is safe to call this method with non-HTTP(s) URLs as other URLs\n   * are skipped.\n   *\n   * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n   * @param {string} url\n   * @param {string=} opt_preloadAs\n   */\n  preload(ampdoc, url, opt_preloadAs) {\n    if (!this.isInterestingUrl_(url)) {\n      return;\n    }\n    if (this.urls_[url]) {\n      return;\n    }\n    this.urls_[url] = true;\n    this.url(ampdoc, url, /* opt_alsoConnecting */ true);\n    if (!this.features_.preload) {\n      return;\n    }\n    if (opt_preloadAs == 'document' && this.platform_.isSafari()) {\n      // Preloading documents currently does not work in Safari,\n      // because it\n      // - does not support preloading iframes\n      // - and uses a different cache for iframes (when loaded without\n      //   as attribute).\n      return;\n    }\n    ampdoc.whenFirstVisible().then(() => {\n      this.performPreload_(url);\n    });\n  }\n\n  /**\n   * Performs a preload using `<link rel=\"preload\">`.\n   * @param {string} url\n   * @private\n   */\n  performPreload_(url) {\n    const preload = htmlFor(this.document_)`\n        <link rel=\"preload\" referrerpolicy=\"origin\" />`;\n    preload.setAttribute('href', url);\n    // Do not set 'as' attribute to correct value for now, for 2 reasons\n    // - document value is not yet supported and dropped\n    // - script is blocked due to CSP.\n    // Due to spec change we now have to also preload with the \"as\"\n    // being set to `fetch` when it would previously would be empty.\n    // See https://github.com/w3c/preload/issues/80\n    // for details.\n    if (this.features_.onlyValidAs) {\n      preload.as = 'fetch';\n    } else {\n      preload.as = '';\n    }\n    this.head_.appendChild(preload);\n    // As opposed to preconnect we do not clean this tag up, because there is\n    // no expectation as to it having an immediate effect.\n  }\n\n  /**\n   * Skips over non HTTP/HTTPS URL.\n   * @param {string} url\n   * @return {boolean}\n   */\n  isInterestingUrl_(url) {\n    if (url.startsWith('https:') || url.startsWith('http:')) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Safari does not support preconnecting, but due to its significant\n   * performance benefits we implement this crude polyfill.\n   *\n   * We make an image connection to a \"well-known\" file on the origin adding\n   * a random query string to bust the cache (no caching because we do want to\n   * actually open the connection).\n   *\n   * This should get us an open SSL connection to these hosts and significantly\n   * speed up the next connections.\n   *\n   * The actual URL is expected to 404. If you see errors for\n   * amp_preconnect_polyfill in your DevTools console or server log:\n   * This is expected and fine to leave as is. Its fine to send a non 404\n   * response, but please make it small :)\n   *\n   * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n   * @param {string} origin\n   * @private\n   */\n  preconnectPolyfill_(ampdoc, origin) {\n    // Unfortunately there is no reliable way to feature detect whether\n    // preconnect is supported, so we do this only in Safari, which is\n    // the most important browser without support for it.\n    if (\n      this.features_.preconnect ||\n      !(this.platform_.isSafari() || this.platform_.isIos())\n    ) {\n      return;\n    }\n\n    // Don't attempt to preconnect for ACTIVE_CONNECTION_TIMEOUT_MS since\n    // we effectively create an active connection.\n    // TODO(@cramforce): Confirm actual http2 timeout in Safari.\n    const now = Date.now();\n    this.origins_[origin] = now + ACTIVE_CONNECTION_TIMEOUT_MS;\n    // Make the URL change whenever we want to make a new request,\n    // but make it stay stable in between. While a given page\n    // would not actually make a new request, another page might\n    // and with this it has the same URL. If (and that is a big if)\n    // the server responds with a cacheable response, this reduces\n    // requests we make. More importantly, though, it reduces URL\n    // entropy as seen by servers and thus allows reverse proxies\n    // (read CDNs) to respond more efficiently.\n    const cacheBust = now - (now % ACTIVE_CONNECTION_TIMEOUT_MS);\n    const url =\n      origin +\n      '/robots.txt?_AMP_safari_preconnect_polyfill_cachebust=' +\n      cacheBust;\n    const xhr = new XMLHttpRequest();\n    xhr.open('HEAD', url, true);\n    // We only support credentialed preconnect for now.\n    xhr.withCredentials = true;\n\n    xhr.send();\n  }\n}\n\n/**\n * @param {!Window} window\n */\nexport function installPreconnectService(window) {\n  registerServiceBuilder(window, 'preconnect', PreconnectService);\n}\n\n/**\n * Preconnects to the source URL and canonical domains to make sure\n * outbound navigations are quick. Waits for onload to avoid blocking\n * more high priority loads.\n * @param {!Document} document\n * @return {Promise} When work is done.\n */\nexport function preconnectToOrigin(document) {\n  return whenDocumentComplete(document).then(() => {\n    const win = document.defaultView;\n    if (win) {\n      const preconnect = Services.preconnectFor(win);\n      const info = Services.documentInfoForDoc(document.documentElement);\n      const ampdoc = Services.ampdoc(document);\n      preconnect.url(ampdoc, info.sourceUrl);\n      preconnect.url(ampdoc, info.canonicalUrl);\n    }\n  });\n}\n", "import {installImg} from '#builtins/amp-img/amp-img';\nimport {installLayout} from '#builtins/amp-layout/amp-layout';\nimport {installPixel} from '#builtins/amp-pixel/amp-pixel';\n\nimport {installInaboxResourcesServiceForDoc} from '#inabox/inabox-resources';\n\nimport {devAssert} from '#utils/log';\n\nimport {installActionServiceForDoc} from './action-impl';\nimport {installBatchedXhrService} from './batched-xhr-impl';\nimport {installCidService} from './cid-impl';\nimport {installCryptoService} from './crypto-impl';\nimport {installDocumentInfoServiceForDoc} from './document-info-impl';\nimport {installHiddenObserverForDoc} from './hidden-observer-impl';\nimport {installHistoryServiceForDoc} from './history-impl';\nimport {installLoadingIndicatorForDoc} from './loading-indicator';\nimport {installMutatorServiceForDoc} from './mutator-impl';\nimport {installGlobalNavigationHandlerForDoc} from './navigation';\nimport {installOwnersServiceForDoc} from './owners-impl';\nimport {installPlatformService} from './platform-impl';\nimport {installResourcesServiceForDoc} from './resources-impl';\nimport {installStandardActionsForDoc} from './standard-actions-impl';\nimport {installStorageServiceForDoc} from './storage-impl';\nimport {installTemplatesServiceForDoc} from './template-impl';\nimport {installTimerService} from './timer-impl';\nimport {installUrlForDoc} from './url-impl';\nimport {installUrlReplacementsServiceForDoc} from './url-replacements-impl';\nimport {installViewerServiceForDoc} from './viewer-impl';\nimport {installViewportServiceForDoc} from './viewport/viewport-impl';\nimport {installVsyncService} from './vsync-impl';\nimport {installXhrService} from './xhr-impl';\n\nimport {installGlobalSubmitListenerForDoc} from '../document-submit';\nimport {installInputService} from '../input';\nimport {installPreconnectService} from '../preconnect';\nimport {\n  adoptServiceFactoryForEmbedDoc,\n  adoptServiceForEmbedDoc,\n} from '../service-helpers';\n\n/**\n * Install builtins.\n * @param {!Window} win\n * @restricted\n */\nexport function installBuiltinElements(win) {\n  installImg(win);\n  installPixel(win);\n  installLayout(win);\n}\n\n/**\n * Install runtime-level services.\n * @param {!Window} global Global scope to adopt.\n * @restricted\n */\nexport function installRuntimeServices(global) {\n  installCryptoService(global);\n  installBatchedXhrService(global);\n  installPlatformService(global);\n  installTimerService(global);\n  installVsyncService(global);\n  installXhrService(global);\n  installInputService(global);\n  installPreconnectService(global);\n}\n\n/**\n * Install ampdoc-level services.\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @restricted\n */\nexport function installAmpdocServices(ampdoc) {\n  devAssert(!ampdoc.getParent());\n  installAmpdocServicesInternal(ampdoc, /* isEmbedded */ false);\n}\n\n/**\n * Install ampdoc-level services for an embedded doc.\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @restricted\n */\nexport function installAmpdocServicesForEmbed(ampdoc) {\n  devAssert(!!ampdoc.getParent());\n  installAmpdocServicesInternal(ampdoc, /* isEmbedded */ true);\n}\n\n/**\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @param {boolean} isEmbedded\n */\nfunction installAmpdocServicesInternal(ampdoc, isEmbedded) {\n  // This function is constructed to DCE embedded-vs-non-embedded path when\n  // a constant value passed in the `isEmbedded` arg.\n\n  // When making changes to this method:\n  // 1. Order is important!\n  // 2. Consider to install same services to amp-inabox.js\n  installUrlForDoc(ampdoc);\n  isEmbedded\n    ? adoptServiceFactoryForEmbedDoc(ampdoc, 'templates')\n    : installTemplatesServiceForDoc(ampdoc);\n  isEmbedded\n    ? adoptServiceForEmbedDoc(ampdoc, 'documentInfo')\n    : installDocumentInfoServiceForDoc(ampdoc);\n  // those services are installed in amp-inabox.js\n  isEmbedded\n    ? adoptServiceForEmbedDoc(ampdoc, 'cid')\n    : installCidService(ampdoc);\n  isEmbedded\n    ? adoptServiceForEmbedDoc(ampdoc, 'viewer')\n    : installViewerServiceForDoc(ampdoc);\n  isEmbedded\n    ? adoptServiceForEmbedDoc(ampdoc, 'viewport')\n    : installViewportServiceForDoc(ampdoc);\n  installHiddenObserverForDoc(ampdoc);\n  isEmbedded\n    ? adoptServiceForEmbedDoc(ampdoc, 'history')\n    : installHistoryServiceForDoc(ampdoc);\n\n  isEmbedded\n    ? installInaboxResourcesServiceForDoc(ampdoc)\n    : installResourcesServiceForDoc(ampdoc);\n  installOwnersServiceForDoc(ampdoc);\n  installMutatorServiceForDoc(ampdoc);\n\n  isEmbedded\n    ? adoptServiceForEmbedDoc(ampdoc, 'url-replace')\n    : installUrlReplacementsServiceForDoc(ampdoc);\n  installActionServiceForDoc(ampdoc);\n  installStandardActionsForDoc(ampdoc);\n  isEmbedded\n    ? adoptServiceForEmbedDoc(ampdoc, 'storage')\n    : installStorageServiceForDoc(ampdoc);\n  installGlobalNavigationHandlerForDoc(ampdoc);\n  installGlobalSubmitListenerForDoc(ampdoc);\n  if (!isEmbedded) {\n    // Embeds do not show loading indicators, since the whole embed is\n    // usually behind a parent loading indicator.\n    installLoadingIndicatorForDoc(ampdoc);\n  }\n}\n", "export const cssText = \"[hidden]{display:none!important}.i-amphtml-element{display:inline-block}.i-amphtml-blurry-placeholder{transition:opacity 0.3s cubic-bezier(0.0,0.0,0.2,1)!important;pointer-events:none}[layout=nodisplay]:not(.i-amphtml-element){display:none!important}.i-amphtml-layout-fixed,[layout=fixed][width][height]:not(.i-amphtml-layout-fixed){display:inline-block;position:relative}.i-amphtml-layout-responsive,[layout=responsive][width][height]:not(.i-amphtml-layout-responsive),[width][height][heights]:not([layout]):not(.i-amphtml-layout-responsive),[width][height][sizes]:not(img):not([layout]):not(.i-amphtml-layout-responsive){display:block;position:relative}.i-amphtml-layout-intrinsic,[layout=intrinsic][width][height]:not(.i-amphtml-layout-intrinsic){display:inline-block;position:relative;max-width:100%}.i-amphtml-layout-intrinsic .i-amphtml-sizer{max-width:100%}.i-amphtml-intrinsic-sizer{max-width:100%;display:block!important}.i-amphtml-layout-container,.i-amphtml-layout-fixed-height,[layout=container],[layout=fixed-height][height]:not(.i-amphtml-layout-fixed-height){display:block;position:relative}.i-amphtml-layout-fill,.i-amphtml-layout-fill.i-amphtml-notbuilt,[layout=fill]:not(.i-amphtml-layout-fill),body noscript>*{display:block;overflow:hidden!important;position:absolute;top:0;left:0;bottom:0;right:0}body noscript>*{position:absolute!important;width:100%;height:100%;z-index:2}body noscript{display:inline!important}.i-amphtml-layout-flex-item,[layout=flex-item]:not(.i-amphtml-layout-flex-item){display:block;position:relative;-ms-flex:1 1 auto;flex:1 1 auto}.i-amphtml-layout-fluid{position:relative}.i-amphtml-layout-size-defined{overflow:hidden!important}.i-amphtml-layout-awaiting-size{position:absolute!important;top:auto!important;bottom:auto!important}i-amphtml-sizer{display:block!important}@supports (aspect-ratio:1/1){i-amphtml-sizer.i-amphtml-disable-ar{display:none!important}}.i-amphtml-blurry-placeholder,.i-amphtml-fill-content{display:block;height:0;max-height:100%;max-width:100%;min-height:100%;min-width:100%;width:0;margin:auto}.i-amphtml-layout-size-defined .i-amphtml-fill-content{position:absolute;top:0;left:0;bottom:0;right:0}.i-amphtml-replaced-content,.i-amphtml-screen-reader{padding:0!important;border:none!important}.i-amphtml-screen-reader{position:fixed!important;top:0px!important;left:0px!important;width:4px!important;height:4px!important;opacity:0!important;overflow:hidden!important;margin:0!important;display:block!important;visibility:visible!important}.i-amphtml-screen-reader~.i-amphtml-screen-reader{left:8px!important}.i-amphtml-screen-reader~.i-amphtml-screen-reader~.i-amphtml-screen-reader{left:12px!important}.i-amphtml-screen-reader~.i-amphtml-screen-reader~.i-amphtml-screen-reader~.i-amphtml-screen-reader{left:16px!important}.i-amphtml-unresolved{position:relative;overflow:hidden!important}.i-amphtml-select-disabled{-webkit-user-select:none!important;-ms-user-select:none!important;user-select:none!important}.i-amphtml-notbuilt,[layout]:not(.i-amphtml-element),[width][height][heights]:not([layout]):not(.i-amphtml-element),[width][height][sizes]:not(img):not([layout]):not(.i-amphtml-element){position:relative;overflow:hidden!important;color:transparent!important}.i-amphtml-notbuilt:not(.i-amphtml-layout-container)>*,[layout]:not([layout=container]):not(.i-amphtml-element)>*,[width][height][heights]:not([layout]):not(.i-amphtml-element)>*,[width][height][sizes]:not([layout]):not(.i-amphtml-element)>*{display:none}amp-img:not(.i-amphtml-element)[i-amphtml-ssr]>img.i-amphtml-fill-content{display:block}.i-amphtml-notbuilt:not(.i-amphtml-layout-container),[layout]:not([layout=container]):not(.i-amphtml-element),[width][height][heights]:not([layout]):not(.i-amphtml-element),[width][height][sizes]:not(img):not([layout]):not(.i-amphtml-element){color:transparent!important;line-height:0!important}.i-amphtml-ghost{visibility:hidden!important}.i-amphtml-element>[placeholder],[layout]:not(.i-amphtml-element)>[placeholder],[width][height][heights]:not([layout]):not(.i-amphtml-element)>[placeholder],[width][height][sizes]:not([layout]):not(.i-amphtml-element)>[placeholder]{display:block;line-height:normal}.i-amphtml-element>[placeholder].amp-hidden,.i-amphtml-element>[placeholder].hidden{visibility:hidden}.i-amphtml-element:not(.amp-notsupported)>[fallback],.i-amphtml-layout-container>[placeholder].amp-hidden,.i-amphtml-layout-container>[placeholder].hidden{display:none}.i-amphtml-layout-size-defined>[fallback],.i-amphtml-layout-size-defined>[placeholder]{position:absolute!important;top:0!important;left:0!important;right:0!important;bottom:0!important;z-index:1}amp-img[i-amphtml-ssr]:not(.i-amphtml-element)>[placeholder]{z-index:auto}.i-amphtml-notbuilt>[placeholder]{display:block!important}.i-amphtml-hidden-by-media-query{display:none!important}.i-amphtml-element-error{background:red!important;color:#fff!important;position:relative!important}.i-amphtml-element-error:before{content:attr(error-message)}i-amp-scroll-container,i-amphtml-scroll-container{position:absolute;top:0;left:0;right:0;bottom:0;display:block}i-amp-scroll-container.amp-active,i-amphtml-scroll-container.amp-active{overflow:auto;-webkit-overflow-scrolling:touch}.i-amphtml-loading-container{display:block!important;pointer-events:none;z-index:1}.i-amphtml-notbuilt>.i-amphtml-loading-container{display:block!important}.i-amphtml-loading-container.amp-hidden{visibility:hidden}.i-amphtml-element>[overflow]{cursor:pointer;position:relative;z-index:2;visibility:hidden;display:initial;line-height:normal}.i-amphtml-layout-size-defined>[overflow]{position:absolute}.i-amphtml-element>[overflow].amp-visible{visibility:visible}template{display:none!important}.amp-border-box,.amp-border-box *,.amp-border-box :after,.amp-border-box :before{box-sizing:border-box}amp-pixel{display:none!important}amp-analytics,amp-auto-ads,amp-story-auto-ads{position:fixed!important;top:0!important;width:1px!important;height:1px!important;overflow:hidden!important;visibility:hidden}html.i-amphtml-fie>amp-analytics{position:initial!important}[visible-when-invalid]:not(.visible),form [submit-error],form [submit-success],form [submitting]{display:none}amp-accordion{display:block!important}@media (min-width:1px){:where(amp-accordion>section)>:first-child{margin:0;background-color:#efefef;padding-right:20px;border:1px solid #dfdfdf}:where(amp-accordion>section)>:last-child{margin:0}}amp-accordion>section{float:none!important}amp-accordion>section>*{float:none!important;display:block!important;overflow:hidden!important;position:relative!important}amp-accordion,amp-accordion>section{margin:0}amp-accordion:not(.i-amphtml-built)>section>:last-child{display:none!important}amp-accordion:not(.i-amphtml-built)>section[expanded]>:last-child{display:block!important}\\n/*# sourceURL=/css/ampshared.css*/\"", "import {CommonSignals} from '#core/constants/common-signals';\nimport {VisibilityState} from '#core/constants/visibility-state';\nimport {Deferred} from '#core/data-structures/promise';\nimport {Signals} from '#core/data-structures/signals';\nimport {isDocumentReady} from '#core/document/ready';\nimport {escapeHtml} from '#core/dom';\nimport {layoutRectLtwh, moveLayoutRect} from '#core/dom/layout/rect';\nimport {\n  px,\n  resetStyles,\n  setImportantStyles,\n  setStyle,\n  setStyles,\n} from '#core/dom/style';\nimport {rethrowAsync} from '#core/error';\nimport * as mode from '#core/mode';\nimport {getWin} from '#core/window';\n\nimport {install as installAbortController} from '#polyfills/abort-controller';\nimport {install as installCustomElements} from '#polyfills/custom-elements';\nimport {install as installDocContains} from '#polyfills/document-contains';\nimport {installForChildWin as installIntersectionObserver} from '#polyfills/intersection-observer';\nimport {installForChildWin as installResizeObserver} from '#polyfills/resize-observer';\n\nimport {Services} from '#service';\nimport {installAmpdocServicesForEmbed} from '#service/core-services';\nimport {installTimerInEmbedWindow} from '#service/timer-impl';\n\nimport {loadPromise} from '#utils/event-helper';\nimport {dev, devAssert, userAssert} from '#utils/log';\n\nimport {urls} from './config';\nimport {FIE_EMBED_PROP} from './iframe-helper';\nimport {whenContentIniLoad} from './ini-load';\nimport {getMode} from './mode';\nimport {\n  disposeServicesForEmbed,\n  getTopWindow,\n  setParentWindow,\n} from './service-helpers';\nimport {installStylesForDoc} from './style-installer';\n\nimport {cssText as ampSharedCss} from '../build/ampshared.css';\n\n/**\n * Parameters used to create the new \"friendly iframe\" embed.\n * - html: The complete content of an AMP embed, which is itself an AMP\n *   document. Can include whatever is normally allowed in an AMP document,\n *   except for AMP `<script>` declarations. Those should be passed as an\n *   array of `extensions`.\n * - extensions: An optional array of AMP extension IDs/versions used in\n *   this embed.\n * - fonts: An optional array of fonts used in this embed.\n *\n *\n * @typedef {{\n *   host: (?AmpElement|undefined),\n *   url: string,\n *   html: ?string,\n *   extensions: (?Array<{extensionId: string, extensionVersion: string}>|undefined),\n *   fonts: (?Array<string>|undefined),\n *   skipHtmlMerge: (boolean|undefined),\n * }}\n */\nexport let FriendlyIframeSpec;\n\n/**\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nlet srcdocSupported;\n\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\nexport function setSrcdocSupportedForTesting(val) {\n  srcdocSupported = val;\n}\n\n/**\n * @return {function(*): !Promise<*>}\n */\nfunction getDelayPromiseProducer() {\n  return (val) =>\n    new Promise((resolve) => {\n      setTimeout(() => resolve(val), 1);\n    });\n}\n\n/**\n * Returns `true` if the Friendly Iframes are supported.\n * @return {boolean}\n */\nexport function isSrcdocSupported() {\n  if (srcdocSupported === undefined) {\n    srcdocSupported = 'srcdoc' in HTMLIFrameElement.prototype;\n  }\n  return srcdocSupported;\n}\n\n/**\n * Get trusted urls enabled for polyfills.\n * @return {string}\n */\nexport function getFieSafeScriptSrcs() {\n  const cdnBase = getMode().localDev ? 'http://localhost:8000/dist' : urls.cdn;\n  return `${cdnBase}/lts/ ${cdnBase}/rtv/ ${cdnBase}/sw/`;\n}\n\n/**\n * @param {!Window} win\n * @param {!Array<{extensionId: string, extensionVersion: string}>} extensions\n */\nexport function preloadFriendlyIframeEmbedExtensions(win, extensions) {\n  const extensionsService = Services.extensionsFor(win);\n\n  // Load any extensions; do not wait on their promises as this\n  // is just to prefetch.\n  extensions.forEach(({extensionId, extensionVersion}) =>\n    extensionsService.preloadExtension(extensionId, extensionVersion)\n  );\n}\n\n/**\n * Creates the requested \"friendly iframe\" embed. Returns the promise that\n * will be resolved as soon as the embed is available. The actual\n * initialization of the embed will start as soon as the `iframe` is added\n * to the DOM.\n * @param {!HTMLIFrameElement} iframe\n * @param {!Element} container\n * @param {!FriendlyIframeSpec} spec\n * @param {function(!Window, ?./service/ampdoc-impl.AmpDoc=)=} opt_preinstallCallback\n * @return {!Promise<!FriendlyIframeEmbed>}\n */\nexport function installFriendlyIframeEmbed(\n  iframe,\n  container,\n  spec,\n  opt_preinstallCallback // TODO(#22733): remove \"window\" argument.\n) {\n  /** @const {!Window} */\n  const win = getTopWindow(getWin(iframe));\n  /** @const {!./service/extensions-impl.Extensions} */\n  const extensionsService = Services.extensionsFor(win);\n  /** @const {!./service/ampdoc-impl.AmpDocService} */\n  const ampdocService = Services.ampdocServiceFor(win);\n\n  setStyle(iframe, 'visibility', 'hidden');\n  iframe.setAttribute('referrerpolicy', 'unsafe-url');\n  iframe.setAttribute('marginheight', '0');\n  iframe.setAttribute('marginwidth', '0');\n\n  const extensions = spec.extensions || [];\n\n  // Pre-load extensions.\n  preloadFriendlyIframeEmbedExtensions(win, extensions);\n\n  const html = spec.skipHtmlMerge ? spec.html : mergeHtml(spec);\n  // Receive the signal when iframe is ready: it's document is formed.\n  iframe.onload = () => {\n    // Chrome does not reflect the iframe readystate.\n    iframe.readyState = 'complete';\n  };\n  const registerViolationListener = () => {\n    iframe.contentWindow.addEventListener(\n      'securitypolicyviolation',\n      (violationEvent) => {\n        dev().warn('FIE', 'security policy violation', violationEvent);\n      }\n    );\n  };\n  let loadedPromise;\n  if (isSrcdocSupported()) {\n    iframe.srcdoc = html;\n    loadedPromise = loadPromise(iframe);\n    container.appendChild(iframe);\n    registerViolationListener();\n  } else {\n    iframe.src = 'about:blank';\n    container.appendChild(iframe);\n    const childDoc = iframe.contentWindow.document;\n    registerViolationListener();\n    childDoc.open();\n    childDoc.write(devAssert(html));\n    // With document.write, `iframe.onload` arrives almost immediately, thus\n    // we need to wait for child's `window.onload`.\n    loadedPromise = loadPromise(iframe.contentWindow);\n    childDoc.close();\n  }\n\n  // Wait for document ready signal.\n  // This is complicated due to crbug.com/649201 on Chrome and a similar issue\n  // on Safari where newly created document's `readyState` immediately equals\n  // `complete`, even though the document itself is not yet available. There's\n  // no other reliable signal for `readyState` in a child window and thus\n  // we have to fallback to polling.\n  let readyPromise;\n  if (isIframeReady(iframe)) {\n    readyPromise = Promise.resolve();\n  } else {\n    readyPromise = new Promise((resolve) => {\n      /** @const {number} */\n      const interval = win.setInterval(() => {\n        if (isIframeReady(iframe)) {\n          resolve();\n          win.clearInterval(interval);\n        }\n      }, /* milliseconds */ 5);\n\n      // For safety, make sure we definitely stop polling when child doc is\n      // loaded.\n      loadedPromise\n        .catch((error) => {\n          rethrowAsync(error);\n        })\n        .then(() => {\n          resolve();\n          win.clearInterval(interval);\n        });\n    });\n  }\n\n  return readyPromise.then(() => {\n    const childWin = /** @type {!Window} */ (iframe.contentWindow);\n    const signals = spec.host && spec.host.signals();\n    const ampdoc = ampdocService.installFieDoc(spec.url, childWin, {signals});\n    const embed = new FriendlyIframeEmbed(iframe, spec, loadedPromise, ampdoc);\n    iframe[FIE_EMBED_PROP] = embed;\n\n    // Window might have been destroyed.\n    if (!childWin.frameElement) {\n      return null;\n    }\n\n    // Add extensions.\n    return Installers.installExtensionsInEmbed(\n      embed,\n      extensionsService,\n      ampdoc,\n      extensions,\n      opt_preinstallCallback\n    ).then(() => {\n      if (!childWin.frameElement) {\n        return null;\n      }\n      return embed;\n    });\n  });\n}\n\n/**\n * Returns `true` when iframe is ready.\n * @param {!HTMLIFrameElement} iframe\n * @return {boolean}\n */\nfunction isIframeReady(iframe) {\n  // This is complicated due to crbug.com/649201 on Chrome and a similar issue\n  // on Safari where newly created document's `readyState` immediately equals\n  // `complete`, even though the document itself is not yet available. There's\n  // no other reliable signal for `readyState` in a child window and thus\n  // the best way to check is to see the contents of the body.\n  const childDoc = iframe.contentWindow && iframe.contentWindow.document;\n  return !!(\n    childDoc &&\n    isDocumentReady(childDoc) &&\n    childDoc.body &&\n    childDoc.body.firstChild\n  );\n}\n\n/**\n * Merges base and fonts into html document.\n * @param {!FriendlyIframeSpec} spec\n * @return {string}\n */\nfunction mergeHtml(spec) {\n  const originalHtml = spec.html;\n  const originalHtmlUp = originalHtml.toUpperCase();\n\n  // Find the insertion point.\n  let ip = originalHtmlUp.indexOf('<HEAD');\n  if (ip != -1) {\n    ip = originalHtmlUp.indexOf('>', ip + 1) + 1;\n  }\n  if (ip == -1) {\n    ip = originalHtmlUp.indexOf('<BODY');\n  }\n  if (ip == -1) {\n    ip = originalHtmlUp.indexOf('<HTML');\n    if (ip != -1) {\n      ip = originalHtmlUp.indexOf('>', ip + 1) + 1;\n    }\n  }\n\n  const result = [];\n\n  // Preambule.\n  if (ip > 0) {\n    result.push(originalHtml.substring(0, ip));\n  }\n\n  // Add <BASE> tag.\n  result.push(`<base href=\"${escapeHtml(spec.url)}\">`);\n\n  // Load fonts.\n  if (spec.fonts) {\n    spec.fonts.forEach((font) => {\n      result.push(\n        `<link href=\"${escapeHtml(font)}\" rel=\"stylesheet\" type=\"text/css\">`\n      );\n    });\n  }\n\n  const cspScriptSrc = getFieSafeScriptSrcs();\n\n  // Load CSP\n  result.push(\n    '<meta http-equiv=Content-Security-Policy ' +\n      `content=\"script-src ${cspScriptSrc};object-src 'none';child-src 'none'\">`\n  );\n\n  // Postambule.\n  if (ip > 0) {\n    result.push(originalHtml.substring(ip));\n  } else {\n    result.push(originalHtml);\n  }\n\n  return result.join('');\n}\n\n/**\n * Exposes `mergeHtml` for testing purposes.\n * @param {!FriendlyIframeSpec} spec\n * @return {string}\n * @visibleForTesting\n */\nexport function mergeHtmlForTesting(spec) {\n  return mergeHtml(spec);\n}\n\n/**\n * A \"friendly iframe\" embed. This is the iframe that's fully accessible to\n * the AMP runtime. It's similar to Shadow DOM in many respects, but it also\n * provides iframe/viewport measurements and enables the use of `vh`, `vw` and\n * `@media` CSS.\n *\n * The friendly iframe is managed by the top-level AMP Runtime. When it's\n * destroyed, the `destroy` method must be called to free up the shared\n * resources.\n *\n * @visibleForTesting\n */\nexport class FriendlyIframeEmbed {\n  /**\n   * @param {!HTMLIFrameElement} iframe\n   * @param {!FriendlyIframeSpec} spec\n   * @param {!Promise} loadedPromise\n   * @param {?./service/ampdoc-impl.AmpDocFie} ampdoc\n   */\n  constructor(iframe, spec, loadedPromise, ampdoc) {\n    /** @const {!HTMLIFrameElement} */\n    this.iframe = iframe;\n\n    /** @const {!Window} */\n    this.win = /** @type {!Window} */ (iframe.contentWindow);\n\n    /** @const {?./service/ampdoc-impl.AmpDocFie} */\n    this.ampdoc = ampdoc;\n\n    /** @const {!FriendlyIframeSpec} */\n    this.spec = spec;\n\n    /** @const {?AmpElement} */\n    this.host = spec.host || null;\n\n    /** @const @private {time} */\n    this.startTime_ = Date.now();\n\n    /** @private @const */\n    this.signals_ = this.ampdoc\n      ? this.ampdoc.signals()\n      : this.host\n      ? this.host.signals()\n      : new Signals();\n\n    /** @private @const {!Deferred} */\n    this.renderComplete_ = new Deferred();\n\n    /** @private @const {!Promise} */\n    this.winLoadedPromise_ = Promise.all([\n      loadedPromise,\n      this.whenRenderStarted(),\n    ]);\n    if (this.ampdoc) {\n      this.whenRenderComplete().then(() => this.ampdoc.setReady());\n    }\n\n    this.win.addEventListener('resize', () => this.handleResize_());\n  }\n\n  /**\n   * Ensures that all resources from this iframe have been released.\n   */\n  destroy() {\n    disposeServicesForEmbed(this.win);\n    if (this.ampdoc) {\n      this.ampdoc.dispose();\n    }\n  }\n\n  /**\n   * @return {time}\n   */\n  getStartTime() {\n    return this.startTime_;\n  }\n\n  /**\n   * Returns the base URL for the embedded document.\n   * @return {string}\n   */\n  getUrl() {\n    return this.spec.url;\n  }\n\n  /** @return {!Signals} */\n  signals() {\n    return this.signals_;\n  }\n\n  /**\n   * Returns a promise that will resolve when the embed document is ready.\n   * Notice that this signal coincides with the embed's `render-start`.\n   * @return {!Promise}\n   */\n  whenRenderStarted() {\n    return this.signals_.whenSignal(CommonSignals.RENDER_START);\n  }\n\n  /**\n   * Returns a promise that will resolve when the child window's `onload` event\n   * has been emitted. In friendly iframes this typically only includes font\n   * loading.\n   * @return {!Promise}\n   */\n  whenWindowLoaded() {\n    return this.winLoadedPromise_;\n  }\n\n  /**\n   * Returns a promise that will resolve when the initial load  of the embed's\n   * content has been completed.\n   * @return {!Promise}\n   */\n  whenIniLoaded() {\n    return this.signals_.whenSignal(CommonSignals.INI_LOAD);\n  }\n\n  /**\n   * Returns a promise that will resolve when all elements have been\n   * transferred into live embed DOM.\n   * @return {!Promise}\n   */\n  whenRenderComplete() {\n    return this.renderComplete_.promise;\n  }\n\n  /**\n   * Signal that indicates that all DOM elements have been tranferred to live\n   * embed DOM.\n   */\n  renderCompleted() {\n    this.renderComplete_.resolve();\n  }\n\n  /**\n   * Pause the embed.\n   */\n  pause() {\n    if (this.ampdoc) {\n      this.ampdoc.overrideVisibilityState(VisibilityState.PAUSED);\n    }\n  }\n\n  /**\n   * Resume the embed.\n   */\n  resume() {\n    if (this.ampdoc) {\n      this.ampdoc.overrideVisibilityState(VisibilityState.VISIBLE);\n    }\n  }\n\n  /**\n   * @private\n   * @restricted\n   */\n  startRender_() {\n    if (this.host) {\n      this.host.renderStarted();\n    } else {\n      this.signals_.signal(CommonSignals.RENDER_START);\n    }\n\n    // TODO(ccordry): remove when no-signing launched.\n    if (!this.spec.skipHtmlMerge) {\n      // When not streaming renderStart signal is good enough.\n      this.renderComplete_.resolve();\n    }\n\n    // Common signal RENDER_START indicates time to toggle visibility\n    setStyle(this.iframe, 'visibility', '');\n    if (this.win.document && this.win.document.body) {\n      this.win.document.documentElement.classList.add('i-amphtml-fie');\n      setStyles(dev().assertElement(this.win.document.body), {\n        opacity: 1,\n        visibility: 'visible',\n        animation: 'none',\n      });\n    }\n\n    // Initial load signal signal.\n    let rect;\n    if (this.host) {\n      rect = this.host.getLayoutBox();\n    } else {\n      rect = layoutRectLtwh(\n        0,\n        0,\n        this.win./*OK*/ innerWidth,\n        this.win./*OK*/ innerHeight\n      );\n    }\n    Promise.all([\n      this.whenRenderComplete(),\n      whenContentIniLoad(this.ampdoc, this.win, rect),\n    ]).then(() => {\n      this.signals_.signal(CommonSignals.INI_LOAD);\n    });\n  }\n\n  /**\n   * @return {!HTMLBodyElement}\n   * @visibleForTesting\n   */\n  getBodyElement() {\n    return /** @type {!HTMLBodyElement} */ (\n      (this.iframe.contentDocument || this.iframe.contentWindow.document).body\n    );\n  }\n\n  /**\n   * Force remeasure inside FIE doc when iframe is resized.\n   * @private\n   */\n  handleResize_() {\n    this.getMutator_().mutateElement(\n      this.win.document.documentElement,\n      () => {} // NOOP.\n    );\n  }\n\n  /**\n   * @return {!./service/mutator-interface.MutatorInterface}\n   * @private\n   */\n  getMutator_() {\n    return Services.mutatorForDoc(this.iframe);\n  }\n\n  /**\n   * Runs a measure/mutate cycle ensuring that the iframe change is propagated\n   * to the resource manager.\n   * @param {{measure: (function()|undefined), mutate: function()}} task\n   * @return {!Promise}\n   * @private\n   */\n  measureMutate_(task) {\n    return this.getMutator_().measureMutateElement(\n      this.iframe,\n      task.measure || null,\n      task.mutate\n    );\n  }\n\n  /**\n   * @return {!Promise}\n   */\n  enterFullOverlayMode() {\n    const ampAdParent = dev().assertElement(this.iframe.parentNode);\n\n    // Security assertion. Otherwise any 3p frame could request lighbox mode.\n    userAssert(\n      ampAdParent.tagName.toLowerCase() == 'amp-ad',\n      'Only <amp-ad> is allowed to enter lightbox mode.'\n    );\n\n    let bodyStyle;\n\n    return this.measureMutate_({\n      measure: () => {\n        const rect = this.host\n          ? this.host.getLayoutBox()\n          : this.iframe./*OK*/ getBoundingClientRect();\n\n        // Offset by scroll top as iframe will be position: fixed.\n        const dy = -Services.viewportForDoc(this.iframe).getScrollTop();\n        const {height, left, top, width} = moveLayoutRect(rect, /* dx */ 0, dy);\n\n        // Offset body by header height to prevent visual jump.\n        bodyStyle = {\n          top: px(top),\n          left: px(left),\n          width: px(width),\n          height: px(height),\n        };\n      },\n      mutate: () => {\n        // !important to prevent abuse e.g. box @ ltwh = 0, 0, 0, 0\n        setImportantStyles(this.iframe, {\n          'position': 'fixed',\n          'left': 0,\n          'right': 0,\n          'bottom': 0,\n          'width': '100vw',\n          'top': 0,\n          'height': '100vh',\n        });\n\n        // We need to override runtime-level !important rules\n        setImportantStyles(this.getBodyElement(), {\n          'background': 'transparent',\n          'position': 'absolute',\n          'bottom': 'auto',\n          'right': 'auto',\n\n          // Read during vsync measure phase.\n          'top': bodyStyle.top,\n          'left': bodyStyle.left,\n          'width': bodyStyle.width,\n          'height': bodyStyle.height,\n        });\n      },\n    });\n  }\n\n  /**\n   * @return {!Promise}\n   */\n  leaveFullOverlayMode() {\n    return this.measureMutate_({\n      mutate: () => {\n        resetStyles(this.iframe, [\n          'position',\n          'left',\n          'right',\n          'top',\n          'bottom',\n          'width',\n          'height',\n        ]);\n\n        // we're not resetting background here as we need to set it to\n        // transparent permanently.\n        resetStyles(this.getBodyElement(), [\n          'position',\n          'top',\n          'left',\n          'width',\n          'height',\n          'bottom',\n          'right',\n        ]);\n      },\n    });\n  }\n}\n\n/**\n * Install polyfills in the child window (friendly iframe).\n * @param {!Window} parentWin\n * @param {!Window} childWin\n */\nfunction installPolyfillsInChildWindow(parentWin, childWin) {\n  if (!mode.isEsm()) {\n    installDocContains(childWin);\n  }\n  // The anonymous class parameter allows us to detect native classes vs\n  // transpiled classes.\n  if (!IS_SXG) {\n    installCustomElements(childWin, class {});\n    installIntersectionObserver(parentWin, childWin);\n    installResizeObserver(parentWin, childWin);\n    installAbortController(childWin);\n  }\n}\n\n/**\n * Static installers that can be easily stubbed for tests.\n * @visibleForTesting\n */\nexport class Installers {\n  /**\n   * Install extensions in the child window (friendly iframe). The pre-install\n   * callback, if specified, is executed after polyfills have been configured\n   * but before the first extension is installed.\n   * @param {!FriendlyIframeEmbed} embed\n   * @param {!./service/extensions-impl.Extensions} extensionsService\n   * @param {!./service/ampdoc-impl.AmpDocFie} ampdoc\n   * @param {!Array<{extensionId: string, extensionVersion: string}>} extensions\n   * @param {function(!Window, ?./service/ampdoc-impl.AmpDoc=)|undefined} preinstallCallback\n   * @param {function(!Promise)=} opt_installComplete\n   * @return {!Promise}\n   */\n  static installExtensionsInEmbed(\n    embed,\n    extensionsService,\n    ampdoc,\n    extensions,\n    preinstallCallback,\n    opt_installComplete\n  ) {\n    const childWin = ampdoc.win;\n    const parentWin = getWin(childWin.frameElement);\n    setParentWindow(childWin, parentWin);\n    const getDelayPromise = getDelayPromiseProducer();\n\n    return getDelayPromise(undefined)\n      .then(() => {\n        // Install necessary polyfills.\n        installPolyfillsInChildWindow(parentWin, childWin);\n      })\n      .then(getDelayPromise)\n      .then(() => {\n        if (mode.isEsm()) {\n          // TODO: This is combined (ampdoc + shared), not just shared\n          // const css = parentWin.document.querySelector('style[amp-runtime]')\n          // .textContent;\n          installStylesForDoc(\n            ampdoc,\n            ampSharedCss,\n            /* callback */ null,\n            /* opt_isRuntimeCss */ true,\n            /* opt_ext */ 'amp-runtime'\n          );\n        } else {\n          // Install runtime styles.\n          installStylesForDoc(\n            ampdoc,\n            ampSharedCss,\n            /* callback */ null,\n            /* opt_isRuntimeCss */ true,\n            /* opt_ext */ 'amp-runtime'\n          );\n        }\n      })\n      .then(getDelayPromise)\n      .then(() => {\n        if (!childWin.frameElement) {\n          return;\n        }\n        // Run pre-install callback.\n        if (preinstallCallback) {\n          preinstallCallback(ampdoc.win, ampdoc);\n        }\n      })\n      .then(getDelayPromise)\n      .then(() => {\n        if (!childWin.frameElement) {\n          return;\n        }\n        // Install embeddable standard services.\n        Installers.installStandardServicesInEmbed(ampdoc);\n      })\n      .then(getDelayPromise)\n      .then(() => {\n        if (!childWin.frameElement) {\n          return;\n        }\n        extensionsService.preinstallEmbed(ampdoc, extensions);\n      })\n      .then(getDelayPromise)\n      .then(() => {\n        if (!childWin.frameElement) {\n          return;\n        }\n        // Ready to be shown.\n        embed.startRender_();\n      })\n      .then(getDelayPromise)\n      .then(() => {\n        if (!childWin.frameElement) {\n          return;\n        }\n        // Intentionally do not wait for the full installation to complete.\n        // It's enough of initialization done to return the embed.\n        const promise = extensionsService.installExtensionsInDoc(\n          ampdoc,\n          extensions\n        );\n        ampdoc.setExtensionsKnown();\n        if (opt_installComplete) {\n          opt_installComplete(promise);\n        }\n      });\n  }\n\n  /**\n   * Adopt predefined core services for the embedded ampdoc (friendly iframe).\n   * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  static installStandardServicesInEmbed(ampdoc) {\n    installTimerInEmbedWindow(ampdoc.win);\n    installAmpdocServicesForEmbed(ampdoc);\n  }\n}\n", "import {removeElement, rootNodeFor} from '#core/dom';\nimport {map} from '#core/types/object';\nimport {includes} from '#core/types/string';\n\nimport {Services} from '#service';\nimport {parseExtensionUrl} from '#service/extension-script';\n\nimport {urls} from '../../../src/config';\nimport {preloadFriendlyIframeEmbedExtensions} from '../../../src/friendly-iframe-embed';\nimport {getMode} from '../../../src/mode';\n\n/**\n * @typedef {{\n *    extensions: !Array<{extensionId: (string|undefined), extensionVersion: (string|undefined)}>,\n *    head: !Element\n * }}\n */\nexport let ValidatedHeadDef;\n\n// From validator/validator-main.protoascii\nconst ALLOWED_FONT_REGEX = new RegExp(\n  'https://cdn\\\\.materialdesignicons\\\\.com/' +\n    '([0-9]+\\\\.?)+/css/materialdesignicons\\\\.min\\\\.css|' +\n    'https://cloud\\\\.typography\\\\.com/' +\n    '[0-9]*/[0-9]*/css/fonts\\\\.css|' +\n    'https://fast\\\\.fonts\\\\.net/.*|' +\n    'https://fonts\\\\.googleapis\\\\.com/css2?\\\\?.*|' +\n    'https://fonts\\\\.googleapis\\\\.com/icon\\\\?.*|' +\n    'https://fonts\\\\.googleapis\\\\.com/earlyaccess/.*\\\\.css|' +\n    'https://maxcdn\\\\.bootstrapcdn\\\\.com/font-awesome/' +\n    '([0-9]+\\\\.?)+/css/font-awesome\\\\.min\\\\.css(\\\\?.*)?|' +\n    'https://(use|pro)\\\\.fontawesome\\\\.com/releases/v([0-9]+\\\\.?)+' +\n    '/css/[0-9a-zA-Z-]+\\\\.css|' +\n    'https://(use|pro)\\\\.fontawesome\\\\.com/[0-9a-zA-Z-]+\\\\.css|' +\n    'https://use\\\\.typekit\\\\.net/[\\\\w\\\\p{L}\\\\p{N}_]+\\\\.css'\n);\n\n// If editing please also change:\n// extensions/amp-a4a/amp-a4a-format.md#allowed-amp-extensions-and-builtins\nconst EXTENSION_ALLOWLIST = map({\n  'amp-accordion': true,\n  'amp-ad-exit': true,\n  'amp-analytics': true,\n  'amp-anim': true,\n  'amp-animation': true,\n  'amp-audio': true,\n  'amp-bind': true,\n  'amp-carousel': true,\n  'amp-fit-text': true,\n  'amp-font': true,\n  'amp-form': true,\n  'amp-gwd-animation': true,\n  'amp-img': true,\n  'amp-layout': true,\n  'amp-lightbox': true,\n  'amp-mraid': true,\n  'amp-mustache': true,\n  'amp-pixel': true,\n  'amp-position-observer': true,\n  'amp-selector': true,\n  'amp-social-share': true,\n  'amp-video': true,\n});\n\n/**\n * Escape any regex chars from given string.\n * https://developer.cdn.mozilla.net/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#escaping\n * @param {string} string\n * @return {string}\n */\nfunction escapeRegExp(string) {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n\nconst EXTENSION_URL_PREFIX = new RegExp(\n  '^' + escapeRegExp(urls.cdn) + '/(rtv/\\\\d+/)?v0/'\n);\n\n/**\n * Sanitizes AMPHTML Ad head element and extracts extensions to be installed.\n * @param {!Window} win\n * @param {!Element} adElement\n * @param {?Element} head\n * @return {?ValidatedHeadDef}\n */\nexport function processHead(win, adElement, head) {\n  if (!head || !head.firstChild) {\n    return null;\n  }\n\n  const root = rootNodeFor(head);\n  const htmlTag = root.documentElement;\n  if (\n    !htmlTag ||\n    (!htmlTag.hasAttribute('amp4ads') &&\n      !htmlTag.hasAttribute('\u26A1\uFE0F4ads') &&\n      !htmlTag.hasAttribute('\u26A14ads')) // Unicode weirdness.\n  ) {\n    return null;\n  }\n\n  const urlService = Services.urlForDoc(adElement);\n  /** @type {!Array<{extensionId: string, extensionVersion: string}>} */\n  const extensions = [];\n  const fonts = [];\n  const images = [];\n\n  let element = head.firstElementChild;\n  while (element) {\n    // Store next element here as the following code will remove\n    // certain elements from the detached DOM.\n    const nextElement = element.nextElementSibling;\n    switch (element.tagName.toUpperCase()) {\n      case 'SCRIPT':\n        handleScript(extensions, element);\n        break;\n      case 'STYLE':\n        handleStyle(element);\n        break;\n      case 'LINK':\n        handleLink(fonts, images, element);\n        break;\n      // Allow these without validation.\n      case 'META':\n      case 'TITLE':\n        break;\n      default:\n        removeElement(element);\n        break;\n    }\n\n    element = nextElement;\n  }\n\n  // Load any extensions; do not wait on their promises as this\n  // is just to prefetch.\n  preloadFriendlyIframeEmbedExtensions(win, extensions);\n\n  // Preload any fonts.\n  fonts.forEach((fontUrl) =>\n    Services.preconnectFor(win).preload(adElement.getAmpDoc(), fontUrl)\n  );\n\n  // Preload any AMP images.\n  images.forEach(\n    (imageUrl) =>\n      urlService.isSecure(imageUrl) &&\n      Services.preconnectFor(win).preload(adElement.getAmpDoc(), imageUrl)\n  );\n\n  return {\n    extensions,\n    head,\n  };\n}\n\n/**\n * Allows json scripts and allowlisted amp elements while removing others.\n * @param {!Array<{extensionId: string, extensionVersion: string}>} extensions\n * @param {!Element} script\n */\nfunction handleScript(extensions, script) {\n  if (script.type === 'application/json') {\n    return;\n  }\n\n  const {src} = script;\n  const isTesting = getMode().test || getMode().localDev;\n  if (\n    EXTENSION_URL_PREFIX.test(src) ||\n    // Integration tests point to local files.\n    (isTesting && includes(src, '/dist/'))\n  ) {\n    const extensionInfo = parseExtensionUrl(src);\n    if (extensionInfo && EXTENSION_ALLOWLIST[extensionInfo.extensionId]) {\n      extensions.push(extensionInfo);\n    }\n  }\n\n  removeElement(script);\n}\n\n/**\n * Collect links that are from allowed font providers or used for image\n * preloading. Remove other <link> elements.\n * @param {!Array<string>} fonts\n * @param {!Array<string>} images\n * @param {!Element} link\n */\nfunction handleLink(fonts, images, link) {\n  const {as, href, rel} = link;\n  if (rel === 'preload' && as === 'image') {\n    images.push(href);\n    return;\n  }\n\n  if (rel === 'stylesheet' && ALLOWED_FONT_REGEX.test(href)) {\n    fonts.push(href);\n    return;\n  }\n\n  removeElement(link);\n}\n\n/**\n * Remove any non `amp-custom` or `amp-keyframe` styles.\n * @param {!Element} style\n */\nfunction handleStyle(style) {\n  if (\n    style.hasAttribute('amp-custom') ||\n    style.hasAttribute('amp-keyframes') ||\n    style.hasAttribute('amp4ads-boilerplate')\n  ) {\n    return;\n  }\n  removeElement(style);\n}\n", "import {createElementWithAttributes, escapeHtml} from '#core/dom';\nimport {dict} from '#core/types/object';\n\nimport {getFieSafeScriptSrcs} from '../../../src/friendly-iframe-embed';\n\n// If making changes also change ALLOWED_FONT_REGEX in head-validation.js\n/** @const {string} */\nconst fontProviderAllowList = [\n  'https://cdn.materialdesignicons.com',\n  'https://cloud.typography.com',\n  'https://fast.fonts.net',\n  'https://fonts.googleapis.com',\n  'https://maxcdn.bootstrapcdn.com',\n  'https://p.typekit.net',\n  'https://pro.fontawesome.com',\n  'https://use.fontawesome.com',\n  'https://use.typekit.net',\n].join(' ');\n\n/** @const {string} */\nconst sandboxVals =\n  'allow-forms ' +\n  'allow-popups ' +\n  'allow-popups-to-escape-sandbox ' +\n  'allow-same-origin ' +\n  'allow-scripts ' +\n  'allow-top-navigation';\n\nconst TOKEN_VALUE_1P =\n  'AzKSXqpxJ3GJ4xUcmPM97hZVJG1MQdsBvJDfIuF7mkjVveoiTyt11U3+HIw4U2VdqQ3CNKMUoohEGtHUnS3h8wAAAACBeyJvcmlnaW4iOiJodHRwczovL2FtcHByb2plY3Qub3JnOjQ0MyIsImZlYXR1cmUiOiJDb252ZXJzaW9uTWVhc3VyZW1lbnQiLCJleHBpcnkiOjE2MzQwODMxOTksImlzU3ViZG9tYWluIjp0cnVlLCJ1c2FnZSI6InN1YnNldCJ9';\n\n/**\n * Create the starting html for all FIE ads. If streaming is supported body will be\n * piped in later.\n * @param {string} url\n * @param {string} sanitizedHeadElements\n * @param {string} body\n * @return {string}\n */\nexport const createSecureDocSkeleton = (url, sanitizedHeadElements, body) =>\n  `<!DOCTYPE html>\n  <html \u26A14ads lang=\"en\">\n  <head>\n    <base href=\"${escapeHtml(url)}\">\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=Content-Security-Policy content=\"\n      img-src * data:;\n      media-src *;\n      font-src *;\n      connect-src *;\n      script-src ${getFieSafeScriptSrcs()};\n      object-src 'none';\n      child-src 'none';\n      default-src 'none';\n      style-src ${fontProviderAllowList} 'unsafe-inline';\n    \">\n    <meta http-equiv=\"origin-trial\" content=${TOKEN_VALUE_1P}>    \n    ${sanitizedHeadElements}\n  </head>\n  <body>${body}</body>\n  </html>`;\n\n/**\n * Create iframe with predefined CSP and sandbox attributes for security.\n * @param {!Window} win\n * @param {string} title\n * @param {string} height\n * @param {string} width\n * @return {!HTMLIFrameElement}\n */\nexport function createSecureFrame(win, title, height, width) {\n  const {document} = win;\n  const iframe = /** @type {!HTMLIFrameElement} */ (\n    createElementWithAttributes(\n      document,\n      'iframe',\n      dict({\n        // NOTE: It is possible for either width or height to be 'auto',\n        // a non-numeric value.\n        'height': height,\n        'width': width,\n        'title': title,\n        'frameborder': '0',\n        'allowfullscreen': '',\n        'allowtransparency': '',\n        'scrolling': 'no',\n        'sandbox': sandboxVals,\n        'role': 'region',\n        'aria-label': 'Advertisement',\n        'tabindex': '0',\n      })\n    )\n  );\n\n  if (isAttributionReportingSupported(document)) {\n    iframe.setAttribute('allow', `attribution-reporting 'src'`);\n  }\n\n  return iframe;\n}\n\n/**\n * Determine if `attribution-reporting` API is available in browser.\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isAttributionReportingSupported(doc) {\n  return doc.featurePolicy?.features().includes('attribution-reporting');\n}\n", "import {isArray} from '#core/types';\nimport {base64DecodeToBytes} from '#core/types/string/base64';\n\nimport {Services} from '#service';\n\nimport {dev, devAssert, user} from '#utils/log';\n\n/** @visibleForTesting */\nexport const AMP_SIGNATURE_HEADER = 'AMP-Fast-Fetch-Signature';\n\n/**\n * The result of an attempt to verify a Fast Fetch signature. The different\n * error statuses are used for reporting errors to the ad network.\n *\n * @enum {number}\n */\nexport const VerificationStatus = {\n  /** The ad was successfully verified as AMP. */\n  OK: 0,\n\n  /**\n   * Verification failed because of a factor beyond the ad network's control,\n   * such as a network connectivity failure, unavailability of Web Cryptography\n   * in the current browsing context, or a misbehaving signing service.\n   */\n  UNVERIFIED: 1,\n\n  /**\n   * Verification failed because the keypair ID provided by the ad network did\n   * not correspond to any public key offered by the signing service.\n   */\n  ERROR_KEY_NOT_FOUND: 2,\n\n  /**\n   * Verification failed because the signature provided by the ad network was\n   * not the correct cryptographic signature for the given creative data and\n   * public key.\n   */\n  ERROR_SIGNATURE_MISMATCH: 3,\n\n  /**\n   * Verification failed because the page does not have web crypto available,\n   * i.e. is not SSL.\n   */\n  CRYPTO_UNAVAILABLE: 4,\n};\n\n/**\n * A window-level object that encapsulates the logic for obtaining public keys\n * from Fast Fetch signing services and cryptographically verifying signatures\n * of AMP creatives.\n *\n * Unlike an AMP service, a signature verifier is **stateful**. It maintains a\n * cache of all public keys that it has previously downloaded and imported, and\n * also keeps track of which keys and signing services have already had\n * unsuccessful download or import attempts and should not be attempted again.\n *\n * This entire class is currently dead code in production, but will soon be\n * introduced as an experiment.\n */\nexport class SignatureVerifier {\n  /**\n   * @param {!Window} win\n   * @param {!Object<string, string>} signingServerURLs a map from the name of\n   *    each trusted signing service to the URL of its public key endpoint\n   */\n  constructor(win, signingServerURLs) {\n    /** @private @const {!Window} */\n    this.win_ = win;\n\n    /** @private @const {!Object<string, string>} */\n    this.signingServerURLs_ = signingServerURLs;\n\n    /**\n     * The cache where all the public keys are stored.\n     *\n     * This field has a lot of internal structure and its type's a little hairy,\n     * so here's a rundown of what each piece means:\n     *  - If Web Cryptography isn't available in the current browsing context,\n     *    then the entire field is null. Since the keys are of no use, we don't\n     *    fetch them.\n     *  - Otherwise, it's a map-like `Object` from signing service names (as\n     *    defined in the Fast Fetch config registry) to \"signer\" objects.\n     *  - The `promise` property of each signer resolves to a boolean indicating\n     *    whether the most recent attempt to fetch and import that signing\n     *    service's public keys was successful. If the promise is still pending,\n     *    then an attempt is currently in progress. This property is mutable;\n     *    its value is replaced with a new promise when a new attempt is made.\n     *    Invariant: only one attempt may be in progress at a time, so this\n     *    property may not be mutated while the current promise is pending.\n     *  - The `keys` property of each signer is a map-like `Object` from keypair\n     *    IDs to nullable key promises. (This means that a property access on\n     *    this object may evaluate to `undefined`, `null`, or a `Promise`\n     *    object.) The `keys` object is internally mutable; new keys are added\n     *    to it as they are fetched. Invariant: the `keys` object may be mutated\n     *    only while the corresponding `promise` object is pending; this ensures\n     *    that callbacks chained to `promise` may observe `keys` without being\n     *    subject to race conditions.\n     *  - If a key promise (i.e., the value of a property access on the `keys`\n     *    object) is absent (i.e., `undefined`), then no key with that keypair\n     *    ID is present (but this could be because of a stale cache). If it's\n     *    null, then no key with that keypair ID could be found even after\n     *    cachebusting. If it's a `Promise` that resolves to `null`, then key\n     *    data for that keypair ID was found but could not be imported\n     *    successfully; this most likely indicates signing service misbehavior.\n     *    The success case is a `Promise` that resolves to a `CryptoKey`.\n     *\n     * @private @const {?Object<string, {promise: !Promise<boolean>, keys: !Object<string, ?Promise<?webCrypto.CryptoKey>>}>}\n     */\n    this.signers_ = Services.cryptoFor(win).isPkcsAvailable() ? {} : null;\n\n    /**\n     * Gets a notion of current time, in ms.  The value is not necessarily\n     * absolute, so should be used only for computing deltas.  When available,\n     * the performance system will be used; otherwise Date.now() will be\n     * returned.\n     *\n     * @protected @const {function(): number}\n     */\n    this.getNow_ =\n      win.performance && win.performance.now\n        ? win.performance.now.bind(win.performance)\n        : Date.now;\n  }\n\n  /**\n   * Fetches and imports the public keyset for the named signing service,\n   * without any cachebusting. Hopefully, this will hit cache in many cases\n   * and not make an actual network round-trip. This method should be called\n   * as early as possible, once it's known which signing service is likely to\n   * be used, so that the network request and key imports can execute in\n   * parallel with other operations.\n   *\n   * @param {string} signingServiceName\n   */\n  loadKeyset(signingServiceName) {\n    if (this.signers_ && !this.signers_[signingServiceName]) {\n      const keys = {};\n      const promise = this.fetchAndAddKeys_(keys, signingServiceName, null);\n      this.signers_[signingServiceName] = {promise, keys};\n    }\n  }\n\n  /**\n   * Extracts a cryptographic signature from `headers` and attempts to verify\n   * that it's the correct cryptographic signature for `creative`.\n   *\n   * As a precondition, `loadKeyset(signingServiceName)` must have already been\n   * called.\n   *\n   * @param {!ArrayBuffer} creative\n   * @param {!Headers} headers\n   * @return {!Promise<!VerificationStatus>}\n   */\n  verify(creative, headers) {\n    const signatureFormat =\n      /^([A-Za-z0-9._-]+):([A-Za-z0-9._-]+):([A-Za-z0-9+/]{341}[AQgw]==)$/;\n    if (!headers.has(AMP_SIGNATURE_HEADER)) {\n      return Promise.resolve(VerificationStatus.UNVERIFIED);\n    }\n    const headerValue = headers.get(AMP_SIGNATURE_HEADER);\n    const match = signatureFormat.exec(headerValue);\n    if (!match) {\n      // TODO(@taymonbeal, #9274): replace this with real error reporting\n      user().error(\n        'AMP-A4A',\n        `Invalid signature header: ${headerValue.split(':')[0]}`\n      );\n      return Promise.resolve(VerificationStatus.ERROR_SIGNATURE_MISMATCH);\n    }\n    return this.verifyCreativeAndSignature(\n      match[1],\n      match[2],\n      base64DecodeToBytes(match[3]),\n      creative\n    );\n  }\n\n  /**\n   * Verifies that `signature` is the correct cryptographic signature for\n   * `creative`, with the public key from the named signing service identified\n   * by `keypairId`.\n   *\n   * As a precondition, `loadKeyset(signingServiceName)` must have already been\n   * called.\n   *\n   * If the keyset for the named signing service was imported successfully but\n   * did not include a key for `keypairId`, this may be the result of a stale\n   * browser cache. To work around this, `keypairId` is added to the public key\n   * endpoint URL as a query parameter and the keyset is re-fetched. Other kinds\n   * of failures, including network connectivity failures, are not retried.\n   *\n   * @param {string} signingServiceName\n   * @param {string} keypairId\n   * @param {!Uint8Array} signature\n   * @param {!ArrayBuffer} creative\n   * @return {!Promise<!VerificationStatus>}\n   * @visibleForTesting\n   */\n  verifyCreativeAndSignature(\n    signingServiceName,\n    keypairId,\n    signature,\n    creative\n  ) {\n    if (!this.signers_) {\n      // Web Cryptography isn't available.\n      return Promise.resolve(VerificationStatus.CRYPTO_UNAVAILABLE);\n    }\n    const signer = this.signers_[signingServiceName];\n    devAssert(\n      signer,\n      'Keyset for service %s not loaded before verification',\n      signingServiceName\n    );\n    return signer.promise.then((success) => {\n      if (!success) {\n        // The public keyset couldn't be fetched and imported. Probably a\n        // network connectivity failure.\n        return VerificationStatus.UNVERIFIED;\n      }\n      const keyPromise = signer.keys[keypairId];\n      if (keyPromise === undefined) {\n        // We don't have this key, but maybe the cache is stale; try\n        // cachebusting.\n        signer.promise = this.fetchAndAddKeys_(\n          signer.keys,\n          signingServiceName,\n          keypairId\n        ).then((success) => {\n          if (signer.keys[keypairId] === undefined) {\n            // We still don't have this key; make sure we never try\n            // again.\n            signer.keys[keypairId] = null;\n          }\n          return success;\n        });\n        // This \"recursive\" call can recurse at most once.\n        return this.verifyCreativeAndSignature(\n          signingServiceName,\n          keypairId,\n          signature,\n          creative\n        );\n      } else if (keyPromise === null) {\n        // We don't have this key and we already tried cachebusting.\n        return VerificationStatus.ERROR_KEY_NOT_FOUND;\n      } else {\n        return keyPromise.then((key) => {\n          if (!key) {\n            // This particular public key couldn't be imported. Probably the\n            // signing service's fault.\n            return VerificationStatus.UNVERIFIED;\n          }\n          const crypto = Services.cryptoFor(this.win_);\n          return crypto.verifyPkcs(key, signature, creative).then(\n            (result) =>\n              result\n                ? VerificationStatus.OK\n                : VerificationStatus.ERROR_SIGNATURE_MISMATCH,\n            (err) => {\n              // Web Cryptography rejected the verification attempt. This\n              // hopefully won't happen in the wild, but browsers can be weird\n              // about this, so we need to guard against the possibility.\n              // Phone home to the AMP Project so that we can understand why\n              // this occurred.\n              const message = err && err.message;\n              dev().error('AMP-A4A', `Failed to verify signature: ${message}`);\n              return VerificationStatus.UNVERIFIED;\n            }\n          );\n        });\n      }\n    });\n  }\n\n  /**\n   * Try to download the keyset for the named signing service and add a promise\n   * for each key to the `keys` object.\n   *\n   * @param {!Object<string, ?Promise<?webCrypto.CryptoKey>>} keys the object to\n   *     add each key promise to. This is mutated while the returned promise is\n   *     pending.\n   * @param {string} signingServiceName\n   * @param {?string} keypairId the keypair ID to include in the query string\n   *     for cachebusting purposes, or `null` if no cachebusting is needed\n   * @return {!Promise<boolean>} resolves after the mutation of `keys` is\n   *     complete, to `true` if the keyset was downloaded and parsed\n   *     successfully (even if some keys were malformed), or `false` if a\n   *     keyset-level failure occurred\n   * @private\n   */\n  fetchAndAddKeys_(keys, signingServiceName, keypairId) {\n    let url = this.signingServerURLs_[signingServiceName];\n    if (keypairId != null) {\n      url += '?kid=' + encodeURIComponent(keypairId);\n    }\n    // TODO(@taymonbeal, #11088): consider a timeout on this fetch\n    return Services.xhrFor(this.win_)\n      .fetchJson(url, {\n        mode: 'cors',\n        method: 'GET',\n        // This should be cached across publisher domains, so don't append\n        // __amp_source_origin to the URL.\n        ampCors: false,\n        credentials: 'omit',\n      })\n      .then(\n        (response) => {\n          // These are assertions on signing service behavior required by\n          // the spec. However, nothing terrible happens if they aren't met\n          // and there's no meaningful error recovery to be done if they\n          // fail, so we don't need to do them at runtime in production.\n          // They're included in dev mode as a debugging aid.\n          devAssert(\n            response.status === 200,\n            'Fast Fetch keyset spec requires status code 200'\n          );\n          devAssert(\n            response.headers.get('Content-Type') == 'application/jwk-set+json',\n            'Fast Fetch keyset spec requires Content-Type: ' +\n              'application/jwk-set+json'\n          );\n          return response.json().then(\n            (jsonResponse) => {\n              const jwkSet = /** @type {!JsonObject} */ (jsonResponse);\n              // This is supposed to be a JSON Web Key Set, as defined in\n              // Section 5 of RFC 7517. However, the signing service could\n              // misbehave and send an arbitrary JSON value, so we have to\n              // type-check at runtime.\n              if (!jwkSet || !isArray(jwkSet['keys'])) {\n                signingServiceError(\n                  signingServiceName,\n                  `Key set (${JSON.stringify(jwkSet)}) has no \"keys\"`\n                );\n                return false;\n              }\n              /** @type {!Array} */ (jwkSet['keys']).forEach((jwk) => {\n                if (!jwk || typeof jwk['kid'] != 'string') {\n                  signingServiceError(\n                    signingServiceName,\n                    `Key (${JSON.stringify(jwk)}) has no \"kid\"`\n                  );\n                } else if (keys[jwk['kid']] === undefined) {\n                  // We haven't seen this keypair ID before.\n                  keys[jwk['kid']] = Services.cryptoFor(this.win_)\n                    .importPkcsKey(jwk)\n                    .catch((err) => {\n                      // Web Cryptography rejected the key\n                      // import attempt. Either the signing\n                      // service sent a malformed key or the\n                      // browser is doing something weird.\n                      const jwkData = JSON.stringify(jwk);\n                      const message = err && err.message;\n                      signingServiceError(\n                        signingServiceName,\n                        `Failed to import key (${jwkData}): ${message}`\n                      );\n                      return null;\n                    });\n                }\n              });\n              return true;\n            },\n            (err) => {\n              // The signing service didn't send valid JSON.\n              signingServiceError(\n                signingServiceName,\n                `Failed to parse JSON: ${err && err.response}`\n              );\n              return false;\n            }\n          );\n        },\n        (err) => {\n          // Some kind of error occurred during the XHR. This could be a lot\n          // of things (and we have no type information), but if there's no\n          // `response` it's probably a network connectivity failure, so we\n          // ignore it. Unfortunately, we can't distinguish this from a CORS\n          // problem.\n          if (err && err.response) {\n            // This probably indicates a non-2xx HTTP status code.\n            signingServiceError(\n              signingServiceName,\n              `Status code ${err.response.status}`\n            );\n          }\n          return false;\n        }\n      );\n  }\n}\n\n/**\n * Report an error caused by a signing service. Since signing services currently\n * don't have their own error logging URLs, we just send everything to the AMP\n * Project.\n *\n * @param {string} signingServiceName\n * @param {string} message\n * @private\n */\nfunction signingServiceError(signingServiceName, message) {\n  dev().error(\n    'AMP-A4A',\n    `Signing service error for ${signingServiceName}: ${message}`\n  );\n}\n", "import {Deferred} from '#core/data-structures/promise';\nimport {isIframed} from '#core/dom';\nimport {memo} from '#core/types/object';\nimport {getWin} from '#core/window';\n\nimport {getMode} from '../../../src/mode';\n\nconst OBSERVERS_MAP_PROP = '__AMP_A4A_VP_MAP';\n\n/**\n * Resolves when the underlying element is within the given viewport range.\n * @param {!Element} element\n * @param {number} viewportNum\n * @return {!Promise}\n */\nexport function whenWithinViewport(element, viewportNum) {\n  // This can only fully be implemented when `root=document` is polyfilled\n  // everywhere.\n  if (!(WITHIN_VIEWPORT_INOB || getMode().localDev || getMode().test)) {\n    return Promise.reject('!WITHIN_VIEWPORT_INOB');\n  }\n\n  const win = getWin(element);\n  const observersMap = memo(win, OBSERVERS_MAP_PROP, createObserversMap);\n\n  let observer = observersMap.get(viewportNum);\n  if (!observer) {\n    observer = createObserver(win, viewportNum);\n    observersMap.set(viewportNum, observer);\n  }\n  return observer(element);\n}\n\n/** @return {!Map<string, function(!Element):!Promise>} */\nconst createObserversMap = () => new Map();\n\n/**\n * @param {!Window} win\n * @param {number} viewportNum\n * @return {function(!Element):!Promise}\n */\nfunction createObserver(win, viewportNum) {\n  const elements = new WeakMap();\n\n  const callback = (records) => {\n    for (let i = 0; i < records.length; i++) {\n      const {isIntersecting, target: element} = records[i];\n      const deferred = elements.get(element);\n      if (deferred && isIntersecting) {\n        deferred.resolve();\n        observer.unobserve(element);\n        elements.delete(element);\n      }\n    }\n  };\n\n  const iframed = isIframed(win);\n  const root = /** @type {?Element} */ (\n    iframed ? /** @type {*} */ (win.document) : null\n  );\n  const observer = new win.IntersectionObserver(callback, {\n    root,\n    rootMargin: `${(viewportNum - 1) * 100}%`,\n  });\n\n  return (element) => {\n    let deferred = elements.get(element);\n    if (!deferred) {\n      deferred = new Deferred();\n      elements.set(element, deferred);\n      observer.observe(element);\n    }\n    return deferred.promise;\n  };\n}\n", "import {computedStyle} from '#core/dom/style';\n\nimport {dev} from '#utils/log';\n\nimport {getParentWindowFrameElement} from './service-helpers';\n\nconst AD_CONTAINER_PROP = '__AMP__AD_CONTAINER';\n\n/**\n * Tags that are allowed to have fixed positioning\n * @const {!Object<string, boolean>}\n */\nconst CONTAINERS = {\n  'AMP-FX-FLYING-CARPET': true,\n  'AMP-LIGHTBOX': true,\n  'AMP-STICKY-AD': true,\n  'AMP-LIGHTBOX-GALLERY': true,\n};\n\n/**\n * Determines if an element is fixed-positioned.\n * OK to use, because it's only called from onLayoutMeasure\n * @param {!Element} el\n * @param {!Window} win\n * @return {boolean}\n */\nfunction isPositionFixed(el, win) {\n  const {position} = computedStyle(win, el);\n  // We consider sticky positions as fixed, since they can be fixed.\n  return position == 'fixed' || position == 'sticky';\n}\n\n/**\n * @param {!Element} element\n * @param {!Window} win\n * @return {boolean} whether the element position is allowed. If the element\n * belongs to CONTAINERS, it is allowed to be position fixed.\n * If the element has a position fixed ancestor, it is not allowed.\n * This should only be called when a layout on the page was just forced\n * anyway.\n */\nexport function isAdPositionAllowed(element, win) {\n  let hasFixedAncestor = false;\n  let containers = 0;\n  let el = element;\n  do {\n    if (CONTAINERS[el.tagName]) {\n      // The containers must not themselves be contained in a fixed-position\n      // element. Continue the search.\n      containers++;\n      hasFixedAncestor = false;\n    } else if (isPositionFixed(dev().assertElement(el), win)) {\n      // Because certain blessed elements may contain a position fixed\n      // container (which contain an ad), we continue to search the\n      // ancestry tree.\n      hasFixedAncestor = true;\n    }\n    el = el.parentElement;\n  } while (el && el.tagName != 'BODY');\n  return !hasFixedAncestor && containers <= 1;\n}\n\n/**\n * Returns the blessed container element tagName if the ad is contained by one.\n * This is called during layout measure.\n * @param {!Element} element\n * @return {?string}\n */\nexport function getAdContainer(element) {\n  if (element[AD_CONTAINER_PROP] === undefined) {\n    let el = element.parentElement;\n    while (el && el.tagName != 'BODY') {\n      if (CONTAINERS[el.tagName]) {\n        return (element[AD_CONTAINER_PROP] = el.tagName);\n      }\n      el = el.parentElement;\n    }\n    element[AD_CONTAINER_PROP] = null;\n  }\n  return element[AD_CONTAINER_PROP];\n}\n\n/**\n * Gets the resource ID of the amp-ad element containing the passed node.\n * If there is no containing amp-ad tag, then null will be returned.\n * TODO(jonkeller): Investigate whether non-A4A use case is needed. Issue 11436\n * @param {!Element} node\n * @param {!Window} topWin\n * @return {?string}\n */\nexport function getAmpAdResourceId(node, topWin) {\n  try {\n    const frameParent = getParentWindowFrameElement(node, topWin).parentElement;\n    if (frameParent.nodeName == 'AMP-AD') {\n      return String(frameParent.getResourceId());\n    }\n  } catch (e) {}\n  // Whether we entered the catch above (e.g. due to attempt to access\n  // across xdomain boundary), or failed to enter the if further above, the\n  // node is not within a friendly amp-ad tag. So, there is no amp-ad\n  // resource ID. How to handle that is up to the caller, but see TODO above.\n  return null;\n}\n", "/* Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from '#core/data-structures/promise';\nimport {Services} from '#service';\nimport {user, userAssert} from '#utils/log';\n\n/**\n * Store loading ads info within window to ensure it can be properly stored\n * across separately compiled binaries that share load throttling.\n * @const ID of window variable used to track 3p ads waiting to load.\n */\nconst LOADING_ADS_WIN_ID_ = '3pla';\n\n/** @private {?Promise} resolves when no 3p throttle */\nlet throttlePromise_ = null;\n/** @private {?Function} resolver for throttle promise */\nlet throttlePromiseResolver_ = null;\n\n/**\n * @param {!Window} win\n * @return {boolean} Whether 3p is currently throttled.\n */\nexport function is3pThrottled(win) {\n  return !!win[LOADING_ADS_WIN_ID_];\n}\n\n/** @return {!Promise} resolves when no 3p throttle */\nexport function waitFor3pThrottle() {\n  return throttlePromise_ || Promise.resolve();\n}\n\n/**\n * @param {!Element} element\n * @return {?number} number if explicit value should be used otherwise super\n *    default should be used.\n */\nexport function getAmpAdRenderOutsideViewport(element) {\n  const rawValue = element.getAttribute('data-loading-strategy');\n  if (rawValue == null) {\n    return null;\n  }\n  // Ad opts into lazier loading strategy where we only load ads that are\n  // at closer given number of viewports away.\n  if (rawValue == 'prefer-viewability-over-views' || rawValue == '') {\n    return 1.25;\n  }\n  const errorMessage =\n    'Value of data-loading-strategy should be a float number in range ' +\n    'of [0, 3], but got ' +\n    rawValue;\n  const viewportNumber = user().assertNumber(\n    parseFloat(rawValue),\n    errorMessage\n  );\n  userAssert(viewportNumber >= 0 && viewportNumber <= 3, errorMessage);\n  return viewportNumber;\n}\n\n/**\n * Increments loading ads count for throttling.\n * @param {!Window} win\n * @param {!Promise=} opt_loadingPromise\n */\nexport function incrementLoadingAds(win, opt_loadingPromise) {\n  if (win[LOADING_ADS_WIN_ID_] === undefined) {\n    win[LOADING_ADS_WIN_ID_] = 0;\n  }\n  win[LOADING_ADS_WIN_ID_]++;\n\n  if (!throttlePromise_) {\n    const deferred = new Deferred();\n    throttlePromise_ = deferred.promise;\n    throttlePromiseResolver_ = deferred.resolve;\n  }\n\n  Services.timerFor(win)\n    .timeoutPromise(1000, opt_loadingPromise)\n    .catch(() => {})\n    .then(() => {\n      if (!--win[LOADING_ADS_WIN_ID_]) {\n        throttlePromiseResolver_();\n        throttlePromise_ = null;\n        throttlePromiseResolver_ = null;\n      }\n    });\n}\n", "import {signingServerURLs} from '#ads/_a4a-config';\n\nimport {CONSENT_POLICY_STATE} from '#core/constants/consent-state';\nimport {Deferred, tryResolve} from '#core/data-structures/promise';\nimport {createElementWithAttributes} from '#core/dom';\nimport {\n  Layout,\n  LayoutPriority,\n  applyFillContent,\n  isLayoutSizeDefined,\n} from '#core/dom/layout';\nimport {intersectionEntryToJson} from '#core/dom/layout/intersection';\nimport {observeIntersections} from '#core/dom/layout/viewport-observer';\nimport {DetachedDomStream, streamResponseToWriter} from '#core/dom/stream';\nimport {setStyle} from '#core/dom/style';\nimport {duplicateErrorIfNecessary} from '#core/error';\nimport {isArray, isEnumValue, isObject} from '#core/types';\nimport {dict} from '#core/types/object';\nimport {parseJson} from '#core/types/object/json';\nimport {padStart} from '#core/types/string';\nimport {utf8Decode} from '#core/types/string/bytes';\nimport {tryDecodeUriComponent} from '#core/types/string/url';\n\nimport {isExperimentOn} from '#experiments';\n\nimport {Services} from '#service';\nimport {installRealTimeConfigServiceForDoc} from '#service/real-time-config/real-time-config-impl';\nimport {installUrlReplacementsForEmbed} from '#service/url-replacements-impl';\n\nimport {triggerAnalyticsEvent} from '#utils/analytics';\nimport {DomTransformStream} from '#utils/dom-tranform-stream';\nimport {listenOnce} from '#utils/event-helper';\nimport {dev, devAssert, logHashParam, user, userAssert} from '#utils/log';\n\nimport {A4AVariableSource} from './a4a-variable-source';\nimport {getExtensionsFromMetadata} from './amp-ad-utils';\nimport {processHead} from './head-validation';\nimport {\n  createSecureDocSkeleton,\n  createSecureFrame,\n  isAttributionReportingSupported,\n} from './secure-frame';\nimport {SignatureVerifier, VerificationStatus} from './signature-verifier';\nimport {whenWithinViewport} from './within-viewport';\n\nimport {\n  applySandbox,\n  generateSentinel,\n  getDefaultBootstrapBaseUrl,\n} from '../../../src/3p-frame';\nimport {isAdPositionAllowed} from '../../../src/ad-helper';\nimport {\n  getConsentMetadata,\n  getConsentPolicyInfo,\n  getConsentPolicyState,\n} from '../../../src/consent';\nimport {cancellation, isCancellation} from '../../../src/error-reporting';\nimport {insertAnalyticsElement} from '../../../src/extension-analytics';\nimport {\n  installFriendlyIframeEmbed,\n  isSrcdocSupported,\n  preloadFriendlyIframeEmbedExtensions,\n} from '../../../src/friendly-iframe-embed';\nimport {getContextMetadata} from '../../../src/iframe-attributes';\nimport {getMode} from '../../../src/mode';\nimport {assertHttpsUrl} from '../../../src/url';\nimport {\n  getAmpAdRenderOutsideViewport,\n  incrementLoadingAds,\n  is3pThrottled,\n} from '../../amp-ad/0.1/concurrent-load';\nimport {GEO_IN_GROUP} from '../../amp-geo/0.1/amp-geo-in-group';\n\n/** @type {Array<string>} */\nconst METADATA_STRINGS = [\n  '<script amp-ad-metadata type=application/json>',\n  '<script type=\"application/json\" amp-ad-metadata>',\n  '<script type=application/json amp-ad-metadata>',\n];\n\n// TODO(tdrl): Temporary, while we're verifying whether SafeFrame is an\n// acceptable solution to the 'Safari on iOS doesn't fetch iframe src from\n// cache' issue.  See https://github.com/ampproject/amphtml/issues/5614\n/** @type {string} */\nexport const DEFAULT_SAFEFRAME_VERSION = '1-0-37';\n\n/** @const {string} */\nexport const CREATIVE_SIZE_HEADER = 'X-CreativeSize';\n\n/** @type {string} @visibleForTesting */\nexport const RENDERING_TYPE_HEADER = 'X-AmpAdRender';\n\n/** @type {string} @visibleForTesting */\nexport const SAFEFRAME_VERSION_HEADER = 'X-AmpSafeFrameVersion';\n\n/** @type {string} @visibleForTesting */\nexport const EXPERIMENT_FEATURE_HEADER_NAME = 'amp-ff-exps';\n\n/** @type {string} */\nconst TAG = 'amp-a4a';\n\n/** @type {string} */\nexport const NO_CONTENT_RESPONSE = 'NO-CONTENT-RESPONSE';\n\n/** @type {string} */\nexport const NETWORK_FAILURE = 'NETWORK-FAILURE';\n\n/** @type {string} */\nexport const INVALID_SPSA_RESPONSE = 'INVALID-SPSA-RESPONSE';\n\n/** @type {string} */\nexport const IFRAME_GET = 'IFRAME-GET';\n\n/** @enum {string} */\nexport const XORIGIN_MODE = {\n  CLIENT_CACHE: 'client_cache',\n  SAFEFRAME: 'safeframe',\n  NAMEFRAME: 'nameframe',\n  IFRAME_GET: 'iframe_get',\n};\n\n/** @type {!Object} @private */\nconst SHARED_IFRAME_PROPERTIES = dict({\n  'frameborder': '0',\n  'allowfullscreen': '',\n  'allowtransparency': '',\n  'scrolling': 'no',\n  'marginwidth': '0',\n  'marginheight': '0',\n});\n\n/** @typedef {{width: number, height: number}} */\nexport let SizeInfoDef;\n\n/** @typedef {{\n      minifiedCreative: string,\n      customElementExtensions: !Array<string>,\n      customStylesheets: !Array<{href: string}>,\n      images: (Array<string>|undefined),\n      ctaType: (string|undefined),\n      ctaUrl: (string|undefined),\n    }} */\nexport let CreativeMetaDataDef;\n\n/** @typedef {{\n      consentState: (?CONSENT_POLICY_STATE|undefined),\n      consentString: (?string|undefined),\n      consentStringType: (?CONSENT_STRING_TYPE|boolean),\n      gdprApplies: (?boolean|undefined),\n      additionalConsent: (?string|undefined),\n    }} */\nexport let ConsentTupleDef;\n\n/**\n * Name of A4A lifecycle triggers.\n * @enum {string}\n */\nexport const AnalyticsTrigger = {\n  AD_REQUEST_START: 'ad-request-start',\n  AD_RESPONSE_END: 'ad-response-end',\n  AD_RENDER_START: 'ad-render-start',\n  AD_RENDER_END: 'ad-render-end',\n  AD_IFRAME_LOADED: 'ad-iframe-loaded',\n  // This trigger is not part of the normal ads lifecycle and only fires when an\n  // ad is refreshed.\n  AD_REFRESH: 'ad-refresh',\n};\n\n/**\n * Maps the names of lifecycle events to analytics triggers.\n * @const {!Object<string, !AnalyticsTrigger>}\n */\nconst LIFECYCLE_STAGE_TO_ANALYTICS_TRIGGER = {\n  'adRequestStart': AnalyticsTrigger.AD_REQUEST_START,\n  'adRequestEnd': AnalyticsTrigger.AD_RESPONSE_END,\n  'renderFriendlyStart': AnalyticsTrigger.AD_RENDER_START,\n  'renderCrossDomainStart': AnalyticsTrigger.AD_RENDER_START,\n  'renderSafeFrameStart': AnalyticsTrigger.AD_RENDER_START,\n  'renderFriendlyEnd': AnalyticsTrigger.AD_RENDER_END,\n  'renderCrossDomainEnd': AnalyticsTrigger.AD_RENDER_END,\n  'friendlyIframeIniLoad': AnalyticsTrigger.AD_IFRAME_LOADED,\n  'crossDomainIframeLoaded': AnalyticsTrigger.AD_IFRAME_LOADED,\n};\n\n/**\n * Utility function that ensures any error thrown is handled by optional\n * onError handler (if none provided or handler throws, error is swallowed and\n * undefined is returned).\n * @param {!Function} fn to protect\n * @param {T=} inThis An optional object to use as the 'this' object\n *    when calling the function.  If not provided, undefined is bound as this\n *    when calling function.\n * @param {function(this:T, !Error, ...*):?=} onError function given error\n *    and arguments provided to function call.\n * @return {!Function} protected function\n * @template T\n * @visibleForTesting\n */\nexport function protectFunctionWrapper(\n  fn,\n  inThis = undefined,\n  onError = undefined\n) {\n  return (...fnArgs) => {\n    try {\n      return fn.apply(inThis, fnArgs);\n    } catch (err) {\n      if (onError) {\n        try {\n          // Ideally we could use [err, ...var_args] but linter disallows\n          // spread so instead using unshift :(\n          fnArgs.unshift(err);\n          return onError.apply(inThis, fnArgs);\n        } catch (captureErr) {\n          // swallow error if error handler throws.\n        }\n      }\n      // In the event of no optional on error function or its execution throws,\n      // return undefined.\n      return undefined;\n    }\n  };\n}\n\n/** Abstract class for AMP Ad Fast Fetch enabled networks */\nexport class AmpA4A extends AMP.BaseElement {\n  // TODO: Add more error handling throughout code.\n  // TODO: Handle creatives that do not fill.\n\n  /**\n   * @param {!Element} element\n   */\n  constructor(element) {\n    super(element);\n    devAssert(AMP.AmpAdUIHandler);\n    devAssert(AMP.AmpAdXOriginIframeHandler);\n\n    /** @private {?Promise<undefined>} */\n    this.keysetPromise_ = null;\n\n    /**\n     * In no signing experiment metadata will be data from head validation.\n     * @private {?Promise<?CreativeMetaDataDef|?./head-validation.ValidatedHeadDef>}\n     */\n    this.adPromise_ = null;\n\n    /**\n     * @private {number} unique ID of the currently executing promise to allow\n     * for cancellation.\n     */\n    this.promiseId_ = 0;\n\n    /** @private {?string} */\n    this.adUrl_ = null;\n\n    /** @private {?../../../src/friendly-iframe-embed.FriendlyIframeEmbed} */\n    this.friendlyIframeEmbed_ = null;\n\n    /** @type {?AMP.AmpAdUIHandler} */\n    this.uiHandler = null;\n\n    /** @private {?AMP.AmpAdXOriginIframeHandler} */\n    this.xOriginIframeHandler_ = null;\n\n    /** @private {boolean} whether creative has been verified as AMP */\n    this.isVerifiedAmpCreative_ = false;\n\n    /** @private {?ArrayBuffer} */\n    this.creativeBody_ = null;\n\n    /**\n     * Initialize this with the slot width/height attributes, and override\n     * later with what the network implementation returns via extractSize.\n     * Note: Either value may be 'auto' (i.e., non-numeric).\n     *\n     * @private {?({width, height}|../../../src/layout-rect.LayoutRectDef)}\n     */\n    this.creativeSize_ = null;\n\n    /** @private {?../../../src/layout-rect.LayoutSizeDef} */\n    this.originalSlotSize_ = null;\n\n    /**\n     * Note(keithwrightbos) - ensure the default here is null so that ios\n     * uses safeframe when response header is not specified.\n     * @private {?XORIGIN_MODE}\n     */\n    this.experimentalNonAmpCreativeRenderMethod_ =\n      this.getNonAmpCreativeRenderingMethod();\n\n    /**\n     * Gets a notion of current time, in ms.  The value is not necessarily\n     * absolute, so should be used only for computing deltas.  When available,\n     * the performance system will be used; otherwise Date.now() will be\n     * returned.\n     *\n     * @const {function():number}\n     */\n    this.getNow_ =\n      this.win.performance && this.win.performance.now\n        ? this.win.performance.now.bind(this.win.performance)\n        : Date.now;\n\n    /** @const {string} */\n    this.sentinel = generateSentinel(window);\n\n    /**\n     * Used to indicate whether this slot should be collapsed or not. Marked\n     * true if the ad response has status 204, is null, or has a null\n     * arrayBuffer.\n     * @private {boolean}\n     */\n    this.isCollapsed_ = false;\n\n    /**\n     * Frame in which the creative renders (friendly if validated AMP, xdomain\n     * otherwise).\n     * @type {?HTMLIFrameElement}\n     */\n    this.iframe = null;\n\n    /** @type {string} */\n    this.safeframeVersion = DEFAULT_SAFEFRAME_VERSION;\n\n    /**\n     * @protected {boolean} Indicates whether the ad is currently in the\n     *    process of being refreshed.\n     */\n    this.isRefreshing = false;\n\n    /** @protected {boolean} */\n    this.isRelayoutNeededFlag = false;\n\n    /**\n     * Mapping of feature name to value extracted from ad response header\n     * amp-ff-exps with comma separated pairs of '=' separated key/value.\n     * @type {!Object<string,string>}\n     */\n    this.postAdResponseExperimentFeatures = {};\n\n    /**\n     * The configuration for amp-analytics. If null, no amp-analytics element\n     * will be inserted and no analytics events will be fired.\n     * This will be initialized inside of buildCallback.\n     * @private {?JsonObject}\n     */\n    this.a4aAnalyticsConfig_ = null;\n\n    /**\n     * The amp-analytics element that for this impl's analytics config. It will\n     * be null before buildCallback() executes or if the impl does not provide\n     * an analytice config.\n     * @private {?Element}\n     * @visibleForTesting\n     */\n    this.a4aAnalyticsElement_ = null;\n\n    /**\n     * Indicates that this slot is a single page ad within an AMP story.\n     * @type {boolean}\n     */\n    this.isSinglePageStoryAd = false;\n\n    /**\n     * Transfers elements from the detached body to the given body element.\n     * @private {?function(!Element)}\n     */\n    this.transferDomBody_ = null;\n\n    /** @private {?UnlistenDef} */\n    this.unobserveIntersections_ = null;\n  }\n\n  /** @override */\n  getLayoutPriority() {\n    // Priority used for scheduling preload and layout callback.  Because\n    // AMP creatives will be injected as part of the promise chain created\n    // within onLayoutMeasure, this is only relevant to non-AMP creatives\n    // therefore we want this to match the 3p priority.\n    const isPWA = !this.element.getAmpDoc().isSingleDoc();\n    // give the ad higher priority if it is inside a PWA\n    return isPWA ? LayoutPriority.METADATA : LayoutPriority.ADS;\n  }\n\n  /** @override */\n  isLayoutSupported(layout) {\n    return isLayoutSizeDefined(layout);\n  }\n\n  /** @override */\n  isRelayoutNeeded() {\n    return this.isRelayoutNeededFlag;\n  }\n\n  /** @override\n      @return {!Promise|undefined}\n  */\n  buildCallback() {\n    this.creativeSize_ = {\n      width: this.element.getAttribute('width'),\n      height: this.element.getAttribute('height'),\n    };\n    const upgradeDelayMs = Math.round(this.getResource().getUpgradeDelayMs());\n    dev().info(\n      TAG,\n      `upgradeDelay ${this.element.getAttribute('type')}: ${upgradeDelayMs}`\n    );\n\n    this.uiHandler = new AMP.AmpAdUIHandler(this);\n    this.uiHandler.validateStickyAd();\n\n    // Disable crypto key fetching if we are not going to use it in no-signing path.\n    // TODO(ccordry): clean up with no-signing launch.\n    if (!this.isInNoSigningExp()) {\n      const verifier = signatureVerifierFor(this.win);\n      this.keysetPromise_ = this.getAmpDoc()\n        .whenFirstVisible()\n        .then(() => {\n          this.getSigningServiceNames().forEach((signingServiceName) => {\n            verifier.loadKeyset(signingServiceName);\n          });\n        });\n    }\n\n    this.a4aAnalyticsConfig_ = this.getA4aAnalyticsConfig();\n    if (this.a4aAnalyticsConfig_) {\n      // TODO(warrengm): Consider having page-level singletons for networks that\n      // use the same config for all ads.\n      this.a4aAnalyticsElement_ = insertAnalyticsElement(\n        this.element,\n        this.a4aAnalyticsConfig_,\n        true /* loadAnalytics */\n      );\n    }\n\n    this.isSinglePageStoryAd = this.element.hasAttribute('amp-story');\n  }\n\n  /** @override */\n  renderOutsideViewport() {\n    // Ensure non-verified AMP creatives are throttled.\n    if (\n      !this.isVerifiedAmpCreative_ &&\n      is3pThrottled(this.win) &&\n      !this.inNonAmpPreferenceExp()\n    ) {\n      return false;\n    }\n    // Otherwise the ad is good to go.\n    const elementCheck = getAmpAdRenderOutsideViewport(this.element);\n    return elementCheck !== null ? elementCheck : super.renderOutsideViewport();\n  }\n\n  /**\n   * To be overridden by network specific implementation indicating if element\n   * (and environment generally) are valid for sending XHR queries.\n   * @return {boolean} whether element is valid and ad request should be\n   *    sent.  If false, no ad request is sent and slot will be collapsed if\n   *    possible.\n   */\n  isValidElement() {\n    return true;\n  }\n\n  /**\n   * Returns the creativeSize, which is the size extracted from the ad response.\n   * @return {?({width, height}|../../../src/layout-rect.LayoutRectDef)}\n   */\n  getCreativeSize() {\n    return this.creativeSize_;\n  }\n\n  /**\n   * @return {boolean|number} whether ad request should be delayed until\n   *    renderOutsideViewport is met or if number, the amount of viewports.\n   */\n  delayAdRequestEnabled() {\n    return false;\n  }\n\n  /**\n   * Returns preconnect urls for A4A. Ad network should overwrite in their\n   * Fast Fetch implementation and return an array of urls for the runtime to\n   * preconnect to.\n   * @return {!Array<string>}\n   */\n  getPreconnectUrls() {\n    return [];\n  }\n\n  /**\n   * Returns prefetch urls for A4A. Ad network should overwrite in their\n   * Fast Fetch implementation and return an array of urls for the runtime to\n   * prefetch.\n   * @return {!Array<string>}\n   */\n  getPrefetchUrls() {\n    return [];\n  }\n\n  /**\n   * Returns true if this element was loaded from an amp-ad element.  For use by\n   * network-specific implementations that don't want to allow themselves to be\n   * embedded directly into a page.\n   * @return {boolean}\n   */\n  isAmpAdElement() {\n    return (\n      this.element.tagName == 'AMP-AD' || this.element.tagName == 'AMP-EMBED'\n    );\n  }\n\n  /**\n   * Prefetches and preconnects URLs related to the ad using adPreconnect\n   * registration which assumes ad request domain used for 3p is applicable.\n   * @param {boolean=} unusedOnLayout\n   * @override\n   */\n  preconnectCallback(unusedOnLayout) {\n    const preconnect = this.getPreconnectUrls();\n    // NOTE(keithwrightbos): Does not take isValidElement into account so could\n    // preconnect unnecessarily, however it is assumed that isValidElement\n    // matches amp-ad loader predicate such that A4A impl does not load.\n    if (preconnect) {\n      preconnect.forEach((p) => {\n        Services.preconnectFor(this.win).url(\n          this.getAmpDoc(),\n          p,\n          /*opt_preloadAs*/ true\n        );\n      });\n    }\n  }\n\n  /** @override */\n  pauseCallback() {\n    if (this.friendlyIframeEmbed_) {\n      this.friendlyIframeEmbed_.pause();\n    }\n  }\n\n  /** @override */\n  resumeCallback() {\n    // FIE that was not destroyed on unlayoutCallback does not require a new\n    // ad request.\n    if (this.friendlyIframeEmbed_) {\n      this.friendlyIframeEmbed_.resume();\n      return;\n    }\n    // If layout of page has not changed, onLayoutMeasure will not be called\n    // so do so explicitly.\n    const resource = this.getResource();\n    if (resource.hasBeenMeasured() && !resource.isMeasureRequested()) {\n      this.onLayoutMeasure();\n    }\n  }\n\n  /**\n   * @return {!../../../src/service/resource.Resource}\n   * @visibleForTesting\n   */\n  getResource() {\n    return this.element.getResources().getResourceForElement(this.element);\n  }\n\n  /**\n   * @return {boolean} whether adPromise was initialized (indicator of\n   *    element validity).\n   * @protected\n   */\n  hasAdPromise() {\n    return !!this.adPromise_;\n  }\n\n  /**\n   * Should only be called after XHR response headers have been processed and\n   * postAdResponseExperimentFeatures is populated.\n   * @return {boolean} whether in experiment giving non-AMP creatives same\n   *    benefits as AMP (increased priority, no throttle)\n   * @visibleForTesting\n   */\n  inNonAmpPreferenceExp() {\n    return (\n      !!this.postAdResponseExperimentFeatures['pref_neutral_enabled'] &&\n      ['adsense', 'doubleclick'].includes(this.element.getAttribute('type'))\n    );\n  }\n\n  /**\n   * @return {boolean} whether environment/element should initialize ad request\n   *    promise chain.\n   * @private\n   */\n  shouldInitializePromiseChain_() {\n    const slotRect = this.getIntersectionElementLayoutBox();\n    const fixedSizeZeroHeightOrWidth =\n      this.getLayout() != Layout.FLUID &&\n      (slotRect.height == 0 || slotRect.width == 0);\n    if (\n      fixedSizeZeroHeightOrWidth ||\n      this.element.hasAttribute('hidden') ||\n      // TODO(levitzky): May need additional checks for other display:hidden cases.\n      this.element.classList.contains('i-amphtml-hidden-by-media-query')\n    ) {\n      dev().fine(\n        TAG,\n        'onLayoutMeasure canceled due height/width 0',\n        this.element\n      );\n      return false;\n    }\n    if (\n      !this.uiHandler.isStickyAd() &&\n      !isAdPositionAllowed(this.element, this.win)\n    ) {\n      user().warn(\n        TAG,\n        `<${this.element.tagName}> is not allowed to be ` +\n          `placed in elements with position: fixed or sticky: ${this.element}`\n      );\n      return false;\n    }\n    // OnLayoutMeasure can be called when page is in prerender so delay until\n    // visible.  Assume that it is ok to call isValidElement as it should\n    // only being looking at window, immutable properties (i.e. location) and\n    // its element ancestry.\n    if (!this.isValidElement()) {\n      // TODO(kjwright): collapse?\n      user().warn(\n        TAG,\n        this.element.getAttribute('type'),\n        'Amp ad element ignored as invalid',\n        this.element\n      );\n      return false;\n    }\n    return true;\n  }\n\n  /** @override */\n  onLayoutMeasure() {\n    this.initiateAdRequest();\n  }\n\n  /**\n   * Resolves when underlying element is within the viewport range given or\n   * has been loaded already.\n   * @param {number|boolean} viewport derived from renderOutsideViewport.\n   * @return {!Promise}\n   * @protected\n   */\n  whenWithinViewport(viewport) {\n    devAssert(viewport !== false);\n    const resource = this.getResource();\n    if (WITHIN_VIEWPORT_INOB || getMode().localDev || getMode().test) {\n      // Resolve is already laid out or viewport is true.\n      if (!resource.isLayoutPending() || viewport === true) {\n        return Promise.resolve();\n      }\n      // Track when within the specified number of viewports.\n      const viewportNum = dev().assertNumber(viewport);\n      return whenWithinViewport(this.element, viewportNum);\n    }\n    return resource.whenWithinViewport(viewport);\n  }\n\n  /**\n   * This is the entry point into the ad promise chain.\n   *\n   * Calling this function will initiate the following sequence of events: ad\n   * url construction, ad request issuance, creative verification, and metadata\n   * parsing.\n   *\n   * @protected\n   */\n  initiateAdRequest() {\n    if (this.xOriginIframeHandler_) {\n      this.xOriginIframeHandler_.onLayoutMeasure();\n    }\n    if (this.adPromise_ || !this.shouldInitializePromiseChain_()) {\n      return;\n    }\n\n    // Increment unique promise ID so that if its value changes within the\n    // promise chain due to cancel from unlayout, the promise will be rejected.\n    ++this.promiseId_;\n\n    // Shorthand for: reject promise if current promise chain is out of date.\n    const checkStillCurrent = this.verifyStillCurrent();\n\n    // Return value from this chain: True iff rendering was \"successful\"\n    // (i.e., shouldn't try to render later via iframe); false iff should\n    // try to render later in iframe.\n    // Cases to handle in this chain:\n    //   - Everything ok  => Render; return true\n    //   - Empty network response returned => Don't render; return true\n    //   - Can't parse creative out of response => Don't render; return false\n    //   - Can parse, but creative is empty => Don't render; return true\n    //   - Validation fails => return false\n    //   - Rendering fails => return false\n    //   - Chain cancelled => don't return; drop error\n    //   - Uncaught error otherwise => don't return; percolate error up\n    this.adPromise_ = this.getAmpDoc()\n      .whenFirstVisible()\n      .then(() => {\n        checkStillCurrent();\n        // See if experiment that delays request until slot is within\n        // renderOutsideViewport. Within render outside viewport will not\n        // resolve if already within viewport thus the check for already\n        // meeting the definition as opposed to waiting on the promise.\n        const delay = this.delayAdRequestEnabled();\n        if (delay) {\n          return this.whenWithinViewport(\n            typeof delay == 'number' ? delay : this.renderOutsideViewport()\n          );\n        }\n      })\n      // Possibly block on amp-consent.\n      /** @return {!Promise<Array<Promise>>} */\n      .then(() => {\n        checkStillCurrent();\n        const consentPolicyId = super.getConsentPolicy();\n\n        if (consentPolicyId) {\n          const consentStatePromise = getConsentPolicyState(\n            this.element,\n            consentPolicyId\n          ).catch((err) => {\n            user().error(TAG, 'Error determining consent state', err);\n            return CONSENT_POLICY_STATE.UNKNOWN;\n          });\n\n          const consentStringPromise = getConsentPolicyInfo(\n            this.element,\n            consentPolicyId\n          ).catch((err) => {\n            user().error(TAG, 'Error determining consent string', err);\n            return null;\n          });\n\n          const consentMetadataPromise = getConsentMetadata(\n            this.element,\n            consentPolicyId\n          ).catch((err) => {\n            user().error(TAG, 'Error determining consent metadata', err);\n            return null;\n          });\n\n          return Promise.all([\n            consentStatePromise,\n            consentStringPromise,\n            consentMetadataPromise,\n          ]);\n        }\n\n        return Promise.resolve([null, null, null]);\n      })\n      // This block returns the ad URL, if one is available.\n      /** @return {!Promise<?string>} */\n      .then((consentResponse) => {\n        checkStillCurrent();\n\n        const consentState = consentResponse[0];\n        const consentString = consentResponse[1];\n        const consentMetadata = consentResponse[2];\n        const gdprApplies = consentMetadata\n          ? consentMetadata['gdprApplies']\n          : consentMetadata;\n        const additionalConsent = consentMetadata\n          ? consentMetadata['additionalConsent']\n          : consentMetadata;\n        const consentStringType = consentMetadata\n          ? consentMetadata['consentStringType']\n          : consentMetadata;\n\n        return /** @type {!Promise<?string>} */ (\n          this.getServeNpaSignal().then((npaSignal) =>\n            this.getAdUrl(\n              {\n                consentState,\n                consentString,\n                consentStringType,\n                gdprApplies,\n                additionalConsent,\n              },\n              this.tryExecuteRealTimeConfig_(\n                consentState,\n                consentString,\n                /** @type {?Object<string, string|number|boolean|undefined>} */ (\n                  consentMetadata\n                )\n              ),\n              npaSignal\n            )\n          )\n        );\n      })\n      // This block returns the (possibly empty) response to the XHR request.\n      /** @return {!Promise<?Response>} */\n      .then((adUrl) => {\n        checkStillCurrent();\n        this.adUrl_ = adUrl;\n        // If we should skip the XHR, we will instead request and render\n        // by simply writing a frame into the page using\n        // renderViaIframeGet\n        if (!this.isXhrAllowed() && !!this.adUrl_) {\n          this.experimentalNonAmpCreativeRenderMethod_ =\n            XORIGIN_MODE.IFRAME_GET;\n          return Promise.reject(IFRAME_GET);\n        }\n        return adUrl && this.sendXhrRequest(adUrl);\n      })\n      // The following block returns either the response (as a\n      // {bytes, headers} object), or null if no response is available /\n      // response is empty.\n      /** @return {!Promise<!Response>} */\n      .then((fetchResponse) => {\n        checkStillCurrent();\n        this.maybeTriggerAnalyticsEvent_('adRequestEnd');\n        // If the response is null (can occur for non-200 responses)  or\n        // arrayBuffer is null, force collapse.\n        if (\n          !fetchResponse ||\n          !fetchResponse.arrayBuffer ||\n          fetchResponse.headers.has('amp-ff-empty-creative')\n        ) {\n          this.forceCollapse();\n          return Promise.reject(NO_CONTENT_RESPONSE);\n        }\n        if (\n          fetchResponse.headers &&\n          fetchResponse.headers.has(EXPERIMENT_FEATURE_HEADER_NAME)\n        ) {\n          this.populatePostAdResponseExperimentFeatures_(\n            fetchResponse.headers.get(EXPERIMENT_FEATURE_HEADER_NAME)\n          );\n        }\n        if (\n          getMode().localDev &&\n          this.win.location &&\n          this.win.location.search\n        ) {\n          // Allow for setting experiment features via query param which\n          // will potentially override values returned in response.\n          const match = /(?:\\?|&)a4a_feat_exp=([^&]+)/.exec(\n            this.win.location.search\n          );\n          if (match && match[1]) {\n            dev().info(TAG, `Using debug exp features: ${match[1]}`);\n            this.populatePostAdResponseExperimentFeatures_(\n              tryDecodeUriComponent(match[1])\n            );\n          }\n        }\n        // TODO(tdrl): Temporary, while we're verifying whether SafeFrame is\n        // an acceptable solution to the 'Safari on iOS doesn't fetch\n        // iframe src from cache' issue.  See\n        // https://github.com/ampproject/amphtml/issues/5614\n        const method = this.getNonAmpCreativeRenderingMethod(\n          fetchResponse.headers.get(RENDERING_TYPE_HEADER)\n        );\n        this.experimentalNonAmpCreativeRenderMethod_ = method;\n        if (\n          this.experimentalNonAmpCreativeRenderMethod_ == XORIGIN_MODE.NAMEFRAME\n        ) {\n          Services.preconnectFor(this.win).preload(\n            this.getAmpDoc(),\n            getDefaultBootstrapBaseUrl(this.win, 'nameframe')\n          );\n        }\n        const safeframeVersionHeader = fetchResponse.headers.get(\n          SAFEFRAME_VERSION_HEADER\n        );\n        if (\n          /^[0-9-]+$/.test(safeframeVersionHeader) &&\n          safeframeVersionHeader != DEFAULT_SAFEFRAME_VERSION\n        ) {\n          this.safeframeVersion = safeframeVersionHeader;\n          Services.preconnectFor(this.win).preload(\n            this.getAmpDoc(),\n            this.getSafeframePath()\n          );\n        }\n        return fetchResponse;\n      })\n      .then((fetchResponse) =>\n        this.isInNoSigningExp()\n          ? this.streamResponse_(fetchResponse, checkStillCurrent)\n          : this.startValidationFlow_(fetchResponse, checkStillCurrent)\n      )\n      .catch((error) => {\n        switch (error.message || error) {\n          case IFRAME_GET:\n          case NETWORK_FAILURE:\n            return null;\n          case INVALID_SPSA_RESPONSE:\n          case NO_CONTENT_RESPONSE:\n            return {\n              minifiedCreative: '',\n              customElementExtensions: [],\n              customStylesheets: [],\n            };\n        }\n        // If error in chain occurs, report it and return null so that\n        // layoutCallback can render via cross domain iframe assuming ad\n        // url or creative exist.\n        this.promiseErrorHandler_(error);\n        return null;\n      });\n  }\n\n  /**\n   * @visibleForTesting\n   * @return {boolean}\n   */\n  isInNoSigningExp() {\n    return NO_SIGNING_RTV;\n  }\n\n  /**\n   * Allow subclasses to skip client side validation of non-amp creatives\n   * based on http headers for perfomance. When true, ads will fall back to\n   * x-domain earlier.\n   * @param {!Headers} unusedHeaders\n   * @return {boolean}\n   */\n  skipClientSideValidation(unusedHeaders) {\n    return false;\n  }\n\n  /**\n   * Start streaming response into the detached document.\n   * @param {!Response} httpResponse\n   * @param {function()} checkStillCurrent\n   * @return {Promise<?./head-validation.ValidatedHeadDef>}\n   */\n  streamResponse_(httpResponse, checkStillCurrent) {\n    if (httpResponse.status === 204) {\n      this.forceCollapse();\n      return Promise.reject(NO_CONTENT_RESPONSE);\n    }\n\n    // Extract size will also parse x-ampanalytics header for some subclasses.\n    const size = this.extractSize(httpResponse.headers);\n    this.creativeSize_ = size || this.creativeSize_;\n\n    if (\n      !isPlatformSupported(this.win) ||\n      this.skipClientSideValidation(httpResponse.headers)\n    ) {\n      return this.handleFallback_(httpResponse, checkStillCurrent);\n    }\n\n    // Duplicating httpResponse stream as safeframe/nameframe rendering will need the\n    // unaltered httpResponse content.\n    const fallbackHttpResponse = httpResponse.clone();\n\n    // This transformation consumes the detached DOM chunks and\n    // exposes our waitForHead and transferBody methods.\n    const transformStream = new DomTransformStream(this.win);\n    // Receives chunks of text and writes to detached DOM.\n    const detachedStream = new DetachedDomStream(\n      this.win,\n      (chunk) => transformStream.onChunk(chunk),\n      (doc) => transformStream.onEnd(doc)\n    );\n\n    this.transferDomBody_ = transformStream.transferBody.bind(transformStream);\n\n    // Decodes our httpResponse bytes and pipes them to the\n    // DetachedDomStream.\n    return streamResponseToWriter(this.win, httpResponse, detachedStream)\n      .then((responseBodyHasContent) => {\n        checkStillCurrent();\n        // `amp-ff-empty-creative` header is not present, and httpResponse.body\n        // is empty.\n        if (!responseBodyHasContent) {\n          this.forceCollapse();\n          return Promise.reject(NO_CONTENT_RESPONSE);\n        }\n      })\n      .then(() => {\n        checkStillCurrent();\n        return transformStream.waitForHead();\n      })\n      .then((head) => {\n        checkStillCurrent();\n        return this.validateHeadElement_(head);\n      })\n      .then((sanitizedHeadElement) => {\n        checkStillCurrent();\n        // We should not render as FIE.\n        if (!sanitizedHeadElement) {\n          return this.handleFallback_(fallbackHttpResponse, checkStillCurrent);\n        }\n        this.updateLayoutPriority(LayoutPriority.CONTENT);\n        this.isVerifiedAmpCreative_ = true;\n        return sanitizedHeadElement;\n      });\n  }\n\n  /**\n   * Handles case where creative cannot or has chosen not to be rendered\n   * safely in FIE. Returning null forces x-domain render in\n   * attemptToRenderCreative\n   * @param {!Response} fallbackHttpResponse\n   * @param {function()} checkStillCurrent\n   * @return {!Promise<null>}\n   */\n  handleFallback_(fallbackHttpResponse, checkStillCurrent) {\n    // Experiment to give non-AMP creatives same benefits as AMP so\n    // update priority.\n    if (this.inNonAmpPreferenceExp()) {\n      this.updateLayoutPriority(LayoutPriority.CONTENT);\n    }\n    return fallbackHttpResponse.arrayBuffer().then((domTextContent) => {\n      checkStillCurrent();\n      this.creativeBody_ = domTextContent;\n      return null;\n    });\n  }\n\n  /**\n   * Prepare the creative <head> by removing any non-secure elements and\n   * exracting extensions\n   * @param {!Element} headElement\n   * @return {?./head-validation.ValidatedHeadDef} head data or null if we should fall back to xdomain.\n   */\n  validateHeadElement_(headElement) {\n    return processHead(this.win, this.element, headElement);\n  }\n\n  /**\n   * Encapsulates logic for validation flow starting with resolving res body\n   * to array buffer.\n   * @param {!Response} fetchResponse\n   * @param {function()} checkStillCurrent\n   * @return {Promise<?CreativeMetaDataDef>}\n   */\n  startValidationFlow_(fetchResponse, checkStillCurrent) {\n    // Note: Resolving a .then inside a .then because we need to capture\n    // two fields of fetchResponse, one of which is, itself, a promise,\n    // and one of which isn't.  If we just return\n    // fetchResponse.arrayBuffer(), the next step in the chain will\n    // resolve it to a concrete value, but we'll lose track of\n    // fetchResponse.headers.\n    return (\n      fetchResponse\n        .arrayBuffer()\n        .then((bytes) => {\n          if (bytes.byteLength == 0) {\n            // The server returned no content. Instead of displaying a blank\n            // rectangle, we collapse the slot instead.\n            this.forceCollapse();\n            return Promise.reject(NO_CONTENT_RESPONSE);\n          }\n          return {\n            bytes,\n            headers: fetchResponse.headers,\n          };\n        })\n        /** @return {?Promise<?ArrayBuffer>} */\n        .then((responseParts) => {\n          checkStillCurrent();\n          // Keep a handle to the creative body so that we can render into\n          // SafeFrame or NameFrame later, if necessary.  TODO(tdrl): Temporary,\n          // while we\n          // assess whether this is the right solution to the Safari+iOS iframe\n          // src cache issue.  If we decide to keep a SafeFrame-like solution,\n          // we should restructure the promise chain to pass this info along\n          // more cleanly, without use of an object variable outside the chain.\n          if (!responseParts) {\n            return null;\n          }\n          const {bytes, headers} = responseParts;\n          const size = this.extractSize(responseParts.headers);\n          this.creativeSize_ = size || this.creativeSize_;\n          if (\n            this.experimentalNonAmpCreativeRenderMethod_ !=\n              XORIGIN_MODE.CLIENT_CACHE &&\n            bytes\n          ) {\n            this.creativeBody_ = bytes;\n          }\n          return this.maybeValidateAmpCreative(bytes, headers);\n        })\n        .then((creative) => {\n          checkStillCurrent();\n          // Need to know if creative was verified as part of render outside\n          // viewport but cannot wait on promise.  Sadly, need a state a\n          // variable.\n          this.isVerifiedAmpCreative_ = !!creative;\n          return creative && utf8Decode(creative);\n        })\n        // This block returns CreativeMetaDataDef iff the creative was verified\n        // as AMP and could be properly parsed for friendly iframe render.\n        /** @return {?CreativeMetaDataDef} */\n        .then((creativeDecoded) => {\n          checkStillCurrent();\n          // Note: It's critical that #getAmpAdMetadata be called\n          // on precisely the same creative that was validated\n          // via #validateAdResponse_.  See GitHub issue\n          // https://github.com/ampproject/amphtml/issues/4187\n          let creativeMetaDataDef;\n\n          if (\n            !isPlatformSupported(this.win) ||\n            !creativeDecoded ||\n            !(creativeMetaDataDef = this.getAmpAdMetadata(creativeDecoded))\n          ) {\n            if (this.inNonAmpPreferenceExp()) {\n              // Experiment to give non-AMP creatives same benefits as AMP so\n              // update priority.\n              this.updateLayoutPriority(LayoutPriority.CONTENT);\n            }\n            return null;\n          }\n\n          // Update priority.\n          this.updateLayoutPriority(LayoutPriority.CONTENT);\n\n          // Load any extensions; do not wait on their promises as this\n          // is just to prefetch.\n          const extensions = getExtensionsFromMetadata(creativeMetaDataDef);\n          preloadFriendlyIframeEmbedExtensions(this.win, extensions);\n\n          // Preload any fonts.\n          (creativeMetaDataDef.customStylesheets || []).forEach((font) =>\n            Services.preconnectFor(this.win).preload(\n              this.getAmpDoc(),\n              font.href\n            )\n          );\n\n          const urls = Services.urlForDoc(this.element);\n          // Preload any AMP images.\n          (creativeMetaDataDef.images || []).forEach(\n            (image) =>\n              urls.isSecure(image) &&\n              Services.preconnectFor(this.win).preload(this.getAmpDoc(), image)\n          );\n          return creativeMetaDataDef;\n        })\n    );\n  }\n\n  /**\n   * This block returns the ad creative if it exists and validates as AMP;\n   * null otherwise.\n   * @param {!ArrayBuffer} bytes\n   * @param {!Headers} headers\n   * @return {!Promise<?ArrayBuffer>}\n   */\n  maybeValidateAmpCreative(bytes, headers) {\n    const checkStillCurrent = this.verifyStillCurrent();\n    return this.keysetPromise_\n      .then(() => {\n        if (\n          this.element.getAttribute('type') == 'fake' &&\n          !this.element.getAttribute('checksig')\n        ) {\n          // do not verify signature for fake type ad, unless the ad\n          // specfically requires via 'checksig' attribute\n          return Promise.resolve(VerificationStatus.OK);\n        }\n        return signatureVerifierFor(this.win).verify(bytes, headers);\n      })\n      .then((status) => {\n        checkStillCurrent();\n        let result = null;\n        switch (status) {\n          case VerificationStatus.OK:\n            result = bytes;\n            break;\n          case VerificationStatus.CRYPTO_UNAVAILABLE:\n            result = this.shouldPreferentialRenderWithoutCrypto()\n              ? bytes\n              : null;\n            break;\n          // TODO(@taymonbeal, #9274): differentiate between these\n          case VerificationStatus.ERROR_KEY_NOT_FOUND:\n          case VerificationStatus.ERROR_SIGNATURE_MISMATCH:\n            user().error(\n              TAG,\n              this.element.getAttribute('type'),\n              'Signature verification failed'\n            );\n          case VerificationStatus.UNVERIFIED:\n        }\n        if (this.isSinglePageStoryAd && !result) {\n          throw new Error(INVALID_SPSA_RESPONSE);\n        }\n        return result;\n      });\n  }\n\n  /**\n   * Populates object mapping of feature to value used for post ad response\n   * behavior experimentation.  Assumes comma separated, = delimited key/value\n   * pairs.  If key appears more than once, last value wins.\n   * @param {string} input\n   * @private\n   */\n  populatePostAdResponseExperimentFeatures_(input) {\n    input.split(',').forEach((line) => {\n      if (!line) {\n        return;\n      }\n      const parts = line.split('=');\n      if (parts.length != 2 || !parts[0]) {\n        dev().warn(TAG, `invalid experiment feature ${line}`);\n        return;\n      }\n      this.postAdResponseExperimentFeatures[parts[0]] = parts[1];\n    });\n  }\n\n  /**\n   * Refreshes ad slot by fetching a new creative and rendering it. This leaves\n   * the current creative displayed until the next one is ready.\n   *\n   * @param {function()} refreshEndCallback When called, this function will\n   *   restart the refresh cycle.\n   * @return {Promise} A promise that resolves when all asynchronous portions of\n   *   the refresh function complete. This is particularly handy for testing.\n   */\n  refresh(refreshEndCallback) {\n    devAssert(!this.isRefreshing);\n    this.isRefreshing = true;\n    this.tearDownSlot();\n    this.initiateAdRequest();\n    if (!this.adPromise_) {\n      // For whatever reasons, the adPromise has been nullified, and we will be\n      // unable to proceed. The current creative will continue to be displayed.\n      return Promise.resolve();\n    }\n    const promiseId = this.promiseId_;\n    return devAssert(this.adPromise_).then(() => {\n      if (!this.isRefreshing || promiseId != this.promiseId_) {\n        // If this refresh cycle was canceled, such as in a no-content\n        // response case, keep showing the old creative.\n        refreshEndCallback();\n        return;\n      }\n      return this.mutateElement(() => {\n        // Fire an ad-refresh event so that 3rd parties can track when an ad\n        // has changed.\n        triggerAnalyticsEvent(this.element, AnalyticsTrigger.AD_REFRESH);\n\n        this.togglePlaceholder(true);\n        // This delay provides a 1 second buffer where the ad loader is\n        // displayed in between the creatives.\n        return Services.timerFor(this.win)\n          .promise(1000)\n          .then(() => {\n            this.isRelayoutNeededFlag = true;\n            this.getResource().layoutCanceled();\n            // Only Require relayout after page visible\n            this.getAmpDoc()\n              .whenNextVisible()\n              .then(() => {\n                Services.ownersForDoc(this.getAmpDoc())./*OK*/ requireLayout(\n                  this.element\n                );\n              });\n          });\n      });\n    });\n  }\n\n  /**\n   * Handles uncaught errors within promise flow.\n   * @param {*} error\n   * @param {boolean=} opt_ignoreStack\n   * @private\n   */\n  promiseErrorHandler_(error, opt_ignoreStack) {\n    if (isCancellation(error)) {\n      // Rethrow if cancellation.\n      throw error;\n    }\n\n    if (error && error.message) {\n      error = duplicateErrorIfNecessary(/** @type {!Error} */ (error));\n    } else {\n      error = new Error('unknown error ' + error);\n    }\n    if (opt_ignoreStack) {\n      error.ignoreStack = opt_ignoreStack;\n    }\n\n    // Add `type` to the message. Ensure to preserve the original stack.\n    const type = this.element.getAttribute('type') || 'notype';\n    if (error.message.indexOf(`${TAG}: ${type}:`) != 0) {\n      error.message = `${TAG}: ${type}: ${error.message}`;\n    }\n\n    // Additional arguments.\n    assignAdUrlToError(/** @type {!Error} */ (error), this.adUrl_);\n\n    if (getMode().development || getMode().localDev || logHashParam()) {\n      user().error(TAG, error);\n    } else {\n      user().warn(TAG, error);\n      // Report with 1% sampling as an expected dev error.\n      if (Math.random() < 0.01) {\n        dev().expectedError(TAG, error);\n      }\n    }\n  }\n\n  /** @override */\n  layoutCallback() {\n    if (this.isRefreshing) {\n      this.destroyFrame(true);\n    }\n    return this.attemptToRenderCreative().then(() => {\n      this.unobserveIntersections_ = observeIntersections(\n        this.element,\n        ({isIntersecting}) => this.viewportCallback(isIntersecting)\n      );\n    });\n  }\n\n  /**\n   * Attemps to render the returned creative following the resolution of the\n   * adPromise.\n   *\n   * @return {!Promise<boolean>|!Promise<undefined>} A promise that resolves\n   *   when the rendering attempt has finished.\n   * @protected\n   */\n  attemptToRenderCreative() {\n    // Promise may be null if element was determined to be invalid for A4A.\n    if (!this.adPromise_) {\n      if (this.shouldInitializePromiseChain_()) {\n        dev().error(TAG, 'Null promise in layoutCallback');\n      }\n      return Promise.resolve();\n    }\n    const checkStillCurrent = this.verifyStillCurrent();\n    // Promise chain will have determined if creative is valid AMP.\n\n    return Promise.all([\n      this.adPromise_,\n      this.uiHandler.getScrollPromiseForStickyAd(),\n    ])\n      .then((values) => {\n        checkStillCurrent();\n\n        this.uiHandler.maybeInitStickyAd();\n        const creativeMetaData = values[0];\n        if (this.isCollapsed_) {\n          return Promise.resolve();\n        }\n        // If this.iframe already exists, and we're not currently in the middle\n        // of refreshing, bail out here. This should only happen in\n        // testing context, not in production.\n        if (this.iframe && !this.isRefreshing) {\n          return Promise.resolve();\n        }\n\n        if (!creativeMetaData) {\n          // Non-AMP creative case, will verify ad url existence.\n          return this.renderNonAmpCreative();\n        }\n\n        let friendlyRenderPromise;\n\n        if (this.isInNoSigningExp()) {\n          friendlyRenderPromise = this.renderFriendlyTrustless_(\n            /** @type {!./head-validation.ValidatedHeadDef} */ (\n              creativeMetaData\n            ),\n            checkStillCurrent\n          );\n        } else {\n          friendlyRenderPromise = this.renderAmpCreative_(\n            /** @type {!CreativeMetaDataDef} */ (creativeMetaData)\n          );\n        }\n\n        // Must be an AMP creative.\n        return friendlyRenderPromise.catch((err) => {\n          checkStillCurrent();\n          // Failed to render via AMP creative path so fallback to non-AMP\n          // rendering within cross domain iframe.\n          user().warn(\n            TAG,\n            this.element.getAttribute('type'),\n            'Error injecting creative in friendly frame',\n            err\n          );\n          return this.renderNonAmpCreative();\n        });\n      })\n      .catch((error) => {\n        this.promiseErrorHandler_(error);\n        throw cancellation();\n      });\n  }\n\n  /**\n   * Returns whether or not the ad request may be sent using XHR.\n   * @return {boolean}\n   */\n  isXhrAllowed() {\n    return true;\n  }\n\n  /** @override */\n  attemptChangeSize(newHeight, newWidth) {\n    // Store original size of slot in order to allow re-expansion on\n    // unlayoutCallback so that it is reverted to original size in case\n    // of resumeCallback.\n    this.originalSlotSize_ = this.originalSlotSize_ || this.getLayoutSize();\n    return super.attemptChangeSize(newHeight, newWidth);\n  }\n\n  /** @override  */\n  unlayoutCallback() {\n    this.unobserveIntersections_?.();\n    this.unobserveIntersections_ = null;\n    this.tearDownSlot();\n    return true;\n  }\n\n  /**\n   * Attempts to tear down and set all state variables to initial conditions.\n   * @protected\n   */\n  tearDownSlot() {\n    // Increment promiseId to cause any pending promise to cancel.\n    this.promiseId_++;\n    this.uiHandler.applyUnlayoutUI();\n    if (this.originalSlotSize_) {\n      super\n        .attemptChangeSize(\n          this.originalSlotSize_.height,\n          this.originalSlotSize_.width\n        )\n        .then(() => {\n          this.originalSlotSize_ = null;\n        })\n        .catch((err) => {\n          // TODO(keithwrightbos): if we are unable to revert size, on next\n          // trigger of promise chain the ad request may fail due to invalid\n          // slot size.  Determine how to handle this case.\n          dev().warn(TAG, 'unable to revert to original size', err);\n        });\n    }\n\n    this.isCollapsed_ = false;\n\n    // Remove rendering frame, if it exists.\n    this.destroyFrame();\n    this.adPromise_ = null;\n    this.adUrl_ = null;\n    this.creativeBody_ = null;\n    this.isVerifiedAmpCreative_ = false;\n    this.transferDomBody_ = null;\n    this.experimentalNonAmpCreativeRenderMethod_ =\n      this.getNonAmpCreativeRenderingMethod();\n    this.postAdResponseExperimentFeatures = {};\n  }\n\n  /** @override */\n  detachedCallback() {\n    super.detachedCallback();\n    this.destroyFrame(true);\n  }\n\n  /**\n   * Attempts to remove the current frame and free any associated resources.\n   * This function will no-op if this ad slot is currently in the process of\n   * being refreshed.\n   *\n   * @param {boolean=} force Forces the removal of the frame, even if\n   *   this.isRefreshing is true.\n   * @protected\n   */\n  destroyFrame(force = false) {\n    if (!force && this.isRefreshing) {\n      return;\n    }\n    // Allow embed to release its resources.\n    if (this.friendlyIframeEmbed_) {\n      this.friendlyIframeEmbed_.destroy();\n      this.friendlyIframeEmbed_ = null;\n    }\n    if (this.iframe && this.iframe.parentElement) {\n      this.iframe.parentElement.removeChild(this.iframe);\n      this.iframe = null;\n    }\n    if (this.xOriginIframeHandler_) {\n      this.xOriginIframeHandler_.freeXOriginIframe();\n      this.xOriginIframeHandler_ = null;\n    }\n    if (this.uiHandler) {\n      this.uiHandler.cleanup();\n    }\n  }\n\n  /**\n   * @param {boolean}  inViewport\n   * @protected\n   */\n  viewportCallback(inViewport) {\n    if (this.xOriginIframeHandler_) {\n      this.xOriginIframeHandler_.viewportCallback(inViewport);\n    }\n  }\n\n  /**\n   * Gets the Ad URL to send an XHR Request to.  To be implemented\n   * by network.\n   * @param {!ConsentTupleDef=} opt_ununsedConsentTuple\n   * @param {Promise<!Array<rtcResponseDef>>=} opt_rtcResponsesPromise\n   * @param {boolean=} opt_serveNpaSignal\n   * @return {!Promise<string>|string}\n   */\n  getAdUrl(\n    opt_ununsedConsentTuple,\n    opt_rtcResponsesPromise,\n    opt_serveNpaSignal\n  ) {\n    throw new Error('getAdUrl not implemented!');\n  }\n\n  /**\n   * Checks if the `always-serve-npa` attribute is present and valid\n   * based on the geolocation.  To be implemented by network.\n   * @return {!Promise<boolean>}\n   */\n  getServeNpaSignal() {\n    return Promise.resolve(false);\n  }\n\n  /**\n   * Checks if the `block-rtc` attribute is present and valid\n   * based on the geolocation.\n   * @return {!Promise<boolean>}\n   */\n  getBlockRtc_() {\n    if (!this.element.getAttribute('block-rtc')) {\n      return Promise.resolve(false);\n    }\n    return Services.geoForDocOrNull(this.element).then((geoService) => {\n      userAssert(geoService, '%s: requires <amp-geo> to use `block-rtc`', TAG);\n      const blockRtcLocations = this.element.getAttribute('block-rtc');\n      const locations = blockRtcLocations.split(',');\n      for (let i = 0; i < locations.length; i++) {\n        const geoGroup = geoService.isInCountryGroup(locations[i]);\n        if (geoGroup === GEO_IN_GROUP.IN) {\n          return true;\n        } else if (geoGroup === GEO_IN_GROUP.NOT_DEFINED) {\n          user().warn('AMP-AD', `Geo group \"${locations[i]}\" was not defined.`);\n        }\n      }\n      // Not in any of the defined geo groups.\n      return false;\n    });\n  }\n\n  /**\n   * Resets ad url state to null, used to prevent frame get fallback if error\n   * is thrown after url construction but prior to layoutCallback.\n   */\n  resetAdUrl() {\n    this.adUrl_ = null;\n  }\n\n  /**\n   * @return {function()} function that when called will verify if current\n   *    ad retrieval is current (meaning unlayoutCallback was not executed).\n   *    If not, will throw cancellation exception;\n   * @throws {Error}\n   */\n  verifyStillCurrent() {\n    const promiseId = this.promiseId_;\n    return () => {\n      if (promiseId != this.promiseId_) {\n        throw cancellation();\n      }\n    };\n  }\n\n  /**\n   * Determine the desired size of the creative based on the HTTP response\n   * headers. Must be less than or equal to the original size of the ad slot\n   * along each dimension. May be overridden by network.\n   *\n   * @param {!Headers} responseHeaders\n   * @return {?SizeInfoDef}\n   */\n  extractSize(responseHeaders) {\n    const headerValue = responseHeaders.get(CREATIVE_SIZE_HEADER);\n    if (!headerValue) {\n      return null;\n    }\n    const match = /^([0-9]+)x([0-9]+)$/.exec(headerValue);\n    if (!match) {\n      // TODO(@taymonbeal, #9274): replace this with real error reporting\n      user().error(TAG, `Invalid size header: ${headerValue}`);\n      return null;\n    }\n    return /** @type {?SizeInfoDef} */ ({\n      width: Number(match[1]),\n      height: Number(match[2]),\n    });\n  }\n\n  /**\n   * Forces the UI Handler to collapse this slot.\n   * @visibleForTesting\n   */\n  forceCollapse() {\n    if (this.isRefreshing) {\n      // If, for whatever reason, the new creative would collapse this slot,\n      // stick with the old creative until the next refresh cycle.\n      this.isRefreshing = false;\n      return;\n    }\n    devAssert(this.uiHandler);\n    // Store original size to allow for reverting on unlayoutCallback so that\n    // subsequent pageview allows for ad request.\n    this.originalSlotSize_ = this.originalSlotSize_ || this.getLayoutSize();\n    this.uiHandler.applyNoContentUI();\n    this.isCollapsed_ = true;\n  }\n\n  /**\n   * Callback executed when creative has successfully rendered within the\n   * publisher page but prior to load (or ini-load for friendly frame AMP\n   * creative render).  To be overridden by network implementations as needed.\n   *\n   * @param {?CreativeMetaDataDef} creativeMetaData metadata if AMP creative,\n   *    null otherwise.\n   * @param {!Promise=} opt_onLoadPromise Promise that resolves when the FIE's\n   *    child window fires the `onload` event.\n   */\n  onCreativeRender(creativeMetaData, opt_onLoadPromise) {\n    this.maybeTriggerAnalyticsEvent_(\n      creativeMetaData ? 'renderFriendlyEnd' : 'renderCrossDomainEnd'\n    );\n  }\n\n  /**\n   * @param {!Element} iframe that was just created.  To be overridden for\n   * testing.\n   * @visibleForTesting\n   */\n  onCrossDomainIframeCreated(iframe) {\n    dev().info(\n      TAG,\n      this.element.getAttribute('type'),\n      `onCrossDomainIframeCreated ${iframe}`\n    );\n  }\n\n  /** @return {boolean} whether html creatives should be sandboxed. */\n  sandboxHTMLCreativeFrame() {\n    return true;\n  }\n\n  /**\n   * Send ad request, extract the creative and signature from the response.\n   * @param {string} adUrl Request URL to send XHR to.\n   * @return {!Promise<?Response>}\n   * @protected\n   */\n  sendXhrRequest(adUrl) {\n    this.maybeTriggerAnalyticsEvent_('adRequestStart');\n    const xhrInit = {\n      mode: 'cors',\n      method: 'GET',\n      credentials: 'include',\n    };\n    return Services.xhrFor(this.win)\n      .fetch(adUrl, xhrInit)\n      .catch((error) => {\n        if (error.response && error.response.status > 200) {\n          // Invalid server response code so we should collapse.\n          return null;\n        }\n        // If an error occurs, let the ad be rendered via iframe after delay.\n        // TODO(taymonbeal): Figure out a more sophisticated test for deciding\n        // whether to retry with an iframe after an ad request failure or just\n        // give up and render the fallback content (or collapse the ad slot).\n        const networkFailureHandlerResult = this.onNetworkFailure(\n          error,\n          /** @type {string} */ (this.adUrl_)\n        );\n        devAssert(!!networkFailureHandlerResult);\n        if (networkFailureHandlerResult.frameGetDisabled) {\n          // Reset adUrl to null which will cause layoutCallback to not\n          // fetch via frame GET.\n          dev().info(\n            TAG,\n            'frame get disabled as part of network failure handler'\n          );\n          this.resetAdUrl();\n        } else {\n          this.adUrl_ = networkFailureHandlerResult.adUrl || this.adUrl_;\n          return Promise.reject(NETWORK_FAILURE);\n        }\n        return null;\n      });\n  }\n\n  /**\n   * Called on network failure sending XHR CORS ad request allowing for\n   * modification of ad url and prevent frame GET request on layoutCallback.\n   * By default, GET frame request will be executed with same ad URL as used\n   * for XHR CORS request.\n   * @param {*} unusedError from network failure\n   * @param {string} unusedAdUrl used for network request\n   * @return {!{adUrl: (string|undefined), frameGetDisabled: (boolean|undefined)}}\n   */\n  onNetworkFailure(unusedError, unusedAdUrl) {\n    return {};\n  }\n\n  /**\n   * To be overridden by network specific implementation indicating which\n   * signing service(s) is to be used.\n   * @return {!Array<string>} A list of signing services.\n   */\n  getSigningServiceNames() {\n    return getMode().localDev ? ['google', 'google-dev'] : ['google'];\n  }\n\n  /**\n   * Render non-AMP creative within cross domain iframe.\n   * @param {boolean=} throttleApplied Whether incrementLoadingAds has already\n   *    been called\n   * @return {Promise<boolean>} Whether the creative was successfully rendered.\n   */\n  renderNonAmpCreative(throttleApplied) {\n    if (this.element.getAttribute('disable3pfallback') == 'true') {\n      user().warn(\n        TAG,\n        this.element.getAttribute('type'),\n        'fallback to 3p disabled'\n      );\n      return Promise.resolve(false);\n    }\n    // TODO(keithwrightbos): remove when no longer needed.\n    dev().warn(TAG, 'fallback to 3p');\n    // Haven't rendered yet, so try rendering via one of our\n    // cross-domain iframe solutions.\n    const method = this.experimentalNonAmpCreativeRenderMethod_;\n    let renderPromise = Promise.resolve(false);\n    if (\n      (method == XORIGIN_MODE.SAFEFRAME || method == XORIGIN_MODE.NAMEFRAME) &&\n      this.creativeBody_\n    ) {\n      renderPromise = this.renderViaNameAttrOfXOriginIframe_(\n        this.creativeBody_\n      );\n      this.creativeBody_ = null; // Free resources.\n    } else if (this.adUrl_) {\n      assertHttpsUrl(this.adUrl_, this.element);\n      renderPromise = this.renderViaIframeGet_(this.adUrl_);\n    } else {\n      // Ad URL may not exist if buildAdUrl throws error or returns empty.\n      // If error occurred, it would have already been reported but let's\n      // report to user in case of empty.\n      user().warn(\n        TAG,\n        this.element.getAttribute('type'),\n        \"No creative or URL available -- A4A can't render any ad\"\n      );\n    }\n    if (!throttleApplied && !this.inNonAmpPreferenceExp()) {\n      incrementLoadingAds(this.win, renderPromise);\n    }\n    return renderPromise.then((result) => {\n      this.maybeTriggerAnalyticsEvent_('crossDomainIframeLoaded');\n      // Pass on the result to the next value in the promise change.\n      return result;\n    });\n  }\n\n  /**\n   * @param {!./head-validation.ValidatedHeadDef} headData\n   * @param {function()} checkStillCurrent\n   * @return {!Promise} Whether the creative was successfully rendered.\n   */\n  renderFriendlyTrustless_(headData, checkStillCurrent) {\n    checkStillCurrent();\n    devAssert(this.element.ownerDocument);\n    this.maybeTriggerAnalyticsEvent_('renderFriendlyStart');\n\n    const {height, width} = this.creativeSize_;\n    const {extensions, fonts, head} = headData;\n    this.iframe = createSecureFrame(\n      this.win,\n      this.getIframeTitle(),\n      height,\n      width\n    );\n    if (!this.uiHandler.isStickyAd()) {\n      applyFillContent(this.iframe);\n    }\n\n    let body = '';\n    const transferComplete = new Deferred();\n    // If srcdoc is not supported, streaming is also not supported so we\n    // can go ahead and write the ad content body.\n    if (!isSrcdocSupported()) {\n      body = head.ownerDocument.body./*OK */ outerHTML;\n      transferComplete.resolve();\n    } else {\n      // Once skeleton doc has be written to srcdoc we start transferring\n      // body chunks.\n      listenOnce(this.iframe, 'load', () => {\n        const fieBody = this.iframe.contentDocument.body;\n        this.transferDomBody_(devAssert(fieBody)).then(\n          transferComplete.resolve\n        );\n      });\n    }\n\n    const secureDoc = createSecureDocSkeleton(\n      devAssert(this.adUrl_),\n      head./*OK*/ outerHTML,\n      body\n    );\n\n    const fieInstallPromise = this.installFriendlyIframeEmbed_(\n      secureDoc,\n      extensions,\n      fonts,\n      true // skipHtmlMerge\n    );\n\n    // Tell the FIE it is done after transferring.\n    Promise.all([fieInstallPromise, transferComplete.promise]).then(\n      (values) => {\n        const friendlyIframeEmbed = values[0];\n        // #installFriendlyIframeEmbed will return null if removed before install is complete.\n        friendlyIframeEmbed && friendlyIframeEmbed.renderCompleted();\n      }\n    );\n\n    const extensionIds = extensions.map((extension) => extension.extensionId);\n    return fieInstallPromise.then((friendlyIframeEmbed) => {\n      checkStillCurrent();\n      this.makeFieVisible_(\n        friendlyIframeEmbed,\n        // TODO(ccordry): subclasses are passed creativeMetadata which does\n        // not exist in unsigned case. All it is currently used for is to\n        // check if it is an AMP creative, and extension list.\n        {\n          minifiedCreative: '',\n          customStylesheets: [],\n          customElementExtensions: extensionIds,\n        },\n        checkStillCurrent\n      );\n    });\n  }\n\n  /**\n   * Render a validated AMP creative directly in the parent page.\n   * @param {!CreativeMetaDataDef} creativeMetaData Metadata required to render\n   *     AMP creative.\n   * @return {!Promise} Whether the creative was successfully rendered.\n   * @private\n   */\n  renderAmpCreative_(creativeMetaData) {\n    devAssert(creativeMetaData.minifiedCreative, 'missing minified creative');\n    devAssert(!!this.element.ownerDocument, 'missing owner document?!');\n    this.maybeTriggerAnalyticsEvent_('renderFriendlyStart');\n    // Create and setup friendly iframe.\n    this.iframe = /** @type {!HTMLIFrameElement} */ (\n      createElementWithAttributes(\n        /** @type {!Document} */ (this.element.ownerDocument),\n        'iframe',\n        dict({\n          // NOTE: It is possible for either width or height to be 'auto',\n          // a non-numeric value.\n          'height': this.creativeSize_.height,\n          'width': this.creativeSize_.width,\n          'frameborder': '0',\n          'allowfullscreen': '',\n          'allowtransparency': '',\n          'scrolling': 'no',\n          'title': this.getIframeTitle(),\n          'role': 'region',\n          'aria-label': 'Advertisement',\n          'tabindex': '0',\n        })\n      )\n    );\n    if (!this.uiHandler.isStickyAd()) {\n      applyFillContent(this.iframe);\n    }\n    const fontsArray = [];\n    if (creativeMetaData.customStylesheets) {\n      creativeMetaData.customStylesheets.forEach((s) => {\n        const href = s['href'];\n        if (href) {\n          fontsArray.push(href);\n        }\n      });\n    }\n    const checkStillCurrent = this.verifyStillCurrent();\n    const {minifiedCreative} = creativeMetaData;\n    const extensions = getExtensionsFromMetadata(creativeMetaData);\n    return this.installFriendlyIframeEmbed_(\n      minifiedCreative,\n      extensions,\n      fontsArray || [],\n      false // skipHtmlMerge\n    ).then((friendlyIframeEmbed) =>\n      this.makeFieVisible_(\n        friendlyIframeEmbed,\n        creativeMetaData,\n        checkStillCurrent\n      )\n    );\n  }\n\n  /**\n   * Convert the iframe to FIE impl and append to DOM.\n   * @param {string} html\n   * @param {!Array<{extensionId: string, extensionVersion: string}>} extensions\n   * @param {!Array<string>} fonts\n   * @param {boolean} skipHtmlMerge\n   * @return {!Promise<!../../../src/friendly-iframe-embed.FriendlyIframeEmbed>}\n   */\n  installFriendlyIframeEmbed_(html, extensions, fonts, skipHtmlMerge) {\n    return installFriendlyIframeEmbed(\n      devAssert(this.iframe),\n      this.element,\n      {\n        host: this.element,\n        // Need to guarantee that this is no longer null\n        url: devAssert(this.adUrl_),\n        html,\n        extensions,\n        fonts,\n        skipHtmlMerge,\n      },\n      (embedWin, ampdoc) => this.preinstallCallback_(embedWin, ampdoc)\n    );\n  }\n\n  /**\n   *\n   * @param {!Window} embedWin\n   * @param {../../../src/service/ampdoc-impl.AmpDoc=} ampdoc\n   */\n  preinstallCallback_(embedWin, ampdoc) {\n    const parentAmpdoc = this.getAmpDoc();\n    installUrlReplacementsForEmbed(\n      ampdoc,\n      new A4AVariableSource(parentAmpdoc, embedWin)\n    );\n  }\n\n  /**\n   * Make FIE visible and execute any loading / rendering complete callbacks.\n   * @param {!../../../src/friendly-iframe-embed.FriendlyIframeEmbed} friendlyIframeEmbed\n   * @param {CreativeMetaDataDef} creativeMetaData\n   * @param {function()} checkStillCurrent\n   */\n  makeFieVisible_(friendlyIframeEmbed, creativeMetaData, checkStillCurrent) {\n    checkStillCurrent();\n    this.friendlyIframeEmbed_ = friendlyIframeEmbed;\n    // Ensure visibility hidden has been removed (set by boilerplate).\n    const frameBody = this.getFieBody_(friendlyIframeEmbed);\n    setStyle(frameBody, 'visibility', 'visible');\n\n    protectFunctionWrapper(this.onCreativeRender, this, (err) => {\n      dev().error(\n        TAG,\n        this.element.getAttribute('type'),\n        'Error executing onCreativeRender',\n        err\n      );\n    })(creativeMetaData, friendlyIframeEmbed.whenWindowLoaded());\n\n    friendlyIframeEmbed.whenIniLoaded().then(() => {\n      checkStillCurrent();\n      this.maybeTriggerAnalyticsEvent_('friendlyIframeIniLoad');\n    });\n\n    // There's no need to wait for all resources to load.\n    // StartRender is enough\n  }\n\n  /**\n   * @param {!../../../src/friendly-iframe-embed.FriendlyIframeEmbed} friendlyIframeEmbed\n   * @return {!Element}\n   */\n  getFieBody_(friendlyIframeEmbed) {\n    const frameDoc =\n      friendlyIframeEmbed.iframe.contentDocument ||\n      friendlyIframeEmbed.win.document;\n    return devAssert(frameDoc.body);\n  }\n\n  /**\n   * Shared functionality for cross-domain iframe-based rendering methods.\n   * @param {!JsonObject<string, string>} attributes The attributes of the iframe.\n   * @return {!Promise} awaiting load event for ad frame\n   * @private\n   */\n  iframeRenderHelper_(attributes) {\n    const mergedAttributes = Object.assign(\n      attributes,\n      dict({\n        'height': this.creativeSize_.height,\n        'width': this.creativeSize_.width,\n        'title': this.getIframeTitle(),\n        'role': 'region',\n        'aria-label': 'Advertisement',\n        'tabindex': '0',\n      })\n    );\n\n    if (this.sentinel) {\n      mergedAttributes['data-amp-3p-sentinel'] = this.sentinel;\n    }\n    // Block synchronous XHR in ad. These are very rare, but super bad for UX\n    // as they block the UI thread for the arbitrary amount of time until the\n    // request completes.\n    let featurePolicies = \"sync-xhr 'none';\";\n\n    if (isAttributionReportingSupported(this.win.document)) {\n      featurePolicies += \"attribution-reporting 'src';\";\n    }\n\n    mergedAttributes['allow'] = featurePolicies;\n\n    this.iframe = /** @type {!HTMLIFrameElement} */ (\n      createElementWithAttributes(\n        /** @type {!Document} */ (this.element.ownerDocument),\n        'iframe',\n        /** @type {!JsonObject} */ (\n          Object.assign(mergedAttributes, SHARED_IFRAME_PROPERTIES)\n        )\n      )\n    );\n    if (this.sandboxHTMLCreativeFrame()) {\n      applySandbox(this.iframe);\n    }\n    // TODO(keithwrightbos): noContentCallback?\n    this.xOriginIframeHandler_ = new AMP.AmpAdXOriginIframeHandler(this);\n    // Iframe is appended to element as part of xorigin frame handler init.\n    // Executive onCreativeRender after init to ensure it can get reference\n    // to frame but prior to load to allow for earlier access.\n    const frameLoadPromise = this.xOriginIframeHandler_.init(\n      this.iframe,\n      /* opt_isA4A */ true,\n      this.letCreativeTriggerRenderStart()\n    );\n    protectFunctionWrapper(this.onCreativeRender, this, (err) => {\n      dev().error(\n        TAG,\n        this.element.getAttribute('type'),\n        'Error executing onCreativeRender',\n        err\n      );\n    })(null);\n    return frameLoadPromise;\n  }\n\n  /**\n   * Creates iframe whose src matches that of the ad URL. For standard\n   * Fast Fetch running on the AMP cdn, an XHR request will typically have\n   * already been sent to the same adUrl, and the response should\n   * have been cached causing the browser to render without callout.  However,\n   * it is possible for cache miss to occur which can be detected server-side\n   * by missing ORIGIN header.\n   *\n   * Additionally, this method is also used in certain cases to send the only\n   * request, i.e. the initial XHR is skipped.\n   *\n   * Note: As of 2016-10-18, the fill-from-cache assumption appears to fail on\n   * Safari-on-iOS, which issues a fresh network request, even though the\n   * content is already in cache.\n   *\n   * @param {string} adUrl  Ad request URL, as sent to #sendXhrRequest (i.e.,\n   *    before any modifications that XHR module does to it.)\n   * @return {!Promise} awaiting ad completed insertion.\n   * @private\n   */\n  renderViaIframeGet_(adUrl) {\n    this.maybeTriggerAnalyticsEvent_('renderCrossDomainStart');\n    const contextMetadata = getContextMetadata(\n      this.win,\n      this.element,\n      this.sentinel\n    );\n\n    const intersection = this.element.getIntersectionChangeEntry();\n    contextMetadata['_context']['initialIntersection'] =\n      intersectionEntryToJson(intersection);\n    return this.iframeRenderHelper_(\n      dict({\n        'src': Services.xhrFor(this.win).getCorsUrl(this.win, adUrl),\n        'name': JSON.stringify(contextMetadata),\n      })\n    );\n  }\n\n  /**\n   * Whether AMP Ad Xorigin Iframe handler should wait for the creative to\n   * call render-start, rather than triggering it itself. Example use case\n   * is that amp-sticky-ad should trigger render-start itself so that the\n   * sticky container isn't shown before an ad is ready.\n   * @return {boolean}\n   */\n  letCreativeTriggerRenderStart() {\n    return false;\n  }\n\n  /**\n   * Render the creative via some \"cross domain iframe that accepts the creative\n   * in the name attribute\".  This could be SafeFrame or the AMP-native\n   * NameFrame.\n   *\n   * @param {!ArrayBuffer} creativeBody\n   * @return {!Promise} awaiting load event for ad frame\n   * @private\n   */\n  renderViaNameAttrOfXOriginIframe_(creativeBody) {\n    /** @type {?string} */\n    const method = this.experimentalNonAmpCreativeRenderMethod_;\n    devAssert(\n      method == XORIGIN_MODE.SAFEFRAME || method == XORIGIN_MODE.NAMEFRAME,\n      'Unrecognized A4A cross-domain rendering mode: %s',\n      method\n    );\n    this.maybeTriggerAnalyticsEvent_('renderSafeFrameStart');\n    const checkStillCurrent = this.verifyStillCurrent();\n    return tryResolve(() => utf8Decode(creativeBody)).then((creative) => {\n      checkStillCurrent();\n      let srcPath;\n      let name = '';\n      switch (method) {\n        case XORIGIN_MODE.SAFEFRAME:\n          srcPath = this.getSafeframePath() + '?n=0';\n          break;\n        case XORIGIN_MODE.NAMEFRAME:\n          srcPath = getDefaultBootstrapBaseUrl(this.win, 'nameframe');\n          // Name will be set for real below in nameframe case.\n          break;\n        default:\n          // Shouldn't be able to get here, but...  Because of the assert,\n          // above, we can only get here in non-dev mode, so give user feedback.\n          user().error(\n            'A4A',\n            'A4A received unrecognized cross-domain name' +\n              ' attribute iframe rendering mode request: %s.  Unable to' +\n              ' render a creative for' +\n              ' slot %s.',\n            method,\n            this.element.getAttribute('id')\n          );\n          return Promise.reject('Unrecognized rendering mode request');\n      }\n      // TODO(bradfrizzell): change name of function and var\n      let contextMetadata = getContextMetadata(\n        this.win,\n        this.element,\n        this.sentinel,\n        this.getAdditionalContextMetadata(method == XORIGIN_MODE.SAFEFRAME)\n      );\n\n      const intersection = this.element.getIntersectionChangeEntry();\n      contextMetadata['initialIntersection'] =\n        intersectionEntryToJson(intersection);\n      if (method == XORIGIN_MODE.NAMEFRAME) {\n        contextMetadata['creative'] = creative;\n        name = JSON.stringify(contextMetadata);\n      } else if (method == XORIGIN_MODE.SAFEFRAME) {\n        contextMetadata = JSON.stringify(contextMetadata);\n        name =\n          `${this.safeframeVersion};${creative.length};${creative}` +\n          `${contextMetadata}`;\n      }\n\n      return this.iframeRenderHelper_(dict({'src': srcPath, 'name': name}));\n    });\n  }\n\n  /**\n   *\n   * Throws {@code SyntaxError} if the metadata block delimiters are missing\n   * or corrupted or if the metadata content doesn't parse as JSON.\n   * @param {string} creative from which CSS is extracted\n   * @return {?CreativeMetaDataDef} Object result of parsing JSON data blob inside\n   *     the metadata markers on the ad text, or null if no metadata markers are\n   *     found.\n   * TODO(keithwrightbos@): report error cases\n   */\n  getAmpAdMetadata(creative) {\n    let metadataStart = -1;\n    let metadataString;\n    for (let i = 0; i < METADATA_STRINGS.length; i++) {\n      metadataString = METADATA_STRINGS[i];\n      metadataStart = creative.lastIndexOf(metadataString);\n      if (metadataStart >= 0) {\n        break;\n      }\n    }\n    if (metadataStart < 0) {\n      // Couldn't find a metadata blob.\n      dev().warn(\n        TAG,\n        this.element.getAttribute('type'),\n        'Could not locate start index for amp meta data in: %s',\n        creative\n      );\n      return null;\n    }\n    const metadataEnd = creative.lastIndexOf('</script>');\n    if (metadataEnd < 0) {\n      // Couldn't find a metadata blob.\n      dev().warn(\n        TAG,\n        this.element.getAttribute('type'),\n        'Could not locate closing script tag for amp meta data in: %s',\n        creative\n      );\n      return null;\n    }\n    try {\n      const metaDataObj = parseJson(\n        creative.slice(metadataStart + metadataString.length, metadataEnd)\n      );\n      const ampRuntimeUtf16CharOffsets =\n        metaDataObj['ampRuntimeUtf16CharOffsets'];\n      if (\n        !isArray(ampRuntimeUtf16CharOffsets) ||\n        ampRuntimeUtf16CharOffsets.length != 2 ||\n        typeof ampRuntimeUtf16CharOffsets[0] !== 'number' ||\n        typeof ampRuntimeUtf16CharOffsets[1] !== 'number'\n      ) {\n        throw new Error('Invalid runtime offsets');\n      }\n      const metaData = {};\n      if (metaDataObj['customElementExtensions']) {\n        metaData.customElementExtensions =\n          metaDataObj['customElementExtensions'];\n        if (!isArray(metaData.customElementExtensions)) {\n          throw new Error(\n            'Invalid extensions',\n            metaData.customElementExtensions\n          );\n        }\n      } else {\n        metaData.customElementExtensions = [];\n      }\n      if (metaDataObj['extensions']) {\n        metaData.extensions = metaDataObj['extensions'];\n      }\n      if (metaDataObj['customStylesheets']) {\n        // Expect array of objects with at least one key being 'href' whose\n        // value is URL.\n        metaData.customStylesheets = metaDataObj['customStylesheets'];\n        const errorMsg = 'Invalid custom stylesheets';\n        if (!isArray(metaData.customStylesheets)) {\n          throw new Error(errorMsg);\n        }\n\n        const urls = Services.urlForDoc(this.element);\n        /** @type {!Array} */ (metaData.customStylesheets).forEach(\n          (stylesheet) => {\n            if (\n              !isObject(stylesheet) ||\n              !stylesheet['href'] ||\n              typeof stylesheet['href'] !== 'string' ||\n              !urls.isSecure(stylesheet['href'])\n            ) {\n              throw new Error(errorMsg);\n            }\n          }\n        );\n      }\n      if (isArray(metaDataObj['images'])) {\n        // Load maximum of 5 images.\n        metaData.images = metaDataObj['images'].splice(0, 5);\n      }\n      if (this.isSinglePageStoryAd) {\n        // CTA Type is a required meta tag. CTA Url can come from meta tag, or\n        // (temporarily) amp-ad-exit config.\n        // TODO(#24080): maybe rerequire cta url?\n        if (!metaDataObj['ctaType']) {\n          throw new Error(INVALID_SPSA_RESPONSE);\n        }\n        this.element.setAttribute('data-vars-ctatype', metaDataObj['ctaType']);\n        this.element.setAttribute('data-vars-ctaurl', metaDataObj['ctaUrl']);\n      }\n      // TODO(keithwrightbos): OK to assume ampRuntimeUtf16CharOffsets is before\n      // metadata as its in the head?\n      metaData.minifiedCreative =\n        creative.slice(0, ampRuntimeUtf16CharOffsets[0]) +\n        creative.slice(ampRuntimeUtf16CharOffsets[1], metadataStart) +\n        creative.slice(metadataEnd + '</script>'.length);\n      return metaData;\n    } catch (err) {\n      dev().warn(\n        TAG,\n        this.element.getAttribute('type'),\n        'Invalid amp metadata: %s',\n        creative.slice(metadataStart + metadataString.length, metadataEnd)\n      );\n      if (this.isSinglePageStoryAd) {\n        throw err;\n      }\n      return null;\n    }\n  }\n\n  /**\n   * @return {string} full url to safeframe implementation.\n   */\n  getSafeframePath() {\n    return (\n      'https://tpc.googlesyndication.com/safeframe/' +\n      `${this.safeframeVersion}/html/container.html`\n    );\n  }\n\n  /**\n   * Checks if the given lifecycle event has a corresponding amp-analytics event\n   * and fires the analytics trigger if so.\n   * @param {string} lifecycleStage\n   * @private\n   */\n  maybeTriggerAnalyticsEvent_(lifecycleStage) {\n    if (!this.a4aAnalyticsConfig_) {\n      // No config exists that will listen to this event.\n      return;\n    }\n    const analyticsEvent = devAssert(\n      LIFECYCLE_STAGE_TO_ANALYTICS_TRIGGER[lifecycleStage]\n    );\n    const analyticsVars = /** @type {!JsonObject} */ (\n      Object.assign(\n        dict({'time': Math.round(this.getNow_())}),\n        this.getA4aAnalyticsVars(analyticsEvent)\n      )\n    );\n    triggerAnalyticsEvent(this.element, analyticsEvent, analyticsVars);\n  }\n\n  /**\n   * Returns variables to be included on an analytics event. This can be\n   * overridden by specific network implementations.\n   * Note that this function is called for each time an analytics event is\n   * fired.\n   * @param {string} unusedAnalyticsEvent The name of the analytics event.\n   * @return {!JsonObject}\n   */\n  getA4aAnalyticsVars(unusedAnalyticsEvent) {\n    return dict({});\n  }\n\n  /**\n   * Returns network-specific config for amp-analytics. It should overridden\n   * with network-specific configurations.\n   * This function may return null. If so, no amp-analytics element will be\n   * added to this A4A element and no A4A triggers will be fired.\n   * @return {?JsonObject}\n   */\n  getA4aAnalyticsConfig() {\n    return null;\n  }\n\n  /**\n   * Attempts to execute Real Time Config, if the ad network has enabled it.\n   * If it is not supported by the network, but the publisher has included\n   * the rtc-config attribute on the amp-ad element, warn. Additionaly,\n   * if the publisher has included a valid `block-rtc` attribute, don't send.\n   * @param {?CONSENT_POLICY_STATE} consentState\n   * @param {?string} consentString\n   * @param {?Object<string, string|number|boolean|undefined>} consentMetadata\n   * @return {Promise<!Array<!rtcResponseDef>>|undefined}\n   */\n  tryExecuteRealTimeConfig_(consentState, consentString, consentMetadata) {\n    if (this.element.getAttribute('rtc-config')) {\n      installRealTimeConfigServiceForDoc(this.getAmpDoc());\n      return this.getBlockRtc_().then((shouldBlock) =>\n        shouldBlock\n          ? undefined\n          : Services.realTimeConfigForDoc(this.getAmpDoc()).then(\n              (realTimeConfig) =>\n                realTimeConfig.maybeExecuteRealTimeConfig(\n                  this.element,\n                  this.getCustomRealTimeConfigMacros_(),\n                  consentState,\n                  consentString,\n                  consentMetadata,\n                  this.verifyStillCurrent()\n                )\n            )\n      );\n    }\n  }\n\n  /**\n   * To be overriden by network impl. Should return a mapping of macro keys\n   * to values for substitution in publisher-specified URLs for RTC.\n   * @return {!Object<string,\n   *   !../../../src/service/variable-source.AsyncResolverDef>}\n   */\n  getCustomRealTimeConfigMacros_() {\n    return {};\n  }\n\n  /**\n   * Whether preferential render should still be utilized if web crypto is\n   * unavailable, and crypto signature header is present.\n   * @return {boolean}\n   */\n  shouldPreferentialRenderWithoutCrypto() {\n    return false;\n  }\n\n  /**\n   * @param {string=} headerValue Method as given in header.\n   * @return {?XORIGIN_MODE}\n   */\n  getNonAmpCreativeRenderingMethod(headerValue) {\n    if (headerValue) {\n      if (!isEnumValue(XORIGIN_MODE, headerValue)) {\n        dev().error(\n          'AMP-A4A',\n          `cross-origin render mode header ${headerValue}`\n        );\n      } else {\n        return /** @type {XORIGIN_MODE} */ (headerValue);\n      }\n    }\n    return Services.platformFor(this.win).isIos()\n      ? XORIGIN_MODE.NAMEFRAME\n      : null;\n  }\n\n  /**\n   * Returns base object that will be written to cross-domain iframe name\n   * attribute.\n   * @param {boolean=} opt_isSafeframe Whether creative is rendering into\n   *   a safeframe.\n   * @return {!JsonObject|undefined}\n   */\n  getAdditionalContextMetadata(opt_isSafeframe) {}\n\n  /**\n   * Returns whether the received creative is verified AMP.\n   * @return {boolean} True if the creative is verified AMP, false otherwise.\n   */\n  isVerifiedAmpCreative() {\n    return this.isVerifiedAmpCreative_;\n  }\n\n  /**\n   * Returns the amp-ad title attribute or a fallback string.\n   * @return {string} iframe title attribute\n   */\n  getIframeTitle() {\n    return this.element.getAttribute('title') || '3rd party ad content';\n  }\n\n  /**\n   * Returns any enabled SSR experiments via the amp-usqp meta tag. These\n   * correspond to the proto field ids in cs/AmpTransformerParams.\n   *\n   * These experiments do not have a fully unique experiment id for each value,\n   * so we concatenate the key and value to generate a psuedo id. We assume\n   * that any experiment is either a boolean (so two branches), or an enum with\n   * 100 or less branches. So, the value is padded a leading 0 if necessary.\n   *\n   * @protected\n   * @return {!Array<string>}\n   */\n  getSsrExpIds_() {\n    const exps = [];\n    const meta = this.getAmpDoc().getMetaByName('amp-usqp');\n    if (meta) {\n      const keyValues = meta.split(',');\n      for (let i = 0; i < keyValues.length; i++) {\n        const kv = keyValues[i].split('=');\n        if (kv.length !== 2) {\n          continue;\n        }\n        // Reasonably assume that all important exps are either booleans, or\n        // enums with 100 or less branches.\n        const val = Number(kv[1]);\n        if (!isNaN(kv[0]) && val >= 0 && val < 100) {\n          const padded = padStart(kv[1], 2, '0');\n          exps.push(kv[0] + padded);\n        }\n      }\n    }\n    return exps;\n  }\n}\n\n/**\n * Attachs query string portion of ad url to error.\n * @param {!Error} error\n * @param {?string} adUrl\n */\nexport function assignAdUrlToError(error, adUrl) {\n  if (!adUrl || (error.args && error.args['au'])) {\n    return;\n  }\n  const adQueryIdx = adUrl.indexOf('?');\n  if (adQueryIdx == -1) {\n    return;\n  }\n  (error.args || (error.args = {}))['au'] = adUrl.substring(\n    adQueryIdx + 1,\n    adQueryIdx + 251\n  );\n}\n\n/**\n * Returns the signature verifier for the given window. Lazily creates it if it\n * doesn't already exist.\n *\n * This ensures that only one signature verifier exists per window, which allows\n * multiple Fast Fetch ad slots on a page (even ones from different ad networks)\n * to share the same cached public keys.\n *\n * @param {!Window} win\n * @return {!SignatureVerifier}\n * @visibleForTesting\n */\nexport function signatureVerifierFor(win) {\n  const propertyName = 'AMP_FAST_FETCH_SIGNATURE_VERIFIER_';\n  return (\n    win[propertyName] ||\n    (win[propertyName] = new SignatureVerifier(win, signingServerURLs))\n  );\n}\n\n/**\n * @param {!Window} win\n * @return {boolean}\n * @visibleForTesting\n */\nexport function isPlatformSupported(win) {\n  // Require Shadow DOM support for a4a.\n  if (\n    !isNative(win.Element.prototype.attachShadow) &&\n    isExperimentOn(win, 'disable-a4a-non-sd')\n  ) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Returns `true` if the passed function exists and is native to the browser.\n * @param {Function|undefined} func\n * @return {boolean}\n */\nfunction isNative(func) {\n  return !!func && func.toString().indexOf('[native code]') != -1;\n}\n", "// Because AdSense and DoubleClick are both operated by Google and their A4A\n// implementations share some behavior in common, part of the logic for this\n// implementation is located in the ads/google/a4a directory rather than here.\n// Most other ad networks will want to put their A4A code entirely in the\n// extensions/amp-ad-network-${NETWORK_NAME}-impl directory.\n\nimport {\n  addAmpExperimentIdToElement,\n  addExperimentIdToElement,\n  isInManualExperiment,\n} from '#ads/google/a4a/traffic-experiments';\nimport {\n  QQID_HEADER,\n  SANDBOX_HEADER,\n  ValidAdContainerTypes,\n  addCsiSignalsToAmpAnalyticsConfig,\n  additionalDimensions,\n  extractAmpAnalyticsConfig,\n  getCsiAmpAnalyticsConfig,\n  getCsiAmpAnalyticsVariables,\n  getEnclosingContainerTypes,\n  getIdentityToken,\n  getServeNpaPromise,\n  googleAdUrl,\n  isCdnProxy,\n  isReportingEnabled,\n  maybeAppendErrorParameter,\n  maybeInsertOriginTrialToken,\n} from '#ads/google/a4a/utils';\n\nimport {\n  CONSENT_POLICY_STATE,\n  CONSENT_STRING_TYPE,\n} from '#core/constants/consent-state';\nimport {removeElement} from '#core/dom';\nimport {domFingerprintPlain} from '#core/dom/fingerprint';\nimport {computedStyle, setStyles} from '#core/dom/style';\nimport {stringHash32} from '#core/types/string';\nimport {utf8Decode} from '#core/types/string/bytes';\n\nimport {\n  getExperimentBranch,\n  randomlySelectUnsetExperiments,\n} from '#experiments';\nimport {StoryAdAutoAdvance} from '#experiments/story-ad-auto-advance';\nimport {StoryAdPageOutlink} from '#experiments/story-ad-page-outlink';\nimport {StoryAdPlacements} from '#experiments/story-ad-placements';\nimport {StoryAdSegmentExp} from '#experiments/story-ad-progress-segment';\n\nimport {Services} from '#service';\nimport {Navigation} from '#service/navigation';\n\nimport {getData} from '#utils/event-helper';\nimport {dev, devAssert, user} from '#utils/log';\n\nimport {AdsenseSharedState} from './adsense-shared-state';\nimport {ResponsiveState} from './responsive-state';\n\nimport {getDefaultBootstrapBaseUrl} from '../../../src/3p-frame';\nimport {insertAnalyticsElement} from '../../../src/extension-analytics';\nimport {getMode} from '../../../src/mode';\nimport {AmpA4A} from '../../amp-a4a/0.1/amp-a4a';\nimport {AMP_SIGNATURE_HEADER} from '../../amp-a4a/0.1/signature-verifier';\nimport {getAmpAdRenderOutsideViewport} from '../../amp-ad/0.1/concurrent-load';\n\n/** @const {string} */\nconst ADSENSE_BASE_URL = 'https://googleads.g.doubleclick.net/pagead/ads';\n\n/** @const {string} */\nconst TAG = 'amp-ad-network-adsense-impl';\n\n/**\n * Shared state for AdSense ad slots. This is used primarily for ad request url\n * parameters that depend on previous slots.\n * @const {!AdsenseSharedState}\n */\nconst sharedState = new AdsenseSharedState();\n\n/** @visibleForTesting */\nexport function resetSharedState() {\n  sharedState.reset();\n}\n\n/** @final */\nexport class AmpAdNetworkAdsenseImpl extends AmpA4A {\n  /**\n   * @param {!Element} element\n   */\n  constructor(element) {\n    super(element);\n\n    /**\n     * A unique identifier for this slot.\n     * Not initialized until getAdUrl() is called; updated upon each invocation\n     * of getAdUrl().\n     * @private {?string}\n\n     */\n    this.uniqueSlotId_ = null;\n\n    /**\n     * Config to generate amp-analytics element for active view reporting.\n     * @type {?JsonObject}\n     * @private\n     */\n    this.ampAnalyticsConfig_ = null;\n\n    /** @private {!../../../src/service/extensions-impl.Extensions} */\n    this.extensions_ = Services.extensionsFor(this.win);\n\n    /** @private {?({width, height}|../../../src/layout-rect.LayoutRectDef)} */\n    this.size_ = null;\n\n    /**\n     * amp-analytics element generated based on this.ampAnalyticsConfig_\n     * @private {?Element}\n     */\n    this.ampAnalyticsElement_ = null;\n\n    /** @private {?string} */\n    this.qqid_ = null;\n\n    /** @private {?ResponsiveState}.  */\n    this.responsiveState_ = ResponsiveState.createIfResponsive(element);\n\n    /** @private {?Promise<!../../../ads/google/a4a/utils.IdentityToken>} */\n    this.identityTokenPromise_ = null;\n\n    /**\n     * @private {?boolean} whether preferential rendered AMP creative, null\n     * indicates no creative render.\n     */\n    this.isAmpCreative_ = null;\n\n    /** @private {number} slot index specific to google inventory */\n    this.ifi_ = 0;\n\n    /**\n     * Whether or not the iframe containing the ad should be sandboxed via the\n     * \"sandbox\" attribute.\n     * @private {boolean}\n     */\n    this.shouldSandbox_ = false;\n  }\n\n  /** @override */\n  isValidElement() {\n    /**\n     * isValidElement used to also check that we are in a valid A4A environment,\n     * however this is not necessary as that is checked by adsenseIsA4AEnabled,\n     * which is always called as part of the upgrade path from an amp-ad element\n     * to an amp-ad-adsense element. Thus, if we are an amp-ad, we can be sure\n     * that it has been verified.\n     */\n    if (\n      this.responsiveState_ != null &&\n      !this.responsiveState_.isValidElement()\n    ) {\n      return false;\n    }\n    if (!this.element.getAttribute('data-ad-client')) {\n      return false;\n    }\n    return this.isAmpAdElement();\n  }\n\n  /** @override */\n  delayAdRequestEnabled() {\n    return getAmpAdRenderOutsideViewport(this.element) || 3;\n  }\n\n  /** @override\n      @return {!Promise|undefined}.\n  */\n  buildCallback() {\n    super.buildCallback();\n    maybeInsertOriginTrialToken(this.win);\n    this.identityTokenPromise_ = this.getAmpDoc()\n      .whenFirstVisible()\n      .then(() =>\n        getIdentityToken(this.win, this.getAmpDoc(), super.getConsentPolicy())\n      );\n\n    // Convert the full-width tag to container width for desktop users.\n    if (\n      this.element.hasAttribute('data-auto-format') &&\n      !ResponsiveState.isLayoutViewportNarrow(this.element)\n    ) {\n      return ResponsiveState.convertToContainerWidth(this.element).then(\n        (state) => {\n          if (state != null) {\n            this.responsiveState_ = state;\n          }\n          this.divertExperiments();\n        }\n      );\n    } else {\n      return ResponsiveState.maybeUpgradeToResponsive(\n        this.element,\n        this.getAdClientId_()\n      ).then((state) => {\n        if (state != null) {\n          this.responsiveState_ = state;\n        }\n        if (this.responsiveState_ != null) {\n          return this.responsiveState_.attemptToMatchResponsiveHeight();\n        }\n        // This should happen last, as some diversion criteria rely on some of the\n        // preceding logic (specifically responsive logic).\n        this.divertExperiments();\n      });\n    }\n  }\n\n  /** @override */\n  getConsentPolicy() {\n    // Ensure that build is not blocked by need for consent (delay will occur\n    // prior to ad URL construction).\n    return null;\n  }\n\n  /**\n   * Selects into experiments based on url fragment and/or page level diversion.\n   * @visibleForTesting\n   */\n  divertExperiments() {\n    const experimentInfoList =\n      /** @type {!Array<!../../../src/experiments.ExperimentInfo>} */ ([]);\n    const setExps = randomlySelectUnsetExperiments(\n      this.win,\n      experimentInfoList\n    );\n    Object.keys(setExps).forEach((expName) =>\n      addExperimentIdToElement(setExps[expName], this.element)\n    );\n\n    const ssrExpIds = this.getSsrExpIds_();\n    for (let i = 0; i < ssrExpIds.length; i++) {\n      addAmpExperimentIdToElement(ssrExpIds[i], this.element);\n    }\n\n    const storyAdPlacementsExpId = getExperimentBranch(\n      this.win,\n      StoryAdPlacements.ID\n    );\n    if (storyAdPlacementsExpId) {\n      addExperimentIdToElement(storyAdPlacementsExpId, this.element);\n    }\n\n    const storyAdPageOutlinkExpId = getExperimentBranch(\n      this.win,\n      StoryAdPageOutlink.ID\n    );\n    if (storyAdPageOutlinkExpId) {\n      addExperimentIdToElement(storyAdPageOutlinkExpId, this.element);\n    }\n\n    const autoAdvanceExpBranch = getExperimentBranch(\n      this.win,\n      StoryAdAutoAdvance.ID\n    );\n    if (autoAdvanceExpBranch) {\n      addExperimentIdToElement(autoAdvanceExpBranch, this.element);\n    }\n\n    const storyAdSegmentBranch = getExperimentBranch(\n      this.win,\n      StoryAdSegmentExp.ID\n    );\n    if (storyAdSegmentBranch) {\n      addExperimentIdToElement(storyAdSegmentBranch, this.element);\n    }\n  }\n\n  /**\n   * @return {string} ad client ID for the current ad unit.\n   * @private\n   */\n  getAdClientId_() {\n    const adClientId = (\n      this.element.getAttribute('data-ad-client') || ''\n    ).toLowerCase();\n    if (!/^ca-/i.test(adClientId)) {\n      return `ca-${adClientId}`;\n    }\n    return adClientId;\n  }\n\n  /** @override */\n  getAdUrl(consentTuple, opt_unusedRtcResponsesPromise, opt_serveNpaSignal) {\n    let consentState = undefined;\n    let consentString = undefined;\n    let gdprApplies = undefined;\n    let additionalConsent = undefined;\n    let consentStringType = undefined;\n    if (consentTuple) {\n      consentState = consentTuple.consentState;\n      consentString = consentTuple.consentString;\n      gdprApplies = consentTuple.gdprApplies;\n      additionalConsent = consentTuple.additionalConsent;\n      consentStringType = consentTuple.consentStringType;\n    }\n    if (\n      consentState == CONSENT_POLICY_STATE.UNKNOWN &&\n      this.element.getAttribute('data-npa-on-unknown-consent') != 'true'\n    ) {\n      user().info(TAG, 'Ad request suppressed due to unknown consent');\n      return Promise.resolve('');\n    }\n    // TODO: Check for required and allowed parameters. Probably use\n    // validateData, from 3p/3p/js, after moving it someplace common.\n    const startTime = Date.now();\n    const global = this.win;\n    const adClientId = this.getAdClientId_();\n    const adTestOn =\n      this.element.getAttribute('data-adtest') ||\n      isInManualExperiment(this.element);\n\n    const width = Number(this.element.getAttribute('width'));\n    const height = Number(this.element.getAttribute('height'));\n    if (\n      this.responsiveState_ != null &&\n      this.responsiveState_.isContainerWidthState()\n    ) {\n      this.size_ = {width, height};\n    } else {\n      this.size_ = this.getIntersectionElementLayoutBox();\n    }\n\n    const sizeToSend = this.isSinglePageStoryAd\n      ? {width: 1, height: 1}\n      : this.size_;\n    const format = `${sizeToSend.width}x${sizeToSend.height}`;\n    const slotId = this.element.getAttribute('data-amp-slot-index');\n    // data-amp-slot-index is set by the upgradeCallback method of amp-ad.\n    // TODO(bcassels): Uncomment the assertion, fixing the tests.\n    // But not all tests arrange to call upgradeCallback.\n    // devAssert(slotId != undefined);\n    const adk = this.adKey_(format);\n    this.uniqueSlotId_ = slotId + adk;\n    const slotname = this.element.getAttribute('data-ad-slot');\n    const sharedStateParams = sharedState.addNewSlot(\n      format,\n      this.uniqueSlotId_,\n      adClientId,\n      slotname\n    );\n    const viewportSize = this.getViewport().getSize();\n    if (!this.ifi_) {\n      this.win['ampAdGoogleIfiCounter'] =\n        this.win['ampAdGoogleIfiCounter'] || 1;\n      this.ifi_ = this.win['ampAdGoogleIfiCounter']++;\n    }\n    const enclosingContainers = getEnclosingContainerTypes(this.element);\n    const pfx =\n      enclosingContainers.includes(\n        ValidAdContainerTypes['AMP-FX-FLYING-CARPET']\n      ) || enclosingContainers.includes(ValidAdContainerTypes['AMP-STICKY-AD']);\n    const parameters = {\n      'client': adClientId,\n      'format': format,\n      'w': sizeToSend.width,\n      'h': sizeToSend.height,\n      'ptt': 12,\n      'iu': slotname,\n      'fa': {bottom: 1, top: 2}[this.element.getAttribute('sticky')],\n      'npa':\n        consentState == CONSENT_POLICY_STATE.INSUFFICIENT ||\n        consentState == CONSENT_POLICY_STATE.UNKNOWN ||\n        !!opt_serveNpaSignal\n          ? 1\n          : null,\n      'adtest': adTestOn ? 'on' : null,\n      'adk': adk,\n      'output': 'html',\n      'bc': global.SVGElement && global.document.createElementNS ? '1' : null,\n      'ctypes': this.getCtypes_(),\n      'host': this.element.getAttribute('data-ad-host'),\n      'h_ch': this.element.getAttribute('data-ad-host-channel'),\n      'hl': this.element.getAttribute('data-language'),\n      'to': this.element.getAttribute('data-tag-origin'),\n      'pv': sharedStateParams.pv,\n      'channel': this.element.getAttribute('data-ad-channel'),\n      'wgl': global['WebGLRenderingContext'] ? '1' : '0',\n      'asnt': this.sentinel,\n      'dff': computedStyle(this.win, this.element)['font-family'],\n      'prev_fmts': sharedStateParams.prevFmts || null,\n      'prev_slotnames': sharedStateParams.prevSlotnames || null,\n      'brdim': additionalDimensions(this.win, viewportSize),\n      'ifi': this.ifi_,\n      'rafmt':\n        this.responsiveState_ != null\n          ? this.responsiveState_.getRafmtParam()\n          : null,\n      'gdpr': gdprApplies === true ? '1' : gdprApplies === false ? '0' : null,\n      'gdpr_consent':\n        consentStringType != CONSENT_STRING_TYPE.US_PRIVACY_STRING\n          ? consentString\n          : null,\n      'addtl_consent': additionalConsent,\n      'us_privacy':\n        consentStringType == CONSENT_STRING_TYPE.US_PRIVACY_STRING\n          ? consentString\n          : null,\n      'pfx': pfx ? '1' : '0',\n      'aanf': /^(true|false)$/i.test(this.element.getAttribute('data-no-fill'))\n        ? this.element.getAttribute('data-no-fill')\n        : null,\n      // Matched content specific fields.\n      'crui': this.element.getAttribute('data-matched-content-ui-type'),\n      'cr_row': this.element.getAttribute('data-matched-content-rows-num'),\n      'cr_col': this.element.getAttribute('data-matched-content-columns-num'),\n      // Package code (also known as URL group) that was used to\n      // create ad.\n      'pwprc': this.element.getAttribute('data-package'),\n      'spsa': this.isSinglePageStoryAd\n        ? `${this.size_.width}x${this.size_.height}`\n        : null,\n    };\n\n    const experimentIds = [];\n    const identityPromise = Services.timerFor(this.win)\n      .timeoutPromise(1000, this.identityTokenPromise_)\n      .catch((unusedErr) => {\n        // On error/timeout, proceed.\n        return /**@type {!../../../ads/google/a4a/utils.IdentityToken}*/ ({});\n      });\n    return identityPromise.then((identity) => {\n      return googleAdUrl(\n        this,\n        ADSENSE_BASE_URL,\n        startTime,\n        {\n          'adsid': identity.token || null,\n          'jar': identity.jar || null,\n          'pucrd': identity.pucrd || null,\n          ...parameters,\n        },\n        experimentIds\n      );\n    });\n  }\n\n  /** @override */\n  getServeNpaSignal() {\n    return getServeNpaPromise(this.element);\n  }\n\n  /** @override */\n  onNetworkFailure(error, adUrl) {\n    dev().info(TAG, 'network error, attempt adding of error parameter', error);\n    return {adUrl: maybeAppendErrorParameter(adUrl, 'n')};\n  }\n\n  /** @override */\n  maybeValidateAmpCreative(bytes, headers) {\n    if (headers.get('AMP-Verification-Checksum-Algorithm') !== 'djb2a-32') {\n      return super.maybeValidateAmpCreative(bytes, headers);\n    }\n    const checksum = headers.get('AMP-Verification-Checksum');\n    return Promise.resolve(\n      checksum && stringHash32(utf8Decode(bytes)) == checksum ? bytes : null\n    );\n  }\n\n  /** @override */\n  extractSize(responseHeaders) {\n    this.ampAnalyticsConfig_ = extractAmpAnalyticsConfig(this, responseHeaders);\n    this.qqid_ = responseHeaders.get(QQID_HEADER);\n    this.shouldSandbox_ = responseHeaders.get(SANDBOX_HEADER) == 'true';\n    if (this.ampAnalyticsConfig_) {\n      // Load amp-analytics extensions\n      this.extensions_./*OK*/ installExtensionForDoc(\n        this.getAmpDoc(),\n        'amp-analytics'\n      );\n    }\n    return this.size_;\n  }\n\n  /**\n   * @override\n   */\n  skipClientSideValidation(headers) {\n    return headers && !headers.has(AMP_SIGNATURE_HEADER);\n  }\n\n  /**\n   * @param {string} format\n   * @return {string} The ad unit hash key string.\n   * @private\n   */\n  adKey_(format) {\n    const {element} = this;\n    const slot = element.getAttribute('data-ad-slot') || '';\n    const string = `${slot}:${format}:${domFingerprintPlain(element)}`;\n    return stringHash32(string);\n  }\n\n  /**\n   * @return {?string}\n   * @private\n   */\n  getCtypes_() {\n    if (!getMode().localDev) {\n      return null;\n    }\n    const ctypesReMatch = /[?&]force_a4a_ctypes=([^&]+)/.exec(\n      this.win.location.search\n    );\n    // If the RE passes, then length is necessarily > 1.\n    if (ctypesReMatch) {\n      return ctypesReMatch[1];\n    }\n    return null;\n  }\n\n  /** @override */\n  isXhrAllowed() {\n    return isCdnProxy(this.win);\n  }\n\n  /** @override */\n  sandboxHTMLCreativeFrame() {\n    return this.shouldSandbox_;\n  }\n\n  /** @override */\n  onCreativeRender(creativeMetaData) {\n    super.onCreativeRender(creativeMetaData);\n    if (this.iframe != null) {\n      ResponsiveState.maybeAttachSettingsListener(\n        this.element,\n        this.iframe,\n        this.getAdClientId_()\n      );\n    }\n    this.isAmpCreative_ = !!creativeMetaData;\n    if (\n      creativeMetaData &&\n      !creativeMetaData.customElementExtensions.includes('amp-ad-exit')\n    ) {\n      // Capture phase click handlers on the ad if amp-ad-exit not present\n      // (assume it will handle capture).\n      devAssert(this.iframe);\n      Navigation.installAnchorClickInterceptor(\n        this.getAmpDoc(),\n        devAssert(this.iframe.contentWindow)\n      );\n    }\n    if (this.ampAnalyticsConfig_) {\n      devAssert(!this.ampAnalyticsElement_);\n      if (isReportingEnabled(this)) {\n        addCsiSignalsToAmpAnalyticsConfig(\n          this.win,\n          this.element,\n          this.ampAnalyticsConfig_,\n          this.qqid_,\n          !!creativeMetaData\n        );\n      }\n      this.ampAnalyticsElement_ = insertAnalyticsElement(\n        this.element,\n        this.ampAnalyticsConfig_,\n        /*loadAnalytics*/ true,\n        !!this.postAdResponseExperimentFeatures['avr_disable_immediate']\n      );\n    }\n\n    setStyles(dev().assertElement(this.iframe), {\n      width: `${this.size_.width}px`,\n      height: `${this.size_.height}px`,\n    });\n\n    if (this.qqid_) {\n      this.element.setAttribute('data-google-query-id', this.qqid_);\n    }\n    dev().assertElement(this.iframe).id = `google_ads_iframe_${this.ifi_}`;\n  }\n\n  /** @override */\n  unlayoutCallback() {\n    if (this.isAmpCreative_) {\n      // Allow AMP creatives to remain in case SERP viewer swipe back.\n      return false;\n    }\n    const superResult = super.unlayoutCallback();\n    this.element.setAttribute(\n      'data-amp-slot-index',\n      this.win.ampAdSlotIdCounter++\n    );\n    if (this.uniqueSlotId_) {\n      sharedState.removeSlot(this.uniqueSlotId_);\n    }\n    if (this.ampAnalyticsElement_) {\n      removeElement(this.ampAnalyticsElement_);\n      this.ampAnalyticsElement_ = null;\n    }\n    this.ampAnalyticsConfig_ = null;\n    this.qqid_ = null;\n    this.isAmpCreative_ = null;\n    this.shouldSandbox_ = false;\n    return superResult;\n  }\n\n  /** @override */\n  onLayoutMeasure() {\n    super.onLayoutMeasure();\n    this.responsiveState_ && this.responsiveState_.alignToViewport();\n  }\n\n  /** @override */\n  getPreconnectUrls() {\n    Services.preconnectFor(this.win).preload(\n      this.getAmpDoc(),\n      getDefaultBootstrapBaseUrl(this.win, 'nameframe')\n    );\n    return ['https://googleads.g.doubleclick.net'];\n  }\n\n  /** @override */\n  getA4aAnalyticsVars(analyticsTrigger) {\n    return getCsiAmpAnalyticsVariables(analyticsTrigger, this, this.qqid_);\n  }\n\n  /** @override */\n  getA4aAnalyticsConfig() {\n    return getCsiAmpAnalyticsConfig();\n  }\n\n  /** @override */\n  letCreativeTriggerRenderStart() {\n    if (\n      this.element &&\n      this.element.parentElement &&\n      this.element.parentElement.tagName == 'AMP-STICKY-AD'\n    ) {\n      const stickyMsgListener = (event) => {\n        if (\n          getData(event) == 'fill_sticky' &&\n          event['source'] == this.iframe.contentWindow\n        ) {\n          this.renderStarted();\n          setStyles(this.iframe, {'visibility': ''});\n          this.win.removeEventListener('message', stickyMsgListener);\n        }\n      };\n      this.win.addEventListener('message', stickyMsgListener);\n      return true;\n    }\n    return false;\n  }\n}\n\nAMP.extension(TAG, '0.1', (AMP) => {\n  AMP.registerElement(TAG, AmpAdNetworkAdsenseImpl);\n});\n"],
  "mappings": "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",
  "names": []
}
